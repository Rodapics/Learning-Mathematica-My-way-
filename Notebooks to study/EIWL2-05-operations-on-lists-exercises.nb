(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 11.3' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    404868,       8695]
NotebookOptionsPosition[    326161,       7167]
NotebookOutlinePosition[    387373,       8406]
CellTagsIndexPosition[    387294,       8401]
WindowTitle->Operaciones con listas: Una introducci\363n elemental a Wolfram \
Language
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell["\<\
Cree una lista de los 10 primeros cuadrados en orden inverso.\
\>", "Exercise",
 Editable->False,
 Selectable->False,
 Deletable->False,
 CellDingbat->Cell[
  "5.1", "ExerciseNumber", FontColor -> 
   RGBColor[0.9019607843137255, 0.4117647058823529, 0.027450980392156862`]],
 ShowCellBracket->False,
 CounterAssignments->{{"SectionNumber", 5}, {"ExerciseNumber", 1}, {
   "WebOnly", 0}}],

Cell[CellGroupData[{

Cell[BoxData[
 TagBox[
  ButtonBox[
   StyleBox[
    RowBox[{"EXPECTED", " ", "OUTPUT", " ", "\[RightGuillemet]"}],
    FontFamily->"Source Sans Pro",
    FontSize->12,
    FontColor->GrayLevel[0.6]],
   Appearance->None,
   ButtonFunction:>(SelectionMove[
      ButtonNotebook[], All, ButtonCell, AutoScroll -> False]; FrontEndExecute[
      FrontEndToken[
       ButtonNotebook[], "OpenCloseGroup"]]),
   Evaluator->Automatic,
   Method->"Preemptive"],
  MouseAppearanceTag["LinkHand"]]], "ExerciseExpectedResult",
 Editable->False,
 Deletable->False,
 ShowCellBracket->False],

Cell[BoxData[
 FrameBox[
  TagBox[GridBox[{
     {
      PaneBox[
       InterpretationBox[Cell[BoxData[
         GraphicsBox[
          TagBox[RasterBox[CompressedData["
1:eJztWa/vpUYQJ62pbNK/oH9A0bXImpJcU4e5S49LzZXcNWmwJBUkNVu1DoVC
oTDFoDCYrViDwGAQNFmDWPG6sws83mP50evVNEzyvnlvmdmZ+czszCzfL1/9
9ML9xDCM95+JPy9e/mK9e/fS/+5z8eP7t+9/fPP29Q/fvP359ZvX775+9alY
/EJ8/hAf+H676KKLLrrooosu+j9Qn4WuaXpkUD9ZTUjD+P0574osiZOUtMPB
oo5aUqZJkpV0ycf7hpCaHVkm2IosTdKMdg9aeFdXFV3auOUaraqmH6bd6hw2
K9t9xUNXKj7aLpc7WmVJkuZVv6OXtaUwOElL2s1LAs+Z6IHuFfgn9d5YlQPM
wtvd/RU9wHLCEha7luUEZTdawAgWw7Abpi2/1YlvSArLWXUTWsZEZloP24tr
GnLJZ9mS20sl35B6Stgsd/FjNDYWFN+TrglOiAsqkQ18YQlaaWJKKbmZXXT6
APA2t40FX1govhI7C1v8WifdE6VilPUSKt2trIWkIY3Rkg78U3pvfAyHKRX7
WXMelnOWcJpFzkKEVcgw0JgKeRx4sCGuRrPbHMQTsLWBb27KNxY1xErhSpDD
ae1LNEV5yKPQd4V7drUX9B5ZEiWwrE9CPKdMNcK4L34b6kQ5buNK/Ipt8BlM
YcQVX4NCK8XbzDIDFRqZ8BbY3GZz/vC2CHGh9beOhWFSBRxMgLwD/lRsAinK
FW0avAb/pN5FOHjqC2C9naR5hOW0JbcbjWzDROr3QCBnFvBTwY1GZp56wmOs
nlLAxKWDdlGnm8ER8wu5FSfWojJwGoktdoIuoRZ5/szBpcu271uGvVtn2lCA
ZzmOaVhIgMOwUI+qyX1hc9DuSEvqi0DlTJ2IDHDocStk/dRW+jJUsvJI2uRY
djRtAf5ZvRWy5miqNIvoFjRPsJy1RBABBMegw+mYNd7GWjoxM7zYfIAuJnDQ
Lmr1drKiuTltyki47zeT+7Ih7uWMgrqgoihGUZzRsZd34LKJOkbsTaXSQVBs
ZE0b2ypVemHznDNtHmzbLLV3LSkS2MKN2Y1nnqhLeUPzCGMxMhyOYTcVR5mW
qvWbjud5Pk6O2ukD+Gf1Sl3hGMG+sB5jvaQVLCctAaIyT4QNYiqEmrFsbU85
Y93TYwq0dlGvuYGSNJId1/P6cc5IqCFofuBAm7byTrmsyouoWtbW4eVNKts6
FJJI8GGYKyoMxdYLMQpUa3O2tYODiiQODNujB34g3bGj/UFTGeDGoFf0AlES
UZKmkRwS3GRv9HwC/5zeoY5lWgYYB2qUwjrftLCcs0SKywofpjSUo1PebzH/
qzozQAMyYtJxVsc++J82y8H7OGcm/lpA9u1vvysAEUahxND1w7xZR4BFEmov
RAgFtmrdeQOWZnHg+2GUVXkI49DuvYEPXYYcacNfkEJu3C8s36sXfQliTrxm
kSdoV3Z1YE/q7esCCd8CXJQpFB1NndmC5Ywl4xKWGcl7CqkZ5PcnnEAjI8o4
KI+GFSl0axjsXMq1ixq1FRK5FU1Pemjwc6ZRmTPbUZOpaBajyZClX/0aY4Qw
Fn8QCsecKTQ5MxSCUbGh0Dbl+SwewIGZcbJ/LX5fhxkM7g5Q/C2s1nmT7MW9
K2H4tdB80+bDHZruqCc+gn/7B3pn66GnG3AHXj05hGXHkttUAaISylQNfVvN
MwO8SSjgkR8XlMCrF3Xeg5R0de5M1w3tophrxcxuBdmMuYRIVDPSM1YXWM60
oua0hNAiFkE3o6IiVLq3khVDBwg7mHZdJa9+D3MdRNOqFDAa2TufLMJEfKNJ
4IZp3TZFDLuFRaeVheNg+jlt+65JQziOcT2o4u/FZd/XMJcZnryjPMsOba7a
Hs4rUlVlWdbdn2LFQVnTdXUZWzJQTG+zBvyTenlXeE5Q0KauEtmA0w1INbCc
tOQ2zr1jAt/vTUNlGw+EZPOopLmqLcxDrGZxIICYubyC8QK7826uvCrK4XZB
avzWyMKrkvndhB8/DmxQOadDp5OdCMq7HcmcSUNjvdtKdmgrNT+NxmXjDEbT
YFq0U5W9K1mCn/CDM0JzfH8/Ywdky+YN8M/o5aK4TSabLt4OhwaW85Ys700y
iOHBm1HW9/3za9f1IpSsads78WFgjB28Ld6QvXEGsge3zQ3ZFXEw5MkNrayO
EWwR/i79OKtXejE8enFa9qxexp5RPqniJBuFm8/IpvqUNefnh1ILZV1MvGfe
XV+y/7nsR2UbSnnpW7zSGco4dN1A/17uPLGu6T50i0v2o8t+TLYhCz0viI7/
QXjRRRdd9DHobyRxtrA=
            "], {{0, 19}, {188, 0}}, {0, 255},
            ColorFunction->RGBColor],
           BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
           Selectable->False],
          DefaultBaseStyle->"ImageGraphics",
          ImageSize->Magnification[1],
          ImageSizeRaw->{188, 19},
          PlotRange->{{0, 188}, {0, 19}}]], "ExerciseOutput",
         ImageSize->{192, 19},
         ImageMargins->{{0, 0}, {0, 0}},
         ImageRegion->{{0, 1}, {0, 1}},
         Magnification->1],
        Apply[TextCell, 
         Cell[
          BoxData[
           GraphicsBox[
            TagBox[
             RasterBox[CompressedData["
1:eJztWa/vpUYQJ62pbNK/oH9A0bXImpJcU4e5S49LzZXcNWmwJBUkNVu1DoVC
oTDFoDCYrViDwGAQNFmDWPG6sws83mP50evVNEzyvnlvmdmZ+czszCzfL1/9
9ML9xDCM95+JPy9e/mK9e/fS/+5z8eP7t+9/fPP29Q/fvP359ZvX775+9alY
/EJ8/hAf+H676KKLLrrooosu+j9Qn4WuaXpkUD9ZTUjD+P0574osiZOUtMPB
oo5aUqZJkpV0ycf7hpCaHVkm2IosTdKMdg9aeFdXFV3auOUaraqmH6bd6hw2
K9t9xUNXKj7aLpc7WmVJkuZVv6OXtaUwOElL2s1LAs+Z6IHuFfgn9d5YlQPM
wtvd/RU9wHLCEha7luUEZTdawAgWw7Abpi2/1YlvSArLWXUTWsZEZloP24tr
GnLJZ9mS20sl35B6Stgsd/FjNDYWFN+TrglOiAsqkQ18YQlaaWJKKbmZXXT6
APA2t40FX1govhI7C1v8WifdE6VilPUSKt2trIWkIY3Rkg78U3pvfAyHKRX7
WXMelnOWcJpFzkKEVcgw0JgKeRx4sCGuRrPbHMQTsLWBb27KNxY1xErhSpDD
ae1LNEV5yKPQd4V7drUX9B5ZEiWwrE9CPKdMNcK4L34b6kQ5buNK/Ipt8BlM
YcQVX4NCK8XbzDIDFRqZ8BbY3GZz/vC2CHGh9beOhWFSBRxMgLwD/lRsAinK
FW0avAb/pN5FOHjqC2C9naR5hOW0JbcbjWzDROr3QCBnFvBTwY1GZp56wmOs
nlLAxKWDdlGnm8ER8wu5FSfWojJwGoktdoIuoRZ5/szBpcu271uGvVtn2lCA
ZzmOaVhIgMOwUI+qyX1hc9DuSEvqi0DlTJ2IDHDocStk/dRW+jJUsvJI2uRY
djRtAf5ZvRWy5miqNIvoFjRPsJy1RBABBMegw+mYNd7GWjoxM7zYfIAuJnDQ
Lmr1drKiuTltyki47zeT+7Ih7uWMgrqgoihGUZzRsZd34LKJOkbsTaXSQVBs
ZE0b2ypVemHznDNtHmzbLLV3LSkS2MKN2Y1nnqhLeUPzCGMxMhyOYTcVR5mW
qvWbjud5Pk6O2ukD+Gf1Sl3hGMG+sB5jvaQVLCctAaIyT4QNYiqEmrFsbU85
Y93TYwq0dlGvuYGSNJId1/P6cc5IqCFofuBAm7byTrmsyouoWtbW4eVNKts6
FJJI8GGYKyoMxdYLMQpUa3O2tYODiiQODNujB34g3bGj/UFTGeDGoFf0AlES
UZKmkRwS3GRv9HwC/5zeoY5lWgYYB2qUwjrftLCcs0SKywofpjSUo1PebzH/
qzozQAMyYtJxVsc++J82y8H7OGcm/lpA9u1vvysAEUahxND1w7xZR4BFEmov
RAgFtmrdeQOWZnHg+2GUVXkI49DuvYEPXYYcacNfkEJu3C8s36sXfQliTrxm
kSdoV3Z1YE/q7esCCd8CXJQpFB1NndmC5Ywl4xKWGcl7CqkZ5PcnnEAjI8o4
KI+GFSl0axjsXMq1ixq1FRK5FU1Pemjwc6ZRmTPbUZOpaBajyZClX/0aY4Qw
Fn8QCsecKTQ5MxSCUbGh0Dbl+SwewIGZcbJ/LX5fhxkM7g5Q/C2s1nmT7MW9
K2H4tdB80+bDHZruqCc+gn/7B3pn66GnG3AHXj05hGXHkttUAaISylQNfVvN
MwO8SSjgkR8XlMCrF3Xeg5R0de5M1w3tophrxcxuBdmMuYRIVDPSM1YXWM60
oua0hNAiFkE3o6IiVLq3khVDBwg7mHZdJa9+D3MdRNOqFDAa2TufLMJEfKNJ
4IZp3TZFDLuFRaeVheNg+jlt+65JQziOcT2o4u/FZd/XMJcZnryjPMsOba7a
Hs4rUlVlWdbdn2LFQVnTdXUZWzJQTG+zBvyTenlXeE5Q0KauEtmA0w1INbCc
tOQ2zr1jAt/vTUNlGw+EZPOopLmqLcxDrGZxIICYubyC8QK7826uvCrK4XZB
avzWyMKrkvndhB8/DmxQOadDp5OdCMq7HcmcSUNjvdtKdmgrNT+NxmXjDEbT
YFq0U5W9K1mCn/CDM0JzfH8/Ywdky+YN8M/o5aK4TSabLt4OhwaW85Ys700y
iOHBm1HW9/3za9f1IpSsads78WFgjB28Ld6QvXEGsge3zQ3ZFXEw5MkNrayO
EWwR/i79OKtXejE8enFa9qxexp5RPqniJBuFm8/IpvqUNefnh1ILZV1MvGfe
XV+y/7nsR2UbSnnpW7zSGco4dN1A/17uPLGu6T50i0v2o8t+TLYhCz0viI7/
QXjRRRdd9DHobyRxtrA=
              "], {{0, 19}, {188, 0}}, {0, 255}, 
              ColorFunction -> RGBColor], 
             BoxForm`ImageTag[
             "Byte", ColorSpace -> "RGB", Interleaving -> True], Selectable -> 
             False], DefaultBaseStyle -> "ImageGraphics", ImageSize -> 
            Magnification[1], ImageSizeRaw -> {188, 19}, 
            PlotRange -> {{0, 188}, {0, 19}}]], "ExerciseOutput", 
          Magnification -> 1, CellFrameColor -> GrayLevel[0], Selectable -> 
          False, Copyable -> False, Editable -> False, ShowCellBracket -> 
          False, CellLabel -> "Out[]=", CellFrame -> False]]],
       FrameMargins->{{10, 0}, {10, 12}},
       ImageMargins->0,
       ImageSize->Full], 
      ButtonBox[
       PaneBox[
        StyleBox["\[Times]",
         FontFamily->"MathematicaMono",
         FontSize->18,
         FontWeight->"Bold",
         FontColor->GrayLevel[0.75]],
        Alignment->Right,
        FrameMargins->{{0, 6}, {0, 0}},
        ImageMargins->0],
       Appearance->None,
       ButtonFunction:>(SelectionMove[
          ButtonNotebook[], All, ButtonCell, AutoScroll -> False]; 
        NotebookFind[
          EvaluationNotebook[], "Exercise", Previous, CellStyle, WrapAround -> 
          False, AutoScroll -> False]; FrontEndExecute[
          FrontEndToken[
           ButtonNotebook[], "OpenCloseGroup"]])]}
    },
    GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {Top}},
    GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
   "Grid"],
  FrameMargins->0,
  FrameStyle->GrayLevel[0.7],
  StripOnInput->False]], "ExerciseOutput",
 Editable->False,
 Selectable->False,
 Deletable->False,
 CellFrame->{{1, 1}, {1, 1}},
 ShowCellBracket->False,
 CellFrameMargins->{{0, 0}, {0, 0}},
 CellFrameColor->GrayLevel[1],
 LineBreakWithin->Automatic]
}, Closed]],

Cell[CellGroupData[{

Cell[BoxData[
 StyleBox[
  DynamicBox[ToBoxes[
    $CellContext`SolutionResponseText["5.1"], StandardForm],
   ImageSizeCache->{134., {3., 9.}}], "SolutionResponseText"]], "Subsection",
 Editable->False,
 Selectable->False,
 Deletable->False,
 ShowCellBracket->False,
 CellMargins->{{24, 25}, {3, 0}},
 CellFrameMargins->{{8, 0}, {0, 0}},
 TextAlignment->Right,
 ShowStringCharacters->False,
 FontFamily->"Source Sans Pro",
 FontSize->12,
 FontWeight->"Plain",
 FontSlant->"Plain",
 Background->GrayLevel[1]],

Cell[BoxData[
 ButtonBox[
  PaneBox[
   StyleBox[
    RowBox[{"[", " ", 
     RowBox[{"Click", " ", "to", " ", "enter", " ", "code"}], " ", "]"}],
    Selectable->False,
    StripOnInput->False,
    FontFamily->"Source Sans Pro",
    FontSize->14,
    FontWeight->Plain,
    FontColor->GrayLevel[0.6]],
   ImageSize->Full],
  Appearance->None,
  ButtonFunction:>(SelectionMove[
     InputNotebook[], All, ButtonCell]; NotebookWrite[
     InputNotebook[], 
     Cell[
      BoxData[""], "Input"]]; SelectionMove[
     InputNotebook[], Before, CellContents]; Null),
  Evaluator->Automatic,
  Method->"Preemptive"]], "Input",
 CellFrameLabels->{{None, None}, {None, None}},
 ShowSyntaxStyles->False,
 ShowStringCharacters->False,
 CellTags->"FirstInputCell"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 PaneBox["\[ThickSpace]",
  ImageSize->Full]], "CodeSectionDividerCloud",
 Editable->False,
 Selectable->False,
 Deletable->False,
 CellMargins->{{0, 0}, {0, 35}},
 CellBracketOptions->{"OverlapContent"->True}],

Cell["Calcule el total de los 10 primeros cuadrados.", "Exercise",
 Editable->False,
 Selectable->False,
 Deletable->False,
 CellDingbat->Cell[
  "5.2", "ExerciseNumber", FontColor -> 
   RGBColor[0.9019607843137255, 0.4117647058823529, 0.027450980392156862`]],
 ShowCellBracket->False,
 CounterAssignments->{{"SectionNumber", 5}, {"ExerciseNumber", 2}, {
   "WebOnly", 0}}],

Cell[CellGroupData[{

Cell[BoxData[
 TagBox[
  ButtonBox[
   StyleBox[
    RowBox[{"EXPECTED", " ", "OUTPUT", " ", "\[RightGuillemet]"}],
    FontFamily->"Source Sans Pro",
    FontSize->12,
    FontColor->GrayLevel[0.6]],
   Appearance->None,
   ButtonFunction:>(SelectionMove[
      ButtonNotebook[], All, ButtonCell, AutoScroll -> False]; FrontEndExecute[
      FrontEndToken[
       ButtonNotebook[], "OpenCloseGroup"]]),
   Evaluator->Automatic,
   Method->"Preemptive"],
  MouseAppearanceTag["LinkHand"]]], "ExerciseExpectedResult",
 Editable->False,
 Deletable->False,
 ShowCellBracket->False],

Cell[BoxData[
 FrameBox[
  TagBox[GridBox[{
     {
      PaneBox[
       InterpretationBox[Cell[BoxData[
         GraphicsBox[
          TagBox[RasterBox[CompressedData["
1:eJzlUaFu5DAQjXrk4EnVfUB/wPho4CFLrcpCWt1udWQbbU+qloYFmi1bFGRk
ZGQSFBJiEmJVISEGqeQCA4O9GafbRG3/oE+yY7/MG8+bubi9v1yfJUny8B22
y5vHdLu92V39gMv15uHv3Wb15/fm3+putf11+w3Ic1g/YeH5+MXhbaMEF7Lp
hpkMY1tLzkXbjyfKGT2jGxxGDYomCBJ3WtYBE3a7yNEUP4Xq4yttvJ1QNlEu
U1IY1BxVCf/Txh1dy/AQn1WQiLARIwWQtQ3HMOG9ibEuFvLCRtKiHuWRpPqD
Cl3ZQdc8g5LWlZtKgkR5ZQYNFaVljTF6j36yPM93e964hXp/csXaqVHuMPsk
KtbhDU8TyrgQh9iYNfeLAoK3kuH7og91QRJSGh9sJ3PoKSkWI0H0Ip9sQtY5
SdApdvSJkYRW5sSxKTL42bZVr12SkIbsVDeMthclzrAyz3yNxSljnRskkpl+
6aCyjMneWtNU6Iwe4HE/tEVG3mwyaSafJX3zTrnGuXVqP/eDFnrRu+Ad4N1M
PiMDMN5/Nryvh/+Mjs++
            "], {{0, 19}, {21, 0}}, {0, 255},
            ColorFunction->RGBColor],
           BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
           Selectable->False],
          DefaultBaseStyle->"ImageGraphics",
          ImageSize->Magnification[1],
          ImageSizeRaw->{21, 19},
          PlotRange->{{0, 21}, {0, 19}}]], "ExerciseOutput",
         ImageSize->{25, 19},
         ImageMargins->{{0, 0}, {0, 0}},
         ImageRegion->{{0, 1}, {0, 1}},
         Magnification->1],
        Apply[TextCell, 
         Cell[
          BoxData[
           GraphicsBox[
            TagBox[
             RasterBox[CompressedData["
1:eJzlUaFu5DAQjXrk4EnVfUB/wPho4CFLrcpCWt1udWQbbU+qloYFmi1bFGRk
ZGQSFBJiEmJVISEGqeQCA4O9GafbRG3/oE+yY7/MG8+bubi9v1yfJUny8B22
y5vHdLu92V39gMv15uHv3Wb15/fm3+putf11+w3Ic1g/YeH5+MXhbaMEF7Lp
hpkMY1tLzkXbjyfKGT2jGxxGDYomCBJ3WtYBE3a7yNEUP4Xq4yttvJ1QNlEu
U1IY1BxVCf/Txh1dy/AQn1WQiLARIwWQtQ3HMOG9ibEuFvLCRtKiHuWRpPqD
Cl3ZQdc8g5LWlZtKgkR5ZQYNFaVljTF6j36yPM93e964hXp/csXaqVHuMPsk
KtbhDU8TyrgQh9iYNfeLAoK3kuH7og91QRJSGh9sJ3PoKSkWI0H0Ip9sQtY5
SdApdvSJkYRW5sSxKTL42bZVr12SkIbsVDeMthclzrAyz3yNxSljnRskkpl+
6aCyjMneWtNU6Iwe4HE/tEVG3mwyaSafJX3zTrnGuXVqP/eDFnrRu+Ad4N1M
PiMDMN5/Nryvh/+Mjs++
              "], {{0, 19}, {21, 0}}, {0, 255}, 
              ColorFunction -> RGBColor], 
             BoxForm`ImageTag[
             "Byte", ColorSpace -> "RGB", Interleaving -> True], Selectable -> 
             False], DefaultBaseStyle -> "ImageGraphics", ImageSize -> 
            Magnification[1], ImageSizeRaw -> {21, 19}, 
            PlotRange -> {{0, 21}, {0, 19}}]], "ExerciseOutput", 
          Magnification -> 1, CellFrameColor -> GrayLevel[0], Selectable -> 
          False, Copyable -> False, Editable -> False, ShowCellBracket -> 
          False, CellLabel -> "Out[]=", CellFrame -> False]]],
       FrameMargins->{{10, 0}, {10, 12}},
       ImageMargins->0,
       ImageSize->Full], 
      ButtonBox[
       PaneBox[
        StyleBox["\[Times]",
         FontFamily->"MathematicaMono",
         FontSize->18,
         FontWeight->"Bold",
         FontColor->GrayLevel[0.75]],
        Alignment->Right,
        FrameMargins->{{0, 6}, {0, 0}},
        ImageMargins->0],
       Appearance->None,
       ButtonFunction:>(SelectionMove[
          ButtonNotebook[], All, ButtonCell, AutoScroll -> False]; 
        NotebookFind[
          EvaluationNotebook[], "Exercise", Previous, CellStyle, WrapAround -> 
          False, AutoScroll -> False]; FrontEndExecute[
          FrontEndToken[
           ButtonNotebook[], "OpenCloseGroup"]])]}
    },
    GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {Top}},
    GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
   "Grid"],
  FrameMargins->0,
  FrameStyle->GrayLevel[0.7],
  StripOnInput->False]], "ExerciseOutput",
 Editable->False,
 Selectable->False,
 Deletable->False,
 CellFrame->{{1, 1}, {1, 1}},
 ShowCellBracket->False,
 CellFrameMargins->{{0, 0}, {0, 0}},
 CellFrameColor->GrayLevel[1],
 LineBreakWithin->Automatic]
}, Closed]],

Cell[CellGroupData[{

Cell[BoxData[
 StyleBox[
  DynamicBox[ToBoxes[
    $CellContext`SolutionResponseText["5.2"], StandardForm],
   ImageSizeCache->{134., {3., 9.}}], "SolutionResponseText"]], "Subsection",
 Editable->False,
 Selectable->False,
 Deletable->False,
 ShowCellBracket->False,
 CellMargins->{{24, 25}, {3, 0}},
 CellFrameMargins->{{8, 0}, {0, 0}},
 TextAlignment->Right,
 ShowStringCharacters->False,
 FontFamily->"Source Sans Pro",
 FontSize->12,
 FontWeight->"Plain",
 FontSlant->"Plain",
 Background->GrayLevel[1]],

Cell[BoxData[
 ButtonBox[
  PaneBox[
   StyleBox[
    RowBox[{"[", " ", 
     RowBox[{"Click", " ", "to", " ", "enter", " ", "code"}], " ", "]"}],
    Selectable->False,
    StripOnInput->False,
    FontFamily->"Source Sans Pro",
    FontSize->14,
    FontWeight->Plain,
    FontColor->GrayLevel[0.6]],
   ImageSize->Full],
  Appearance->None,
  ButtonFunction:>(SelectionMove[
     InputNotebook[], All, ButtonCell]; NotebookWrite[
     InputNotebook[], 
     Cell[
      BoxData[""], "Input"]]; SelectionMove[
     InputNotebook[], Before, CellContents]; Null),
  Evaluator->Automatic,
  Method->"Preemptive"]], "Input",
 CellFrameLabels->{{None, None}, {None, None}},
 ShowSyntaxStyles->False,
 ShowStringCharacters->False,
 CellTags->"FirstInputCell"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 PaneBox["\[ThickSpace]",
  ImageSize->Full]], "CodeSectionDividerCloud",
 Editable->False,
 Selectable->False,
 Deletable->False,
 CellMargins->{{0, 0}, {0, 35}},
 CellBracketOptions->{"OverlapContent"->True}],

Cell["\<\
Muestre gr\[AAcute]ficamente los 10 primeros cuadrados, comenzando por el 1.\
\>", "Exercise",
 Editable->False,
 Selectable->False,
 Deletable->False,
 CellDingbat->Cell[
  "5.3", "ExerciseNumber", FontColor -> 
   RGBColor[0.9019607843137255, 0.4117647058823529, 0.027450980392156862`]],
 ShowCellBracket->False,
 CounterAssignments->{{"SectionNumber", 5}, {"ExerciseNumber", 3}, {
   "WebOnly", 0}}],

Cell[CellGroupData[{

Cell[BoxData[
 TagBox[
  ButtonBox[
   StyleBox[
    RowBox[{"EXPECTED", " ", "OUTPUT", " ", "\[RightGuillemet]"}],
    FontFamily->"Source Sans Pro",
    FontSize->12,
    FontColor->GrayLevel[0.6]],
   Appearance->None,
   ButtonFunction:>(SelectionMove[
      ButtonNotebook[], All, ButtonCell, AutoScroll -> False]; FrontEndExecute[
      FrontEndToken[
       ButtonNotebook[], "OpenCloseGroup"]]),
   Evaluator->Automatic,
   Method->"Preemptive"],
  MouseAppearanceTag["LinkHand"]]], "ExerciseExpectedResult",
 Editable->False,
 Deletable->False,
 ShowCellBracket->False],

Cell[BoxData[
 FrameBox[
  TagBox[GridBox[{
     {
      PaneBox[
       InterpretationBox[Cell[BoxData[
         GraphicsBox[
          TagBox[RasterBox[CompressedData["
1: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
            "], {{0, 227}, {
            360, 0}}, {0, 255},
            ColorFunction->RGBColor],
           BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
           Selectable->False],
          DefaultBaseStyle->"ImageGraphics",
          ImageSize->Magnification[1],
          ImageSizeRaw->{360, 227},
          PlotRange->{{0, 360}, {0, 227}}]], "ExerciseOutput",
         ImageSize->{364, 227},
         ImageMargins->{{0, 0}, {0, 0}},
         ImageRegion->{{0, 1}, {0, 1}},
         Magnification->1],
        Apply[TextCell, 
         Cell[
          BoxData[
           GraphicsBox[
            TagBox[
             RasterBox[CompressedData["
1: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
              "], {{0, 
              227}, {360, 0}}, {0, 255}, ColorFunction -> RGBColor], 
             BoxForm`ImageTag[
             "Byte", ColorSpace -> "RGB", Interleaving -> True], Selectable -> 
             False], DefaultBaseStyle -> "ImageGraphics", ImageSize -> 
            Magnification[1], ImageSizeRaw -> {360, 227}, 
            PlotRange -> {{0, 360}, {0, 227}}]], "ExerciseOutput", 
          Magnification -> 1, CellFrameColor -> GrayLevel[0], Selectable -> 
          False, Copyable -> False, Editable -> False, ShowCellBracket -> 
          False, CellLabel -> "Out[]=", CellFrame -> False]]],
       FrameMargins->{{10, 0}, {10, 12}},
       ImageMargins->0,
       ImageSize->Full], 
      ButtonBox[
       PaneBox[
        StyleBox["\[Times]",
         FontFamily->"MathematicaMono",
         FontSize->18,
         FontWeight->"Bold",
         FontColor->GrayLevel[0.75]],
        Alignment->Right,
        FrameMargins->{{0, 6}, {0, 0}},
        ImageMargins->0],
       Appearance->None,
       ButtonFunction:>(SelectionMove[
          ButtonNotebook[], All, ButtonCell, AutoScroll -> False]; 
        NotebookFind[
          EvaluationNotebook[], "Exercise", Previous, CellStyle, WrapAround -> 
          False, AutoScroll -> False]; FrontEndExecute[
          FrontEndToken[
           ButtonNotebook[], "OpenCloseGroup"]])]}
    },
    GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {Top}},
    GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
   "Grid"],
  FrameMargins->0,
  FrameStyle->GrayLevel[0.7],
  StripOnInput->False]], "ExerciseOutput",
 Editable->False,
 Selectable->False,
 Deletable->False,
 CellFrame->{{1, 1}, {1, 1}},
 ShowCellBracket->False,
 CellFrameMargins->{{0, 0}, {0, 0}},
 CellFrameColor->GrayLevel[1],
 LineBreakWithin->Automatic]
}, Closed]],

Cell[CellGroupData[{

Cell[BoxData[
 StyleBox[
  DynamicBox[ToBoxes[
    $CellContext`SolutionResponseText["5.3"], StandardForm],
   ImageSizeCache->{134., {3., 9.}}], "SolutionResponseText"]], "Subsection",
 Editable->False,
 Selectable->False,
 Deletable->False,
 ShowCellBracket->False,
 CellMargins->{{24, 25}, {3, 0}},
 CellFrameMargins->{{8, 0}, {0, 0}},
 TextAlignment->Right,
 ShowStringCharacters->False,
 FontFamily->"Source Sans Pro",
 FontSize->12,
 FontWeight->"Plain",
 FontSlant->"Plain",
 Background->GrayLevel[1]],

Cell[BoxData[
 ButtonBox[
  PaneBox[
   StyleBox[
    RowBox[{"[", " ", 
     RowBox[{"Click", " ", "to", " ", "enter", " ", "code"}], " ", "]"}],
    Selectable->False,
    StripOnInput->False,
    FontFamily->"Source Sans Pro",
    FontSize->14,
    FontWeight->Plain,
    FontColor->GrayLevel[0.6]],
   ImageSize->Full],
  Appearance->None,
  ButtonFunction:>(SelectionMove[
     InputNotebook[], All, ButtonCell]; NotebookWrite[
     InputNotebook[], 
     Cell[
      BoxData[""], "Input"]]; SelectionMove[
     InputNotebook[], Before, CellContents]; Null),
  Evaluator->Automatic,
  Method->"Preemptive"]], "Input",
 CellFrameLabels->{{None, None}, {None, None}},
 ShowSyntaxStyles->False,
 ShowStringCharacters->False,
 CellTags->"FirstInputCell"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 PaneBox["\[ThickSpace]",
  ImageSize->Full]], "CodeSectionDividerCloud",
 Editable->False,
 Selectable->False,
 Deletable->False,
 CellMargins->{{0, 0}, {0, 35}},
 CellBracketOptions->{"OverlapContent"->True}],

Cell[TextData[{
 "Use ",
 StyleBox["Sort",
  FontFamily->"Source Sans Pro"],
 ", ",
 StyleBox["Join",
  FontFamily->"Source Sans Pro"],
 " y ",
 StyleBox["Range",
  FontFamily->"Source Sans Pro"],
 " para crear ",
 Cell[BoxData[
  RowBox[{"{", 
   RowBox[{
   "1", ",", "1", ",", "2", ",", "2", ",", "3", ",", "3", ",", "4", ",", 
    "4"}], "}"}]], "InlineCode"],
 "."
}], "Exercise",
 Editable->False,
 Selectable->False,
 Deletable->False,
 CellDingbat->Cell[
  "5.4", "ExerciseNumber", FontColor -> 
   RGBColor[0.9019607843137255, 0.4117647058823529, 0.027450980392156862`]],
 ShowCellBracket->False,
 CounterAssignments->{{"SectionNumber", 5}, {"ExerciseNumber", 4}, {
   "WebOnly", 0}}],

Cell[CellGroupData[{

Cell[BoxData[
 TagBox[
  ButtonBox[
   StyleBox[
    RowBox[{"EXPECTED", " ", "OUTPUT", " ", "\[RightGuillemet]"}],
    FontFamily->"Source Sans Pro",
    FontSize->12,
    FontColor->GrayLevel[0.6]],
   Appearance->None,
   ButtonFunction:>(SelectionMove[
      ButtonNotebook[], All, ButtonCell, AutoScroll -> False]; FrontEndExecute[
      FrontEndToken[
       ButtonNotebook[], "OpenCloseGroup"]]),
   Evaluator->Automatic,
   Method->"Preemptive"],
  MouseAppearanceTag["LinkHand"]]], "ExerciseExpectedResult",
 Editable->False,
 Deletable->False,
 ShowCellBracket->False],

Cell[BoxData[
 FrameBox[
  TagBox[GridBox[{
     {
      PaneBox[
       InterpretationBox[Cell[BoxData[
         GraphicsBox[
          TagBox[RasterBox[CompressedData["
1:eJztly2PnEAcxietqWzST9AvgK4dWUVyTR3mLj0urbiSuyYNFjdy3DgUCoVC
YVBjMGPGIDAYBAIzAnGdl9tbruVldrutuX0SNsD+lmGe+b/Mvr/6fuG/AgDc
v5EfF5c/4d3dZfjprbz4fHv/9eb2+svH2x/XN9d3H65ey5vv5PFNHur84ayz
zjrrJarPke84ARPmcqgZa4Zx61cW2NDSPEvTjPLuBJjoaJGlWU55ewLsUT2v
qqYX1tiQ+BB6Ee0eJz4wItuHj7J2fKjTEGgh2q88ywbrWepoxnwGKf8bbGwL
d4K5qJxdNkvsSRQr3EF0lZpiI89jb/KTocIAYON+UyRRoEhSrblng9WJHATp
5ZfrpZyeDSxLbGxz6ES19qJAEABIh+MxI1GnJgZcUi1CcxiPXeBgM3PBlHuT
Qbj0Ba+6Z4cN/S6ve4qWJ2KJ7dWX0SmwFskAhZ7nAIhX3JvBGIHAIebBavV3
TiqJCtq4Z4lpVViy0WYZ2sSGrmVl6qlCk6yYZ4MxlX8gb9pExdGie7MY147J
J/d1EUhrp4l/avfGJtPzmC9oh2CDXHOj9ZjfxMxYYa4WKoYAkoViu4CNOpdR
xpEuscV0kNO611O1eN5aqByAyTcXXY4VmzVrDWEVG2LdWgKEMY5cU9KK5hBM
EN2Wxp5H8iQqJgMzVdDY1jxssI6qPgDx6kbEEhP7XcXI4GK7t8FEmRBMCFZC
rvLBjcs/3VvEBI/lRUxVTNaqQpi6J+QWjpXqqzApOWOtUC06lAUzyidbIitM
tIWn04cUFasqSmndj0djuawvTljwtu+aDKlASGpxNDbRqFOS6VM77LFTEIPt
e66oXPBMuBrk12p2zqQp22GM/EbpMDgWE20Vec4OcXBem1c/DptIFUk3Zgdg
z3uu3u+hlQxUwbmDV/QfsFEMUuOJsKPfjRMViAYzWQx9MluGW5UMIGEb3eHF
YILGoS7S1f5Ognw/4rP/9oau6Tb/Br4cTOQoCKK43gzQs876l/oFoR+Xfg==

            "], {{0, 19}, {106, 0}}, {0, 255},
            ColorFunction->RGBColor],
           BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
           Selectable->False],
          DefaultBaseStyle->"ImageGraphics",
          ImageSize->Magnification[1],
          ImageSizeRaw->{106, 19},
          PlotRange->{{0, 106}, {0, 19}}]], "ExerciseOutput",
         ImageSize->{110, 19},
         ImageMargins->{{0, 0}, {0, 0}},
         ImageRegion->{{0, 1}, {0, 1}},
         Magnification->1],
        Apply[TextCell, 
         Cell[
          BoxData[
           GraphicsBox[
            TagBox[
             RasterBox[CompressedData["
1:eJztly2PnEAcxietqWzST9AvgK4dWUVyTR3mLj0urbiSuyYNFjdy3DgUCoVC
YVBjMGPGIDAYBAIzAnGdl9tbruVldrutuX0SNsD+lmGe+b/Mvr/6fuG/AgDc
v5EfF5c/4d3dZfjprbz4fHv/9eb2+svH2x/XN9d3H65ey5vv5PFNHur84ayz
zjrrJarPke84ARPmcqgZa4Zx61cW2NDSPEvTjPLuBJjoaJGlWU55ewLsUT2v
qqYX1tiQ+BB6Ee0eJz4wItuHj7J2fKjTEGgh2q88ywbrWepoxnwGKf8bbGwL
d4K5qJxdNkvsSRQr3EF0lZpiI89jb/KTocIAYON+UyRRoEhSrblng9WJHATp
5ZfrpZyeDSxLbGxz6ES19qJAEABIh+MxI1GnJgZcUi1CcxiPXeBgM3PBlHuT
Qbj0Ba+6Z4cN/S6ve4qWJ2KJ7dWX0SmwFskAhZ7nAIhX3JvBGIHAIebBavV3
TiqJCtq4Z4lpVViy0WYZ2sSGrmVl6qlCk6yYZ4MxlX8gb9pExdGie7MY147J
J/d1EUhrp4l/avfGJtPzmC9oh2CDXHOj9ZjfxMxYYa4WKoYAkoViu4CNOpdR
xpEuscV0kNO611O1eN5aqByAyTcXXY4VmzVrDWEVG2LdWgKEMY5cU9KK5hBM
EN2Wxp5H8iQqJgMzVdDY1jxssI6qPgDx6kbEEhP7XcXI4GK7t8FEmRBMCFZC
rvLBjcs/3VvEBI/lRUxVTNaqQpi6J+QWjpXqqzApOWOtUC06lAUzyidbIitM
tIWn04cUFasqSmndj0djuawvTljwtu+aDKlASGpxNDbRqFOS6VM77LFTEIPt
e66oXPBMuBrk12p2zqQp22GM/EbpMDgWE20Vec4OcXBem1c/DptIFUk3Zgdg
z3uu3u+hlQxUwbmDV/QfsFEMUuOJsKPfjRMViAYzWQx9MluGW5UMIGEb3eHF
YILGoS7S1f5Ognw/4rP/9oau6Tb/Br4cTOQoCKK43gzQs876l/oFoR+Xfg==

              "], {{0, 19}, {106, 0}}, {0, 255}, ColorFunction -> RGBColor], 
             BoxForm`ImageTag[
             "Byte", ColorSpace -> "RGB", Interleaving -> True], Selectable -> 
             False], DefaultBaseStyle -> "ImageGraphics", ImageSize -> 
            Magnification[1], ImageSizeRaw -> {106, 19}, 
            PlotRange -> {{0, 106}, {0, 19}}]], "ExerciseOutput", 
          Magnification -> 1, CellFrameColor -> GrayLevel[0], Selectable -> 
          False, Copyable -> False, Editable -> False, ShowCellBracket -> 
          False, CellLabel -> "Out[]=", CellFrame -> False]]],
       FrameMargins->{{10, 0}, {10, 12}},
       ImageMargins->0,
       ImageSize->Full], 
      ButtonBox[
       PaneBox[
        StyleBox["\[Times]",
         FontFamily->"MathematicaMono",
         FontSize->18,
         FontWeight->"Bold",
         FontColor->GrayLevel[0.75]],
        Alignment->Right,
        FrameMargins->{{0, 6}, {0, 0}},
        ImageMargins->0],
       Appearance->None,
       ButtonFunction:>(SelectionMove[
          ButtonNotebook[], All, ButtonCell, AutoScroll -> False]; 
        NotebookFind[
          EvaluationNotebook[], "Exercise", Previous, CellStyle, WrapAround -> 
          False, AutoScroll -> False]; FrontEndExecute[
          FrontEndToken[
           ButtonNotebook[], "OpenCloseGroup"]])]}
    },
    GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {Top}},
    GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
   "Grid"],
  FrameMargins->0,
  FrameStyle->GrayLevel[0.7],
  StripOnInput->False]], "ExerciseOutput",
 Editable->False,
 Selectable->False,
 Deletable->False,
 CellFrame->{{1, 1}, {1, 1}},
 ShowCellBracket->False,
 CellFrameMargins->{{0, 0}, {0, 0}},
 CellFrameColor->GrayLevel[1],
 LineBreakWithin->Automatic]
}, Closed]],

Cell[CellGroupData[{

Cell[BoxData[
 StyleBox[
  DynamicBox[ToBoxes[
    $CellContext`SolutionResponseText["5.4"], StandardForm],
   ImageSizeCache->{134., {3., 9.}}], "SolutionResponseText"]], "Subsection",
 Editable->False,
 Selectable->False,
 Deletable->False,
 ShowCellBracket->False,
 CellMargins->{{24, 25}, {3, 0}},
 CellFrameMargins->{{8, 0}, {0, 0}},
 TextAlignment->Right,
 ShowStringCharacters->False,
 FontFamily->"Source Sans Pro",
 FontSize->12,
 FontWeight->"Plain",
 FontSlant->"Plain",
 Background->GrayLevel[1]],

Cell[BoxData[
 ButtonBox[
  PaneBox[
   StyleBox[
    RowBox[{"[", " ", 
     RowBox[{"Click", " ", "to", " ", "enter", " ", "code"}], " ", "]"}],
    Selectable->False,
    StripOnInput->False,
    FontFamily->"Source Sans Pro",
    FontSize->14,
    FontWeight->Plain,
    FontColor->GrayLevel[0.6]],
   ImageSize->Full],
  Appearance->None,
  ButtonFunction:>(SelectionMove[
     InputNotebook[], All, ButtonCell]; NotebookWrite[
     InputNotebook[], 
     Cell[
      BoxData[""], "Input"]]; SelectionMove[
     InputNotebook[], Before, CellContents]; Null),
  Evaluator->Automatic,
  Method->"Preemptive"]], "Input",
 CellFrameLabels->{{None, None}, {None, None}},
 ShowSyntaxStyles->False,
 ShowStringCharacters->False,
 CellTags->"FirstInputCell"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 PaneBox["\[ThickSpace]",
  ImageSize->Full]], "CodeSectionDividerCloud",
 Editable->False,
 Selectable->False,
 Deletable->False,
 CellMargins->{{0, 0}, {0, 35}},
 CellBracketOptions->{"OverlapContent"->True}],

Cell[TextData[{
 "Use ",
 StyleBox["Range",
  FontFamily->"Source Sans Pro"],
 " y ",
 Cell[BoxData[
  StyleBox["+",
   FontFamily->"Source Sans Pro"]], "InlineCode"],
 " para formar la lista de los n\[UAcute]meros del 10 al 20, inclusive."
}], "Exercise",
 Editable->False,
 Selectable->False,
 Deletable->False,
 CellDingbat->Cell[
  "5.5", "ExerciseNumber", FontColor -> 
   RGBColor[0.9019607843137255, 0.4117647058823529, 0.027450980392156862`]],
 ShowCellBracket->False,
 CounterAssignments->{{"SectionNumber", 5}, {"ExerciseNumber", 5}, {
   "WebOnly", 0}}],

Cell[CellGroupData[{

Cell[BoxData[
 TagBox[
  ButtonBox[
   StyleBox[
    RowBox[{"EXPECTED", " ", "OUTPUT", " ", "\[RightGuillemet]"}],
    FontFamily->"Source Sans Pro",
    FontSize->12,
    FontColor->GrayLevel[0.6]],
   Appearance->None,
   ButtonFunction:>(SelectionMove[
      ButtonNotebook[], All, ButtonCell, AutoScroll -> False]; FrontEndExecute[
      FrontEndToken[
       ButtonNotebook[], "OpenCloseGroup"]]),
   Evaluator->Automatic,
   Method->"Preemptive"],
  MouseAppearanceTag["LinkHand"]]], "ExerciseExpectedResult",
 Editable->False,
 Deletable->False,
 ShowCellBracket->False],

Cell[BoxData[
 FrameBox[
  TagBox[GridBox[{
     {
      PaneBox[
       InterpretationBox[Cell[BoxData[
         GraphicsBox[
          TagBox[RasterBox[CompressedData["
1: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
            "], {{0, 
            19}, {222, 0}}, {0, 255},
            ColorFunction->RGBColor],
           BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
           Selectable->False],
          DefaultBaseStyle->"ImageGraphics",
          ImageSize->Magnification[1],
          ImageSizeRaw->{222, 19},
          PlotRange->{{0, 222}, {0, 19}}]], "ExerciseOutput",
         ImageSize->{226, 19},
         ImageMargins->{{0, 0}, {0, 0}},
         ImageRegion->{{0, 1}, {0, 1}},
         Magnification->1],
        Apply[TextCell, 
         Cell[
          BoxData[
           GraphicsBox[
            TagBox[
             RasterBox[CompressedData["
1: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
              "], {{
              0, 19}, {222, 0}}, {0, 255}, ColorFunction -> RGBColor], 
             BoxForm`ImageTag[
             "Byte", ColorSpace -> "RGB", Interleaving -> True], Selectable -> 
             False], DefaultBaseStyle -> "ImageGraphics", ImageSize -> 
            Magnification[1], ImageSizeRaw -> {222, 19}, 
            PlotRange -> {{0, 222}, {0, 19}}]], "ExerciseOutput", 
          Magnification -> 1, CellFrameColor -> GrayLevel[0], Selectable -> 
          False, Copyable -> False, Editable -> False, ShowCellBracket -> 
          False, CellLabel -> "Out[]=", CellFrame -> False]]],
       FrameMargins->{{10, 0}, {10, 12}},
       ImageMargins->0,
       ImageSize->Full], 
      ButtonBox[
       PaneBox[
        StyleBox["\[Times]",
         FontFamily->"MathematicaMono",
         FontSize->18,
         FontWeight->"Bold",
         FontColor->GrayLevel[0.75]],
        Alignment->Right,
        FrameMargins->{{0, 6}, {0, 0}},
        ImageMargins->0],
       Appearance->None,
       ButtonFunction:>(SelectionMove[
          ButtonNotebook[], All, ButtonCell, AutoScroll -> False]; 
        NotebookFind[
          EvaluationNotebook[], "Exercise", Previous, CellStyle, WrapAround -> 
          False, AutoScroll -> False]; FrontEndExecute[
          FrontEndToken[
           ButtonNotebook[], "OpenCloseGroup"]])]}
    },
    GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {Top}},
    GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
   "Grid"],
  FrameMargins->0,
  FrameStyle->GrayLevel[0.7],
  StripOnInput->False]], "ExerciseOutput",
 Editable->False,
 Selectable->False,
 Deletable->False,
 CellFrame->{{1, 1}, {1, 1}},
 ShowCellBracket->False,
 CellFrameMargins->{{0, 0}, {0, 0}},
 CellFrameColor->GrayLevel[1],
 LineBreakWithin->Automatic]
}, Closed]],

Cell[CellGroupData[{

Cell[BoxData[
 StyleBox[
  DynamicBox[ToBoxes[
    $CellContext`SolutionResponseText["5.5"], StandardForm],
   ImageSizeCache->{134., {3., 9.}}], "SolutionResponseText"]], "Subsection",
 Editable->False,
 Selectable->False,
 Deletable->False,
 ShowCellBracket->False,
 CellMargins->{{24, 25}, {3, 0}},
 CellFrameMargins->{{8, 0}, {0, 0}},
 TextAlignment->Right,
 ShowStringCharacters->False,
 FontFamily->"Source Sans Pro",
 FontSize->12,
 FontWeight->"Plain",
 FontSlant->"Plain",
 Background->GrayLevel[1]],

Cell[BoxData[
 ButtonBox[
  PaneBox[
   StyleBox[
    RowBox[{"[", " ", 
     RowBox[{"Click", " ", "to", " ", "enter", " ", "code"}], " ", "]"}],
    Selectable->False,
    StripOnInput->False,
    FontFamily->"Source Sans Pro",
    FontSize->14,
    FontWeight->Plain,
    FontColor->GrayLevel[0.6]],
   ImageSize->Full],
  Appearance->None,
  ButtonFunction:>(SelectionMove[
     InputNotebook[], All, ButtonCell]; NotebookWrite[
     InputNotebook[], 
     Cell[
      BoxData[""], "Input"]]; SelectionMove[
     InputNotebook[], Before, CellContents]; Null),
  Evaluator->Automatic,
  Method->"Preemptive"]], "Input",
 CellFrameLabels->{{None, None}, {None, None}},
 ShowSyntaxStyles->False,
 ShowStringCharacters->False,
 CellTags->"FirstInputCell"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 PaneBox["\[ThickSpace]",
  ImageSize->Full]], "CodeSectionDividerCloud",
 Editable->False,
 Selectable->False,
 Deletable->False,
 CellMargins->{{0, 0}, {0, 35}},
 CellBracketOptions->{"OverlapContent"->True}],

Cell["\<\
Forme una lista combinada de los 5 primeros cuadrados y cubos \
(n\[UAcute]meros elevados a la potencia 3), puestos en orden.\
\>", "Exercise",
 Editable->False,
 Selectable->False,
 Deletable->False,
 CellDingbat->Cell[
  "5.6", "ExerciseNumber", FontColor -> 
   RGBColor[0.9019607843137255, 0.4117647058823529, 0.027450980392156862`]],
 ShowCellBracket->False,
 CounterAssignments->{{"SectionNumber", 5}, {"ExerciseNumber", 6}, {
   "WebOnly", 0}}],

Cell[CellGroupData[{

Cell[BoxData[
 TagBox[
  ButtonBox[
   StyleBox[
    RowBox[{"EXPECTED", " ", "OUTPUT", " ", "\[RightGuillemet]"}],
    FontFamily->"Source Sans Pro",
    FontSize->12,
    FontColor->GrayLevel[0.6]],
   Appearance->None,
   ButtonFunction:>(SelectionMove[
      ButtonNotebook[], All, ButtonCell, AutoScroll -> False]; FrontEndExecute[
      FrontEndToken[
       ButtonNotebook[], "OpenCloseGroup"]]),
   Evaluator->Automatic,
   Method->"Preemptive"],
  MouseAppearanceTag["LinkHand"]]], "ExerciseExpectedResult",
 Editable->False,
 Deletable->False,
 ShowCellBracket->False],

Cell[BoxData[
 FrameBox[
  TagBox[GridBox[{
     {
      PaneBox[
       InterpretationBox[Cell[BoxData[
         GraphicsBox[
          TagBox[RasterBox[CompressedData["
1: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
snqaisj3w6R9aYu5053u9D+mfwFnKl7Y
            "], {{0, 19}, {174, 0}}, {0, 255},
            ColorFunction->RGBColor],
           BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
           Selectable->False],
          DefaultBaseStyle->"ImageGraphics",
          ImageSize->Magnification[1],
          ImageSizeRaw->{174, 19},
          PlotRange->{{0, 174}, {0, 19}}]], "ExerciseOutput",
         ImageSize->{178, 19},
         ImageMargins->{{0, 0}, {0, 0}},
         ImageRegion->{{0, 1}, {0, 1}},
         Magnification->1],
        Apply[TextCell, 
         Cell[
          BoxData[
           GraphicsBox[
            TagBox[
             RasterBox[CompressedData["
1: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
snqaisj3w6R9aYu5053u9D+mfwFnKl7Y
              "], {{0, 19}, {174, 0}}, {0, 
              255}, ColorFunction -> RGBColor], 
             BoxForm`ImageTag[
             "Byte", ColorSpace -> "RGB", Interleaving -> True], Selectable -> 
             False], DefaultBaseStyle -> "ImageGraphics", ImageSize -> 
            Magnification[1], ImageSizeRaw -> {174, 19}, 
            PlotRange -> {{0, 174}, {0, 19}}]], "ExerciseOutput", 
          Magnification -> 1, CellFrameColor -> GrayLevel[0], Selectable -> 
          False, Copyable -> False, Editable -> False, ShowCellBracket -> 
          False, CellLabel -> "Out[]=", CellFrame -> False]]],
       FrameMargins->{{10, 0}, {10, 12}},
       ImageMargins->0,
       ImageSize->Full], 
      ButtonBox[
       PaneBox[
        StyleBox["\[Times]",
         FontFamily->"MathematicaMono",
         FontSize->18,
         FontWeight->"Bold",
         FontColor->GrayLevel[0.75]],
        Alignment->Right,
        FrameMargins->{{0, 6}, {0, 0}},
        ImageMargins->0],
       Appearance->None,
       ButtonFunction:>(SelectionMove[
          ButtonNotebook[], All, ButtonCell, AutoScroll -> False]; 
        NotebookFind[
          EvaluationNotebook[], "Exercise", Previous, CellStyle, WrapAround -> 
          False, AutoScroll -> False]; FrontEndExecute[
          FrontEndToken[
           ButtonNotebook[], "OpenCloseGroup"]])]}
    },
    GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {Top}},
    GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
   "Grid"],
  FrameMargins->0,
  FrameStyle->GrayLevel[0.7],
  StripOnInput->False]], "ExerciseOutput",
 Editable->False,
 Selectable->False,
 Deletable->False,
 CellFrame->{{1, 1}, {1, 1}},
 ShowCellBracket->False,
 CellFrameMargins->{{0, 0}, {0, 0}},
 CellFrameColor->GrayLevel[1],
 LineBreakWithin->Automatic]
}, Closed]],

Cell[CellGroupData[{

Cell[BoxData[
 StyleBox[
  DynamicBox[ToBoxes[
    $CellContext`SolutionResponseText["5.6"], StandardForm],
   ImageSizeCache->{134., {3., 9.}}], "SolutionResponseText"]], "Subsection",
 Editable->False,
 Selectable->False,
 Deletable->False,
 ShowCellBracket->False,
 CellMargins->{{24, 25}, {3, 0}},
 CellFrameMargins->{{8, 0}, {0, 0}},
 TextAlignment->Right,
 ShowStringCharacters->False,
 FontFamily->"Source Sans Pro",
 FontSize->12,
 FontWeight->"Plain",
 FontSlant->"Plain",
 Background->GrayLevel[1]],

Cell[BoxData[
 ButtonBox[
  PaneBox[
   StyleBox[
    RowBox[{"[", " ", 
     RowBox[{"Click", " ", "to", " ", "enter", " ", "code"}], " ", "]"}],
    Selectable->False,
    StripOnInput->False,
    FontFamily->"Source Sans Pro",
    FontSize->14,
    FontWeight->Plain,
    FontColor->GrayLevel[0.6]],
   ImageSize->Full],
  Appearance->None,
  ButtonFunction:>(SelectionMove[
     InputNotebook[], All, ButtonCell]; NotebookWrite[
     InputNotebook[], 
     Cell[
      BoxData[""], "Input"]]; SelectionMove[
     InputNotebook[], Before, CellContents]; Null),
  Evaluator->Automatic,
  Method->"Preemptive"]], "Input",
 CellFrameLabels->{{None, None}, {None, None}},
 ShowSyntaxStyles->False,
 ShowStringCharacters->False,
 CellTags->"FirstInputCell"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 PaneBox["\[ThickSpace]",
  ImageSize->Full]], "CodeSectionDividerCloud",
 Editable->False,
 Selectable->False,
 Deletable->False,
 CellMargins->{{0, 0}, {0, 35}},
 CellBracketOptions->{"OverlapContent"->True}],

Cell["Encuentre el n\[UAcute]mero de d\[IAcute]gitos en 2^128.", "Exercise",
 Editable->False,
 Selectable->False,
 Deletable->False,
 CellDingbat->Cell[
  "5.7", "ExerciseNumber", FontColor -> 
   RGBColor[0.9019607843137255, 0.4117647058823529, 0.027450980392156862`]],
 ShowCellBracket->False,
 CounterAssignments->{{"SectionNumber", 5}, {"ExerciseNumber", 7}, {
   "WebOnly", 0}}],

Cell[CellGroupData[{

Cell[BoxData[
 TagBox[
  ButtonBox[
   StyleBox[
    RowBox[{"EXPECTED", " ", "OUTPUT", " ", "\[RightGuillemet]"}],
    FontFamily->"Source Sans Pro",
    FontSize->12,
    FontColor->GrayLevel[0.6]],
   Appearance->None,
   ButtonFunction:>(SelectionMove[
      ButtonNotebook[], All, ButtonCell, AutoScroll -> False]; FrontEndExecute[
      FrontEndToken[
       ButtonNotebook[], "OpenCloseGroup"]]),
   Evaluator->Automatic,
   Method->"Preemptive"],
  MouseAppearanceTag["LinkHand"]]], "ExerciseExpectedResult",
 Editable->False,
 Deletable->False,
 ShowCellBracket->False],

Cell[BoxData[
 FrameBox[
  TagBox[GridBox[{
     {
      PaneBox[
       InterpretationBox[Cell[BoxData[
         GraphicsBox[
          TagBox[RasterBox[CompressedData["
1:eJzVkKFuwzAQhq2NDE2T9gR7AePRwKFKncZCWi2pRrKqnTSFmhmGhQUFBQUZ
mRiFmISEBISYGASYBARk56RtopLhnmTr/Om/u//8sv1e+3cIoeMDXOvNr3M4
bML3J3h8BMevXeB9vgU/3s47vG7vAT7DeYRj8+GGotMFz7OcFZW6sL6tJ6bM
mSi+QjbweK+o6KG0yvCCCd2PSuZgUtt04NRByClMl0IxpnaAKX1Iibhy0Qoy
Kk3sIBzJCVaJixC52DJalSIDhPzUDG2MZ6XiU/lJCE2miGQLbxlb73saR8Qd
sSvNPLrvNIsszxu7U8lSEoY0YZJTWEp29o+6WV1Cb1q0S/M8hOEJaNgedgt5
pVrd5NQOTWv4JOLTvFaNSEGHqNC2o5LExSeXsAer7b45PRMUpnI5ou8MRP8P
uo34A0NFjtg=
            "], {{0, 19}, {14, 0}}, {0, 255},
            ColorFunction->RGBColor],
           BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
           Selectable->False],
          DefaultBaseStyle->"ImageGraphics",
          ImageSize->Magnification[1],
          ImageSizeRaw->{14, 19},
          PlotRange->{{0, 14}, {0, 19}}]], "ExerciseOutput",
         ImageSize->{18, 19},
         ImageMargins->{{0, 0}, {0, 0}},
         ImageRegion->{{0, 1}, {0, 1}},
         Magnification->1],
        Apply[TextCell, 
         Cell[
          BoxData[
           GraphicsBox[
            TagBox[
             RasterBox[CompressedData["
1:eJzVkKFuwzAQhq2NDE2T9gR7AePRwKFKncZCWi2pRrKqnTSFmhmGhQUFBQUZ
mRiFmISEBISYGASYBARk56RtopLhnmTr/Om/u//8sv1e+3cIoeMDXOvNr3M4
bML3J3h8BMevXeB9vgU/3s47vG7vAT7DeYRj8+GGotMFz7OcFZW6sL6tJ6bM
mSi+QjbweK+o6KG0yvCCCd2PSuZgUtt04NRByClMl0IxpnaAKX1Iibhy0Qoy
Kk3sIBzJCVaJixC52DJalSIDhPzUDG2MZ6XiU/lJCE2miGQLbxlb73saR8Qd
sSvNPLrvNIsszxu7U8lSEoY0YZJTWEp29o+6WV1Cb1q0S/M8hOEJaNgedgt5
pVrd5NQOTWv4JOLTvFaNSEGHqNC2o5LExSeXsAer7b45PRMUpnI5ou8MRP8P
uo34A0NFjtg=
              "], {{0, 19}, {14, 0}}, {0, 255}, ColorFunction -> 
              RGBColor], 
             BoxForm`ImageTag[
             "Byte", ColorSpace -> "RGB", Interleaving -> True], Selectable -> 
             False], DefaultBaseStyle -> "ImageGraphics", ImageSize -> 
            Magnification[1], ImageSizeRaw -> {14, 19}, 
            PlotRange -> {{0, 14}, {0, 19}}]], "ExerciseOutput", 
          Magnification -> 1, CellFrameColor -> GrayLevel[0], Selectable -> 
          False, Copyable -> False, Editable -> False, ShowCellBracket -> 
          False, CellLabel -> "Out[]=", CellFrame -> False]]],
       FrameMargins->{{10, 0}, {10, 12}},
       ImageMargins->0,
       ImageSize->Full], 
      ButtonBox[
       PaneBox[
        StyleBox["\[Times]",
         FontFamily->"MathematicaMono",
         FontSize->18,
         FontWeight->"Bold",
         FontColor->GrayLevel[0.75]],
        Alignment->Right,
        FrameMargins->{{0, 6}, {0, 0}},
        ImageMargins->0],
       Appearance->None,
       ButtonFunction:>(SelectionMove[
          ButtonNotebook[], All, ButtonCell, AutoScroll -> False]; 
        NotebookFind[
          EvaluationNotebook[], "Exercise", Previous, CellStyle, WrapAround -> 
          False, AutoScroll -> False]; FrontEndExecute[
          FrontEndToken[
           ButtonNotebook[], "OpenCloseGroup"]])]}
    },
    GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {Top}},
    GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
   "Grid"],
  FrameMargins->0,
  FrameStyle->GrayLevel[0.7],
  StripOnInput->False]], "ExerciseOutput",
 Editable->False,
 Selectable->False,
 Deletable->False,
 CellFrame->{{1, 1}, {1, 1}},
 ShowCellBracket->False,
 CellFrameMargins->{{0, 0}, {0, 0}},
 CellFrameColor->GrayLevel[1],
 LineBreakWithin->Automatic]
}, Closed]],

Cell[CellGroupData[{

Cell[BoxData[
 StyleBox[
  DynamicBox[ToBoxes[
    $CellContext`SolutionResponseText["5.7"], StandardForm],
   ImageSizeCache->{134., {3., 9.}}], "SolutionResponseText"]], "Subsection",
 Editable->False,
 Selectable->False,
 Deletable->False,
 ShowCellBracket->False,
 CellMargins->{{24, 25}, {3, 0}},
 CellFrameMargins->{{8, 0}, {0, 0}},
 TextAlignment->Right,
 ShowStringCharacters->False,
 FontFamily->"Source Sans Pro",
 FontSize->12,
 FontWeight->"Plain",
 FontSlant->"Plain",
 Background->GrayLevel[1]],

Cell[BoxData[
 ButtonBox[
  PaneBox[
   StyleBox[
    RowBox[{"[", " ", 
     RowBox[{"Click", " ", "to", " ", "enter", " ", "code"}], " ", "]"}],
    Selectable->False,
    StripOnInput->False,
    FontFamily->"Source Sans Pro",
    FontSize->14,
    FontWeight->Plain,
    FontColor->GrayLevel[0.6]],
   ImageSize->Full],
  Appearance->None,
  ButtonFunction:>(SelectionMove[
     InputNotebook[], All, ButtonCell]; NotebookWrite[
     InputNotebook[], 
     Cell[
      BoxData[""], "Input"]]; SelectionMove[
     InputNotebook[], Before, CellContents]; Null),
  Evaluator->Automatic,
  Method->"Preemptive"]], "Input",
 CellFrameLabels->{{None, None}, {None, None}},
 ShowSyntaxStyles->False,
 ShowStringCharacters->False,
 CellTags->"FirstInputCell"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 PaneBox["\[ThickSpace]",
  ImageSize->Full]], "CodeSectionDividerCloud",
 Editable->False,
 Selectable->False,
 Deletable->False,
 CellMargins->{{0, 0}, {0, 35}},
 CellBracketOptions->{"OverlapContent"->True}],

Cell["Encuentre el primer d\[IAcute]gito de 2^32.", "Exercise",
 Editable->False,
 Selectable->False,
 Deletable->False,
 CellDingbat->Cell[
  "5.8", "ExerciseNumber", FontColor -> 
   RGBColor[0.9019607843137255, 0.4117647058823529, 0.027450980392156862`]],
 ShowCellBracket->False,
 CounterAssignments->{{"SectionNumber", 5}, {"ExerciseNumber", 8}, {
   "WebOnly", 0}}],

Cell[CellGroupData[{

Cell[BoxData[
 TagBox[
  ButtonBox[
   StyleBox[
    RowBox[{"EXPECTED", " ", "OUTPUT", " ", "\[RightGuillemet]"}],
    FontFamily->"Source Sans Pro",
    FontSize->12,
    FontColor->GrayLevel[0.6]],
   Appearance->None,
   ButtonFunction:>(SelectionMove[
      ButtonNotebook[], All, ButtonCell, AutoScroll -> False]; FrontEndExecute[
      FrontEndToken[
       ButtonNotebook[], "OpenCloseGroup"]]),
   Evaluator->Automatic,
   Method->"Preemptive"],
  MouseAppearanceTag["LinkHand"]]], "ExerciseExpectedResult",
 Editable->False,
 Deletable->False,
 ShowCellBracket->False],

Cell[BoxData[
 FrameBox[
  TagBox[GridBox[{
     {
      PaneBox[
       InterpretationBox[Cell[BoxData[
         GraphicsBox[
          TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFAYiNmBGMT+T1vw7vrZsw/efUcWOjHRH2ivXucJuMj3O6sZwMB/xlmY2NNO
PQYGx5gYPQbHiVDBS/NjgGq2P3i61J9BDyz4+8FGoEjl9qdA9nxHBscZ10EM
kPEMBZ0TJ05s8oeYuvfBoaUzJs6YMREEOv31QILzDz1ActRvsPZLqI7/NMMR
qA5NkLYAAIm/U3w=
            "], {{0, 19}, {7, 0}}, {0, 255},
            ColorFunction->RGBColor],
           BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
           Selectable->False],
          DefaultBaseStyle->"ImageGraphics",
          ImageSize->Magnification[1],
          ImageSizeRaw->{7, 19},
          PlotRange->{{0, 7}, {0, 19}}]], "ExerciseOutput",
         ImageSize->{11, 19},
         ImageMargins->{{0, 0}, {0, 0}},
         ImageRegion->{{0, 1}, {0, 1}},
         Magnification->1],
        Apply[TextCell, 
         Cell[
          BoxData[
           GraphicsBox[
            TagBox[
             RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFAYiNmBGMT+T1vw7vrZsw/efUcWOjHRH2ivXucJuMj3O6sZwMB/xlmY2NNO
PQYGx5gYPQbHiVDBS/NjgGq2P3i61J9BDyz4+8FGoEjl9qdA9nxHBscZ10EM
kPEMBZ0TJ05s8oeYuvfBoaUzJs6YMREEOv31QILzDz1ActRvsPZLqI7/NMMR
qA5NkLYAAIm/U3w=
              "], {{0, 19}, {7, 0}}, {0, 255}, ColorFunction -> 
              RGBColor], 
             BoxForm`ImageTag[
             "Byte", ColorSpace -> "RGB", Interleaving -> True], Selectable -> 
             False], DefaultBaseStyle -> "ImageGraphics", ImageSize -> 
            Magnification[1], ImageSizeRaw -> {7, 19}, 
            PlotRange -> {{0, 7}, {0, 19}}]], "ExerciseOutput", Magnification -> 
          1, CellFrameColor -> GrayLevel[0], Selectable -> False, Copyable -> 
          False, Editable -> False, ShowCellBracket -> False, CellLabel -> 
          "Out[]=", CellFrame -> False]]],
       FrameMargins->{{10, 0}, {10, 12}},
       ImageMargins->0,
       ImageSize->Full], 
      ButtonBox[
       PaneBox[
        StyleBox["\[Times]",
         FontFamily->"MathematicaMono",
         FontSize->18,
         FontWeight->"Bold",
         FontColor->GrayLevel[0.75]],
        Alignment->Right,
        FrameMargins->{{0, 6}, {0, 0}},
        ImageMargins->0],
       Appearance->None,
       ButtonFunction:>(SelectionMove[
          ButtonNotebook[], All, ButtonCell, AutoScroll -> False]; 
        NotebookFind[
          EvaluationNotebook[], "Exercise", Previous, CellStyle, WrapAround -> 
          False, AutoScroll -> False]; FrontEndExecute[
          FrontEndToken[
           ButtonNotebook[], "OpenCloseGroup"]])]}
    },
    GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {Top}},
    GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
   "Grid"],
  FrameMargins->0,
  FrameStyle->GrayLevel[0.7],
  StripOnInput->False]], "ExerciseOutput",
 Editable->False,
 Selectable->False,
 Deletable->False,
 CellFrame->{{1, 1}, {1, 1}},
 ShowCellBracket->False,
 CellFrameMargins->{{0, 0}, {0, 0}},
 CellFrameColor->GrayLevel[1],
 LineBreakWithin->Automatic]
}, Closed]],

Cell[CellGroupData[{

Cell[BoxData[
 StyleBox[
  DynamicBox[ToBoxes[
    $CellContext`SolutionResponseText["5.8"], StandardForm],
   ImageSizeCache->{134., {3., 9.}}], "SolutionResponseText"]], "Subsection",
 Editable->False,
 Selectable->False,
 Deletable->False,
 ShowCellBracket->False,
 CellMargins->{{24, 25}, {3, 0}},
 CellFrameMargins->{{8, 0}, {0, 0}},
 TextAlignment->Right,
 ShowStringCharacters->False,
 FontFamily->"Source Sans Pro",
 FontSize->12,
 FontWeight->"Plain",
 FontSlant->"Plain",
 Background->GrayLevel[1]],

Cell[BoxData[
 ButtonBox[
  PaneBox[
   StyleBox[
    RowBox[{"[", " ", 
     RowBox[{"Click", " ", "to", " ", "enter", " ", "code"}], " ", "]"}],
    Selectable->False,
    StripOnInput->False,
    FontFamily->"Source Sans Pro",
    FontSize->14,
    FontWeight->Plain,
    FontColor->GrayLevel[0.6]],
   ImageSize->Full],
  Appearance->None,
  ButtonFunction:>(SelectionMove[
     InputNotebook[], All, ButtonCell]; NotebookWrite[
     InputNotebook[], 
     Cell[
      BoxData[""], "Input"]]; SelectionMove[
     InputNotebook[], Before, CellContents]; Null),
  Evaluator->Automatic,
  Method->"Preemptive"]], "Input",
 CellFrameLabels->{{None, None}, {None, None}},
 ShowSyntaxStyles->False,
 ShowStringCharacters->False,
 CellTags->"FirstInputCell"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 PaneBox["\[ThickSpace]",
  ImageSize->Full]], "CodeSectionDividerCloud",
 Editable->False,
 Selectable->False,
 Deletable->False,
 CellMargins->{{0, 0}, {0, 35}},
 CellBracketOptions->{"OverlapContent"->True}],

Cell["Encuentre los 10 primeros d\[IAcute]gitos en 2^100.", "Exercise",
 Editable->False,
 Selectable->False,
 Deletable->False,
 CellDingbat->Cell[
  "5.9", "ExerciseNumber", FontColor -> 
   RGBColor[0.9019607843137255, 0.4117647058823529, 0.027450980392156862`]],
 ShowCellBracket->False,
 CounterAssignments->{{"SectionNumber", 5}, {"ExerciseNumber", 9}, {
   "WebOnly", 0}}],

Cell[CellGroupData[{

Cell[BoxData[
 TagBox[
  ButtonBox[
   StyleBox[
    RowBox[{"EXPECTED", " ", "OUTPUT", " ", "\[RightGuillemet]"}],
    FontFamily->"Source Sans Pro",
    FontSize->12,
    FontColor->GrayLevel[0.6]],
   Appearance->None,
   ButtonFunction:>(SelectionMove[
      ButtonNotebook[], All, ButtonCell, AutoScroll -> False]; FrontEndExecute[
      FrontEndToken[
       ButtonNotebook[], "OpenCloseGroup"]]),
   Evaluator->Automatic,
   Method->"Preemptive"],
  MouseAppearanceTag["LinkHand"]]], "ExerciseExpectedResult",
 Editable->False,
 Deletable->False,
 ShowCellBracket->False],

Cell[BoxData[
 FrameBox[
  TagBox[GridBox[{
     {
      PaneBox[
       InterpretationBox[Cell[BoxData[
         GraphicsBox[
          TagBox[RasterBox[CompressedData["
1:eJztWK+v2zoUjvbI4KT9Be8fCB41HKq0p8dKNu1mGrmL7iY9lUYjgWFhQUFB
QUEhRSYhJiYBJiEBASEGBnfnOO1tutqp7+1jy5Faue3n79jnd/r3p28fglee
531/DW8fPv5HHh4+7v55Ax/+vf/+9cv93ef39z/uvtw9vPv0F3z5Fl4/4YXr
x1VWWWWVVVZxlaGKA98PmZw+ji1jYlRLO8aOVmVRlJT3y9RqEHtAlhXvpREg
e8HORViQLmwA6fiMiwsr1+OjaOoiL+pG3HiFZ7Gdw8Y8IGQb0f5g7ZGl0MSD
uOzUY1vsPC0xHWxsAyt8jZnew4LbkCPPvZnk3HAXlhDvXPykeTEboBJ/jiLN
aD5bk26f7rDNzBqdlbqyXcAUrzL4yo/pQV2TeF4y6RB1HoUbQKaN1RdtDrvj
Tm/NA/SbJTcGbeZdi9RDEaeWeyglFQisWAaqNxbrObKNKfE2GUPaA6sRRYFs
k6LRKPJumJnNTakjmwXG4dZ+MplbMvTFzAAcLJLYfQGkw7GCDTSG2KMm66mu
1PlliUvDBg4+3ubmLHNm6+FAKV8ssHhlLAX1FENd5eF9DcyOSh3ZbDAG0eOn
0waM86Nf9J6GXPHFSRr0b9SZftLpttlzyMIsyys+XLGPKCDHgtaCcmUbG8xq
fxsGQZTkvDfDWtR1TGfVBhbrOSp1ZLPBuLY/rIa2DiGyj/UKxdkXSmDYBJZI
ntoQAnbRFiskqZf6vIBGpWuLWVzZVBsRP4izqsoDhG2MfQ9D6BiKcOGMeCQ1
qHZU6shmg6m2wOwreax7ST0/sKMvBop9aJvbEni6SCmmWGrDRVNPOZu31kHl
eWyHE+59yxCCIXoqBQLYYtN9HZU6stlhMtXdXA08gkVUn/Yohv2CLRbJnmLT
JslCpOvy6O8PukdQZxuQ8GQVpMXW0kCfxTZr17pXGs0i+Yytr3FWMd3XUakr
mwUmeQbrjGKlbwsI8MlfEp4s2B5/2uV7mNM7iS1153skqp7sJLtaT2ZeWjes
aSilLRTSCxjEeoSJk/K+b/SonPHRBEM5z1+DUke2EgtuRNuuF02Cp/SrznQ2
Xa6hvIpeZLgKxQ1KXdmMsEO/TifYaY6SuvHNBJuLZPpOp0GLpb+hdB24gKHy
o9e0c5tJ2SXswElmvngp2yj2u9PpSEZ7G9vIi+ODDSnb8Ral7mwG2PkcpaeF
eKEkYeLMg/Z5MDWCSHUN9n+yKQkYOR96zGwKhvNh/gfDTVdwZLuA8ZQ8xeFU
r0iQCtPI1lUhdlV2pZWvsBfBJM12uvE2p2/yGOZxy0Nlv/AH0Qq7DSarOAyj
rL1aJlZZ5U+VX9ENewE=
            "], {{0, 19}, {132, 0}}, {0, 255},
            ColorFunction->RGBColor],
           BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
           Selectable->False],
          DefaultBaseStyle->"ImageGraphics",
          ImageSize->Magnification[1],
          ImageSizeRaw->{132, 19},
          PlotRange->{{0, 132}, {0, 19}}]], "ExerciseOutput",
         ImageSize->{136, 19},
         ImageMargins->{{0, 0}, {0, 0}},
         ImageRegion->{{0, 1}, {0, 1}},
         Magnification->1],
        Apply[TextCell, 
         Cell[
          BoxData[
           GraphicsBox[
            TagBox[
             RasterBox[CompressedData["
1:eJztWK+v2zoUjvbI4KT9Be8fCB41HKq0p8dKNu1mGrmL7iY9lUYjgWFhQUFB
QUEhRSYhJiYBJiEBASEGBnfnOO1tutqp7+1jy5Faue3n79jnd/r3p28fglee
531/DW8fPv5HHh4+7v55Ax/+vf/+9cv93ef39z/uvtw9vPv0F3z5Fl4/4YXr
x1VWWWWVVVZxlaGKA98PmZw+ji1jYlRLO8aOVmVRlJT3y9RqEHtAlhXvpREg
e8HORViQLmwA6fiMiwsr1+OjaOoiL+pG3HiFZ7Gdw8Y8IGQb0f5g7ZGl0MSD
uOzUY1vsPC0xHWxsAyt8jZnew4LbkCPPvZnk3HAXlhDvXPykeTEboBJ/jiLN
aD5bk26f7rDNzBqdlbqyXcAUrzL4yo/pQV2TeF4y6RB1HoUbQKaN1RdtDrvj
Tm/NA/SbJTcGbeZdi9RDEaeWeyglFQisWAaqNxbrObKNKfE2GUPaA6sRRYFs
k6LRKPJumJnNTakjmwXG4dZ+MplbMvTFzAAcLJLYfQGkw7GCDTSG2KMm66mu
1PlliUvDBg4+3ubmLHNm6+FAKV8ssHhlLAX1FENd5eF9DcyOSh3ZbDAG0eOn
0waM86Nf9J6GXPHFSRr0b9SZftLpttlzyMIsyys+XLGPKCDHgtaCcmUbG8xq
fxsGQZTkvDfDWtR1TGfVBhbrOSp1ZLPBuLY/rIa2DiGyj/UKxdkXSmDYBJZI
ntoQAnbRFiskqZf6vIBGpWuLWVzZVBsRP4izqsoDhG2MfQ9D6BiKcOGMeCQ1
qHZU6shmg6m2wOwreax7ST0/sKMvBop9aJvbEni6SCmmWGrDRVNPOZu31kHl
eWyHE+59yxCCIXoqBQLYYtN9HZU6stlhMtXdXA08gkVUn/Yohv2CLRbJnmLT
JslCpOvy6O8PukdQZxuQ8GQVpMXW0kCfxTZr17pXGs0i+Yytr3FWMd3XUakr
mwUmeQbrjGKlbwsI8MlfEp4s2B5/2uV7mNM7iS1153skqp7sJLtaT2ZeWjes
aSilLRTSCxjEeoSJk/K+b/SonPHRBEM5z1+DUke2EgtuRNuuF02Cp/SrznQ2
Xa6hvIpeZLgKxQ1KXdmMsEO/TifYaY6SuvHNBJuLZPpOp0GLpb+hdB24gKHy
o9e0c5tJ2SXswElmvngp2yj2u9PpSEZ7G9vIi+ODDSnb8Ral7mwG2PkcpaeF
eKEkYeLMg/Z5MDWCSHUN9n+yKQkYOR96zGwKhvNh/gfDTVdwZLuA8ZQ8xeFU
r0iQCtPI1lUhdlV2pZWvsBfBJM12uvE2p2/yGOZxy0Nlv/AH0Qq7DSarOAyj
rL1aJlZZ5U+VX9ENewE=
              "], {{0, 19}, {132, 0}}, {0, 255}, 
              ColorFunction -> RGBColor], 
             BoxForm`ImageTag[
             "Byte", ColorSpace -> "RGB", Interleaving -> True], Selectable -> 
             False], DefaultBaseStyle -> "ImageGraphics", ImageSize -> 
            Magnification[1], ImageSizeRaw -> {132, 19}, 
            PlotRange -> {{0, 132}, {0, 19}}]], "ExerciseOutput", 
          Magnification -> 1, CellFrameColor -> GrayLevel[0], Selectable -> 
          False, Copyable -> False, Editable -> False, ShowCellBracket -> 
          False, CellLabel -> "Out[]=", CellFrame -> False]]],
       FrameMargins->{{10, 0}, {10, 12}},
       ImageMargins->0,
       ImageSize->Full], 
      ButtonBox[
       PaneBox[
        StyleBox["\[Times]",
         FontFamily->"MathematicaMono",
         FontSize->18,
         FontWeight->"Bold",
         FontColor->GrayLevel[0.75]],
        Alignment->Right,
        FrameMargins->{{0, 6}, {0, 0}},
        ImageMargins->0],
       Appearance->None,
       ButtonFunction:>(SelectionMove[
          ButtonNotebook[], All, ButtonCell, AutoScroll -> False]; 
        NotebookFind[
          EvaluationNotebook[], "Exercise", Previous, CellStyle, WrapAround -> 
          False, AutoScroll -> False]; FrontEndExecute[
          FrontEndToken[
           ButtonNotebook[], "OpenCloseGroup"]])]}
    },
    GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {Top}},
    GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
   "Grid"],
  FrameMargins->0,
  FrameStyle->GrayLevel[0.7],
  StripOnInput->False]], "ExerciseOutput",
 Editable->False,
 Selectable->False,
 Deletable->False,
 CellFrame->{{1, 1}, {1, 1}},
 ShowCellBracket->False,
 CellFrameMargins->{{0, 0}, {0, 0}},
 CellFrameColor->GrayLevel[1],
 LineBreakWithin->Automatic]
}, Closed]],

Cell[CellGroupData[{

Cell[BoxData[
 StyleBox[
  DynamicBox[ToBoxes[
    $CellContext`SolutionResponseText["5.9"], StandardForm],
   ImageSizeCache->{134., {3., 9.}}], "SolutionResponseText"]], "Subsection",
 Editable->False,
 Selectable->False,
 Deletable->False,
 ShowCellBracket->False,
 CellMargins->{{24, 25}, {3, 0}},
 CellFrameMargins->{{8, 0}, {0, 0}},
 TextAlignment->Right,
 ShowStringCharacters->False,
 FontFamily->"Source Sans Pro",
 FontSize->12,
 FontWeight->"Plain",
 FontSlant->"Plain",
 Background->GrayLevel[1]],

Cell[BoxData[
 ButtonBox[
  PaneBox[
   StyleBox[
    RowBox[{"[", " ", 
     RowBox[{"Click", " ", "to", " ", "enter", " ", "code"}], " ", "]"}],
    Selectable->False,
    StripOnInput->False,
    FontFamily->"Source Sans Pro",
    FontSize->14,
    FontWeight->Plain,
    FontColor->GrayLevel[0.6]],
   ImageSize->Full],
  Appearance->None,
  ButtonFunction:>(SelectionMove[
     InputNotebook[], All, ButtonCell]; NotebookWrite[
     InputNotebook[], 
     Cell[
      BoxData[""], "Input"]]; SelectionMove[
     InputNotebook[], Before, CellContents]; Null),
  Evaluator->Automatic,
  Method->"Preemptive"]], "Input",
 CellFrameLabels->{{None, None}, {None, None}},
 ShowSyntaxStyles->False,
 ShowStringCharacters->False,
 CellTags->"FirstInputCell"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 PaneBox["\[ThickSpace]",
  ImageSize->Full]], "CodeSectionDividerCloud",
 Editable->False,
 Selectable->False,
 Deletable->False,
 CellMargins->{{0, 0}, {0, 35}},
 CellBracketOptions->{"OverlapContent"->True}],

Cell["Encuentre el mayor de los d\[IAcute]gitos en 2^20.", "Exercise",
 Editable->False,
 Selectable->False,
 Deletable->False,
 CellDingbat->Cell[
  "5.10", "ExerciseNumber", FontColor -> 
   RGBColor[0.9019607843137255, 0.4117647058823529, 0.027450980392156862`]],
 ShowCellBracket->False,
 CounterAssignments->{{"SectionNumber", 5}, {"ExerciseNumber", 10}, {
   "WebOnly", 0}}],

Cell[CellGroupData[{

Cell[BoxData[
 TagBox[
  ButtonBox[
   StyleBox[
    RowBox[{"EXPECTED", " ", "OUTPUT", " ", "\[RightGuillemet]"}],
    FontFamily->"Source Sans Pro",
    FontSize->12,
    FontColor->GrayLevel[0.6]],
   Appearance->None,
   ButtonFunction:>(SelectionMove[
      ButtonNotebook[], All, ButtonCell, AutoScroll -> False]; FrontEndExecute[
      FrontEndToken[
       ButtonNotebook[], "OpenCloseGroup"]]),
   Evaluator->Automatic,
   Method->"Preemptive"],
  MouseAppearanceTag["LinkHand"]]], "ExerciseExpectedResult",
 Editable->False,
 Deletable->False,
 ShowCellBracket->False],

Cell[BoxData[
 FrameBox[
  TagBox[GridBox[{
     {
      PaneBox[
       InterpretationBox[Cell[BoxData[
         GraphicsBox[
          TagBox[RasterBox[CompressedData["
1:eJy1Ty0PwjAUbECAJOEX8AemsZWoJRAchoWVYAYZJGQWNzk3NzWFqkLNTNXM
zMxMzGAmJmoqKsY1fPwDLnkv9+7yeq8z57hkA0LIeYy23F6p72+D1QTD2jsf
9p67W3gXd+/6c2cIcYoaoQzv/4ZnKfj9/hCV+ggqCykSqW06OXGjS4Hhlj1B
OxERYgkJsYAY5J1Z0iV9i32bbOCzrGpEwuA32vgNP5Ev7LQ2MVUCnpatlnUa
2OC80UVkEZrozyVdiDOios1ucENedlLWeWy4aBGZx+z3Jotz/fuSVkpKqfr/
4QVAAkPb
            "], {{0, 19}, {7, 0}}, {0, 255},
            ColorFunction->RGBColor],
           BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
           Selectable->False],
          DefaultBaseStyle->"ImageGraphics",
          ImageSize->Magnification[1],
          ImageSizeRaw->{7, 19},
          PlotRange->{{0, 7}, {0, 19}}]], "ExerciseOutput",
         ImageSize->{11, 19},
         ImageMargins->{{0, 0}, {0, 0}},
         ImageRegion->{{0, 1}, {0, 1}},
         Magnification->1],
        Apply[TextCell, 
         Cell[
          BoxData[
           GraphicsBox[
            TagBox[
             RasterBox[CompressedData["
1:eJy1Ty0PwjAUbECAJOEX8AemsZWoJRAchoWVYAYZJGQWNzk3NzWFqkLNTNXM
zMxMzGAmJmoqKsY1fPwDLnkv9+7yeq8z57hkA0LIeYy23F6p72+D1QTD2jsf
9p67W3gXd+/6c2cIcYoaoQzv/4ZnKfj9/hCV+ggqCykSqW06OXGjS4Hhlj1B
OxERYgkJsYAY5J1Z0iV9i32bbOCzrGpEwuA32vgNP5Ev7LQ2MVUCnpatlnUa
2OC80UVkEZrozyVdiDOios1ucENedlLWeWy4aBGZx+z3Jotz/fuSVkpKqfr/
4QVAAkPb
              "], {{0, 19}, {7, 0}}, {0, 255}, ColorFunction -> 
              RGBColor], 
             BoxForm`ImageTag[
             "Byte", ColorSpace -> "RGB", Interleaving -> True], Selectable -> 
             False], DefaultBaseStyle -> "ImageGraphics", ImageSize -> 
            Magnification[1], ImageSizeRaw -> {7, 19}, 
            PlotRange -> {{0, 7}, {0, 19}}]], "ExerciseOutput", Magnification -> 
          1, CellFrameColor -> GrayLevel[0], Selectable -> False, Copyable -> 
          False, Editable -> False, ShowCellBracket -> False, CellLabel -> 
          "Out[]=", CellFrame -> False]]],
       FrameMargins->{{10, 0}, {10, 12}},
       ImageMargins->0,
       ImageSize->Full], 
      ButtonBox[
       PaneBox[
        StyleBox["\[Times]",
         FontFamily->"MathematicaMono",
         FontSize->18,
         FontWeight->"Bold",
         FontColor->GrayLevel[0.75]],
        Alignment->Right,
        FrameMargins->{{0, 6}, {0, 0}},
        ImageMargins->0],
       Appearance->None,
       ButtonFunction:>(SelectionMove[
          ButtonNotebook[], All, ButtonCell, AutoScroll -> False]; 
        NotebookFind[
          EvaluationNotebook[], "Exercise", Previous, CellStyle, WrapAround -> 
          False, AutoScroll -> False]; FrontEndExecute[
          FrontEndToken[
           ButtonNotebook[], "OpenCloseGroup"]])]}
    },
    GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {Top}},
    GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
   "Grid"],
  FrameMargins->0,
  FrameStyle->GrayLevel[0.7],
  StripOnInput->False]], "ExerciseOutput",
 Editable->False,
 Selectable->False,
 Deletable->False,
 CellFrame->{{1, 1}, {1, 1}},
 ShowCellBracket->False,
 CellFrameMargins->{{0, 0}, {0, 0}},
 CellFrameColor->GrayLevel[1],
 LineBreakWithin->Automatic]
}, Closed]],

Cell[CellGroupData[{

Cell[BoxData[
 StyleBox[
  DynamicBox[ToBoxes[
    $CellContext`SolutionResponseText["5.10"], StandardForm],
   ImageSizeCache->{140., {3., 9.}}], "SolutionResponseText"]], "Subsection",
 Editable->False,
 Selectable->False,
 Deletable->False,
 ShowCellBracket->False,
 CellMargins->{{24, 25}, {3, 0}},
 CellFrameMargins->{{8, 0}, {0, 0}},
 TextAlignment->Right,
 ShowStringCharacters->False,
 FontFamily->"Source Sans Pro",
 FontSize->12,
 FontWeight->"Plain",
 FontSlant->"Plain",
 Background->GrayLevel[1]],

Cell[BoxData[
 ButtonBox[
  PaneBox[
   StyleBox[
    RowBox[{"[", " ", 
     RowBox[{"Click", " ", "to", " ", "enter", " ", "code"}], " ", "]"}],
    Selectable->False,
    StripOnInput->False,
    FontFamily->"Source Sans Pro",
    FontSize->14,
    FontWeight->Plain,
    FontColor->GrayLevel[0.6]],
   ImageSize->Full],
  Appearance->None,
  ButtonFunction:>(SelectionMove[
     InputNotebook[], All, ButtonCell]; NotebookWrite[
     InputNotebook[], 
     Cell[
      BoxData[""], "Input"]]; SelectionMove[
     InputNotebook[], Before, CellContents]; Null),
  Evaluator->Automatic,
  Method->"Preemptive"]], "Input",
 CellFrameLabels->{{None, None}, {None, None}},
 ShowSyntaxStyles->False,
 ShowStringCharacters->False,
 CellTags->"FirstInputCell"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 PaneBox["\[ThickSpace]",
  ImageSize->Full]], "CodeSectionDividerCloud",
 Editable->False,
 Selectable->False,
 Deletable->False,
 CellMargins->{{0, 0}, {0, 35}},
 CellBracketOptions->{"OverlapContent"->True}],

Cell["\<\
Encuentre cu\[AAcute]ntos ceros hay en los d\[IAcute]gitos de 2^1\
\[VeryThinSpace]000.\
\>", "Exercise",
 Editable->False,
 Selectable->False,
 Deletable->False,
 CellDingbat->Cell[
  "5.11", "ExerciseNumber", FontColor -> 
   RGBColor[0.9019607843137255, 0.4117647058823529, 0.027450980392156862`]],
 ShowCellBracket->False,
 CounterAssignments->{{"SectionNumber", 5}, {"ExerciseNumber", 11}, {
   "WebOnly", 0}}],

Cell[CellGroupData[{

Cell[BoxData[
 TagBox[
  ButtonBox[
   StyleBox[
    RowBox[{"EXPECTED", " ", "OUTPUT", " ", "\[RightGuillemet]"}],
    FontFamily->"Source Sans Pro",
    FontSize->12,
    FontColor->GrayLevel[0.6]],
   Appearance->None,
   ButtonFunction:>(SelectionMove[
      ButtonNotebook[], All, ButtonCell, AutoScroll -> False]; FrontEndExecute[
      FrontEndToken[
       ButtonNotebook[], "OpenCloseGroup"]]),
   Evaluator->Automatic,
   Method->"Preemptive"],
  MouseAppearanceTag["LinkHand"]]], "ExerciseExpectedResult",
 Editable->False,
 Deletable->False,
 ShowCellBracket->False],

Cell[BoxData[
 FrameBox[
  TagBox[GridBox[{
     {
      PaneBox[
       InterpretationBox[Cell[BoxData[
         GraphicsBox[
          TagBox[RasterBox[CompressedData["
1:eJzVUC1vwzAQPW1kaJq0X7A/EDxqOBSp01hJqzXVSFe1k6bSMEOzsqGgoKCg
kCITE5MQgxKTAAMPBBh0Z7tVP8Dw9iQ756d39+7lYfw+yK4AYHmD12D0SRaL
0er5Dh8vs+XbdDZ5fZp9TKaTxeP4Gsl7PLd4fL37R7Ca11VZVrztjqQzYlMj
KbYmEkaWCXjEe162nu3bVeBS4j95s0VOFUMAqsPoIkOa4lwrGADhYViDPQkL
pTXW7edz6gU2KvO4SuelzJzvKxia5Tjf6RorMi+UlpQAoZtTmdtW6J0VbQz5
FTaMCZqToGiM68KwsOG1yRNIqOpd19ZzjJrkOso67qMQdmg1LIG0UHsvyeLy
vW6GwWPdCCkE51yZ79J3Zo3qrNU1TdFM9ju5TuEcFP9Or+iRTkt5Ef0SrrcI
97vo7+EHKe+J3A==
            "], {{0, 19}, {14, 0}}, {0, 255},
            ColorFunction->RGBColor],
           BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
           Selectable->False],
          DefaultBaseStyle->"ImageGraphics",
          ImageSize->Magnification[1],
          ImageSizeRaw->{14, 19},
          PlotRange->{{0, 14}, {0, 19}}]], "ExerciseOutput",
         ImageSize->{18, 19},
         ImageMargins->{{0, 0}, {0, 0}},
         ImageRegion->{{0, 1}, {0, 1}},
         Magnification->1],
        Apply[TextCell, 
         Cell[
          BoxData[
           GraphicsBox[
            TagBox[
             RasterBox[CompressedData["
1:eJzVUC1vwzAQPW1kaJq0X7A/EDxqOBSp01hJqzXVSFe1k6bSMEOzsqGgoKCg
kCITE5MQgxKTAAMPBBh0Z7tVP8Dw9iQ756d39+7lYfw+yK4AYHmD12D0SRaL
0er5Dh8vs+XbdDZ5fZp9TKaTxeP4Gsl7PLd4fL37R7Ca11VZVrztjqQzYlMj
KbYmEkaWCXjEe162nu3bVeBS4j95s0VOFUMAqsPoIkOa4lwrGADhYViDPQkL
pTXW7edz6gU2KvO4SuelzJzvKxia5Tjf6RorMi+UlpQAoZtTmdtW6J0VbQz5
FTaMCZqToGiM68KwsOG1yRNIqOpd19ZzjJrkOso67qMQdmg1LIG0UHsvyeLy
vW6GwWPdCCkE51yZ79J3Zo3qrNU1TdFM9ju5TuEcFP9Or+iRTkt5Ef0SrrcI
97vo7+EHKe+J3A==
              "], {{0, 19}, {14, 0}}, {0, 255}, 
              ColorFunction -> RGBColor], 
             BoxForm`ImageTag[
             "Byte", ColorSpace -> "RGB", Interleaving -> True], Selectable -> 
             False], DefaultBaseStyle -> "ImageGraphics", ImageSize -> 
            Magnification[1], ImageSizeRaw -> {14, 19}, 
            PlotRange -> {{0, 14}, {0, 19}}]], "ExerciseOutput", 
          Magnification -> 1, CellFrameColor -> GrayLevel[0], Selectable -> 
          False, Copyable -> False, Editable -> False, ShowCellBracket -> 
          False, CellLabel -> "Out[]=", CellFrame -> False]]],
       FrameMargins->{{10, 0}, {10, 12}},
       ImageMargins->0,
       ImageSize->Full], 
      ButtonBox[
       PaneBox[
        StyleBox["\[Times]",
         FontFamily->"MathematicaMono",
         FontSize->18,
         FontWeight->"Bold",
         FontColor->GrayLevel[0.75]],
        Alignment->Right,
        FrameMargins->{{0, 6}, {0, 0}},
        ImageMargins->0],
       Appearance->None,
       ButtonFunction:>(SelectionMove[
          ButtonNotebook[], All, ButtonCell, AutoScroll -> False]; 
        NotebookFind[
          EvaluationNotebook[], "Exercise", Previous, CellStyle, WrapAround -> 
          False, AutoScroll -> False]; FrontEndExecute[
          FrontEndToken[
           ButtonNotebook[], "OpenCloseGroup"]])]}
    },
    GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {Top}},
    GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
   "Grid"],
  FrameMargins->0,
  FrameStyle->GrayLevel[0.7],
  StripOnInput->False]], "ExerciseOutput",
 Editable->False,
 Selectable->False,
 Deletable->False,
 CellFrame->{{1, 1}, {1, 1}},
 ShowCellBracket->False,
 CellFrameMargins->{{0, 0}, {0, 0}},
 CellFrameColor->GrayLevel[1],
 LineBreakWithin->Automatic]
}, Closed]],

Cell[CellGroupData[{

Cell[BoxData[
 StyleBox[
  DynamicBox[ToBoxes[
    $CellContext`SolutionResponseText["5.11"], StandardForm],
   ImageSizeCache->{140., {3., 9.}}], "SolutionResponseText"]], "Subsection",
 Editable->False,
 Selectable->False,
 Deletable->False,
 ShowCellBracket->False,
 CellMargins->{{24, 25}, {3, 0}},
 CellFrameMargins->{{8, 0}, {0, 0}},
 TextAlignment->Right,
 ShowStringCharacters->False,
 FontFamily->"Source Sans Pro",
 FontSize->12,
 FontWeight->"Plain",
 FontSlant->"Plain",
 Background->GrayLevel[1]],

Cell[BoxData[
 ButtonBox[
  PaneBox[
   StyleBox[
    RowBox[{"[", " ", 
     RowBox[{"Click", " ", "to", " ", "enter", " ", "code"}], " ", "]"}],
    Selectable->False,
    StripOnInput->False,
    FontFamily->"Source Sans Pro",
    FontSize->14,
    FontWeight->Plain,
    FontColor->GrayLevel[0.6]],
   ImageSize->Full],
  Appearance->None,
  ButtonFunction:>(SelectionMove[
     InputNotebook[], All, ButtonCell]; NotebookWrite[
     InputNotebook[], 
     Cell[
      BoxData[""], "Input"]]; SelectionMove[
     InputNotebook[], Before, CellContents]; Null),
  Evaluator->Automatic,
  Method->"Preemptive"]], "Input",
 CellFrameLabels->{{None, None}, {None, None}},
 ShowSyntaxStyles->False,
 ShowStringCharacters->False,
 CellTags->"FirstInputCell"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 PaneBox["\[ThickSpace]",
  ImageSize->Full]], "CodeSectionDividerCloud",
 Editable->False,
 Selectable->False,
 Deletable->False,
 CellMargins->{{0, 0}, {0, 35}},
 CellBracketOptions->{"OverlapContent"->True}],

Cell[TextData[{
 "Use ",
 StyleBox["Part",
  FontFamily->"Source Sans Pro"],
 ", ",
 StyleBox["Sort",
  FontFamily->"Source Sans Pro"],
 " e ",
 StyleBox["IntegerDigits",
  FontFamily->"Source Sans Pro"],
 " para encontrar el segundo menor de los d\[IAcute]gitos en 2^20."
}], "Exercise",
 Editable->False,
 Selectable->False,
 Deletable->False,
 CellDingbat->Cell[
  "5.12", "ExerciseNumber", FontColor -> 
   RGBColor[0.9019607843137255, 0.4117647058823529, 0.027450980392156862`]],
 ShowCellBracket->False,
 CounterAssignments->{{"SectionNumber", 5}, {"ExerciseNumber", 12}, {
   "WebOnly", 0}}],

Cell[CellGroupData[{

Cell[BoxData[
 TagBox[
  ButtonBox[
   StyleBox[
    RowBox[{"EXPECTED", " ", "OUTPUT", " ", "\[RightGuillemet]"}],
    FontFamily->"Source Sans Pro",
    FontSize->12,
    FontColor->GrayLevel[0.6]],
   Appearance->None,
   ButtonFunction:>(SelectionMove[
      ButtonNotebook[], All, ButtonCell, AutoScroll -> False]; FrontEndExecute[
      FrontEndToken[
       ButtonNotebook[], "OpenCloseGroup"]]),
   Evaluator->Automatic,
   Method->"Preemptive"],
  MouseAppearanceTag["LinkHand"]]], "ExerciseExpectedResult",
 Editable->False,
 Deletable->False,
 ShowCellBracket->False],

Cell[BoxData[
 FrameBox[
  TagBox[GridBox[{
     {
      PaneBox[
       InterpretationBox[Cell[BoxData[
         GraphicsBox[
          TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFAYiNmBGMT+T0Pw6c6lSw8+/Ybz76yuZACDzhPv4IIP9i5tKvAHCs44+w5V
+3Wg6EQ0we9nHSkR/H0JZOalT3BFQBdeOjQfaHvl0kPXL116+h2k0Z8BBUw8
++k/vQAApzZj0w==
            "], {{0, 19}, {7, 0}}, {0, 255},
            ColorFunction->RGBColor],
           BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
           Selectable->False],
          DefaultBaseStyle->"ImageGraphics",
          ImageSize->Magnification[1],
          ImageSizeRaw->{7, 19},
          PlotRange->{{0, 7}, {0, 19}}]], "ExerciseOutput",
         ImageSize->{11, 19},
         ImageMargins->{{0, 0}, {0, 0}},
         ImageRegion->{{0, 1}, {0, 1}},
         Magnification->1],
        Apply[TextCell, 
         Cell[
          BoxData[
           GraphicsBox[
            TagBox[
             RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFAYiNmBGMT+T0Pw6c6lSw8+/Ybz76yuZACDzhPv4IIP9i5tKvAHCs44+w5V
+3Wg6EQ0we9nHSkR/H0JZOalT3BFQBdeOjQfaHvl0kPXL116+h2k0Z8BBUw8
++k/vQAApzZj0w==
              "], {{0, 19}, {7, 0}}, {0, 255}, ColorFunction -> 
              RGBColor], 
             BoxForm`ImageTag[
             "Byte", ColorSpace -> "RGB", Interleaving -> True], Selectable -> 
             False], DefaultBaseStyle -> "ImageGraphics", ImageSize -> 
            Magnification[1], ImageSizeRaw -> {7, 19}, 
            PlotRange -> {{0, 7}, {0, 19}}]], "ExerciseOutput", Magnification -> 
          1, CellFrameColor -> GrayLevel[0], Selectable -> False, Copyable -> 
          False, Editable -> False, ShowCellBracket -> False, CellLabel -> 
          "Out[]=", CellFrame -> False]]],
       FrameMargins->{{10, 0}, {10, 12}},
       ImageMargins->0,
       ImageSize->Full], 
      ButtonBox[
       PaneBox[
        StyleBox["\[Times]",
         FontFamily->"MathematicaMono",
         FontSize->18,
         FontWeight->"Bold",
         FontColor->GrayLevel[0.75]],
        Alignment->Right,
        FrameMargins->{{0, 6}, {0, 0}},
        ImageMargins->0],
       Appearance->None,
       ButtonFunction:>(SelectionMove[
          ButtonNotebook[], All, ButtonCell, AutoScroll -> False]; 
        NotebookFind[
          EvaluationNotebook[], "Exercise", Previous, CellStyle, WrapAround -> 
          False, AutoScroll -> False]; FrontEndExecute[
          FrontEndToken[
           ButtonNotebook[], "OpenCloseGroup"]])]}
    },
    GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {Top}},
    GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
   "Grid"],
  FrameMargins->0,
  FrameStyle->GrayLevel[0.7],
  StripOnInput->False]], "ExerciseOutput",
 Editable->False,
 Selectable->False,
 Deletable->False,
 CellFrame->{{1, 1}, {1, 1}},
 ShowCellBracket->False,
 CellFrameMargins->{{0, 0}, {0, 0}},
 CellFrameColor->GrayLevel[1],
 LineBreakWithin->Automatic]
}, Closed]],

Cell[CellGroupData[{

Cell[BoxData[
 StyleBox[
  DynamicBox[ToBoxes[
    $CellContext`SolutionResponseText["5.12"], StandardForm],
   ImageSizeCache->{140., {3., 9.}}], "SolutionResponseText"]], "Subsection",
 Editable->False,
 Selectable->False,
 Deletable->False,
 ShowCellBracket->False,
 CellMargins->{{24, 25}, {3, 0}},
 CellFrameMargins->{{8, 0}, {0, 0}},
 TextAlignment->Right,
 ShowStringCharacters->False,
 FontFamily->"Source Sans Pro",
 FontSize->12,
 FontWeight->"Plain",
 FontSlant->"Plain",
 Background->GrayLevel[1]],

Cell[BoxData[
 ButtonBox[
  PaneBox[
   StyleBox[
    RowBox[{"[", " ", 
     RowBox[{"Click", " ", "to", " ", "enter", " ", "code"}], " ", "]"}],
    Selectable->False,
    StripOnInput->False,
    FontFamily->"Source Sans Pro",
    FontSize->14,
    FontWeight->Plain,
    FontColor->GrayLevel[0.6]],
   ImageSize->Full],
  Appearance->None,
  ButtonFunction:>(SelectionMove[
     InputNotebook[], All, ButtonCell]; NotebookWrite[
     InputNotebook[], 
     Cell[
      BoxData[""], "Input"]]; SelectionMove[
     InputNotebook[], Before, CellContents]; Null),
  Evaluator->Automatic,
  Method->"Preemptive"]], "Input",
 CellFrameLabels->{{None, None}, {None, None}},
 ShowSyntaxStyles->False,
 ShowStringCharacters->False,
 CellTags->"FirstInputCell"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 PaneBox["\[ThickSpace]",
  ImageSize->Full]], "CodeSectionDividerCloud",
 Editable->False,
 Selectable->False,
 Deletable->False,
 CellMargins->{{0, 0}, {0, 35}},
 CellBracketOptions->{"OverlapContent"->True}],

Cell["\<\
Represente gr\[AAcute]ficamente los puntos unidos de la secuencia de d\
\[IAcute]gitos que aparecen en 2^128.\
\>", "Exercise",
 Editable->False,
 Selectable->False,
 Deletable->False,
 CellDingbat->Cell[
  "5.13", "ExerciseNumber", FontColor -> 
   RGBColor[0.9019607843137255, 0.4117647058823529, 0.027450980392156862`]],
 ShowCellBracket->False,
 CounterAssignments->{{"SectionNumber", 5}, {"ExerciseNumber", 13}, {
   "WebOnly", 0}}],

Cell[CellGroupData[{

Cell[BoxData[
 TagBox[
  ButtonBox[
   StyleBox[
    RowBox[{"EXPECTED", " ", "OUTPUT", " ", "\[RightGuillemet]"}],
    FontFamily->"Source Sans Pro",
    FontSize->12,
    FontColor->GrayLevel[0.6]],
   Appearance->None,
   ButtonFunction:>(SelectionMove[
      ButtonNotebook[], All, ButtonCell, AutoScroll -> False]; FrontEndExecute[
      FrontEndToken[
       ButtonNotebook[], "OpenCloseGroup"]]),
   Evaluator->Automatic,
   Method->"Preemptive"],
  MouseAppearanceTag["LinkHand"]]], "ExerciseExpectedResult",
 Editable->False,
 Deletable->False,
 ShowCellBracket->False],

Cell[BoxData[
 FrameBox[
  TagBox[GridBox[{
     {
      PaneBox[
       InterpretationBox[Cell[BoxData[
         GraphicsBox[
          TagBox[RasterBox[CompressedData["
1:eJztndtbFNfW7tfe++a73P/C/i/27b7ct99+9q0m0XQ0K5LERLKSSKIEPOAR
UYmKYogGzxqNHEQQFVFUVDygokHFeFyiosQ0CvQ3qt6mUlTVnDVrzlldDczf
w8qDLLq66a4aNeaYY7zv//rg0/9M/fd//OMfX/wH/ec/3//q/8yd+/7X/+9/
0j/+f8EXsz8q+HDm/y348sOPPpz7vz/4H/TDp/S/Wf/tH/+wvs+wSY3B+R2D
wWBwYyKGwWCIiokbBoMhKiZuGAyGqJi4YTAYomLihsFgiIqJGwaDISombhgM
hqiYuGEwGKJi4obBYIiKiRsGgyEqps/cYDBExUQM4ljnvfKd51/9OaTlaI/7
B9ftuXDx5hMtRzMY8hATN4iK3Z3TFh6+/+SVlqNdv/OMjravtUfL0QyGPMTE
DeK7jW10pd/qe67laJd6ntDRttVf03I0gyEPMXGDmF12hK70y7eeajlax7WH
dLQN+y9pOZrBkIeYuPEm/Y4uc/qi613LAU9cvE9HW1V7TsvRDIY8xMSNe48H
EDdaL/RpOeDRs3fpaKXV7VqOZjDkISZudF5/jLhRf7pXywEPn/qdjvZN5Qkt
RzMY8hATNxpO9yJu6NoB2XfsJh3ts1XNWo5mMOQhJm5sq7+GuLG9sVvLAWuP
dNPRUosbtBzNYMhDTNxYVXtu9lJrP2XzwctaDrj1tysIRCMjo1oOaDDkGyZu
fFN54vtNbR8taVy7u1PLATfsv4S48VpTA6rBkG+Y+RRaUFDE+GxVc9m2Di0H
XLOrE3Hjcf+glgMaDPnGVI4YxKs/h+gC39l0/ev1xxduPqXlmMu2dSBu9D54
oeWABkO+McXjxu9/vKALvPn8PQoaFDq0HLOkuh1x48ptPQ2oBkO+McXjxpmr
Vk/45dtPaZGia+e0aMNJvQ2oBkO+McXjxqG223SBP3o2WLG786MljVqOWbi2
dWZpPR225fw9LQc0GPKNKR43qu0907fvhjcfvPxecZ2WY366snlexTE67G9t
t7Uc0GDIN6Z43KDlyacrj9I32xutZq2/ht6pH3PW0sZFW0/T0XYdvaF+NIMh
D5nicWNeResPW6wBtH2tPXSlP3/1l/ox3/+hbv3ei3Q0SmbUj2YwJMdAU2Wh
3aZRWNfd7/4/pnLcGB0d/aCk/sd9F+n7entK5cG/Xysec2R0lI6z9fCV1OKG
dXsu6HiZBkMyDPbUplLlD4czT9oqU6ladzfSVI4b/QN/0TW+99hN+r71Qh99
f/sP1Y6LP/96S8epPdKtsZHMYEgEO25UPaErpasmVWDiRpab9/rpGj9x8X5m
TKTr6u//Vjzmi1dWLNp37Oa3lScWVLXpeJkGQ0IM9pRQgCiwliqFe8dNfabG
k9QLTIS2rj/oGr9+5xl9f/nWU/r+XPcjxWM+7h+k4xw+9Xtpdfu8ilYdL9Ng
SIbumoKCmi7ru8HuolRBpyvhSDxW0ALh05XNdx6+zP1T77droc9evqHvb/U9
d3IPFe4+stTDjp69u6r23D+XNYk/cPPBy58sbxp6N6z4Agz5RsWuzo/Ljrwb
Hkn6hUSmp7YwVWUPe6Z7KG505VPcwEZGlyZN4EhsOtD1XnEdpt3vP3lFL6Px
zB3FY/bY8efkpfsb9l96/4cIDSHYun364k/FF2DINz5b1Uyf7MBgOukXEp2B
nux2SipVXtftvqUlHjcgm9N+5UHun5ou1S/KW/A9ZR30Mg4cv6V4zCu3n6LD
HH9X+q1o/vBN5QmNXgyGPOH1myEMHTx6prpVlxTpwUF/zEs8bkCt4ui5u7l/
6s9XNy+pOYPvnX0QxWOev/6IjnOp50nUhpA5K45qKbAY8oqrv/8bceP2/Uk1
HJ143Fi14xy9q7+eUL3RR2V4ZGR68d8aX7RaoZex5ZCq5Nepy3at9W5/w5ne
SB5wM0rqURhRfAGGvAIi1RrdefKExONGqT11rn6jj8qT53964tWHizR0arWc
v2crb7w8eclyUbl5rz/8MS4Plz0tpjV9UrF+zwV8sqeTWInHR+Jx41t7Xa9L
21McJJDuukrBiqPLt59VPKzTd9p5w7JXuHjzscijntpBLJH3wRArznB0cxIr
8fhIPG6g2lyxS4+2pzjHOq3E4Nb9v+uQX63NzqqocOD4Lezt3rhrNZW1df0h
8ijIB9HXil9UA5chf0gPvZu+8HDZz5b+26GTk2o4OvG4kVrcQO+qU5/MGbub
b9Dzvnz9d6V4QVXbt8pmSTuPXrcUid8M9dk2cEc67og8qsvuOqOv7zaeVHwB
hvwBm/LQeNnRdD3pl6OTZOMGqpGJXC+08JxRWu/+ydKfO+aublE8bE3dVQh6
jG3sCnk5oXOVQiitlRRfgCF/oLsGdlK0lNzzimTjxus/s7vbX645luOnXrj5
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
4fbe
            "], {{0, 234}, {360, 0}}, {0, 255},
            ColorFunction->RGBColor],
           BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
           Selectable->False],
          DefaultBaseStyle->"ImageGraphics",
          ImageSize->Magnification[1],
          ImageSizeRaw->{360, 234},
          PlotRange->{{0, 360}, {0, 234}}]], "ExerciseOutput",
         ImageSize->{364, 234},
         ImageMargins->{{0, 0}, {0, 0}},
         ImageRegion->{{0, 1}, {0, 1}},
         Magnification->1],
        Apply[TextCell, 
         Cell[
          BoxData[
           GraphicsBox[
            TagBox[
             RasterBox[CompressedData["
1:eJztndtbFNfW7tfe++a73P/C/i/27b7ct99+9q0m0XQ0K5LERLKSSKIEPOAR
UYmKYogGzxqNHEQQFVFUVDygokHFeFyiosQ0CvQ3qt6mUlTVnDVrzlldDczf
w8qDLLq66a4aNeaYY7zv//rg0/9M/fd//OMfX/wH/ec/3//q/8yd+/7X/+9/
0j/+f8EXsz8q+HDm/y348sOPPpz7vz/4H/TDp/S/Wf/tH/+wvs+wSY3B+R2D
wWBwYyKGwWCIiokbBoMhKiZuGAyGqJi4YTAYomLihsFgiIqJGwaDISombhgM
hqiYuGEwGKJi4obBYIiKiRsGgyEqps/cYDBExUQM4ljnvfKd51/9OaTlaI/7
B9ftuXDx5hMtRzMY8hATN4iK3Z3TFh6+/+SVlqNdv/OMjravtUfL0QyGPMTE
DeK7jW10pd/qe67laJd6ntDRttVf03I0gyEPMXGDmF12hK70y7eeajlax7WH
dLQN+y9pOZrBkIeYuPEm/Y4uc/qi613LAU9cvE9HW1V7TsvRDIY8xMSNe48H
EDdaL/RpOeDRs3fpaKXV7VqOZjDkISZudF5/jLhRf7pXywEPn/qdjvZN5Qkt
RzMY8hATNxpO9yJu6NoB2XfsJh3ts1XNWo5mMOQhJm5sq7+GuLG9sVvLAWuP
dNPRUosbtBzNYMhDTNxYVXtu9lJrP2XzwctaDrj1tysIRCMjo1oOaDDkGyZu
fFN54vtNbR8taVy7u1PLATfsv4S48VpTA6rBkG+Y+RRaUFDE+GxVc9m2Di0H
XLOrE3Hjcf+glgMaDPnGVI4YxKs/h+gC39l0/ev1xxduPqXlmMu2dSBu9D54
oeWABkO+McXjxu9/vKALvPn8PQoaFDq0HLOkuh1x48ptPQ2oBkO+McXjxpmr
Vk/45dtPaZGia+e0aMNJvQ2oBkO+McXjxqG223SBP3o2WLG786MljVqOWbi2
dWZpPR225fw9LQc0GPKNKR43qu0907fvhjcfvPxecZ2WY366snlexTE67G9t
t7Uc0GDIN6Z43KDlyacrj9I32xutZq2/ht6pH3PW0sZFW0/T0XYdvaF+NIMh
D5nicWNeResPW6wBtH2tPXSlP3/1l/ox3/+hbv3ei3Q0SmbUj2YwJMdAU2Wh
3aZRWNfd7/4/pnLcGB0d/aCk/sd9F+n7entK5cG/Xysec2R0lI6z9fCV1OKG
dXsu6HiZBkMyDPbUplLlD4czT9oqU6ladzfSVI4b/QN/0TW+99hN+r71Qh99
f/sP1Y6LP/96S8epPdKtsZHMYEgEO25UPaErpasmVWDiRpab9/rpGj9x8X5m
TKTr6u//Vjzmi1dWLNp37Oa3lScWVLXpeJkGQ0IM9pRQgCiwliqFe8dNfabG
k9QLTIS2rj/oGr9+5xl9f/nWU/r+XPcjxWM+7h+k4xw+9Xtpdfu8ilYdL9Ng
SIbumoKCmi7ru8HuolRBpyvhSDxW0ALh05XNdx6+zP1T77droc9evqHvb/U9
d3IPFe4+stTDjp69u6r23D+XNYk/cPPBy58sbxp6N6z4Agz5RsWuzo/Ljrwb
Hkn6hUSmp7YwVWUPe6Z7KG505VPcwEZGlyZN4EhsOtD1XnEdpt3vP3lFL6Px
zB3FY/bY8efkpfsb9l96/4cIDSHYun364k/FF2DINz5b1Uyf7MBgOukXEp2B
nux2SipVXtftvqUlHjcgm9N+5UHun5ou1S/KW/A9ZR30Mg4cv6V4zCu3n6LD
HH9X+q1o/vBN5QmNXgyGPOH1myEMHTx6prpVlxTpwUF/zEs8bkCt4ui5u7l/
6s9XNy+pOYPvnX0QxWOev/6IjnOp50nUhpA5K45qKbAY8oqrv/8bceP2/Uk1
HJ143Fi14xy9q7+eUL3RR2V4ZGR68d8aX7RaoZex5ZCq5Nepy3at9W5/w5ne
SB5wM0rqURhRfAGGvAIi1RrdefKExONGqT11rn6jj8qT53964tWHizR0arWc
v2crb7w8eclyUbl5rz/8MS4Plz0tpjV9UrF+zwV8sqeTWInHR+Jx41t7Xa9L
21McJJDuukrBiqPLt59VPKzTd9p5w7JXuHjzscijntpBLJH3wRArznB0cxIr
8fhIPG6g2lyxS4+2pzjHOq3E4Nb9v+uQX63NzqqocOD4Lezt3rhrNZW1df0h
8ijIB9HXil9UA5chf0gPvZu+8HDZz5b+26GTk2o4OvG4kVrcQO+qU5/MGbub
b9Dzvnz9d6V4QVXbt8pmSTuPXrcUid8M9dk2cEc67og8qsvuOqOv7zaeVHwB
hvwBm/LQeNnRdD3pl6OTZOMGqpGJXC+08JxRWu/+ydKfO+aublE8bE3dVQh6
jG3sCnk5oXOVQiitlRRfgCF/oLsGdlK0lNzzimTjxus/s7vbX645luOnXrj5
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
4fbe
              "], {{0, 234}, {360, 0}}, {0, 255}, ColorFunction -> 
              RGBColor], 
             BoxForm`ImageTag[
             "Byte", ColorSpace -> "RGB", Interleaving -> True], Selectable -> 
             False], DefaultBaseStyle -> "ImageGraphics", ImageSize -> 
            Magnification[1], ImageSizeRaw -> {360, 234}, 
            PlotRange -> {{0, 360}, {0, 234}}]], "ExerciseOutput", 
          Magnification -> 1, CellFrameColor -> GrayLevel[0], Selectable -> 
          False, Copyable -> False, Editable -> False, ShowCellBracket -> 
          False, CellLabel -> "Out[]=", CellFrame -> False]]],
       FrameMargins->{{10, 0}, {10, 12}},
       ImageMargins->0,
       ImageSize->Full], 
      ButtonBox[
       PaneBox[
        StyleBox["\[Times]",
         FontFamily->"MathematicaMono",
         FontSize->18,
         FontWeight->"Bold",
         FontColor->GrayLevel[0.75]],
        Alignment->Right,
        FrameMargins->{{0, 6}, {0, 0}},
        ImageMargins->0],
       Appearance->None,
       ButtonFunction:>(SelectionMove[
          ButtonNotebook[], All, ButtonCell, AutoScroll -> False]; 
        NotebookFind[
          EvaluationNotebook[], "Exercise", Previous, CellStyle, WrapAround -> 
          False, AutoScroll -> False]; FrontEndExecute[
          FrontEndToken[
           ButtonNotebook[], "OpenCloseGroup"]])]}
    },
    GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {Top}},
    GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
   "Grid"],
  FrameMargins->0,
  FrameStyle->GrayLevel[0.7],
  StripOnInput->False]], "ExerciseOutput",
 Editable->False,
 Selectable->False,
 Deletable->False,
 CellFrame->{{1, 1}, {1, 1}},
 ShowCellBracket->False,
 CellFrameMargins->{{0, 0}, {0, 0}},
 CellFrameColor->GrayLevel[1],
 LineBreakWithin->Automatic]
}, Closed]],

Cell[CellGroupData[{

Cell[BoxData[
 StyleBox[
  DynamicBox[ToBoxes[
    $CellContext`SolutionResponseText["5.13"], StandardForm],
   ImageSizeCache->{140., {3., 9.}}], "SolutionResponseText"]], "Subsection",
 Editable->False,
 Selectable->False,
 Deletable->False,
 ShowCellBracket->False,
 CellMargins->{{24, 25}, {3, 0}},
 CellFrameMargins->{{8, 0}, {0, 0}},
 TextAlignment->Right,
 ShowStringCharacters->False,
 FontFamily->"Source Sans Pro",
 FontSize->12,
 FontWeight->"Plain",
 FontSlant->"Plain",
 Background->GrayLevel[1]],

Cell[BoxData[
 ButtonBox[
  PaneBox[
   StyleBox[
    RowBox[{"[", " ", 
     RowBox[{"Click", " ", "to", " ", "enter", " ", "code"}], " ", "]"}],
    Selectable->False,
    StripOnInput->False,
    FontFamily->"Source Sans Pro",
    FontSize->14,
    FontWeight->Plain,
    FontColor->GrayLevel[0.6]],
   ImageSize->Full],
  Appearance->None,
  ButtonFunction:>(SelectionMove[
     InputNotebook[], All, ButtonCell]; NotebookWrite[
     InputNotebook[], 
     Cell[
      BoxData[""], "Input"]]; SelectionMove[
     InputNotebook[], Before, CellContents]; Null),
  Evaluator->Automatic,
  Method->"Preemptive"]], "Input",
 CellFrameLabels->{{None, None}, {None, None}},
 ShowSyntaxStyles->False,
 ShowStringCharacters->False,
 CellTags->"FirstInputCell"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 PaneBox["\[ThickSpace]",
  ImageSize->Full]], "CodeSectionDividerCloud",
 Editable->False,
 Selectable->False,
 Deletable->False,
 CellMargins->{{0, 0}, {0, 35}},
 CellBracketOptions->{"OverlapContent"->True}],

Cell[TextData[{
 "Use ",
 StyleBox["Take",
  FontFamily->"Source Sans Pro"],
 " y ",
 StyleBox["Drop",
  FontFamily->"Source Sans Pro"],
 " para obtener la secuencia 11 al 20 en ",
 Cell[BoxData[
  RowBox[{
   StyleBox["Range",
    FontFamily->"Source Sans Pro"], "[", "100", "]"}]], "InlineCode"],
 "."
}], "Exercise",
 Editable->False,
 Selectable->False,
 Deletable->False,
 CellDingbat->Cell[
  "5.14", "ExerciseNumber", FontColor -> 
   RGBColor[0.9019607843137255, 0.4117647058823529, 0.027450980392156862`]],
 ShowCellBracket->False,
 CounterAssignments->{{"SectionNumber", 5}, {"ExerciseNumber", 14}, {
   "WebOnly", 0}}],

Cell[CellGroupData[{

Cell[BoxData[
 TagBox[
  ButtonBox[
   StyleBox[
    RowBox[{"EXPECTED", " ", "OUTPUT", " ", "\[RightGuillemet]"}],
    FontFamily->"Source Sans Pro",
    FontSize->12,
    FontColor->GrayLevel[0.6]],
   Appearance->None,
   ButtonFunction:>(SelectionMove[
      ButtonNotebook[], All, ButtonCell, AutoScroll -> False]; FrontEndExecute[
      FrontEndToken[
       ButtonNotebook[], "OpenCloseGroup"]]),
   Evaluator->Automatic,
   Method->"Preemptive"],
  MouseAppearanceTag["LinkHand"]]], "ExerciseExpectedResult",
 Editable->False,
 Deletable->False,
 ShowCellBracket->False],

Cell[BoxData[
 FrameBox[
  TagBox[GridBox[{
     {
      PaneBox[
       InterpretationBox[Cell[BoxData[
         GraphicsBox[
          TagBox[RasterBox[CompressedData["
1:eJztWS3P5DYQjlpSWKm/oH8guDSwKNJVZUvu1Mup5BrdVapCwwzDwoKCgoKC
QoKiSiYmJgZRpZCAABcYGLz12NndZPO51fVU6TLSrjZOnsx45vHM2Pv9m99e
eV9ZlvXxG/X16vUfzocPr4OfvlUXP7//+Ou7929/+fH972/fvf3ww5uv1eB3
6vOn+sDvl1NOOeWUU0455ZRTPp/0BfJs2yfCXHJGSMPl+AnZN4Qwvv+qR6zC
FVmW5WXTyw3YIpa3pMizvKhYJ57FDmZ3DGM6G97GwuVNaLs96QW9HcUFzBjv
zXiC7cZateZNs2d6ZY8rUIubflvrHCt7VoKf6725trWKR5bXtBvp7ZTaNMtJ
a2LEU89xLmHdDe/nJFbtvYfyVr6wLLC0oPpmpMh9R4/Z9ab2ORYnnsbZetgp
21V/zbASJ75RasYTsuq0JZuNNOGe2QtYgc1sreuNp/TW8WUEDtjKjGdYHtnW
VOxqxewlm6kesl1telg2x20WNLPvfnarbtninpjHhuf8jOrhBt2dZedMEUzS
IlEusK9+4ziyrMgwrynT0HfVozG+s6tMUOCpt7p4k10zrEgcy42xNq5WGp0I
H8a+0MRzI22hZOCRoDyONYKHQG+ZPcfKNleWgpOlkSewL20B+lAl4T0Viqs1
9AJW3vS1SDnby9by9RyrI+gYvpTKWXa0thTnMUpdoEILbyEqF9hhtQhkqXKm
fgyyE9BT5a8WlFkZLKEGfnm5mS9N3JsNggC7RhGgSmE0jZSkibJ/m11zrOT9
1UU82mTXml6DRcryS7pZHR+xkmUQ6CBQBN9OuQ9YHSmX7JbxJSzLlN8v9F9h
b9KDAVbRPmtzaMpVBxFfZdcMy2NHEWGIC4WsE65o5v21mPY1AjJzmavy4sTG
uxTo51EdJAIvHcaBlmO269LwMGtdPQ+wawmrpQ2t+yyOYiXvGlYmOnXl7Bls
B8vfjjpOXPDDEzabPsG++L4fxNkeMSdYWfhq7ZcNLZM4zoo9by37CsK9kagX
sbIt1KXjp6wlqlQ5aDn/LGH72L7HpS1Da9ddqihEjiYhV9hbxhCaIQZLNaPU
T9XQAQHH3cV/wC6iS3Gx3nctYvWSNOLT7b5+itXqTMoiytk7iWiKFSxT6S7K
8lyzeqNCzbA8do21bhDqptFNtnLIkq9Mys2avfT3iOXJqP8puy3oAxZro30U
R6FpJC7bUZZNDl5JqVkIN3aNGWJmgXKKjD3jKX5qdrUl2k8+K1jIXy0O7XsG
3sWa6avQRnGEdJS9AJXNOkdW8+1Lo1P/1lp+YJcDfh8uRmv5uN7N2rSKrZSD
bMSE7GjhQ9LefMOjXkGKNAwClBQYIuXijeWk+2fVpehpreYudRXr7l/2FGIX
jlKxJFCXycQvgmp27R4MzLCNppaXkD3kI1aKu7KuCHYiNcLKDsdRFMfqK4rQ
wK5qg12Peu95o9utFFMslAwnNppkkz2F1cJVO2wFxX7jNsH2ar/ppux6J3pe
7yDQsjnJqqe6Gtp5J7qmRugEbs8z6PU903MK6NKtpAaOs+xy7QMFHLpUcCtI
K0rgDEPlDkJolaoX2UmFCdXlTdJA8TYsRpYsYFkemrpWEYJxXdcEjoCOYP+m
UNtQxrq+ZZVqzdXa7A7rHXtSxRubaB3We4mKputYnTq6uvHDegVLYbZp3fdM
H8b47OB8ryeN41pz1GYhYDNheSXrOG8LpLhzIeKoXpqFHspZ21QpdAKo6hb1
irY0hTMusYkl66XpUcOcdAzu3vabupMfVtl9zyiwOz1ziTAfNT+mqmseCnLR
v+8LYAH7V+xMh8yaOoTlTTVqJRy/MgE4hh25U1WB60I+hO1pObLaDckTWLhJ
hwUF4JzyJ22Gff2EXQexgqH7qJuZs8FjWJqj22WQ4jW9JH6ADidmw5EmqI1u
3eJ4z6j5gw6cw08EMp692Qt9AqwUnAsxSdWfRy8HvZMC9YReyfuej43+LDZr
Z/HJAf9R7Bz5jF6hpttP0BRS8IA1VdLx4t2dyk1aqLhWun5+fmK/VKyo9V57
lIFFnSLPC3d2/WPhXbP/39+J/QKxokC+HyZH/pM+5ZRTTvl/yj8ewt+o
            "], {{0, 
            19}, {202, 0}}, {0, 255},
            ColorFunction->RGBColor],
           BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
           Selectable->False],
          DefaultBaseStyle->"ImageGraphics",
          ImageSize->Magnification[1],
          ImageSizeRaw->{202, 19},
          PlotRange->{{0, 202}, {0, 19}}]], "ExerciseOutput",
         ImageSize->{206, 19},
         ImageMargins->{{0, 0}, {0, 0}},
         ImageRegion->{{0, 1}, {0, 1}},
         Magnification->1],
        Apply[TextCell, 
         Cell[
          BoxData[
           GraphicsBox[
            TagBox[
             RasterBox[CompressedData["
1:eJztWS3P5DYQjlpSWKm/oH8guDSwKNJVZUvu1Mup5BrdVapCwwzDwoKCgoKC
QoKiSiYmJgZRpZCAABcYGLz12NndZPO51fVU6TLSrjZOnsx45vHM2Pv9m99e
eV9ZlvXxG/X16vUfzocPr4OfvlUXP7//+Ou7929/+fH972/fvf3ww5uv1eB3
6vOn+sDvl1NOOeWUU0455ZRTPp/0BfJs2yfCXHJGSMPl+AnZN4Qwvv+qR6zC
FVmW5WXTyw3YIpa3pMizvKhYJ57FDmZ3DGM6G97GwuVNaLs96QW9HcUFzBjv
zXiC7cZateZNs2d6ZY8rUIubflvrHCt7VoKf6725trWKR5bXtBvp7ZTaNMtJ
a2LEU89xLmHdDe/nJFbtvYfyVr6wLLC0oPpmpMh9R4/Z9ab2ORYnnsbZetgp
21V/zbASJ75RasYTsuq0JZuNNOGe2QtYgc1sreuNp/TW8WUEDtjKjGdYHtnW
VOxqxewlm6kesl1telg2x20WNLPvfnarbtninpjHhuf8jOrhBt2dZedMEUzS
IlEusK9+4ziyrMgwrynT0HfVozG+s6tMUOCpt7p4k10zrEgcy42xNq5WGp0I
H8a+0MRzI22hZOCRoDyONYKHQG+ZPcfKNleWgpOlkSewL20B+lAl4T0Viqs1
9AJW3vS1SDnby9by9RyrI+gYvpTKWXa0thTnMUpdoEILbyEqF9hhtQhkqXKm
fgyyE9BT5a8WlFkZLKEGfnm5mS9N3JsNggC7RhGgSmE0jZSkibJ/m11zrOT9
1UU82mTXml6DRcryS7pZHR+xkmUQ6CBQBN9OuQ9YHSmX7JbxJSzLlN8v9F9h
b9KDAVbRPmtzaMpVBxFfZdcMy2NHEWGIC4WsE65o5v21mPY1AjJzmavy4sTG
uxTo51EdJAIvHcaBlmO269LwMGtdPQ+wawmrpQ2t+yyOYiXvGlYmOnXl7Bls
B8vfjjpOXPDDEzabPsG++L4fxNkeMSdYWfhq7ZcNLZM4zoo9by37CsK9kagX
sbIt1KXjp6wlqlQ5aDn/LGH72L7HpS1Da9ddqihEjiYhV9hbxhCaIQZLNaPU
T9XQAQHH3cV/wC6iS3Gx3nctYvWSNOLT7b5+itXqTMoiytk7iWiKFSxT6S7K
8lyzeqNCzbA8do21bhDqptFNtnLIkq9Mys2avfT3iOXJqP8puy3oAxZro30U
R6FpJC7bUZZNDl5JqVkIN3aNGWJmgXKKjD3jKX5qdrUl2k8+K1jIXy0O7XsG
3sWa6avQRnGEdJS9AJXNOkdW8+1Lo1P/1lp+YJcDfh8uRmv5uN7N2rSKrZSD
bMSE7GjhQ9LefMOjXkGKNAwClBQYIuXijeWk+2fVpehpreYudRXr7l/2FGIX
jlKxJFCXycQvgmp27R4MzLCNppaXkD3kI1aKu7KuCHYiNcLKDsdRFMfqK4rQ
wK5qg12Peu95o9utFFMslAwnNppkkz2F1cJVO2wFxX7jNsH2ar/ppux6J3pe
7yDQsjnJqqe6Gtp5J7qmRugEbs8z6PU903MK6NKtpAaOs+xy7QMFHLpUcCtI
K0rgDEPlDkJolaoX2UmFCdXlTdJA8TYsRpYsYFkemrpWEYJxXdcEjoCOYP+m
UNtQxrq+ZZVqzdXa7A7rHXtSxRubaB3We4mKputYnTq6uvHDegVLYbZp3fdM
H8b47OB8ryeN41pz1GYhYDNheSXrOG8LpLhzIeKoXpqFHspZ21QpdAKo6hb1
irY0hTMusYkl66XpUcOcdAzu3vabupMfVtl9zyiwOz1ziTAfNT+mqmseCnLR
v+8LYAH7V+xMh8yaOoTlTTVqJRy/MgE4hh25U1WB60I+hO1pObLaDckTWLhJ
hwUF4JzyJ22Gff2EXQexgqH7qJuZs8FjWJqj22WQ4jW9JH6ADidmw5EmqI1u
3eJ4z6j5gw6cw08EMp692Qt9AqwUnAsxSdWfRy8HvZMC9YReyfuej43+LDZr
Z/HJAf9R7Bz5jF6hpttP0BRS8IA1VdLx4t2dyk1aqLhWun5+fmK/VKyo9V57
lIFFnSLPC3d2/WPhXbP/39+J/QKxokC+HyZH/pM+5ZRTTvl/yj8ewt+o
              "], {{
              0, 19}, {202, 0}}, {0, 255}, ColorFunction -> RGBColor], 
             BoxForm`ImageTag[
             "Byte", ColorSpace -> "RGB", Interleaving -> True], Selectable -> 
             False], DefaultBaseStyle -> "ImageGraphics", ImageSize -> 
            Magnification[1], ImageSizeRaw -> {202, 19}, 
            PlotRange -> {{0, 202}, {0, 19}}]], "ExerciseOutput", 
          Magnification -> 1, CellFrameColor -> GrayLevel[0], Selectable -> 
          False, Copyable -> False, Editable -> False, ShowCellBracket -> 
          False, CellLabel -> "Out[]=", CellFrame -> False]]],
       FrameMargins->{{10, 0}, {10, 12}},
       ImageMargins->0,
       ImageSize->Full], 
      ButtonBox[
       PaneBox[
        StyleBox["\[Times]",
         FontFamily->"MathematicaMono",
         FontSize->18,
         FontWeight->"Bold",
         FontColor->GrayLevel[0.75]],
        Alignment->Right,
        FrameMargins->{{0, 6}, {0, 0}},
        ImageMargins->0],
       Appearance->None,
       ButtonFunction:>(SelectionMove[
          ButtonNotebook[], All, ButtonCell, AutoScroll -> False]; 
        NotebookFind[
          EvaluationNotebook[], "Exercise", Previous, CellStyle, WrapAround -> 
          False, AutoScroll -> False]; FrontEndExecute[
          FrontEndToken[
           ButtonNotebook[], "OpenCloseGroup"]])]}
    },
    GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {Top}},
    GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
   "Grid"],
  FrameMargins->0,
  FrameStyle->GrayLevel[0.7],
  StripOnInput->False]], "ExerciseOutput",
 Editable->False,
 Selectable->False,
 Deletable->False,
 CellFrame->{{1, 1}, {1, 1}},
 ShowCellBracket->False,
 CellFrameMargins->{{0, 0}, {0, 0}},
 CellFrameColor->GrayLevel[1],
 LineBreakWithin->Automatic]
}, Closed]],

Cell[CellGroupData[{

Cell[BoxData[
 StyleBox[
  DynamicBox[ToBoxes[
    $CellContext`SolutionResponseText["5.14"], StandardForm],
   ImageSizeCache->{140., {3., 9.}}], "SolutionResponseText"]], "Subsection",
 Editable->False,
 Selectable->False,
 Deletable->False,
 ShowCellBracket->False,
 CellMargins->{{24, 25}, {3, 0}},
 CellFrameMargins->{{8, 0}, {0, 0}},
 TextAlignment->Right,
 ShowStringCharacters->False,
 FontFamily->"Source Sans Pro",
 FontSize->12,
 FontWeight->"Plain",
 FontSlant->"Plain",
 Background->GrayLevel[1]],

Cell[BoxData[
 ButtonBox[
  PaneBox[
   StyleBox[
    RowBox[{"[", " ", 
     RowBox[{"Click", " ", "to", " ", "enter", " ", "code"}], " ", "]"}],
    Selectable->False,
    StripOnInput->False,
    FontFamily->"Source Sans Pro",
    FontSize->14,
    FontWeight->Plain,
    FontColor->GrayLevel[0.6]],
   ImageSize->Full],
  Appearance->None,
  ButtonFunction:>(SelectionMove[
     InputNotebook[], All, ButtonCell]; NotebookWrite[
     InputNotebook[], 
     Cell[
      BoxData[""], "Input"]]; SelectionMove[
     InputNotebook[], Before, CellContents]; Null),
  Evaluator->Automatic,
  Method->"Preemptive"]], "Input",
 CellFrameLabels->{{None, None}, {None, None}},
 ShowSyntaxStyles->False,
 ShowStringCharacters->False,
 CellTags->"FirstInputCell"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 PaneBox["\[ThickSpace]",
  ImageSize->Full]], "CodeSectionDividerCloud",
 Editable->False,
 Selectable->False,
 Deletable->False,
 CellMargins->{{0, 0}, {0, 35}},
 CellBracketOptions->{"OverlapContent"->True}],

Cell["Cree una lista de los 10 primeros m\[UAcute]ltiplos de 3.", "Exercise",
 Editable->False,
 Selectable->False,
 Deletable->False,
 CellDingbat->Cell[
  "+5.1", "ExerciseNumber", FontColor -> 
   RGBColor[0.9019607843137255, 0.4117647058823529, 0.027450980392156862`]],
 ShowCellBracket->False,
 CounterAssignments->{{"SectionNumber", 5}, {"ExerciseNumber", 1}, {
   "WebOnly", 1}}],

Cell[CellGroupData[{

Cell[BoxData[
 TagBox[
  ButtonBox[
   StyleBox[
    RowBox[{"EXPECTED", " ", "OUTPUT", " ", "\[RightGuillemet]"}],
    FontFamily->"Source Sans Pro",
    FontSize->12,
    FontColor->GrayLevel[0.6]],
   Appearance->None,
   ButtonFunction:>(SelectionMove[
      ButtonNotebook[], All, ButtonCell, AutoScroll -> False]; FrontEndExecute[
      FrontEndToken[
       ButtonNotebook[], "OpenCloseGroup"]]),
   Evaluator->Automatic,
   Method->"Preemptive"],
  MouseAppearanceTag["LinkHand"]]], "ExerciseExpectedResult",
 Editable->False,
 Deletable->False,
 ShowCellBracket->False],

Cell[BoxData[
 FrameBox[
  TagBox[GridBox[{
     {
      PaneBox[
       InterpretationBox[Cell[BoxData[
         GraphicsBox[
          TagBox[RasterBox[CompressedData["
1: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
r8q/M23HfjYsq5MwjPN7/zfaZZdddrHJ34uspgU=
            "], {{0, 19}, {181, 
            0}}, {0, 255},
            ColorFunction->RGBColor],
           BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
           Selectable->False],
          DefaultBaseStyle->"ImageGraphics",
          ImageSize->Magnification[1],
          ImageSizeRaw->{181, 19},
          PlotRange->{{0, 181}, {0, 19}}]], "ExerciseOutput",
         ImageSize->{185, 19},
         ImageMargins->{{0, 0}, {0, 0}},
         ImageRegion->{{0, 1}, {0, 1}},
         Magnification->1],
        Apply[TextCell, 
         Cell[
          BoxData[
           GraphicsBox[
            TagBox[
             RasterBox[CompressedData["
1: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
r8q/M23HfjYsq5MwjPN7/zfaZZdddrHJ34uspgU=
              "], {{0, 19}, {181, 
              0}}, {0, 255}, ColorFunction -> RGBColor], 
             BoxForm`ImageTag[
             "Byte", ColorSpace -> "RGB", Interleaving -> True], Selectable -> 
             False], DefaultBaseStyle -> "ImageGraphics", ImageSize -> 
            Magnification[1], ImageSizeRaw -> {181, 19}, 
            PlotRange -> {{0, 181}, {0, 19}}]], "ExerciseOutput", 
          Magnification -> 1, CellFrameColor -> GrayLevel[0], Selectable -> 
          False, Copyable -> False, Editable -> False, ShowCellBracket -> 
          False, CellLabel -> "Out[]=", CellFrame -> False]]],
       FrameMargins->{{10, 0}, {10, 12}},
       ImageMargins->0,
       ImageSize->Full], 
      ButtonBox[
       PaneBox[
        StyleBox["\[Times]",
         FontFamily->"MathematicaMono",
         FontSize->18,
         FontWeight->"Bold",
         FontColor->GrayLevel[0.75]],
        Alignment->Right,
        FrameMargins->{{0, 6}, {0, 0}},
        ImageMargins->0],
       Appearance->None,
       ButtonFunction:>(SelectionMove[
          ButtonNotebook[], All, ButtonCell, AutoScroll -> False]; 
        NotebookFind[
          EvaluationNotebook[], "Exercise", Previous, CellStyle, WrapAround -> 
          False, AutoScroll -> False]; FrontEndExecute[
          FrontEndToken[
           ButtonNotebook[], "OpenCloseGroup"]])]}
    },
    GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {Top}},
    GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
   "Grid"],
  FrameMargins->0,
  FrameStyle->GrayLevel[0.7],
  StripOnInput->False]], "ExerciseOutput",
 Editable->False,
 Selectable->False,
 Deletable->False,
 CellFrame->{{1, 1}, {1, 1}},
 ShowCellBracket->False,
 CellFrameMargins->{{0, 0}, {0, 0}},
 CellFrameColor->GrayLevel[1],
 LineBreakWithin->Automatic]
}, Closed]],

Cell[CellGroupData[{

Cell[BoxData[
 StyleBox[
  DynamicBox[ToBoxes[
    $CellContext`SolutionResponseText["x5.1"], StandardForm],
   ImageSizeCache->{139., {3., 9.}}], "SolutionResponseText"]], "Subsection",
 Editable->False,
 Selectable->False,
 Deletable->False,
 ShowCellBracket->False,
 CellMargins->{{24, 25}, {3, 0}},
 CellFrameMargins->{{8, 0}, {0, 0}},
 TextAlignment->Right,
 ShowStringCharacters->False,
 FontFamily->"Source Sans Pro",
 FontSize->12,
 FontWeight->"Plain",
 FontSlant->"Plain",
 Background->GrayLevel[1]],

Cell[BoxData[
 ButtonBox[
  PaneBox[
   StyleBox[
    RowBox[{"[", " ", 
     RowBox[{"Click", " ", "to", " ", "enter", " ", "code"}], " ", "]"}],
    Selectable->False,
    StripOnInput->False,
    FontFamily->"Source Sans Pro",
    FontSize->14,
    FontWeight->Plain,
    FontColor->GrayLevel[0.6]],
   ImageSize->Full],
  Appearance->None,
  ButtonFunction:>(SelectionMove[
     InputNotebook[], All, ButtonCell]; NotebookWrite[
     InputNotebook[], 
     Cell[
      BoxData[""], "Input"]]; SelectionMove[
     InputNotebook[], Before, CellContents]; Null),
  Evaluator->Automatic,
  Method->"Preemptive"]], "Input",
 CellFrameLabels->{{None, None}, {None, None}},
 ShowSyntaxStyles->False,
 ShowStringCharacters->False,
 CellTags->"FirstInputCell"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 PaneBox["\[ThickSpace]",
  ImageSize->Full]], "CodeSectionDividerCloud",
 Editable->False,
 Selectable->False,
 Deletable->False,
 CellMargins->{{0, 0}, {0, 35}},
 CellBracketOptions->{"OverlapContent"->True}],

Cell[TextData[{
 "Forme la lista de los 10 primeros cuadrados, usando \[UAcute]nicamente ",
 StyleBox["Range",
  FontFamily->"Source Sans Pro"],
 " y ",
 StyleBox["Times",
  FontFamily->"Source Sans Pro"],
 "."
}], "Exercise",
 Editable->False,
 Selectable->False,
 Deletable->False,
 CellDingbat->Cell[
  "+5.2", "ExerciseNumber", FontColor -> 
   RGBColor[0.9019607843137255, 0.4117647058823529, 0.027450980392156862`]],
 ShowCellBracket->False,
 CounterAssignments->{{"SectionNumber", 5}, {"ExerciseNumber", 2}, {
   "WebOnly", 1}}],

Cell[CellGroupData[{

Cell[BoxData[
 TagBox[
  ButtonBox[
   StyleBox[
    RowBox[{"EXPECTED", " ", "OUTPUT", " ", "\[RightGuillemet]"}],
    FontFamily->"Source Sans Pro",
    FontSize->12,
    FontColor->GrayLevel[0.6]],
   Appearance->None,
   ButtonFunction:>(SelectionMove[
      ButtonNotebook[], All, ButtonCell, AutoScroll -> False]; FrontEndExecute[
      FrontEndToken[
       ButtonNotebook[], "OpenCloseGroup"]]),
   Evaluator->Automatic,
   Method->"Preemptive"],
  MouseAppearanceTag["LinkHand"]]], "ExerciseExpectedResult",
 Editable->False,
 Deletable->False,
 ShowCellBracket->False],

Cell[BoxData[
 FrameBox[
  TagBox[GridBox[{
     {
      PaneBox[
       InterpretationBox[Cell[BoxData[
         GraphicsBox[
          TagBox[RasterBox[CompressedData["
1:eJztWS+v5DYQj1pSWKmfoB+gwaWBJY10VdmSO/VyKrlG10pVaKQCSyUuMgsK
CgoKaUiQSYgLTAJCQgJSKcTAYOuxk2x218nm2lMrVTvS25f18/z7zXhmnPf5
qx9eBB85jvPjJ+rjxcufvXfvXkbffKq+fPv2x+/fvH393Vdvf3r95vW7L199
rBY/Uz+/qx94Pj/pSU960pOe9KQn/R9oKFDguiET5uvYMNaO8ggjr+t2ENsb
xrrMs6xQmx6JsijteV1kWV7Ww44tY0cLpSKnvF+LWoh34yav6KkyLy8o795b
70RXCMihMfJ2dM4726qArby/Qk/2TV3zfew7RgFTytecSiBjzSO1ZwvOsq+K
LM1y1ontxTENPO8U035iHBlRw3CA8k6emyxyNCH6MMpnin2100XU/mfZIg9E
uS58RkW7JceqlJKTc6GoscE4sEzLdsxnmHFYFbW34nQ2zJNd6a94fVTJw3qt
CAhujJnkVf0m58jTtYHpJfhtrCXQzdiLUmPq+drFMNecIg+NxzuMQDacpxgZ
9rwRG4uSF8lpFeuxxo6Dp91lGoeAA6kf5IxoMiPUJ7V1Q1eChRmALvNIIRlu
JY1FaVcscZRdhUhlDUCTKj+QrhHqIAAYPezPFagQMmnIrlR2hefGJiV0IDwA
/JheGwIi9QFTMGZkyhY3rjb4BuzpbATEhwyRJWXqKV39eiv0I1WscQlKBorn
JBFlgqLA3WPUdI/zKkYtPAW53FhUxBPfcbHhFAxyZqWNK7n4Qc50SNnonU6u
42F7ztQKmlmFiUXCd1y6UtpkCvUTf9waxmEuswNFJu76CPjsSGudaahiw3tY
7/kOgZGAuxMUHA5l3NnYdEqrk34LhdQZ6EeR5/ib5WKEEhpVGiXJvFVhkTxR
1uznjDFthbPMQ8VEDBOHAxhwYV2EZwYeTutwWpfgnqfavp8zDDBxirZL/QtQ
NwQ546BJylA9kHmlVBahOqdly8uEEDUNHWjTRh2EybRa9xSGYUSy/Wp9HvuO
VRk4E6Tj++i9Q2Ag7gWKrpyS0KJRp3TFVbFPkrTg08zUQwa6uB+Zv8FotukO
EZS8pYlK76id01t7fSBnrnAeyerICy2BjtZFeOY6T9SjmtogrdZN/1HOyDbX
8wkco8RTKcnt1jWpjl1MSGx6PNlx6cYXf6r6URzq38l+1TMmBSnXejN1VHGW
54lu30G2PaNDcTCkVR/Va0Wg1swhIjg2LeZkddekNNgVxSfAxSt7k4GmvKjq
4e0UyTYPl1HDT5trse+fM94lPWYJ1kXtta6EKOdIzznlsCXW4nSigQ0Rxjj2
TT8v7aPK0FQ4jqKYVDSHonO0zuhQBumwMnuvXgwUgnRK77dohHd5FRSiLzAI
yNs/j+ndQkCwIlXuoqSoSwTThS1ZTc7kU4FolH1f//qbSQFMMNK5GkSobC3M
AhqQk7Jejk0a+Ss5/0adUd+IPvxy4FAF4nIFIoOWx7bUiyolmBAMhHxXn8Zq
8040W4rBwW77/FwrhUbjEYOabLO9uPcUhl8PLzdtKS5a+u0eoYy6RAVmA7hN
HNP7GAGYIr3EWt90FNxqOj0QoC9+UeKUPC0QTTlT2XKmxiqcyezeAAPcElyu
c2bntcfs6Qpn6MWLnQ3cIgIurYtGBWRsQqG6NtDPzTwj4M1GBX+K0oozfTuX
XF16vLiwmSN1ZWb68XabuuKHp7jibVNnumrr8dsizaLU9LUwpcPQQN92Qn39
uuUVXWnaAClrVteU0qb/Q62ccNH2fUNTT8dztOkFZNyo5N3QtzkCA9NGHNRr
RYBncYDypmurFHoiqnorLGrYgQv1ifC+r/Xl9+pqANnr1SYt7nj1EVDdgQ3j
2FREz9Kq5nSM8SoFf5KqZrw7jrMpenHO+gaQNHc96+J5mnunA3W5N4nad64I
q2InGMTFxdbmrIq5nzAj5WabVBXAneS4AZmK6L00q1IVgjxe+nZuUL3jZeSG
FTDkJbm8XfDj6Ujd8YquNvOEMRAX02xwRK8VAZ6jRW2UzvcCG6+cU/1q54yG
txQ3C6+sSLBoCfSrAD1Ur8hcZw7jXCezQB8vE7V1cX1v0krRTieEQjRv3iHr
thFIPNxmJzkOwxXzYV4JWsVVK7TySgH23bbMv63XJm6DV2pgHtzq7bxSiFtQ
D/PaSCh3h1sQ7hc5DMeTQNOnvKUUXFMHRVzNXQ9e8X3YbU/e/5DXRoLqS+jq
XZygKQqCmFtTd+zb/uFo9aG3PXn/Q14LiQKFYZwc+YfWk570pCf9c/oLqiy2
sA==
            "], {{0, 19}, {188, 0}}, {0, 255},
            ColorFunction->RGBColor],
           BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
           Selectable->False],
          DefaultBaseStyle->"ImageGraphics",
          ImageSize->Magnification[1],
          ImageSizeRaw->{188, 19},
          PlotRange->{{0, 188}, {0, 19}}]], "ExerciseOutput",
         ImageSize->{192, 19},
         ImageMargins->{{0, 0}, {0, 0}},
         ImageRegion->{{0, 1}, {0, 1}},
         Magnification->1],
        Apply[TextCell, 
         Cell[
          BoxData[
           GraphicsBox[
            TagBox[
             RasterBox[CompressedData["
1:eJztWS+v5DYQj1pSWKmfoB+gwaWBJY10VdmSO/VyKrlG10pVaKQCSyUuMgsK
CgoKaUiQSYgLTAJCQgJSKcTAYOuxk2x218nm2lMrVTvS25f18/z7zXhmnPf5
qx9eBB85jvPjJ+rjxcufvXfvXkbffKq+fPv2x+/fvH393Vdvf3r95vW7L199
rBY/Uz+/qx94Pj/pSU960pOe9KQn/R9oKFDguiET5uvYMNaO8ggjr+t2ENsb
xrrMs6xQmx6JsijteV1kWV7Ww44tY0cLpSKnvF+LWoh34yav6KkyLy8o795b
70RXCMihMfJ2dM4726qArby/Qk/2TV3zfew7RgFTytecSiBjzSO1ZwvOsq+K
LM1y1ontxTENPO8U035iHBlRw3CA8k6emyxyNCH6MMpnin2100XU/mfZIg9E
uS58RkW7JceqlJKTc6GoscE4sEzLdsxnmHFYFbW34nQ2zJNd6a94fVTJw3qt
CAhujJnkVf0m58jTtYHpJfhtrCXQzdiLUmPq+drFMNecIg+NxzuMQDacpxgZ
9rwRG4uSF8lpFeuxxo6Dp91lGoeAA6kf5IxoMiPUJ7V1Q1eChRmALvNIIRlu
JY1FaVcscZRdhUhlDUCTKj+QrhHqIAAYPezPFagQMmnIrlR2hefGJiV0IDwA
/JheGwIi9QFTMGZkyhY3rjb4BuzpbATEhwyRJWXqKV39eiv0I1WscQlKBorn
JBFlgqLA3WPUdI/zKkYtPAW53FhUxBPfcbHhFAxyZqWNK7n4Qc50SNnonU6u
42F7ztQKmlmFiUXCd1y6UtpkCvUTf9waxmEuswNFJu76CPjsSGudaahiw3tY
7/kOgZGAuxMUHA5l3NnYdEqrk34LhdQZ6EeR5/ib5WKEEhpVGiXJvFVhkTxR
1uznjDFthbPMQ8VEDBOHAxhwYV2EZwYeTutwWpfgnqfavp8zDDBxirZL/QtQ
NwQ546BJylA9kHmlVBahOqdly8uEEDUNHWjTRh2EybRa9xSGYUSy/Wp9HvuO
VRk4E6Tj++i9Q2Ag7gWKrpyS0KJRp3TFVbFPkrTg08zUQwa6uB+Zv8FotukO
EZS8pYlK76id01t7fSBnrnAeyerICy2BjtZFeOY6T9SjmtogrdZN/1HOyDbX
8wkco8RTKcnt1jWpjl1MSGx6PNlx6cYXf6r6URzq38l+1TMmBSnXejN1VHGW
54lu30G2PaNDcTCkVR/Va0Wg1swhIjg2LeZkddekNNgVxSfAxSt7k4GmvKjq
4e0UyTYPl1HDT5trse+fM94lPWYJ1kXtta6EKOdIzznlsCXW4nSigQ0Rxjj2
TT8v7aPK0FQ4jqKYVDSHonO0zuhQBumwMnuvXgwUgnRK77dohHd5FRSiLzAI
yNs/j+ndQkCwIlXuoqSoSwTThS1ZTc7kU4FolH1f//qbSQFMMNK5GkSobC3M
AhqQk7Jejk0a+Ss5/0adUd+IPvxy4FAF4nIFIoOWx7bUiyolmBAMhHxXn8Zq
8040W4rBwW77/FwrhUbjEYOabLO9uPcUhl8PLzdtKS5a+u0eoYy6RAVmA7hN
HNP7GAGYIr3EWt90FNxqOj0QoC9+UeKUPC0QTTlT2XKmxiqcyezeAAPcElyu
c2bntcfs6Qpn6MWLnQ3cIgIurYtGBWRsQqG6NtDPzTwj4M1GBX+K0oozfTuX
XF16vLiwmSN1ZWb68XabuuKHp7jibVNnumrr8dsizaLU9LUwpcPQQN92Qn39
uuUVXWnaAClrVteU0qb/Q62ccNH2fUNTT8dztOkFZNyo5N3QtzkCA9NGHNRr
RYBncYDypmurFHoiqnorLGrYgQv1ifC+r/Xl9+pqANnr1SYt7nj1EVDdgQ3j
2FREz9Kq5nSM8SoFf5KqZrw7jrMpenHO+gaQNHc96+J5mnunA3W5N4nad64I
q2InGMTFxdbmrIq5nzAj5WabVBXAneS4AZmK6L00q1IVgjxe+nZuUL3jZeSG
FTDkJbm8XfDj6Ujd8YquNvOEMRAX02xwRK8VAZ6jRW2UzvcCG6+cU/1q54yG
txQ3C6+sSLBoCfSrAD1Ur8hcZw7jXCezQB8vE7V1cX1v0krRTieEQjRv3iHr
thFIPNxmJzkOwxXzYV4JWsVVK7TySgH23bbMv63XJm6DV2pgHtzq7bxSiFtQ
D/PaSCh3h1sQ7hc5DMeTQNOnvKUUXFMHRVzNXQ9e8X3YbU/e/5DXRoLqS+jq
XZygKQqCmFtTd+zb/uFo9aG3PXn/Q14LiQKFYZwc+YfWk570pCf9c/oLqiy2
sA==
              "], {{0, 19}, {188, 0}}, {0, 255}, ColorFunction -> 
              RGBColor], 
             BoxForm`ImageTag[
             "Byte", ColorSpace -> "RGB", Interleaving -> True], Selectable -> 
             False], DefaultBaseStyle -> "ImageGraphics", ImageSize -> 
            Magnification[1], ImageSizeRaw -> {188, 19}, 
            PlotRange -> {{0, 188}, {0, 19}}]], "ExerciseOutput", 
          Magnification -> 1, CellFrameColor -> GrayLevel[0], Selectable -> 
          False, Copyable -> False, Editable -> False, ShowCellBracket -> 
          False, CellLabel -> "Out[]=", CellFrame -> False]]],
       FrameMargins->{{10, 0}, {10, 12}},
       ImageMargins->0,
       ImageSize->Full], 
      ButtonBox[
       PaneBox[
        StyleBox["\[Times]",
         FontFamily->"MathematicaMono",
         FontSize->18,
         FontWeight->"Bold",
         FontColor->GrayLevel[0.75]],
        Alignment->Right,
        FrameMargins->{{0, 6}, {0, 0}},
        ImageMargins->0],
       Appearance->None,
       ButtonFunction:>(SelectionMove[
          ButtonNotebook[], All, ButtonCell, AutoScroll -> False]; 
        NotebookFind[
          EvaluationNotebook[], "Exercise", Previous, CellStyle, WrapAround -> 
          False, AutoScroll -> False]; FrontEndExecute[
          FrontEndToken[
           ButtonNotebook[], "OpenCloseGroup"]])]}
    },
    GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {Top}},
    GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
   "Grid"],
  FrameMargins->0,
  FrameStyle->GrayLevel[0.7],
  StripOnInput->False]], "ExerciseOutput",
 Editable->False,
 Selectable->False,
 Deletable->False,
 CellFrame->{{1, 1}, {1, 1}},
 ShowCellBracket->False,
 CellFrameMargins->{{0, 0}, {0, 0}},
 CellFrameColor->GrayLevel[1],
 LineBreakWithin->Automatic]
}, Closed]],

Cell[CellGroupData[{

Cell[BoxData[
 StyleBox[
  DynamicBox[ToBoxes[
    $CellContext`SolutionResponseText["x5.2"], StandardForm],
   ImageSizeCache->{139., {3., 9.}}], "SolutionResponseText"]], "Subsection",
 Editable->False,
 Selectable->False,
 Deletable->False,
 ShowCellBracket->False,
 CellMargins->{{24, 25}, {3, 0}},
 CellFrameMargins->{{8, 0}, {0, 0}},
 TextAlignment->Right,
 ShowStringCharacters->False,
 FontFamily->"Source Sans Pro",
 FontSize->12,
 FontWeight->"Plain",
 FontSlant->"Plain",
 Background->GrayLevel[1]],

Cell[BoxData[
 ButtonBox[
  PaneBox[
   StyleBox[
    RowBox[{"[", " ", 
     RowBox[{"Click", " ", "to", " ", "enter", " ", "code"}], " ", "]"}],
    Selectable->False,
    StripOnInput->False,
    FontFamily->"Source Sans Pro",
    FontSize->14,
    FontWeight->Plain,
    FontColor->GrayLevel[0.6]],
   ImageSize->Full],
  Appearance->None,
  ButtonFunction:>(SelectionMove[
     InputNotebook[], All, ButtonCell]; NotebookWrite[
     InputNotebook[], 
     Cell[
      BoxData[""], "Input"]]; SelectionMove[
     InputNotebook[], Before, CellContents]; Null),
  Evaluator->Automatic,
  Method->"Preemptive"]], "Input",
 CellFrameLabels->{{None, None}, {None, None}},
 ShowSyntaxStyles->False,
 ShowStringCharacters->False,
 CellTags->"FirstInputCell"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 PaneBox["\[ThickSpace]",
  ImageSize->Full]], "CodeSectionDividerCloud",
 Editable->False,
 Selectable->False,
 Deletable->False,
 CellMargins->{{0, 0}, {0, 35}},
 CellBracketOptions->{"OverlapContent"->True}],

Cell["Encuentre el \[UAcute]ltimo d\[IAcute]gito de 2^37.", "Exercise",
 Editable->False,
 Selectable->False,
 Deletable->False,
 CellDingbat->Cell[
  "+5.3", "ExerciseNumber", FontColor -> 
   RGBColor[0.9019607843137255, 0.4117647058823529, 0.027450980392156862`]],
 ShowCellBracket->False,
 CounterAssignments->{{"SectionNumber", 5}, {"ExerciseNumber", 3}, {
   "WebOnly", 1}}],

Cell[CellGroupData[{

Cell[BoxData[
 TagBox[
  ButtonBox[
   StyleBox[
    RowBox[{"EXPECTED", " ", "OUTPUT", " ", "\[RightGuillemet]"}],
    FontFamily->"Source Sans Pro",
    FontSize->12,
    FontColor->GrayLevel[0.6]],
   Appearance->None,
   ButtonFunction:>(SelectionMove[
      ButtonNotebook[], All, ButtonCell, AutoScroll -> False]; FrontEndExecute[
      FrontEndToken[
       ButtonNotebook[], "OpenCloseGroup"]]),
   Evaluator->Automatic,
   Method->"Preemptive"],
  MouseAppearanceTag["LinkHand"]]], "ExerciseExpectedResult",
 Editable->False,
 Deletable->False,
 ShowCellBracket->False],

Cell[BoxData[
 FrameBox[
  TagBox[GridBox[{
     {
      PaneBox[
       InterpretationBox[Cell[BoxData[
         GraphicsBox[
          TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFAYiNmBGMT+TyPw6emJ7RtXr9544voriMC7S6v1GEAAQhasvg4UvLM0hoGh
8ylYw9I0oHAnWPWnd59+Q3Wd6GRgcDzxCcXssxMdGRianiKJ/H6wEag5bel1
hNC7E0CjGWKWIrS+OgGywXHiK5jA96d7Y8COmbH37KWzZ0+cOHHn3e9LM/wZ
UEHniXfUDBm8AABqhFJ0
            "], {{0, 19}, {7, 0}}, {0, 255},
            ColorFunction->RGBColor],
           BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
           Selectable->False],
          DefaultBaseStyle->"ImageGraphics",
          ImageSize->Magnification[1],
          ImageSizeRaw->{7, 19},
          PlotRange->{{0, 7}, {0, 19}}]], "ExerciseOutput",
         ImageSize->{11, 19},
         ImageMargins->{{0, 0}, {0, 0}},
         ImageRegion->{{0, 1}, {0, 1}},
         Magnification->1],
        Apply[TextCell, 
         Cell[
          BoxData[
           GraphicsBox[
            TagBox[
             RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFAYiNmBGMT+TyPw6emJ7RtXr9544voriMC7S6v1GEAAQhasvg4UvLM0hoGh
8ylYw9I0oHAnWPWnd59+Q3Wd6GRgcDzxCcXssxMdGRianiKJ/H6wEag5bel1
hNC7E0CjGWKWIrS+OgGywXHiK5jA96d7Y8COmbH37KWzZ0+cOHHn3e9LM/wZ
UEHniXfUDBm8AABqhFJ0
              "], {{0, 19}, {7, 0}}, {0, 255}, 
              ColorFunction -> RGBColor], 
             BoxForm`ImageTag[
             "Byte", ColorSpace -> "RGB", Interleaving -> True], Selectable -> 
             False], DefaultBaseStyle -> "ImageGraphics", ImageSize -> 
            Magnification[1], ImageSizeRaw -> {7, 19}, 
            PlotRange -> {{0, 7}, {0, 19}}]], "ExerciseOutput", Magnification -> 
          1, CellFrameColor -> GrayLevel[0], Selectable -> False, Copyable -> 
          False, Editable -> False, ShowCellBracket -> False, CellLabel -> 
          "Out[]=", CellFrame -> False]]],
       FrameMargins->{{10, 0}, {10, 12}},
       ImageMargins->0,
       ImageSize->Full], 
      ButtonBox[
       PaneBox[
        StyleBox["\[Times]",
         FontFamily->"MathematicaMono",
         FontSize->18,
         FontWeight->"Bold",
         FontColor->GrayLevel[0.75]],
        Alignment->Right,
        FrameMargins->{{0, 6}, {0, 0}},
        ImageMargins->0],
       Appearance->None,
       ButtonFunction:>(SelectionMove[
          ButtonNotebook[], All, ButtonCell, AutoScroll -> False]; 
        NotebookFind[
          EvaluationNotebook[], "Exercise", Previous, CellStyle, WrapAround -> 
          False, AutoScroll -> False]; FrontEndExecute[
          FrontEndToken[
           ButtonNotebook[], "OpenCloseGroup"]])]}
    },
    GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {Top}},
    GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
   "Grid"],
  FrameMargins->0,
  FrameStyle->GrayLevel[0.7],
  StripOnInput->False]], "ExerciseOutput",
 Editable->False,
 Selectable->False,
 Deletable->False,
 CellFrame->{{1, 1}, {1, 1}},
 ShowCellBracket->False,
 CellFrameMargins->{{0, 0}, {0, 0}},
 CellFrameColor->GrayLevel[1],
 LineBreakWithin->Automatic]
}, Closed]],

Cell[CellGroupData[{

Cell[BoxData[
 StyleBox[
  DynamicBox[ToBoxes[
    $CellContext`SolutionResponseText["x5.3"], StandardForm],
   ImageSizeCache->{139., {3., 9.}}], "SolutionResponseText"]], "Subsection",
 Editable->False,
 Selectable->False,
 Deletable->False,
 ShowCellBracket->False,
 CellMargins->{{24, 25}, {3, 0}},
 CellFrameMargins->{{8, 0}, {0, 0}},
 TextAlignment->Right,
 ShowStringCharacters->False,
 FontFamily->"Source Sans Pro",
 FontSize->12,
 FontWeight->"Plain",
 FontSlant->"Plain",
 Background->GrayLevel[1]],

Cell[BoxData[
 ButtonBox[
  PaneBox[
   StyleBox[
    RowBox[{"[", " ", 
     RowBox[{"Click", " ", "to", " ", "enter", " ", "code"}], " ", "]"}],
    Selectable->False,
    StripOnInput->False,
    FontFamily->"Source Sans Pro",
    FontSize->14,
    FontWeight->Plain,
    FontColor->GrayLevel[0.6]],
   ImageSize->Full],
  Appearance->None,
  ButtonFunction:>(SelectionMove[
     InputNotebook[], All, ButtonCell]; NotebookWrite[
     InputNotebook[], 
     Cell[
      BoxData[""], "Input"]]; SelectionMove[
     InputNotebook[], Before, CellContents]; Null),
  Evaluator->Automatic,
  Method->"Preemptive"]], "Input",
 CellFrameLabels->{{None, None}, {None, None}},
 ShowSyntaxStyles->False,
 ShowStringCharacters->False,
 CellTags->"FirstInputCell"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 PaneBox["\[ThickSpace]",
  ImageSize->Full]], "CodeSectionDividerCloud",
 Editable->False,
 Selectable->False,
 Deletable->False,
 CellMargins->{{0, 0}, {0, 35}},
 CellBracketOptions->{"OverlapContent"->True}],

Cell["Encuentre el pen\[UAcute]ltimo d\[IAcute]gito de 2^32.", "Exercise",
 Editable->False,
 Selectable->False,
 Deletable->False,
 CellDingbat->Cell[
  "+5.4", "ExerciseNumber", FontColor -> 
   RGBColor[0.9019607843137255, 0.4117647058823529, 0.027450980392156862`]],
 ShowCellBracket->False,
 CounterAssignments->{{"SectionNumber", 5}, {"ExerciseNumber", 4}, {
   "WebOnly", 1}}],

Cell[CellGroupData[{

Cell[BoxData[
 TagBox[
  ButtonBox[
   StyleBox[
    RowBox[{"EXPECTED", " ", "OUTPUT", " ", "\[RightGuillemet]"}],
    FontFamily->"Source Sans Pro",
    FontSize->12,
    FontColor->GrayLevel[0.6]],
   Appearance->None,
   ButtonFunction:>(SelectionMove[
      ButtonNotebook[], All, ButtonCell, AutoScroll -> False]; FrontEndExecute[
      FrontEndToken[
       ButtonNotebook[], "OpenCloseGroup"]]),
   Evaluator->Automatic,
   Method->"Preemptive"],
  MouseAppearanceTag["LinkHand"]]], "ExerciseExpectedResult",
 Editable->False,
 Deletable->False,
 ShowCellBracket->False],

Cell[BoxData[
 FrameBox[
  TagBox[GridBox[{
     {
      PaneBox[
       InterpretationBox[Cell[BoxData[
         GraphicsBox[
          TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFAYiNmBGMT+Tyvw6ezejatXbz/74B1U4PeDTkeghQx6eiCycvsDoNjTvZVA
9uo7v4HSGyuBEgVA0bMTHRn0JkK1Pd0OVDD/+ieQIEMnVPDdISBn4tl33+8s
BRkY0zRjRhPYVIYZZz+B5O8cmthUWdk049CJjSBtZ98hu+z72YlAlRuf/v79
6lBBTNOh6w/unF3tDxQq2Ahyx6sTaRCzgCanzXjwG8lLIPCdZiEGAgAxK0iY

            "], {{0, 19}, {7, 0}}, {0, 255},
            ColorFunction->RGBColor],
           BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
           Selectable->False],
          DefaultBaseStyle->"ImageGraphics",
          ImageSize->Magnification[1],
          ImageSizeRaw->{7, 19},
          PlotRange->{{0, 7}, {0, 19}}]], "ExerciseOutput",
         ImageSize->{11, 19},
         ImageMargins->{{0, 0}, {0, 0}},
         ImageRegion->{{0, 1}, {0, 1}},
         Magnification->1],
        Apply[TextCell, 
         Cell[
          BoxData[
           GraphicsBox[
            TagBox[
             RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFAYiNmBGMT+Tyvw6ezejatXbz/74B1U4PeDTkeghQx6eiCycvsDoNjTvZVA
9uo7v4HSGyuBEgVA0bMTHRn0JkK1Pd0OVDD/+ieQIEMnVPDdISBn4tl33+8s
BRkY0zRjRhPYVIYZZz+B5O8cmthUWdk049CJjSBtZ98hu+z72YlAlRuf/v79
6lBBTNOh6w/unF3tDxQq2Ahyx6sTaRCzgCanzXjwG8lLIPCdZiEGAgAxK0iY

              "], {{0, 19}, {7, 0}}, {0, 255}, ColorFunction -> RGBColor], 
             BoxForm`ImageTag[
             "Byte", ColorSpace -> "RGB", Interleaving -> True], Selectable -> 
             False], DefaultBaseStyle -> "ImageGraphics", ImageSize -> 
            Magnification[1], ImageSizeRaw -> {7, 19}, 
            PlotRange -> {{0, 7}, {0, 19}}]], "ExerciseOutput", Magnification -> 
          1, CellFrameColor -> GrayLevel[0], Selectable -> False, Copyable -> 
          False, Editable -> False, ShowCellBracket -> False, CellLabel -> 
          "Out[]=", CellFrame -> False]]],
       FrameMargins->{{10, 0}, {10, 12}},
       ImageMargins->0,
       ImageSize->Full], 
      ButtonBox[
       PaneBox[
        StyleBox["\[Times]",
         FontFamily->"MathematicaMono",
         FontSize->18,
         FontWeight->"Bold",
         FontColor->GrayLevel[0.75]],
        Alignment->Right,
        FrameMargins->{{0, 6}, {0, 0}},
        ImageMargins->0],
       Appearance->None,
       ButtonFunction:>(SelectionMove[
          ButtonNotebook[], All, ButtonCell, AutoScroll -> False]; 
        NotebookFind[
          EvaluationNotebook[], "Exercise", Previous, CellStyle, WrapAround -> 
          False, AutoScroll -> False]; FrontEndExecute[
          FrontEndToken[
           ButtonNotebook[], "OpenCloseGroup"]])]}
    },
    GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {Top}},
    GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
   "Grid"],
  FrameMargins->0,
  FrameStyle->GrayLevel[0.7],
  StripOnInput->False]], "ExerciseOutput",
 Editable->False,
 Selectable->False,
 Deletable->False,
 CellFrame->{{1, 1}, {1, 1}},
 ShowCellBracket->False,
 CellFrameMargins->{{0, 0}, {0, 0}},
 CellFrameColor->GrayLevel[1],
 LineBreakWithin->Automatic]
}, Closed]],

Cell[CellGroupData[{

Cell[BoxData[
 StyleBox[
  DynamicBox[ToBoxes[
    $CellContext`SolutionResponseText["x5.4"], StandardForm],
   ImageSizeCache->{139., {3., 9.}}], "SolutionResponseText"]], "Subsection",
 Editable->False,
 Selectable->False,
 Deletable->False,
 ShowCellBracket->False,
 CellMargins->{{24, 25}, {3, 0}},
 CellFrameMargins->{{8, 0}, {0, 0}},
 TextAlignment->Right,
 ShowStringCharacters->False,
 FontFamily->"Source Sans Pro",
 FontSize->12,
 FontWeight->"Plain",
 FontSlant->"Plain",
 Background->GrayLevel[1]],

Cell[BoxData[
 ButtonBox[
  PaneBox[
   StyleBox[
    RowBox[{"[", " ", 
     RowBox[{"Click", " ", "to", " ", "enter", " ", "code"}], " ", "]"}],
    Selectable->False,
    StripOnInput->False,
    FontFamily->"Source Sans Pro",
    FontSize->14,
    FontWeight->Plain,
    FontColor->GrayLevel[0.6]],
   ImageSize->Full],
  Appearance->None,
  ButtonFunction:>(SelectionMove[
     InputNotebook[], All, ButtonCell]; NotebookWrite[
     InputNotebook[], 
     Cell[
      BoxData[""], "Input"]]; SelectionMove[
     InputNotebook[], Before, CellContents]; Null),
  Evaluator->Automatic,
  Method->"Preemptive"]], "Input",
 CellFrameLabels->{{None, None}, {None, None}},
 ShowSyntaxStyles->False,
 ShowStringCharacters->False,
 CellTags->"FirstInputCell"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 PaneBox["\[ThickSpace]",
  ImageSize->Full]], "CodeSectionDividerCloud",
 Editable->False,
 Selectable->False,
 Deletable->False,
 CellMargins->{{0, 0}, {0, 35}},
 CellBracketOptions->{"OverlapContent"->True}],

Cell["Encuentre la suma de todos los d\[IAcute]gitos en 3^126.", "Exercise",
 Editable->False,
 Selectable->False,
 Deletable->False,
 CellDingbat->Cell[
  "+5.5", "ExerciseNumber", FontColor -> 
   RGBColor[0.9019607843137255, 0.4117647058823529, 0.027450980392156862`]],
 ShowCellBracket->False,
 CounterAssignments->{{"SectionNumber", 5}, {"ExerciseNumber", 5}, {
   "WebOnly", 1}}],

Cell[CellGroupData[{

Cell[BoxData[
 TagBox[
  ButtonBox[
   StyleBox[
    RowBox[{"EXPECTED", " ", "OUTPUT", " ", "\[RightGuillemet]"}],
    FontFamily->"Source Sans Pro",
    FontSize->12,
    FontColor->GrayLevel[0.6]],
   Appearance->None,
   ButtonFunction:>(SelectionMove[
      ButtonNotebook[], All, ButtonCell, AutoScroll -> False]; FrontEndExecute[
      FrontEndToken[
       ButtonNotebook[], "OpenCloseGroup"]]),
   Evaluator->Automatic,
   Method->"Preemptive"],
  MouseAppearanceTag["LinkHand"]]], "ExerciseExpectedResult",
 Editable->False,
 Deletable->False,
 ShowCellBracket->False],

Cell[BoxData[
 FrameBox[
  TagBox[GridBox[{
     {
      PaneBox[
       InterpretationBox[Cell[BoxData[
         GraphicsBox[
          TagBox[RasterBox[CompressedData["
1:eJztUqFuwzAQPW1kcNK0D9gPFI8aDkXaNFbSak010lXtpCm0zNAsLKgoKKgo
JNIkExMPhFhTSIhBgElAQHd2oqxJP2F7ki372Xfv3dl387dH/wIAtlc4Pc4+
yGYzC56ucfO82r4uV4uXh9X7YrnY3M8vkbzBcYvDro9/HKbkhySOE57rE04i
lxwypevR9UYrIXLT2HUl4wlYtPM6zvFcROsTDiJZnUQXO3fEjd2o/RSAlk5w
7yNP0UEe+R7jTkkFyAVpHyzCqUvpCdPZrFof6IRTAMLNoDCkYLpvC2hUbCOD
gIA3vOYyMwKwK7sKjS5UGjnxRDlKU6xmwrSR3ljl2BQJ3vT3eacqGHRY505b
Rmi7FZUEiGxOgis+dSZHKU0pdqhIwsolx3AWMrqzjfUDmhYur+a2Z4T1z9bU
v4+lD+iffH6LkLEwxIkx2oVnRV2XadvKMBVSCM650l/WJY2VrkqVYZtgQvXA
lDUvnHkZejAE5VWRRaTfk3VWDn9OLchZ687Q1MbU9fjL/aPHDxDL4i4=
            "], {{0, 
            19}, {21, 0}}, {0, 255},
            ColorFunction->RGBColor],
           BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
           Selectable->False],
          DefaultBaseStyle->"ImageGraphics",
          ImageSize->Magnification[1],
          ImageSizeRaw->{21, 19},
          PlotRange->{{0, 21}, {0, 19}}]], "ExerciseOutput",
         ImageSize->{25, 19},
         ImageMargins->{{0, 0}, {0, 0}},
         ImageRegion->{{0, 1}, {0, 1}},
         Magnification->1],
        Apply[TextCell, 
         Cell[
          BoxData[
           GraphicsBox[
            TagBox[
             RasterBox[CompressedData["
1:eJztUqFuwzAQPW1kcNK0D9gPFI8aDkXaNFbSak010lXtpCm0zNAsLKgoKKgo
JNIkExMPhFhTSIhBgElAQHd2oqxJP2F7ki372Xfv3dl387dH/wIAtlc4Pc4+
yGYzC56ucfO82r4uV4uXh9X7YrnY3M8vkbzBcYvDro9/HKbkhySOE57rE04i
lxwypevR9UYrIXLT2HUl4wlYtPM6zvFcROsTDiJZnUQXO3fEjd2o/RSAlk5w
7yNP0UEe+R7jTkkFyAVpHyzCqUvpCdPZrFof6IRTAMLNoDCkYLpvC2hUbCOD
gIA3vOYyMwKwK7sKjS5UGjnxRDlKU6xmwrSR3ljl2BQJ3vT3eacqGHRY505b
Rmi7FZUEiGxOgis+dSZHKU0pdqhIwsolx3AWMrqzjfUDmhYur+a2Z4T1z9bU
v4+lD+iffH6LkLEwxIkx2oVnRV2XadvKMBVSCM650l/WJY2VrkqVYZtgQvXA
lDUvnHkZejAE5VWRRaTfk3VWDn9OLchZ687Q1MbU9fjL/aPHDxDL4i4=
              "], {{
              0, 19}, {21, 0}}, {0, 255}, ColorFunction -> RGBColor], 
             BoxForm`ImageTag[
             "Byte", ColorSpace -> "RGB", Interleaving -> True], Selectable -> 
             False], DefaultBaseStyle -> "ImageGraphics", ImageSize -> 
            Magnification[1], ImageSizeRaw -> {21, 19}, 
            PlotRange -> {{0, 21}, {0, 19}}]], "ExerciseOutput", 
          Magnification -> 1, CellFrameColor -> GrayLevel[0], Selectable -> 
          False, Copyable -> False, Editable -> False, ShowCellBracket -> 
          False, CellLabel -> "Out[]=", CellFrame -> False]]],
       FrameMargins->{{10, 0}, {10, 12}},
       ImageMargins->0,
       ImageSize->Full], 
      ButtonBox[
       PaneBox[
        StyleBox["\[Times]",
         FontFamily->"MathematicaMono",
         FontSize->18,
         FontWeight->"Bold",
         FontColor->GrayLevel[0.75]],
        Alignment->Right,
        FrameMargins->{{0, 6}, {0, 0}},
        ImageMargins->0],
       Appearance->None,
       ButtonFunction:>(SelectionMove[
          ButtonNotebook[], All, ButtonCell, AutoScroll -> False]; 
        NotebookFind[
          EvaluationNotebook[], "Exercise", Previous, CellStyle, WrapAround -> 
          False, AutoScroll -> False]; FrontEndExecute[
          FrontEndToken[
           ButtonNotebook[], "OpenCloseGroup"]])]}
    },
    GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {Top}},
    GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
   "Grid"],
  FrameMargins->0,
  FrameStyle->GrayLevel[0.7],
  StripOnInput->False]], "ExerciseOutput",
 Editable->False,
 Selectable->False,
 Deletable->False,
 CellFrame->{{1, 1}, {1, 1}},
 ShowCellBracket->False,
 CellFrameMargins->{{0, 0}, {0, 0}},
 CellFrameColor->GrayLevel[1],
 LineBreakWithin->Automatic]
}, Closed]],

Cell[CellGroupData[{

Cell[BoxData[
 StyleBox[
  DynamicBox[ToBoxes[
    $CellContext`SolutionResponseText["x5.5"], StandardForm],
   ImageSizeCache->{139., {3., 9.}}], "SolutionResponseText"]], "Subsection",
 Editable->False,
 Selectable->False,
 Deletable->False,
 ShowCellBracket->False,
 CellMargins->{{24, 25}, {3, 0}},
 CellFrameMargins->{{8, 0}, {0, 0}},
 TextAlignment->Right,
 ShowStringCharacters->False,
 FontFamily->"Source Sans Pro",
 FontSize->12,
 FontWeight->"Plain",
 FontSlant->"Plain",
 Background->GrayLevel[1]],

Cell[BoxData[
 ButtonBox[
  PaneBox[
   StyleBox[
    RowBox[{"[", " ", 
     RowBox[{"Click", " ", "to", " ", "enter", " ", "code"}], " ", "]"}],
    Selectable->False,
    StripOnInput->False,
    FontFamily->"Source Sans Pro",
    FontSize->14,
    FontWeight->Plain,
    FontColor->GrayLevel[0.6]],
   ImageSize->Full],
  Appearance->None,
  ButtonFunction:>(SelectionMove[
     InputNotebook[], All, ButtonCell]; NotebookWrite[
     InputNotebook[], 
     Cell[
      BoxData[""], "Input"]]; SelectionMove[
     InputNotebook[], Before, CellContents]; Null),
  Evaluator->Automatic,
  Method->"Preemptive"]], "Input",
 CellFrameLabels->{{None, None}, {None, None}},
 ShowSyntaxStyles->False,
 ShowStringCharacters->False,
 CellTags->"FirstInputCell"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 PaneBox["\[ThickSpace]",
  ImageSize->Full]], "CodeSectionDividerCloud",
 Editable->False,
 Selectable->False,
 Deletable->False,
 CellMargins->{{0, 0}, {0, 35}},
 CellBracketOptions->{"OverlapContent"->True}],

Cell["\<\
Construya el diagrama circular de la secuencia de los d\[IAcute]gitos que \
aparecen en 2^32.\
\>", "Exercise",
 Editable->False,
 Selectable->False,
 Deletable->False,
 CellDingbat->Cell[
  "+5.6", "ExerciseNumber", FontColor -> 
   RGBColor[0.9019607843137255, 0.4117647058823529, 0.027450980392156862`]],
 ShowCellBracket->False,
 CounterAssignments->{{"SectionNumber", 5}, {"ExerciseNumber", 6}, {
   "WebOnly", 1}}],

Cell[CellGroupData[{

Cell[BoxData[
 TagBox[
  ButtonBox[
   StyleBox[
    RowBox[{"EXPECTED", " ", "OUTPUT", " ", "\[RightGuillemet]"}],
    FontFamily->"Source Sans Pro",
    FontSize->12,
    FontColor->GrayLevel[0.6]],
   Appearance->None,
   ButtonFunction:>(SelectionMove[
      ButtonNotebook[], All, ButtonCell, AutoScroll -> False]; FrontEndExecute[
      FrontEndToken[
       ButtonNotebook[], "OpenCloseGroup"]]),
   Evaluator->Automatic,
   Method->"Preemptive"],
  MouseAppearanceTag["LinkHand"]]], "ExerciseExpectedResult",
 Editable->False,
 Deletable->False,
 ShowCellBracket->False],

Cell[BoxData[
 FrameBox[
  TagBox[GridBox[{
     {
      PaneBox[
       InterpretationBox[Cell[BoxData[
         GraphicsBox[
          TagBox[RasterBox[CompressedData["
1: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
POOx3MAkhtFraRkLzY232paN2WGroW3Rnxpq9Pfff4+6xPXCb7/9RmOpkFeT
hcgS7/TyTeWQqnRIjGmrtEP+7jHTuaEkl7KDonXIjbfblmi3NU0kL+QlZpZm
U+KePXuGusT1BYzgMIDqiqvJtEpv7yRt1j6dQwOzrvC8j1vkdG7UC3dEe868
cL5QWziyNP9gMrQteDs17IuRirq49YhMUSorGkFeWWZsVsHZ0OiMiGBOdd7w
YkJjWq8NET3qE1hu9Kj7QzdG7JYWLDI6DuVMtS2RbljbAqctuGnGL6dMU7+p
Xag4jry4zFWOtM/bL42eWrz4xJg2wDuxTXZgesnBT5BqEqmLzI03bYsoNjXG
bfVmMrQtOLiLH9RSU4q6uPXIvv2H4eqXPpwa7ses9/JKUGbuxCs0MMMDyZsy
e6Zzo4DeQPBZ2Gns3DZzstP8gsg+0LYs1laaz75dvaiLW49cuHCBym9BXmVm
pqxwJCIuKySQjktv8rax4ewKXtt0brRm7QtxC8YxN6bblmIiN8ptozxi9TC0
LbpaTfIdHR1FXdx65M6dOwx+DfJCMyf5skPe/kRSogbfxJg2JTazkN4wnRuY
Cf6pLVwZvtGBuVOcnxmTAm2LzhZRI7DKQl3ceuThw4d0bj7yWjMPNVWfkThN
nl4Jbw/3w1dSklxJLH+TG9mE/IywRNxz48+2hZ2VirUtXs6HMqFtWZg5lNjH
jx+jLm49Mjk5yeQqYKr54v3XcD/yjOF++Mog5GUlF7zJjSpee8ICL5wvtG0p
InIjN2yQh0PbMl9ff6ktFass1MWtXwqK68WaU8jrzqQVKI75BlJS4xT6S4xp
OZRSQaziTW7sUB4L3hDy3vFf+LYtGVNti2szBdqWD3sgI7RSI0dd1npn5659
LPEu5KVnomqqb1B4rZ5eibMN98PXdHoNK0L8Jjcw6VH8UgJXr7kx7ebXbQvF
G9qWD9hG993d3YG6rPXOJ598QuU3Iy9AU1RReik2Jdffl1Cq7DdAaGBmsJrI
Qby3c0NDrab6RxggNzAP5pQVETiRbm7QtsxhJcnv4sWLqMta73z11Vd0Xhny
GjQ5M9Un/EMYSdFZhkmMaSXctmQ/xtu50STaGenx4fFfONorzhdGJ2Ntyxaq
D/IiNUI11Mivv/4adVnrnRcvXtBYCuRlaFpSBdu95jfcD19l6R2J/pS3c6M3
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
AAAAAAAAAAAAAAAAAAAAAAAwJP8/UrXhZQ==
            "], {{0, 360}, {360, 0}}, {0,
             255},
            ColorFunction->RGBColor],
           BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
           Selectable->False],
          DefaultBaseStyle->"ImageGraphics",
          ImageSize->Magnification[1],
          ImageSizeRaw->{360, 360},
          PlotRange->{{0, 360}, {0, 360}}]], "ExerciseOutput",
         ImageSize->{364, 360},
         ImageMargins->{{0, 0}, {0, 0}},
         ImageRegion->{{0, 1}, {0, 1}},
         Magnification->1],
        Apply[TextCell, 
         Cell[
          BoxData[
           GraphicsBox[
            TagBox[
             RasterBox[CompressedData["
1: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
POOx3MAkhtFraRkLzY232paN2WGroW3Rnxpq9Pfff4+6xPXCb7/9RmOpkFeT
hcgS7/TyTeWQqnRIjGmrtEP+7jHTuaEkl7KDonXIjbfblmi3NU0kL+QlZpZm
U+KePXuGusT1BYzgMIDqiqvJtEpv7yRt1j6dQwOzrvC8j1vkdG7UC3dEe868
cL5QWziyNP9gMrQteDs17IuRirq49YhMUSorGkFeWWZsVsHZ0OiMiGBOdd7w
YkJjWq8NET3qE1hu9Kj7QzdG7JYWLDI6DuVMtS2RbljbAqctuGnGL6dMU7+p
Xag4jry4zFWOtM/bL42eWrz4xJg2wDuxTXZgesnBT5BqEqmLzI03bYsoNjXG
bfVmMrQtOLiLH9RSU4q6uPXIvv2H4eqXPpwa7ses9/JKUGbuxCs0MMMDyZsy
e6Zzo4DeQPBZ2Gns3DZzstP8gsg+0LYs1laaz75dvaiLW49cuHCBym9BXmVm
pqxwJCIuKySQjktv8rax4ewKXtt0brRm7QtxC8YxN6bblmIiN8ptozxi9TC0
LbpaTfIdHR1FXdx65M6dOwx+DfJCMyf5skPe/kRSogbfxJg2JTazkN4wnRuY
Cf6pLVwZvtGBuVOcnxmTAm2LzhZRI7DKQl3ceuThw4d0bj7yWjMPNVWfkThN
nl4Jbw/3w1dSklxJLH+TG9mE/IywRNxz48+2hZ2VirUtXs6HMqFtWZg5lNjH
jx+jLm49Mjk5yeQqYKr54v3XcD/yjOF++Mog5GUlF7zJjSpee8ICL5wvtG0p
InIjN2yQh0PbMl9ff6ktFass1MWtXwqK68WaU8jrzqQVKI75BlJS4xT6S4xp
OZRSQaziTW7sUB4L3hDy3vFf+LYtGVNti2szBdqWD3sgI7RSI0dd1npn5659
LPEu5KVnomqqb1B4rZ5eibMN98PXdHoNK0L8Jjcw6VH8UgJXr7kx7ebXbQvF
G9qWD9hG993d3YG6rPXOJ598QuU3Iy9AU1RReik2Jdffl1Cq7DdAaGBmsJrI
Qby3c0NDrab6RxggNzAP5pQVETiRbm7QtsxhJcnv4sWLqMta73z11Vd0Xhny
GjQ5M9Un/EMYSdFZhkmMaSXctmQ/xtu50STaGenx4fFfONorzhdGJ2Ntyxaq
D/IiNUI11Mivv/4adVnrnRcvXtBYCuRlaFpSBdu95jfcD19l6R2J/pS3c6M3
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
AAAAAAAAAAAAAAAAAAAAAAAwJP8/UrXhZQ==
              "], {{0, 360}, {360, 0}}, {
              0, 255}, ColorFunction -> RGBColor], 
             BoxForm`ImageTag[
             "Byte", ColorSpace -> "RGB", Interleaving -> True], Selectable -> 
             False], DefaultBaseStyle -> "ImageGraphics", ImageSize -> 
            Magnification[1], ImageSizeRaw -> {360, 360}, 
            PlotRange -> {{0, 360}, {0, 360}}]], "ExerciseOutput", 
          Magnification -> 1, CellFrameColor -> GrayLevel[0], Selectable -> 
          False, Copyable -> False, Editable -> False, ShowCellBracket -> 
          False, CellLabel -> "Out[]=", CellFrame -> False]]],
       FrameMargins->{{10, 0}, {10, 12}},
       ImageMargins->0,
       ImageSize->Full], 
      ButtonBox[
       PaneBox[
        StyleBox["\[Times]",
         FontFamily->"MathematicaMono",
         FontSize->18,
         FontWeight->"Bold",
         FontColor->GrayLevel[0.75]],
        Alignment->Right,
        FrameMargins->{{0, 6}, {0, 0}},
        ImageMargins->0],
       Appearance->None,
       ButtonFunction:>(SelectionMove[
          ButtonNotebook[], All, ButtonCell, AutoScroll -> False]; 
        NotebookFind[
          EvaluationNotebook[], "Exercise", Previous, CellStyle, WrapAround -> 
          False, AutoScroll -> False]; FrontEndExecute[
          FrontEndToken[
           ButtonNotebook[], "OpenCloseGroup"]])]}
    },
    GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {Top}},
    GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
   "Grid"],
  FrameMargins->0,
  FrameStyle->GrayLevel[0.7],
  StripOnInput->False]], "ExerciseOutput",
 Editable->False,
 Selectable->False,
 Deletable->False,
 CellFrame->{{1, 1}, {1, 1}},
 ShowCellBracket->False,
 CellFrameMargins->{{0, 0}, {0, 0}},
 CellFrameColor->GrayLevel[1],
 LineBreakWithin->Automatic]
}, Closed]],

Cell[CellGroupData[{

Cell[BoxData[
 StyleBox[
  DynamicBox[ToBoxes[
    $CellContext`SolutionResponseText["x5.6"], StandardForm],
   ImageSizeCache->{139., {3., 9.}}], "SolutionResponseText"]], "Subsection",
 Editable->False,
 Selectable->False,
 Deletable->False,
 ShowCellBracket->False,
 CellMargins->{{24, 25}, {3, 0}},
 CellFrameMargins->{{8, 0}, {0, 0}},
 TextAlignment->Right,
 ShowStringCharacters->False,
 FontFamily->"Source Sans Pro",
 FontSize->12,
 FontWeight->"Plain",
 FontSlant->"Plain",
 Background->GrayLevel[1]],

Cell[BoxData[
 ButtonBox[
  PaneBox[
   StyleBox[
    RowBox[{"[", " ", 
     RowBox[{"Click", " ", "to", " ", "enter", " ", "code"}], " ", "]"}],
    Selectable->False,
    StripOnInput->False,
    FontFamily->"Source Sans Pro",
    FontSize->14,
    FontWeight->Plain,
    FontColor->GrayLevel[0.6]],
   ImageSize->Full],
  Appearance->None,
  ButtonFunction:>(SelectionMove[
     InputNotebook[], All, ButtonCell]; NotebookWrite[
     InputNotebook[], 
     Cell[
      BoxData[""], "Input"]]; SelectionMove[
     InputNotebook[], Before, CellContents]; Null),
  Evaluator->Automatic,
  Method->"Preemptive"]], "Input",
 CellFrameLabels->{{None, None}, {None, None}},
 ShowSyntaxStyles->False,
 ShowStringCharacters->False,
 CellTags->"FirstInputCell"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 PaneBox["\[ThickSpace]",
  ImageSize->Full]], "CodeSectionDividerCloud",
 Editable->False,
 Selectable->False,
 Deletable->False,
 CellMargins->{{0, 0}, {0, 35}},
 CellBracketOptions->{"OverlapContent"->True}],

Cell["\<\
Haga una lista de diagramas circulares para las secuencias de los \
d\[IAcute]gitos que aparecen en 2^20, 2^40, 2^60.\
\>", "Exercise",
 Editable->False,
 Selectable->False,
 Deletable->False,
 CellDingbat->Cell[
  "+5.7", "ExerciseNumber", FontColor -> 
   RGBColor[0.9019607843137255, 0.4117647058823529, 0.027450980392156862`]],
 ShowCellBracket->False,
 CounterAssignments->{{"SectionNumber", 5}, {"ExerciseNumber", 7}, {
   "WebOnly", 1}}],

Cell[CellGroupData[{

Cell[BoxData[
 TagBox[
  ButtonBox[
   StyleBox[
    RowBox[{"EXPECTED", " ", "OUTPUT", " ", "\[RightGuillemet]"}],
    FontFamily->"Source Sans Pro",
    FontSize->12,
    FontColor->GrayLevel[0.6]],
   Appearance->None,
   ButtonFunction:>(SelectionMove[
      ButtonNotebook[], All, ButtonCell, AutoScroll -> False]; FrontEndExecute[
      FrontEndToken[
       ButtonNotebook[], "OpenCloseGroup"]]),
   Evaluator->Automatic,
   Method->"Preemptive"],
  MouseAppearanceTag["LinkHand"]]], "ExerciseExpectedResult",
 Editable->False,
 Deletable->False,
 ShowCellBracket->False],

Cell[BoxData[
 FrameBox[
  TagBox[GridBox[{
     {
      PaneBox[
       InterpretationBox[Cell[BoxData[
         GraphicsBox[
          TagBox[RasterBox[CompressedData["
1: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
txP4LklZ9v85Lf4foU4274H/aJXPpqF4Y0NLKRNxElPHw9igxqzOdfqN1Llv
eW1WDTyHMoajkuqYl0wWxBLZURqz4kfb5aeRq1lLO0Uasxoscdlfvrxf5bxR
7FCViZcl2PEj8fQgrDzefgXHeY/c6ax62e0W98frfBEvur/KuygBn+Dyn+pI
qxG2TRD+fwQR/43qQ+yieTMClkW5eSjiqesEStRtxEDJ2HzDouX5PiVx0aLc
I1+a9jxZUzH94YDJ40pvjR+M+Xp7CBKQA1Vua2ROdVyH4kyyNJEkjCSwgm3Y
QdiCeLvmTNJmnsNwLvG00uFKmdPXtcvU8Tih97/j/u3/9LNbXJbg/374j1ZK
VA9xNBbREItAPSq0+mkw4lYv5cIqP+T7C8mxV0nI9TyHcqajCjGrFAdhHIkT
ZUcPs80MsaEFYzMp1lnBWHqQdbrfEkaQVWmK3cZsx018u1DHf2W4/7vtv/6v
Hjb/Ee22jBoQWkcV7JJVom4gRnIhgaF3Uo1/8vpga61Jj5PFxsR7eYUsWAV7
eFDc3INcXQOXuwQsXx7gstwfkSPZ63//3/7vxf/Pv/uR8AwfZ2WER1tGcL8o
EXUPMVyFPPqTJ2aYqb8/0eLpqQkSd3eKm1uQy+s4Wbbc33mpn6OTjwPZi+Tg
aY11+pd/+T8W/+t/By/zjfUOSfQJTfMNo/mF8ygxksiU4sSseqpgFVvWKyoZ
UFroovxsknOEBh4l601ftMi39spD06bfwly1ovJMSdPn74cK6z5NZTS5uEQ6
2Hn4O4Uwwri+ZO8YN79U/+BYT5+w5S5xHq5U72UiyvLqRP9NnOhD+RmoG8v8
ciEOTZ9c6Pl1JLP2Ld9nYDDl5FXKK06jPspGkarmIo2/xtM3xdMr0cHO03YJ
Md4zrkvYvoLb3MSorc5Ul6UXKlNkufFCdiQjg5IS6x1JWeYf4uIf4R4U6xWc
4B2S6heW6RfGDYrWmFUCrS6Dv5It3SwqthyzUnCFhmTO49e7kTToiOlv9xBJ
quTq9ySuxMVHKOFcSiAzV9Ad7JEcHZBeQW3cKN1Zmlmb6Jcc7hYoDI3vZMva
GOKKNI44Li09ICRkmUu0m2uKlwvbz7ko2qsjM9TCp2/5bJo+Ofb4lXTNfTGG
rnfkyWuk5SdQH2gDpar5mMZf7eGTHEThZmdvdl0eTk8tiPBNp7hEhrmEbhKv
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
            "], {{0, 
            398}, {386, 0}}, {0, 255},
            ColorFunction->RGBColor],
           BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
           Selectable->False],
          DefaultBaseStyle->"ImageGraphics",
          ImageSize->Magnification[1],
          ImageSizeRaw->{386, 398},
          PlotRange->{{0, 386}, {0, 398}}]], "ExerciseOutput",
         ImageSize->{390, 398},
         ImageMargins->{{0, 0}, {0, 0}},
         ImageRegion->{{0, 1}, {0, 1}},
         Magnification->1],
        Apply[TextCell, 
         Cell[
          BoxData[
           GraphicsBox[
            TagBox[
             RasterBox[CompressedData["
1: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
txP4LklZ9v85Lf4foU4274H/aJXPpqF4Y0NLKRNxElPHw9igxqzOdfqN1Llv
eW1WDTyHMoajkuqYl0wWxBLZURqz4kfb5aeRq1lLO0Uasxoscdlfvrxf5bxR
7FCViZcl2PEj8fQgrDzefgXHeY/c6ax62e0W98frfBEvur/KuygBn+Dyn+pI
qxG2TRD+fwQR/43qQ+yieTMClkW5eSjiqesEStRtxEDJ2HzDouX5PiVx0aLc
I1+a9jxZUzH94YDJ40pvjR+M+Xp7CBKQA1Vua2ROdVyH4kyyNJEkjCSwgm3Y
QdiCeLvmTNJmnsNwLvG00uFKmdPXtcvU8Tih97/j/u3/9LNbXJbg/374j1ZK
VA9xNBbREItAPSq0+mkw4lYv5cIqP+T7C8mxV0nI9TyHcqajCjGrFAdhHIkT
ZUcPs80MsaEFYzMp1lnBWHqQdbrfEkaQVWmK3cZsx018u1DHf2W4/7vtv/6v
Hjb/Ee22jBoQWkcV7JJVom4gRnIhgaF3Uo1/8vpga61Jj5PFxsR7eYUsWAV7
eFDc3INcXQOXuwQsXx7gstwfkSPZ63//3/7vxf/Pv/uR8AwfZ2WER1tGcL8o
EXUPMVyFPPqTJ2aYqb8/0eLpqQkSd3eKm1uQy+s4Wbbc33mpn6OTjwPZi+Tg
aY11+pd/+T8W/+t/By/zjfUOSfQJTfMNo/mF8ygxksiU4sSseqpgFVvWKyoZ
UFroovxsknOEBh4l601ftMi39spD06bfwly1ovJMSdPn74cK6z5NZTS5uEQ6
2Hn4O4Uwwri+ZO8YN79U/+BYT5+w5S5xHq5U72UiyvLqRP9NnOhD+RmoG8v8
ciEOTZ9c6Pl1JLP2Ld9nYDDl5FXKK06jPspGkarmIo2/xtM3xdMr0cHO03YJ
Md4zrkvYvoLb3MSorc5Ul6UXKlNkufFCdiQjg5IS6x1JWeYf4uIf4R4U6xWc
4B2S6heW6RfGDYrWmFUCrS6Dv5It3SwqthyzUnCFhmTO49e7kTToiOlv9xBJ
quTq9ySuxMVHKOFcSiAzV9Ad7JEcHZBeQW3cKN1Zmlmb6Jcc7hYoDI3vZMva
GOKKNI44Li09ICRkmUu0m2uKlwvbz7ko2qsjM9TCp2/5bJo+Ofb4lXTNfTGG
rnfkyWuk5SdQH2gDpar5mMZf7eGTHEThZmdvdl0eTk8tiPBNp7hEhrmEbhKv
212wfTZtV2zenLdubXZnB6+liak1qyJVilwcn82JZFApqXE+UcHLA4KX+4e7
BUV7UpDMKtU3lOoXxg6KyotIRsyqJoPXwZRsyinabfrtjgbWha5oti2uMkPm
LVPWvQdxVdx4NUu43tUjhpHZ1FTzMYtenRWdXy7sDlwWtrNwv1YrhRtkyYWh
bmHxnpSyZIb2C2tQWbclt7STI6ul8pVJNHZYTKSbF5IyxXu40n2W5gW71CcH
buHFHrGYlEnBoevX//fLvvRFREMjKr+gMa/0GOrDbYj/ZPJWefgkUSg8pWpf
VfX5oEBqDrMzh9WSGpoT5BEtjM8PWBrUxm6aw4h00Q5FD2JW63I6V/Jam5l1
NZnq8owiVaoiLyGHG8VCzCreJzrEJZCyzC/MLTDa43Vm5Rua4RvKDowShycV
xtOq07jtzLyN2YW7FVV6u5CYxTOkMdmJciKx1hy7FovL23KLDqEeHoZIUXk2
KjHf2yu5RDWCWBCi8GB6maB7XfnxpDCWKql8wogQbVUO1TFXsCJ5lOUBSDqN
pNDTx26nrHK9QNVCF5WlsXJiklP8goKXLo9xd033ceH6O5fEeHfRw4elKKRM
eu8XurcvF0mFeq8YWmIsLmtFEk7UR1wPKasvZPI63X0Sg0MEBQUHausuIWKy
WoL96O1V56T8tZG+tBL+moBlETWcVUEuoSUpBQYakU5mld/bI1mvMSt+awur
vpZWUZ5eVJCqkCSIeFGszOA0xKxCtWblGhjlERTvFZLiE0r1DWUFRIjCEgvi
MjVmxRBvEBbskk01q0FlrYxvyH4h8+2drm1YI1QOox4keosn2+XllxIfk6/1
H0Q15Sfdl4WuKT2GuFCVqNdvacgO1chkI9Jqg6SvlFqb4JsY4RaEDOhW8Vzt
V5ABReb7HSxJDZWvSMzMCokMd3EPd3FJ8nTJ8lkqD3NrTqPsEMab2oX26713
+snDu8YoMNY3rxXkD6E+6PP1Hyp3pbt3YgjiP4UHtf6DSKkacXMJry08iLhQ
oXg7xTMJCRharJgZltuRuzXaJ4ETwjCDEemiPo1Zda/LWdXJb3ttVpXq9OLC
VIU0UcSPZtNC0hN8Y8Jcg4L+aVZxXsGIWaX7hAiyWAaMtvnOkXWt2cqV7kI9
VPRQQd2lZHq9m3uMRNQ7YUGIFHl9ge4JSERpRY0R5cbkT3chrfoK9nUIuiVJ
qlDX0ESvYHUKa0jnC8l3SNRr+fmNtOySVKYgKiHB2z9k2fJYJGXyXioIWKqO
81nHjDwgTzOiC2nOkZWieo6sewc7bwfqQ6+j8qvOU7kd7l4JwaHCyf6DqLrm
47BQNiejAbEgRJXKYT+3GCRa2pR7/d0iWrI3rVcMUMM58Z5x2xW9qLuQjtqp
3NIr7V4v6kLMqpXdUJ1ZLmAJDBht87nQzl176dmbUA+Y+QqZRQaEskKCOEjm
M9mCEPHYzamhogkXqpf0+TpTtuYPzmZEb2Zq+YO1jHZGBCfYJZDuF7GKK9dj
Gr4nv2ZTTtEKZl5VOk8an5EZFB623C3S1TXZy4Xlu1SzYSA9eFdOgt4uhPqZ
+v49+2jCjaiPvi7+k85uR/wnJDS7qPjwZP/RistbGeCVprUgRI1lo57LQ7UB
U8DpCHKJ3lp8qKdwvyhJFbwsGPm9Rt1h9FCXoL2zbaUBo20+Fzp+4lQ6pwv1
sNFdxQ1X6IK1ru4xbHrbFP/RKjaSr2SunHAhROykfE5oztwuNKHuvB3FGVWx
PvGRbkF5EcnbJQY1ytyrqt+WV76aq6jPFBYmZ/Ei4uM8fUOXL9dvw8B6Fsr3
C504edrCoyW/6lw6u83NKz40XFRUfGS6/yAqLDrk5hJRqRqZcCFE3q4RKwsP
INGytmw0NYIvjFEiRoSoJKspcFlQI6MWdVeZr5B0aPvWbQaMtvlc6Nq1aylZ
jagHj46SV5yOTJB5e6eUFR6Y0YLqK8+6LwvtKj402YVaFAO+y0I2SXfpaETa
mVo7f31eYn6Ia0iiJ6UqjaP7TO2d6pdXb8gunGHDgLcL29epMMpztg0DqN+1
eP369ZSsBtTDYEYpKs+msVrdPOPCwnJLSo/N6D+Iamo/iYnOoSWpJ1sQoohg
WkX2Zm3ANMv3+P7/7Z33d5TXva/zD9171ro3QmXU+6iNepkZTe+9916lmVEd
1CWEUEECVABJIJpEExgbt+A4McFObCcYYsCBGAIYnbPFODpEZfRO3QLez3p+
8sJey9ofntl79L7fnVjUI5sKiKiFfwCbUqKukkMXS0g0M5yRtSV+Frp79y6e
aoVeISSwFUfTsurrqgzb+ieAXjUXOOBvQthoJeexkFtogwnNiSZ6J7WYWbAv
h5ZTCnY10XLRf377/esDAx4SX1dH/fWBgaSkmrRkyhsPDLRwIM+dvnfvHp5i
gd6ELf5ZJTDbwf6npEQWxD8BBIIDGZiaTQoCEGvkCkrbRmHUjLbilOqAhQC9
8iPVuXhKLgm6W5Dj4Fgja8vDuN3B8fz58wayGnqRgqNvvllHacJgKpXSqSAK
Agi5PdV57K0W8usWspOKByWTYYgowAHZlLHRWZFRWZaSpyjDH5U7YqGjN9n6
wEB2wr5vvvkmDq3YKS9fvmwgKU0tv4NeiQBgb4ynt4L9T0kp8M9KcP8AgKNS
MeUW5exWC3EoTmaVYaMwA5YL1Viaos62IaKD2pN0nLAcgzusHIFuGCSYecbw
bmx5/NcvL50/P2zD/eY3v+m4Gaf7yPhi215+iUNsWMoppBcV8jyOq8EVBKiv
lstILVstBJBRm+sySWFb6I2T2pCkRolNKqxLL3QTOFE8qe2KlM6Gfh/Z61d+
rkFvhcp+tYHWAvxTWqZA4p8ANTUqfKVuq4IAEvb+ukL+m4Xxyo9mJhQOqGY3
RDRuXFIQLPn7CvoFXdAlsysKliy8tmzczSrpvRS38Q3e1oG9+RCIyfc5hdeX
nFLOZXTv6h+Az/VBRgrOr53f1kLdhqU8DK5bMBKhiAKMq4+7aR2UInphYg4j
r2yQF/MpEOu3bSo18SrFzm1pG+SrT0BshdJ+pYHmBf4pwymttksI/QMQS8bS
Uyo7HKvbWkglGClOJ27+5KI0lac1bFgogIPpz00ocJPt0D0ThAnliEGuD2+J
X7589vjx45fR7c1umTt+isI/CN05W8tWUiXPyiTYDGeRKAhg1i1mJuO2VdC/
D/vt5al1UbHQBkPSSQPRUZ5egUvJU+IIR5WxOqn1c9VDff3xrcY2WVg8S+IO
wamE7XID1ZucVonDqay2K8j9A7DZLqenVenEh7dVEMCsmM5PrdlUmD7zeVwO
wdDo2SSiduGh4lScpEwA3TY70c3rGOgZgF2WEPL6Fx9e6Np5E7ZsMjWjpqHG
gtA/ASSCodJMShAL9ZnOFWVUt7H7oisiwBH9Ygd3QFStKEzKb8go9DTyom6h
VqYU7i/IAvnqq6/qqc1x7oPCdqmO0gT2P7hyTaj+CYAnmCqLJTspCNBkWNr2
I6xJcjjzt4XDmpObRDSgnK7PJxOyG6a1h6E7ZytNTEdkl5HFO0+ePGkga6Cb
J4Cu6aOaRgcGU6WWHwtJQQAywcirtwWxEMDA6SlJroy6hd44qc25qG0kLBWb
mMvMLTvAj9qwYitH/Mc//hF2Wf77559/jmdbFNaLdRQ32P9UVOjsjqth+Acg
kx/BJJW12a4EsVC7/QomoXDbzgiJ1posyiYLAQ7pFjiVspLkklF5sNfwoWDh
mv7whz/ALktoEcudYLsLXUEi/ansAkpJkQDJF9Fbycmo9cqPBbfQgOUC2GM7
Ka2xE1GAAcmEnmAvS8OVp+SrK4hbXzYMiXmdVx7p9M6oRaJwATnEugxy60ot
2ZWSVllZpQ/bPwCHczU7q17FPxhEQQFy06vb1ce3dqbXeKY4s9ZO928V0YTx
jJbkykvI38+J9DX8KDKjm5SzpJHNN4OQAyNHGOLDEP1j9H1G4nQnY8r5rL4w
/AOwG8+mJZUEV1AAq+BAQWJprC20cVJr5/QLq2QFiXn4jEIfWRCehUbFJp/L
Dbsmv+bQ2DRdNB5D/1hWaknOlFTgH4PdsRq2fwKQyK6yAu6uCgJUlrDN3MFt
O+MQjmQlYEd1C1tFBGjm9OYlYS14A3T/BBgS9fhcXtg1CTmffvYZxCeowam/
uEKSk0Wym86FpyCAXDSKTcMjsdCgdaUGSzc0OOIjogBjqjkHtZVYQAYnNVY+
biTEO/VaGJJTi6dg1+TX3Lp1q54aky8SZZblmkYb8E9VtSly/wCUqrmUxNIW
ywoSC1EatGJC0061YdVrG/PZ21oIsF8ygcuo5hQxoSsI4GW6FhcWYdck5IDN
G56sBhuS+CuIKZ3ApFcT6+1h+ycAg+KkVWqRWAjgFI/l7ivaduJHrOkXj+sI
1tLUsgpMvq6KhHCGlYkjunPnDuya/JqnT5+CtkT32UWp6Xw10ZacWlFTa3W6
rkfuH4DT9esQMyQKAvBozZRy9U6d6dKfyk+t8HAHdhLRkHqusZhZm14N/TV8
I0d3+/Zt2DUJJxa7X6hbjKd/tO4b1QRramq1VjkToYIA2HyyQ3gIoYUARJxA
VqmLv4UCTOkW2ti9/Erx65Mato0qCqKgGZVbI5T88ssvsDvyv7E4/EJtdNqy
7h+CJSWtqjZ6/gnAYLQGhpghRMbtrcplBemMmTeQs69k3LC0k4hG9adEtVps
InZY3A9LQVPqUZVAuafagjxnzy0TWT1xU5BAu5CZ21hWLPE4rkWuILf1ImZf
EXIFATyyI1m/Ldx14kesGVXOOCgt+DwiOKlxCyoOiYxbLdTFUowdOgS7IP+R
5ZXLeOb+CDsgMZ6twptTUqvq6u3R9Q9Ao11ITirxmM4ht5BWNF6Y1hC8NtQq
Gb1IvJOFApiovpyEvDaGB4qF2tm+sUNjsAsSZh4+fFhP0sXhFSGj91Miy5+c
Ui7iDkXunwAq6VQ+pjYkCwEYtUpuiQSuhTboE41q8OYSTEkFJs9QTXlzNLqV
Jbp16xbsgvxHfvrpp3qSJuy2AP9UNhiBf+rrHU7Xjej6B+By3yjCMrjkNuQK
AthUx3MwVcE749fO574egxZcRD7eYGFyibZGGX8Lmdj6L774AnZBwo/R0ibS
n46pguTWFWyZIDeH4rIsR0tBAA6zlVgiDdVCrarZrATsmGoOuoI2ACe1VlYv
t0KYvy+XkAlOauJplUstEEO8FXqngLaIDUuhFkBsOFPRoE9OrcTj3bHwTwA2
pysvkxiSggBg45SRVLprbQzs7vwkXHALAXpkR6qyG2h55HgqaEJxUCvVvqXH
sUAuXb6KZ3TGTkEM8SgmvYqMb4qifwJUlHH1zJ5QLQTg4U3UfDZ0+WzlkHLa
RvHW5xKy/l/q9NGjsKuxTdbbQu8IxT9LFXU6sP/BE5rdTR/FyD/N60PMzqQk
bx5ihoRO57XURGyf+XzwzgTGoPErNLuKaFhzgl7Gr0wtj9tr+B6Ga2ZmBnY1
IsrPP/9MpGoMnk+i7h+t+0YV3pSWWmtQn4i6gjyOVUxi8abJZggBG+zsxKID
sino2tkJcjl97/x27M08e/aMSFXrm2/uuvoi/SlcrQb4h0CMrX+a1wdKf4TD
Can1jlAVFKAwG++RHdm1Nutz8xKLuiSHdxXRuOG0vMFckFAwIOyOg4W0bDXc
2S9Ryf7ukaiPN+erT2TmEstLZT7XB1FXEECnnM1JqQxDQQGkFHdDJgW6bbal
XzzuNLtgl2LH9A2MB3/YVahbLKtRYdKqiY3eWPsnAJ8/mJVaG56CAHXlwk3j
gndi0xi04NgZHbn78pspjpgqaFjc5zDaYZciCvnLX/5S12iMln8M3k/Wh+Bh
KiT8g7HwTwABp6umgBu2hboNp3OTS/tEo9CdsxUrq+ny5cuwS7Fjvv7663qy
bXv/aBdLq5Vg/9NIao2PfwAm84VUTLlVNRe2hegEE6/ejqQ2A5YLNVi6rNaC
UETtgpGiVJy8XBw7C1kYxtXVVdiliE5MtvaojBuSWZYLSrj5uXSX5WLsFASo
q5bJydtPNkOIit5Wld4A3TmbGFPNqQTaPf42kNbg2/SYmUC7UFolx6TVkClt
8ZHPBtXVCnylPmwFAYTMNuS/5vApjmUmYAcU0whF1K+YrssjNWbjY/Ea/rhi
WCvW/Otf/4LdiOjks89/V0dxReIfU8vv6KKDKamVtEZvTP3T+nqyWVpyWZf+
VCQW6jWdLUyr7OAOQDfPmziZLcePn4Bdh11y8+NP6ilNvx69NSdLfvVPe5z9
AxCJR9N2HmKGkMAlrcibI6M049LxCC0EGNEtsCukpckl4/Lh6FrIxbDtnXd8
Is/a2ppY7gj7ImCN63pFnS49rc6kmY+1ggAm7XxmSnkkCgqgZ3eVpFRBN88G
U7oFJUfz4MED2HXYJa9evRJKbRTBSHGFJDWthkLtiL9/AFbbpfS0KoN0KhIF
+d+4pBUh62PQcrcZgxaECeMZNcmRl5DXze2IloKOaMaVHMVPP/0Euw7RzMVL
V/D0tjAUxFPNpmc3VOFUMfoieisS/iAuixq5hcAxvySrvonWCd0/AdzM9smJ
KdhFQJTLV67/n/+bQaPvh+KfAA0NhuoSeYQKAjg089mYbe5wCUKTdDIzoXBY
cxy5iABudk9eYoGNYIqKhbws9+REJFeP7cW8fPlSILFKTedC+CLa8wme1pKS
Ui4XjcfaPG/S2KAXNDgjt9DQ67eEChPLoPvn2OuLYhUc9Y8//gi7CIgC2iIW
W3X607AUJJVNYZJwwYeYIaTFspKWWBxqc4SN9posckgWAvjF46UZVfxidoQK
mlSNgo3Q3t82h5GPPvq4juxEqCDgq/xidkE+c+t9zbEmO726RTkTFQsNWleq
C6gmghu6hdystmNHjsGuQAj58MObxEY7FAXZHVezMuvUgkORKyhA+r8vaUXO
r2PQaJ2himhINUfA0uvSa45qw38N38Gwnjix178/DC9ra2s6o2/X2xZMLb+j
Cg6kYCoYlPY4+wdgM5xJR/DIPXIcwkO5CUVwFTSqnFEJtG/XGR+0RattUirn
4m8hEtmJcIgZQkoL/veS1hCaIzoUZAxaEEb1pwQ16qJE7Ih0IAwFjcmHNUIV
9PuhYpfbt2/XNhpNvs93UpDauVpeq8lIb7DoTsVfQQCZcKQogxBFCwHwpVxl
tRGihUwM57mz52Avfsj54ovfE4mmpuab8VSQQjmLfIgZQvBVMiW1PYzmcOr1
hDxWqBYKYKR4chLy2hneUC1koRuWLyzDXvzYxtfaz5Bs/3AsR3ksPau+pkIL
xT8BaGT7m/dpRoVm6WR2QuGkbh6KgvpEY1a9/fnz57BXPpy0dwxwecNxU5DT
dT0vjyhl9UVRQQAW2cGsNobRnG7D6YK0ymZ2f3gi8nIHCpKL9bVq5AoaEHbb
9Na3tC3I8+DBAxJdt+nmVr3n43qqB5zClOLDEBUEwOY1hrF53hVatZxfKou/
go7oF5V03ds7luHRo0c0msZivRgfC9HoLUW5jOgqyL/dJa3IsfAHc/YVBxmD
Fpxu6WRFVh2zgIZEQce0E0q6/K27aCO8LC9frqO4NxQkMZ7NxTKw+Zz4fxG9
CZd1JdTJZghpVc5AmfjhZraNHNhb08xCzfnzKySyOw4K0mjnUxJDG2KGkG0v
aUUOkjFoQRjWnKCUcisw5VPq0eAWcjFsh8cnYC94nLK2tmZ1dLBkR0y+z6m8
gWRMOZvuh+ufAErJ4YLUEB4wCwlug4FWwI2ngg7IprQS/dv1pfTWvHr1ymj0
SmVHY6ogl/sGFkvnUdujriCASX4sL23zJa3IeT0GraxdcDBsEY0bTksbDIX7
CodEPTsp6IC4Ty/Xv8NfSm/N/fv3CVRtSaUsMwNvNSxB908ANsPbWCqPkYU6
NCez9xUdVByLj4LWn5Sm6T755BPYSx2F3L17l0yO7bmMzdmfm9EYCwUB3PrT
WSnB7hnfFQOnpwDBGLTgWOltuQn5Xqp7q4JmdJMahurTTz+FvdTxzuzsyZQk
HHTzvAmuhG1k98XIQgAx2UnIpsbHQg6Gb2zkbZ0VvDUXL14hEq0xepVeb1hK
SSp1607HyELrl7Tu2/6SVoQMWlcIOD6vXB2hiFoFw9iUUmWFdJOF7HTz2Mgo
7EWGELDTbmvt5bN6ocsngMdxFZNYtOtYvEjo0p/KTS7tF4/HWkF+3pBVZ9/j
786Hms7OQRa7N+oKAmYrK+PT8e4YKShAzg6XtCIH/OvZicVIxqAFp09xrCaP
SMohbryG7+e2uq2ud+bd+VDz5MkTkdBsUB2HriCAVjGdi6mOnYICKGm+mnRC
TBU0ophWcNTfffcd7OWNcv75z38KhCa1Zj66FuLxB7JS62OqIEBFMdPCHYqw
PGpGexGmKkILAUa088xycVly6bh8eEQ6qOYrwZkX9vLCzDfffENuVDlM56Fb
iM/2h/3rVOT0Gs/kp1b4uUOx+zpIRde/M5OpNuXPf/4zmawxmS9ES0HgP4VJ
KbOpT8TaQuR6jbjRE2F5BizLr8egmSMX0bhxSUW05/42T0GR3bx5E/bCws/q
6nUSQe9xrMK1UG2lJLwHXENFx/KXpVTHyEI6inX66DTsJY1hbty4SSDqHc5r
UbFQVZWcUGWMtYL8u13SihyfYjpzXwhj0IKjpToOHhiGvaR7JZOTMzSyq8V9
A5aCfK7rqUklob5yGB795vPFmXVexv6oK8jB8PXs732rL21BktnZeRLJEfk3
1SLRSHpKVRwU5EdwSSty5FRPeVp95AoyMjwDvYPv7ddBW7O2ttbTM8ygeGFZ
yKg5mRWNyWYIMXH7sUm46CrIx97fZGt+x76R3jagLf79QwLBUCQKslgvpqdV
GmVH42MhrWgMm77LJa0I6TOfL89r1BGbI1GQg93Z6mlHFbQpL168aG7y85jd
UCwk4vVX5DDiZiFwwK/MJ1sbvVFTEKvLqre/7Q8oIs/Lly99vm46ozNsC9XX
62vKFPFREMCqmstN3eWSVuS8HoOGDXUM2gZuTo/d6Hry5AnsZdyLefbsmc3a
AuU5akK9Vkhwx81CALtwJG9fcVQUZMA7pDz52zLBLFp5/vy5y9VBbPSEoSCp
bDI1uTwqQ8wQ4jGdi+7EGBHJXp1JCkNBarxTyn83J5hFK0+fPlUqLDSSL84W
ykyrbFPNxdNCgIYSjrrWHKGCOnmDBoXpvXrwfiPgQCEQqCnU0Abj2x1XMzPq
NMLRuCkI0OFYxezDgj1wtMrTazpbnFkX6hg0D6/fqLa+D8f2CPPq1Suz0cNh
xG9HZDUsRfdzCiFNksPZCYVHdIthK6iN2wcU9MMPP8BeNGj55ZdfrLZWBtOP
3EKNJAeukB9PBQUoyG7wyo9FsT+hjkFr4vaYtbb3bc8cdsDRrLnZz6a1xee3
ZlLBwZKMxvhbCECplIhwqvAU5GF2WnX2+/fvw14uyAE7Ip+vm0r1IZmHplDO
pCRFeYgZQmpxAj2zJ7r94TQY8HlMhAqyGZ0PHz6EvVxvU168eOH3D9DIzjg8
R0RttLJrTFAstP74x28LJjQnQlWQg+Frdnj+8Y9/wF6oPRGwI+rtHeHxe1zu
D4IoyOm6nptDkHIG4q8gfyiXtCInMAatid0XxD8TxjMmhrcJbUtYWVtbm5qa
IRMNLutKTC1UkENwiSegWGj946xex8QKkPtnSregpVh6u/qePn0Ke4n2UEBb
JiaOERuNZsvKThai0byxGGKGEBGzFfklrcix8Idy9pXsNAZtRLegolqG+g+g
bYkkly5eoZK1etVcjBTktCynhn5RSxTp0JzI2oc9pJhGoqCD8qNKqm52evbV
q1ewV2Yv5tq1DygUjVK1zcx8tWYenMW8pguwLKTgReeeu61Qq+Q0rHCrggaU
M1KaZmF+ASga9sq89blz545IaBJxB2NhIcX6ZLN6iBYaWr98ykbMoe+qoA7u
gIKtvn79OuwF2dP59ttvRSIzn/8f06pd7huFhTQetQOWggB6yWRhKJe0Isev
W8jFbB6D1sIfUnC178aAqT2Sx48fez37qSSH23oxuhZi0ZopOBVcC3XpT+Uk
lQxIJoKcwqy0ZrvR8de//hX2UrwFAW1p9uwnkRxW26WAhVjszvwsEkQF+cO6
pBU5Rk5v/r/HoI3qF3U0l9PsfvfmKkAP2FUuLZ2jkNQa+bEoWqisiGnmDsK1
EEBO89ZmELdVELCTnKKZGJt49uwZ7EV4awLacv78CoWqkcqO6PVLKcmlTYYl
uBYK75JWhAxaV4g4ARen3C+ZkNDUM9OzL168gL0I72y+//57ndbNoHjctkuR
K6jJfhmTWBTFZ8nCpsd4Jh9T3sUf3rQFstN9Oqnh1q1bsH/wb2Xu3r2r07nT
0qpYjV64CgqQllwCFjpGFWpVzab+/1wJ7325RANuXr58uTB/mkZRy0VjEVoI
bKviMNkMIRpmZ3lq3YaCegQjMqpq/NAE+r5PJAFtWVw4w6ColfyD0C1UUkB2
icdiUR6XeFxA104dPoq2JZ754YcfvM37qSSzSTsftoV4rI6GIhF0/wToM58v
yqjxMbsPyo/qKVa7wXn79m3YP+Z3JPfu3fM2+xkks011HKKFwr6kNQh+7byC
6XZYmu/cuQP7x/ye5rPPPpfLrEyqx2Y8G4aFqstFalondP9soGf3YP4rUyXQ
Xrp4CXyIw/7pvmv59NPPlDIrh9IE6zuisC9p3ZZuw2kVs1Uu1C8vr7zzQ6X2
eMDf1pXliwK+gU1vtZvOIVeQ13ktNSmG5/SQ6DWe0TA7RBzNzPTc+/lqanwC
2nLhwoqQp+dSPM3Gs3G2kJjlr8cKo+GfJR3bL+asPwuEvpq6d/L8+fMzZ87x
eXomzWPRn0JiIYP6RHZKrH5zihywowafaKBRc7PH0Wfs4xPQlnNnLwAXgX2R
Q3MybhZS8Q8Wp0f0xmKndl7JaJFwNdPTs2hb9mZevHhx5cqqQm6jU2wKyWGf
64MgFhJxeytymRD90ySdVDCbFCLD6dNLjx8/hv3De+8CXHT1yqpaYWNT7FrR
WIfjaqwttH5Ja2qYl7S6JRMKplshNpw5cxbdLe/9rK2tffnll50dA3SqhsPw
m3WL21oIX6uK/FqE8DY/OlaXgK5tdrbeuHEDfa4DbkBbfv/73/s7+hkUlYDR
4dDMx85CYVzSul+3qGV2Cugab1P7Rx99hLblrcvDhw/Pnj2vVbsYNCOP1fOm
jlrcNzIw5R2ak3GTD9hLGzi9EoZZJTUenzuBPgW91/Lo0aMzS+d0aieTohcx
u2JxUlu/pDUB0SWtna8/qkBblJL1trzPI6TemXz//fcLC6cN+iYGTcemt4LD
mkm7kJkc0dXhSOg1nXWJx9XMdhHDoJGbjx2Z/tOf/oS+WrjHAz4gFuZPG/VN
TIpaQG/VisZ9luVoiSg7rXKnz74+0zmHaFTFaBUzjaAts7PHv/76a7Qt714e
PHhw/fr1vt6RRgKvOLdGSnEbWL0+xTQoQFS0M2BZblPNmbgDSoZPyrKIOGp/
e8/y8srf/vY32P/raELOv9tyUMjTcekmPt2n4B0Ae6Q22+WwLfTmJa2gLa3K
GRMHtMULtj1ijqars//y5ctoW96TgI+Y+/fvf/zxx1OHj7msLXyGgkdVS+l2
OdWjpnVa+cNuyUSLcsavW+g2LAFHBd7yGLBc6DOfBzsc8M9bVbPNsinwJ7WM
LvD5JWe6hAw9jy63m5onxqauXbv27bffok9xvBsBbbl3797NmzcnJ6ed9jYu
U8Wm6wRMt4DRJmH1akVjJvkxh2beYzrfYlkJOKrDsdrhuAposa54TOdculNm
xQz4k7XlIhJOImc6hQwdaB1oy+TEkQ8++OC7775D24Lm0aNHt2/f/vDDD5dO
Lx0anuhs7QV20ilsMr5OxFFxaTIOVcqjy4QspZSv1SmsDrO33ds1cmBscWER
OOfLL7/8+9//jo79eU/y8OHDQFtOLZ4eOTjR2d5nt7aoFTap0Mhjq1l0OYDN
UHBZKrFAr1HarWZvW0vPyPDEyZOLq6urX3311Y8//oiettCgQYMGDRo0aNCg
QYMGDRo0aNCgQYMGDRo0aNCgQYMGDRo0aNCgQYMGDRo0aNCgQYMGDRo0aNCg
QYMGDRo0aNCgQYMGDRo0aNCgQYMGDRo0aNCgQYMGDRo0aN6l/A9nfz7n
              "], {{
              0, 398}, {386, 0}}, {0, 255}, ColorFunction -> RGBColor], 
             BoxForm`ImageTag[
             "Byte", ColorSpace -> "RGB", Interleaving -> True], Selectable -> 
             False], DefaultBaseStyle -> "ImageGraphics", ImageSize -> 
            Magnification[1], ImageSizeRaw -> {386, 398}, 
            PlotRange -> {{0, 386}, {0, 398}}]], "ExerciseOutput", 
          Magnification -> 1, CellFrameColor -> GrayLevel[0], Selectable -> 
          False, Copyable -> False, Editable -> False, ShowCellBracket -> 
          False, CellLabel -> "Out[]=", CellFrame -> False]]],
       FrameMargins->{{10, 0}, {10, 12}},
       ImageMargins->0,
       ImageSize->Full], 
      ButtonBox[
       PaneBox[
        StyleBox["\[Times]",
         FontFamily->"MathematicaMono",
         FontSize->18,
         FontWeight->"Bold",
         FontColor->GrayLevel[0.75]],
        Alignment->Right,
        FrameMargins->{{0, 6}, {0, 0}},
        ImageMargins->0],
       Appearance->None,
       ButtonFunction:>(SelectionMove[
          ButtonNotebook[], All, ButtonCell, AutoScroll -> False]; 
        NotebookFind[
          EvaluationNotebook[], "Exercise", Previous, CellStyle, WrapAround -> 
          False, AutoScroll -> False]; FrontEndExecute[
          FrontEndToken[
           ButtonNotebook[], "OpenCloseGroup"]])]}
    },
    GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {Top}},
    GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
   "Grid"],
  FrameMargins->0,
  FrameStyle->GrayLevel[0.7],
  StripOnInput->False]], "ExerciseOutput",
 Editable->False,
 Selectable->False,
 Deletable->False,
 CellFrame->{{1, 1}, {1, 1}},
 ShowCellBracket->False,
 CellFrameMargins->{{0, 0}, {0, 0}},
 CellFrameColor->GrayLevel[1],
 LineBreakWithin->Automatic]
}, Closed]],

Cell[CellGroupData[{

Cell[BoxData[
 StyleBox[
  DynamicBox[ToBoxes[
    $CellContext`SolutionResponseText["x5.7"], StandardForm],
   ImageSizeCache->{139., {3., 9.}}], "SolutionResponseText"]], "Subsection",
 Editable->False,
 Selectable->False,
 Deletable->False,
 ShowCellBracket->False,
 CellMargins->{{24, 25}, {3, 0}},
 CellFrameMargins->{{8, 0}, {0, 0}},
 TextAlignment->Right,
 ShowStringCharacters->False,
 FontFamily->"Source Sans Pro",
 FontSize->12,
 FontWeight->"Plain",
 FontSlant->"Plain",
 Background->GrayLevel[1]],

Cell[BoxData[
 ButtonBox[
  PaneBox[
   StyleBox[
    RowBox[{"[", " ", 
     RowBox[{"Click", " ", "to", " ", "enter", " ", "code"}], " ", "]"}],
    Selectable->False,
    StripOnInput->False,
    FontFamily->"Source Sans Pro",
    FontSize->14,
    FontWeight->Plain,
    FontColor->GrayLevel[0.6]],
   ImageSize->Full],
  Appearance->None,
  ButtonFunction:>(SelectionMove[
     InputNotebook[], All, ButtonCell]; NotebookWrite[
     InputNotebook[], 
     Cell[
      BoxData[""], "Input"]]; SelectionMove[
     InputNotebook[], Before, CellContents]; Null),
  Evaluator->Automatic,
  Method->"Preemptive"]], "Input",
 CellFrameLabels->{{None, None}, {None, None}},
 ShowSyntaxStyles->False,
 ShowStringCharacters->False,
 CellTags->"FirstInputCell"]
}, Open  ]]
}, Open  ]],

Cell[BoxData[
 PaneBox["\[ThickSpace]",
  ImageSize->Full]], "CodeSectionDividerCloud",
 Editable->False,
 Selectable->False,
 Deletable->False,
 CellMargins->{{0, 0}, {0, 35}},
 CellBracketOptions->{"OverlapContent"->True}]
},
WindowSize->{808, 911},
WindowMargins->{{554, Automatic}, {Automatic, 62}},
WindowTitle->"Operaciones con listas: Una introducci\[OAcute]n elemental a \
Wolfram Language",
DockedCells->{
  Cell[
   BoxData[
    DynamicModuleBox[{}, 
     TagBox[
      GridBox[{{
         TagBox[
          ButtonBox[
           PaneBox[
            GraphicsBox[
             TagBox[
              RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFAEiEGSIPafvQ3/iQM/qxmAiEjFmOohXKwIouDvuQXEGw4xENM6POaT5Hiq
qP97c+uvfvWfDVy/59j/ahX5Pdfx3/sHuNSDFE/UBpI/G3l+TTP9vS7p7+nZ
QBG4FjT1QJOBin+vCAcpaxcHWgEU/HOk7/ciHzzqgSYD2b/XJQO5UPFueezq
J+sDFf/qVQY64PeSgN8b0n5NMfz34DAu9T+beIFm/upV+jXF4PcC9z87K4C6
fk3SwaUeGBq/18QDDQQ5e2f5rw6pP0f7gd4BCmJVD3QG0HygBxHO61UG6sIV
nhAtwNAAOgCEgOEPMxmXevyAEvV4EidaQiU+P0IAAEIjNUM=
               "], {{0, 
               20}, {16, 0}}, {0, 255}, ColorFunction -> RGBColor], 
              BoxForm`ImageTag[
              "Byte", ColorSpace -> ColorProfileData[CompressedData["
1:eJydlndcFNcWx+/MbC+0XZYiZem9twVEehOQXkVh2V1gKQsuuxTFhogKRBQR
EWwgQQEDRkORWBHFQkCw14AEASUGo9hQyax8PokvL++9vPz+uJ/vnHvOnXvP
OXc+o5GQEZIIAwCyCOgQws5xFQrZeaEy6EO4IIufJOBxfQUiXhJPyEqAUKMP
BR0AxcefL8iAUa90gUgY4u3GjIqOYeL7AQyIAAcsAGBzsjIDQr3CJN6+nu7M
LNQJ/Ite3wKSBcF1E58gJhP8f5LlZApFAEBBKFtxeVkclAtRTssRZUrs0yjT
E1IlDGMkLEQ3iLKihJPm2fizzzy7SJibLuCiLNlzJjedK+EelDdni3koI/4o
F2XzeTko30BZO02czkf5rSQ2ncfOAgAjyY62iMdJRtlckihhWIg7ygsBIFCS
vuCEL1jEyxVJDuWekZkn5Ccli5j6HAOmhb09i+nDy0njiUQmQWxOKlvIZbpn
pGeyBXkAzJ/5s+QkuWWiSba1sLe1NbE0tfgiUf918m9KUtt5ehn8uWYQo+8P
21/5ZdQBwJpBc7PtD1vCbgA6NgKgeO8Pm/YBAKTRurUPfHEehqRfkkWiTAcz
s5ycHFM+j2MqSejv+p8Of0NfvM9Ustzv6WF68BLZ4jQRU5I3TkZahljIzMpk
c3hMkz838T8O/Ot9GIfwEnlCngCNiEC7jC9IQsst4PJF/AwBky/4T0X8h2F/
0nxfo6LVfwL0OFMgM0AHyM99AEMjAyR2HzoD/V43f2IEkNy8SPXx+b7/LOjf
V4XLJAP6Gfkc5x4SxuSIhdnzc5JrCbCABKQBHSgBNaAF9IEJsAR2wBG4AE+w
GASCMBANlgMOSAbpQAhyQD5YD4pACdgGdoJqsB/Ug0bQAo6BDnASnAMXwVVw
DdwE98EwGAPPwDR4DWYhCMJDVIgGKUHqkA5kBFlCLGgR5An5QyFQNBQPJUEC
SAzlQxugEqgcqoZqoUboW+gEdA66DA1Cd6ERaBL6FXoPIzAFpsOqsC5sBrNg
V9gPDoOXwUnwCnglXAhvhavgOvgI3A6fg6/CN+Fh+Bk8gwCEjDAQDcQEYSHu
SCASgyQiQmQNUoxUInVIC9KF9CLXkWFkCnmHwWFoGCbGBOOI8cGEYziYFZg1
mFJMNeYwph3Tg7mOGcFMYz5hqVgVrBHWAeuLjcImYXOwRdhKbAO2DXsBexM7
hn2Nw+EYOD2cHc4HF41Lwa3CleL24lpxZ3GDuFHcDB6PV8Ib4Z3wgXg2XoQv
wu/GH8GfwQ/hx/BvCWSCOsGS4EWIIQgIBYRKQhPhNGGIME6YJcoQdYgOxEAi
l5hHLCPWE7uIA8Qx4ixJlqRHciKFkVJI60lVpBbSBdID0ksymaxJticHk/nk
deQq8lHyJfII+R1FjmJIcafEUsSUrZRDlLOUu5SXVCpVl+pCjaGKqFupjdTz
1EfUt1I0KVMpXymu1FqpGql2qSGp59JEaR1pV+nl0iulK6WPSw9IT8kQZXRl
3GXYMmtkamROyNyWmZGlyVrIBsqmy5bKNslelp2Qw8vpynnKceUK5Q7KnZcb
pSE0LZo7jUPbQKunXaCN0XF0PbovPYVeQv+G3k+flpeTt5aPkM+Vr5E/JT/M
QBi6DF9GGqOMcYxxi/FeQVXBVYGnsEWhRWFI4Y3iAkUXRZ5isWKr4k3F90pM
JU+lVKXtSh1KD5UxyobKwco5yvuULyhPLaAvcFzAWVC84NiCeyqwiqFKiMoq
lYMqfSozqmqq3qqZqrtVz6tOqTHUXNRS1CrUTqtNqtPUF6nz1SvUz6g/Zcoz
XZlpzCpmD3NaQ0XDR0OsUavRrzGrqacZrlmg2ar5UIukxdJK1KrQ6taa1lbX
DtDO127WvqdD1GHpJOvs0unVeaOrpxupu0m3Q3dCT1HPV2+lXrPeA32qvrP+
Cv06/RsGOAOWQarBXoNrhrChjWGyYY3hgBFsZGvEN9prNGiMNbY3FhjXGd82
oZi4mmSbNJuMmDJM/U0LTDtMn5tpm8WYbTfrNftkbmOeZl5vft9CzmKxRYFF
l8WvloaWHMsayxtWVCsvq7VWnVYvrI2sedb7rO/Y0GwCbDbZdNt8tLWzFdq2
2E7aadvF2+2xu82is4JYpaxL9lh7N/u19ift3znYOogcjjn84mjimOrY5Dix
UG8hb2H9wlEnTSe2U63T8CLmovhFBxYNO2s4s53rnB+7aLlwXRpcxl0NXFNc
j7g+dzN3E7q1ub1xd3Bf7X7WA/Hw9ij26PeU8wz3rPZ85KXpleTV7DXtbeO9
yvusD9bHz2e7z21fVV+Ob6Pv9GK7xasX9/hR/EL9qv0e+xv6C/27AuCAxQE7
Ah4s0VkiWNIRCAJ9A3cEPgzSC1oR9H0wLjgouCb4SYhFSH5IbygtNC60KfR1
mFtYWdj9cP1wcXh3hHREbERjxJtIj8jyyOEos6jVUVejlaP50Z0x+JiImIaY
maWeS3cuHYu1iS2KvbVMb1nussvLlZenLT8VJx3Hjjsej42PjG+K/8AOZNex
ZxJ8E/YkTHPcObs4z7gu3AruJM+JV84bT3RKLE+cSHJK2pE0meycXJk8xXfn
V/NfpPik7E95kxqYeih1Li0yrTWdkB6ffkIgJ0gV9GSoZeRmDGYaZRZlDq9w
WLFzxbTQT9iQBWUty+oU0dGfqT6xvnijeCR7UXZN9tuciJzjubK5gty+PMO8
LXnjK71Wfr0Ks4qzqjtfI399/shq19W1a6A1CWu612qtLVw7ts573eH1pPWp
638oMC8oL3i1IXJDV6Fq4brC0Y3eG5uLpIqERbc3OW7avxmzmb+5f4vVlt1b
PhVzi6+UmJdUlnwo5ZRe+criq6qv5rYmbu0vsy3btw23TbDt1nbn7YfLZctX
lo/uCNjRXsGsKK54tTNu5+VK68r9u0i7xLuGq/yrOndr7962+0N1cvXNGrea
1j0qe7bsebOXu3don8u+lv2q+0v2vz/AP3Cn1ru2vU63rvIg7mD2wSf1EfW9
X7O+bmxQbihp+HhIcGj4cMjhnka7xsYmlaayZrhZ3Dx5JPbItW88vulsMWmp
bWW0lhwFR8VHn34b/+2tY37Huo+zjrd8p/PdnjZaW3E71J7XPt2R3DHcGd05
eGLxie4ux662702/P3RS42TNKflTZadJpwtPz51ZeWbmbObZqXNJ50a747rv
n486f6MnuKf/gt+FSxe9Lp7vde09c8np0snLDpdPXGFd6bhqe7W9z6av7Qeb
H9r6bfvbB+wGOq/ZX+saXDh4esh56Nx1j+sXb/jeuHpzyc3BW+G37tyOvT18
h3tn4m7a3Rf3su/N3l/3APug+KHMw8pHKo/qfjT4sXXYdvjUiMdI3+PQx/dH
OaPPfsr66cNY4RPqk8px9fHGCcuJk5Nek9eeLn069izz2exU0c+yP+95rv/8
u19cfumbjpoeeyF8Mfdr6Uull4deWb/qngmaefQ6/fXsm+K3Sm8Pv2O9630f
+X58NucD/kPVR4OPXZ/8Pj2YS5+b+w0AsgC3
                 "], "RGB", "XYZ"], 
               Interleaving -> True], Selectable -> False], DefaultBaseStyle -> 
             "ImageGraphics", ImageSizeRaw -> {16, 20}, 
             PlotRange -> {{0, 16}, {0, 20}}], Alignment -> {Center, Center}, 
            ImageMargins -> {{15, 10}, {4, 0}}], Appearance -> None, 
           ButtonFunction :> NotebookLocate[{
              URL[
               StringJoin[
               ElementaryIntroToWLWeb`Private`baseUrl$51054, "index", 
                ElementaryIntroToWLWeb`Private`langext$51054, ".html"]], 
              None}], Evaluator -> Automatic, Method -> "Preemptive"], 
          MouseAppearanceTag["LinkHand"]], 
         ItemBox[
          TagBox[
           GridBox[{{
              TagBox[
               ButtonBox[
                StyleBox[
                 StringJoin["STEPHEN WOLFRAM\[NonBreakingSpace]", 
                  ElementaryIntroToWLWeb`Private`translation[
                  "Elementary Introduction to the Wolfram Language", 
                   ElementaryIntroToWLWeb`Private`language$51054]], 
                 "DockedCellAuthorName"], Appearance -> None, ButtonFunction :> 
                NotebookLocate[{
                   URL[
                    StringJoin[
                    ElementaryIntroToWLWeb`Private`baseUrl$51054, "index", 
                    ElementaryIntroToWLWeb`Private`langext$51054, ".html"]], 
                   None}], Evaluator -> Automatic, Method -> "Preemptive"], 
               MouseAppearanceTag["LinkHand"]]}, {
              TagBox[
               ButtonBox[
                TemplateBox[{
                  StyleBox["Exercises ", "DockedCellSectionTitle"], 
                  StyleBox["|", "DockedCellSectionTitleDivider"], 
                  StyleBox[
                  " 5  Operaciones con listas", "DockedCellSectionTitle"]}, 
                 "RowDefault"], Appearance -> None, ButtonFunction :> 
                NotebookLocate[{
                   URL[
                   "http://www.wolfram.com/language/elementary-introduction/\
05-operations-on-lists.html"], None}], Evaluator -> Automatic, Method -> 
                "Preemptive"], 
               MouseAppearanceTag["LinkHand"]]}}, DefaultBaseStyle -> 
            "Column", GridBoxAlignment -> {"Columns" -> {{Left}}}, 
            GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{0}}}], 
           "Column"], Alignment -> Left, ItemSize -> 30]}}, AutoDelete -> 
       False, GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{0}}}, 
       GridBoxAlignment -> {"Columns" -> {Left}, "Rows" -> {Center}}, 
       GridBoxItemSize -> {
        "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Grid"], 
     DynamicModuleValues :> {}, 
     Initialization :> (
      Clear[$CellContext`SolutionResponseText]; \
$CellContext`SolutionResponseText[
         Pattern[ElementaryIntroToWLWeb`Private`a, 
          BlankNullSequence[]]] := " "; 
      Map[($CellContext`SolutionResponseText[#] := " ")& , {
        "+5.1", "5.1", "5.10", "5.11", "5.12", "5.13", "5.14", "+5.2", "5.2", 
         "+5.3", "5.3", "+5.4", "5.4", "+5.5", "5.5", "+5.6", "5.6", "+5.7", 
         "5.7", "5.8", "5.9"}]; 
      Clear[$CellContext`SolutionResponseDetails]; \
$CellContext`SolutionResponseDetails[
         Pattern[ElementaryIntroToWLWeb`Private`str, 
          Blank[String]], True] := 
       Style[ElementaryIntroToWLWeb`Private`str, 
         "SolutionTrue"]; $CellContext`SolutionResponseDetails[
         Pattern[ElementaryIntroToWLWeb`Private`str, 
          Blank[String]], False] := 
       Style[ElementaryIntroToWLWeb`Private`str, 
         "SolutionFalse"]; $CellContext`SolutionResponseDetails[
         Pattern[ElementaryIntroToWLWeb`Private`str, 
          Blank[String]]] := 
       ElementaryIntroToWLWeb`Private`str; \
$CellContext`SolutionResponseDetails[
         Missing[
          BlankSequence[]]] := " "; $CellContext`SolutionResponseDetails[
         BlankNullSequence[]] := " "; 
      Clear[$CellContext`GetUserSolutions]; $CellContext`GetUserSolutions[] := 
       Flatten[
         Cases[
          Options[
           EvaluationNotebook[], TaggingRules], ("EIWLExercises" -> 
           Pattern[ElementaryIntroToWLWeb`Private`ex, 
             Blank[]]) :> ElementaryIntroToWLWeb`Private`ex, Infinity]]; 
      Clear[$CellContext`GetUserSolutionsTotal]; \
$CellContext`GetUserSolutionsTotal[] := Length[
         Union[
          Flatten[
           Cases[
            Cases[
             Options[
              EvaluationNotebook[], TaggingRules], ("EIWLExercises" -> 
              Pattern[ElementaryIntroToWLWeb`Private`ex, 
                Blank[]]) :> ElementaryIntroToWLWeb`Private`ex, Infinity], (
             "ExercisesTotal" -> Pattern[ElementaryIntroToWLWeb`Private`t, 
               Blank[]]) :> ElementaryIntroToWLWeb`Private`t, Infinity]]]]; 
      Clear[$CellContext`GetUserSolutionsTried]; \
$CellContext`GetUserSolutionsTried[] := Length[
         Union[
          Flatten[
           Cases[
            Cases[
             Options[
              EvaluationNotebook[], TaggingRules], ("EIWLExercises" -> 
              Pattern[ElementaryIntroToWLWeb`Private`ex, 
                Blank[]]) :> ElementaryIntroToWLWeb`Private`ex, Infinity], (
             "ExercisesTried" -> Pattern[ElementaryIntroToWLWeb`Private`t, 
               Blank[]]) :> ElementaryIntroToWLWeb`Private`t, Infinity]]]]; 
      Clear[$CellContext`GetUserSolutionsCorrect]; \
$CellContext`GetUserSolutionsCorrect[] := Length[
         Union[
          Flatten[
           Cases[
            Cases[
             Options[
              EvaluationNotebook[], TaggingRules], ("EIWLExercises" -> 
              Pattern[ElementaryIntroToWLWeb`Private`ex, 
                Blank[]]) :> ElementaryIntroToWLWeb`Private`ex, Infinity], (
             "ExercisesCorrect" -> Pattern[ElementaryIntroToWLWeb`Private`t, 
               Blank[]]) :> ElementaryIntroToWLWeb`Private`t, 
            Infinity]]]]; $CellContext`EIWLExerciseSolutionsTotal = \
$CellContext`GetUserSolutionsTotal[]; $CellContext`EIWLExerciseSolutionsTried = \
$CellContext`GetUserSolutionsTried[]; \
$CellContext`EIWLExerciseSolutionsCorrect = \
$CellContext`GetUserSolutionsCorrect[]; 
      Clear[$CellContext`SetUserSolutionsTried]; \
$CellContext`SetUserSolutionsTried[
         Pattern[ElementaryIntroToWLWeb`Private`value, 
          Blank[]]] := 
       Module[{ElementaryIntroToWLWeb`Private`data, 
          ElementaryIntroToWLWeb`Private`tr}, 
         ElementaryIntroToWLWeb`Private`data = Flatten[
            Cases[
             Options[
              EvaluationNotebook[], TaggingRules], ("EIWLExercises" -> 
              Pattern[ElementaryIntroToWLWeb`Private`ex, 
                Blank[]]) :> ElementaryIntroToWLWeb`Private`ex, Infinity]]; 
         ElementaryIntroToWLWeb`Private`tr = ReplaceAll[TaggingRules, 
            Options[
             EvaluationNotebook[], TaggingRules]]; 
         ElementaryIntroToWLWeb`Private`tr = 
          DeleteCases[
           ElementaryIntroToWLWeb`Private`tr, "EIWLExercises" -> Blank[], 
            Infinity]; 
         AppendTo[
          ElementaryIntroToWLWeb`Private`tr, 
           "EIWLExercises" -> {
            "ExercisesTotal" -> 
             ReplaceAll[
              "ExercisesTotal", ElementaryIntroToWLWeb`Private`data], 
             "ExercisesTried" -> Append[
               Flatten[
                Cases[
                ElementaryIntroToWLWeb`Private`data, ("ExercisesTried" -> 
                  Pattern[ElementaryIntroToWLWeb`Private`t, 
                    Blank[]]) :> ElementaryIntroToWLWeb`Private`t, Infinity]],
                ElementaryIntroToWLWeb`Private`value], "ExercisesCorrect" -> 
             ReplaceAll[
              "ExercisesCorrect", ElementaryIntroToWLWeb`Private`data]}]; 
         SetOptions[
           EvaluationNotebook[], TaggingRules -> 
           ElementaryIntroToWLWeb`Private`tr]; \
$CellContext`EIWLExerciseSolutionsTried = \
$CellContext`GetUserSolutionsTried[]; Null]; 
      Clear[$CellContext`SetUserSolutionsCorrect]; \
$CellContext`SetUserSolutionsCorrect[
         Pattern[ElementaryIntroToWLWeb`Private`value, 
          Blank[]]] := 
       Module[{ElementaryIntroToWLWeb`Private`data, 
          ElementaryIntroToWLWeb`Private`tr}, 
         ElementaryIntroToWLWeb`Private`data = Flatten[
            Cases[
             Options[
              EvaluationNotebook[], TaggingRules], ("EIWLExercises" -> 
              Pattern[ElementaryIntroToWLWeb`Private`ex, 
                Blank[]]) :> ElementaryIntroToWLWeb`Private`ex, Infinity]]; 
         ElementaryIntroToWLWeb`Private`tr = ReplaceAll[TaggingRules, 
            Options[
             EvaluationNotebook[], TaggingRules]]; 
         ElementaryIntroToWLWeb`Private`tr = 
          DeleteCases[
           ElementaryIntroToWLWeb`Private`tr, "EIWLExercises" -> Blank[], 
            Infinity]; 
         AppendTo[
          ElementaryIntroToWLWeb`Private`tr, 
           "EIWLExercises" -> {
            "ExercisesTotal" -> 
             ReplaceAll[
              "ExercisesTotal", ElementaryIntroToWLWeb`Private`data], 
             "ExercisesTried" -> 
             ReplaceAll[
              "ExercisesTried", ElementaryIntroToWLWeb`Private`data], 
             "ExercisesCorrect" -> Append[
               Flatten[
                Cases[
                ElementaryIntroToWLWeb`Private`data, ("ExercisesCorrect" -> 
                  Pattern[ElementaryIntroToWLWeb`Private`t, 
                    Blank[]]) :> ElementaryIntroToWLWeb`Private`t, Infinity]],
                ElementaryIntroToWLWeb`Private`value]}]; SetOptions[
           EvaluationNotebook[], TaggingRules -> 
           ElementaryIntroToWLWeb`Private`tr]; \
$CellContext`EIWLExerciseSolutionsCorrect = \
$CellContext`GetUserSolutionsCorrect[]; Null]; 
      Clear[ElementaryIntroToWLWeb`Private`GetCurrentTallyCell]; \
$CellContext`GetCurrentTallyCell[] := Module[{}, 
         With[{
          ElementaryIntroToWLWeb`Private`solutionsTried = \
$CellContext`GetUserSolutionsTried[], 
           ElementaryIntroToWLWeb`Private`solutionsTotal = \
$CellContext`GetUserSolutionsTotal[], 
           ElementaryIntroToWLWeb`Private`solutionsCorrect = \
$CellContext`GetUserSolutionsCorrect[]}, 
          Cell[
           BoxData[
            PaneBox[
             TemplateBox[{
               StyleBox[
               "COMPLETED\[ThickSpace]\[ThickSpace]", 
                "DockedCellCompletedExerciseText"], 
               StyleBox[
               ElementaryIntroToWLWeb`Private`solutionsTried, 
                "DockedCellCompletedExerciseText"], 
               StyleBox["/", "DockedCellSolutionDivider"], 
               StyleBox[
               ElementaryIntroToWLWeb`Private`solutionsTotal, 
                "DockedCellCompletedExerciseText"], 
               StyleBox[
               "\[ThinSpace]|\[ThinSpace]", "DockedCellSolutionDivider"], 
               StyleBox[
               ElementaryIntroToWLWeb`Private`solutionsCorrect, 
                "DockedCellCorrectExerciseText"], 
               StyleBox[
               "\[ThickSpace]\[ThickSpace]CORRECT", 
                "DockedCellCorrectExerciseText"]}, "RowDefault"], Alignment -> 
             Right, ImageSize -> Full]], "Output", TextAlignment -> Right, 
           CellFrame -> 1, CellMargins -> {{0, 0}, {10, 0}}, 
           CellFrameMargins -> {{14, 24}, {4, 7}}, CellFrameColor -> 
           RGBColor[1, 0.956862, 0.878431], MenuSortingValue -> 10000, 
           Background -> RGBColor[1, 0.956862, 0.878431], CellTags -> 
           "SolutionTallyCell"]]])]], "Output", CellMargins -> 0, 
   CellFrameMargins -> {{0, 24}, {3, 6}}, Background -> 
   RGBColor[0.97647, 0.482352, 0], CellFrame -> 1, CellFrameColor -> 
   RGBColor[0.97647, 0.482352, 0]], 
  Cell["SECOND EDITION", "Text", FontFamily -> "Source Sans Pro", 
   CellFrame -> {{0, 0}, {3, 0}}, ShowCellBracket -> False, 
   CellMargins -> {{0, 0}, {-1, -1}}, CellFrameMargins -> {{44, 0}, {2, 4}}, 
   CellFrameColor -> RGBColor[0.952941, 0.509804, 0], FontSize -> 10, 
   FontTracking -> "Extended", FontColor -> RGBColor[1, 0.929412, 0.721569], 
   Background -> RGBColor[0.862745, 0.309804, 0], CellTags -> 
   "DockedCellLogoCell"]},
TaggingRules->{
 "EIWLExercises" -> {
   "ExercisesTotal" -> {
     "+5.1", "5.1", "5.10", "5.11", "5.12", "5.13", "5.14", "+5.2", "5.2", 
      "+5.3", "5.3", "+5.4", "5.4", "+5.5", "5.5", "+5.6", "5.6", "+5.7", 
      "5.7", "5.8", "5.9"}, "ExercisesTried" -> {}, "ExercisesCorrect" -> {}}},
ShowAutoSpellCheck->False,
AutoStyleOptions->{"HighlightMisspelledWords"->False},
FrontEndVersion->"11.3 for Mac OS X x86 (32-bit, 64-bit Kernel) (March 5, \
2018)",
StyleDefinitions->Notebook[{
   Cell[
    StyleData[StyleDefinitions -> "Default.nb"]], 
   Cell[
    CellGroupData[{
      Cell[
      "Style Environments", "Section", 
       CellChangeTimes -> {{3.64661165091824*^9, 3.646611654013329*^9}, 
         3.6485723794335403`*^9, 3.651347081728628*^9, 3.651347179462186*^9, 
         3.651347384135805*^9, 3.651348171662589*^9, {3.662385415502224*^9, 
         3.662385415587447*^9}, {3.662385986094821*^9, 
         3.662385986340312*^9}, {3.662386515144682*^9, 
         3.662386515438078*^9}, {3.662386561676188*^9, 
         3.662386561889332*^9}, {3.668356126688795*^9, 
         3.6683561270120687`*^9}, {3.670169943059537*^9, 
         3.670169943254141*^9}}], 
      Cell[
       StyleData[All, "Working"]], 
      Cell[
       StyleData[All, "Printout"], 
       PrintingOptions -> {
        "PageSize" -> {504, 720}, "PrintRegistrationMarks" -> True}, 
       Magnification -> 0.6]}, Closed]], 
   Cell[
    CellGroupData[{
      Cell[
      "Custom Styles", "Section", 
       CellChangeTimes -> {{3.646611660445352*^9, 3.646611669493331*^9}}], 
      Cell[
       StyleData["Notebook"], CreateCellID -> True, CellContext -> Notebook, 
       CellLabelAutoDelete -> False, DefaultNewCellStyle -> "Input", 
       ShowSyntaxStyles -> True, MenuSortingValue -> None], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["Title"], CellMargins -> {{64, Inherited}, {50, 72}}, 
          MenuCommandKey -> None, FontFamily -> "Verdana", FontSize -> 42, 
          FontWeight -> "Bold", FontColor -> GrayLevel[0.4]], 
         Cell[
          StyleData["Title", "Printout"], 
          CellMargins -> {{64, Inherited}, {50, 72}}]}, Closed]], 
      Cell[
       StyleData["Chapter"], MenuCommandKey -> None], 
      Cell[
       StyleData["Subchapter"], MenuCommandKey -> None], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["Section"], CellFrame -> {{0, 0}, {0, 0}}, CellDingbat -> 
          Cell[
            TextData[
             CounterBox["Section"], 
             StyleBox[
             "|\[NegativeThinSpace]", FontColor -> 
              RGBColor[
               0.9019607843137255, 0.4117647058823529, 0.027450980392156862`],
               FontFamily -> "Courier", FontSize -> 36, FontWeight -> Plain]],
             "SectionNumber"], CellMargins -> {{96, Inherited}, {12, 64}}, 
          Evaluatable -> True, CellGroupingRules -> {"SectionGrouping", 60}, 
          PageBreakAbove -> True, ShowCellLabel -> False, 
          CellFrameLabelMargins -> {{2, Inherited}, {Inherited, Inherited}}, 
          CellChangeTimes -> {3.652728456208679*^9, 3.652728527108994*^9}, 
          CounterIncrements -> "Section", 
          CounterAssignments -> {{"Subsection", 0}, {"Subsubsection", 0}, {
            "Exercise", 0}}, FontFamily -> "Source Sans Pro Semibold", 
          FontSize -> 26, FontSlant -> "Plain", FontColor -> 
          RGBColor[
           0.9019607843137255, 0.4117647058823529, 0.027450980392156862`], 
          InterpretationBoxOptions -> {Editable -> True}], 
         Cell[
          StyleData["Section", "Printout"], 
          CellMargins -> {{96, Inherited}, {12, 2}}]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["SectionDoubleDigit"], CellFrame -> {{0, 0}, {0, 0}}, 
          CellDingbat -> Cell[
            TextData[
             CounterBox["Section"], 
             StyleBox[
             "|\[NegativeThinSpace]", FontColor -> 
              RGBColor[
               0.9019607843137255, 0.4117647058823529, 0.027450980392156862`],
               FontFamily -> "Courier", FontSize -> 36, FontWeight -> Plain]],
             "SectionNumber"], CellMargins -> {{112, Inherited}, {12, 64}}, 
          Evaluatable -> True, CellGroupingRules -> {"SectionGrouping", 60}, 
          PageBreakAbove -> True, ShowCellLabel -> False, 
          CellFrameLabelMargins -> {{2, Inherited}, {Inherited, Inherited}}, 
          CellChangeTimes -> {3.652728456208679*^9, 3.652728527108994*^9}, 
          CounterIncrements -> "Section", 
          CounterAssignments -> {{"Subsection", 0}, {"Subsubsection", 0}, {
            "Exercise", 0}}, FontFamily -> "Source Sans Pro Semibold", 
          FontSize -> 26, FontSlant -> "Plain", FontColor -> 
          RGBColor[
           0.9019607843137255, 0.4117647058823529, 0.027450980392156862`], 
          InterpretationBoxOptions -> {Editable -> True}], 
         Cell[
          StyleData["SectionDoubleDigit", "Printout"], 
          CellMargins -> {{112, Inherited}, {12, 2}}]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["SectionNumber"], CellBaseline -> Baseline, FontFamily -> 
          "Source Sans Pro Semibold", FontSize -> 26, FontColor -> 
          RGBColor[
           0.9019607843137255, 0.4117647058823529, 0.027450980392156862`]], 
         Cell[
          StyleData["SectionNumber", "Printout"]]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["SectionInline"], FontFamily -> 
          "Source Sans Pro Semibold", FontColor -> 
          RGBColor[
           0.9019607843137255, 0.4117647058823529, 0.027450980392156862`]], 
         Cell[
          StyleData["SectionInline", "Printout"]]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["SectionNoDingbat"], 
          CellMargins -> {{64, Inherited}, {12, 64}}, Evaluatable -> True, 
          CellGroupingRules -> {"SectionGrouping", 60}, PageBreakAbove -> 
          True, ShowCellLabel -> False, 
          CellFrameLabelMargins -> {{2, Inherited}, {Inherited, Inherited}}, 
          CellChangeTimes -> {3.652728456208679*^9, 3.652728527108994*^9}, 
          CounterIncrements -> "Section", 
          CounterAssignments -> {{"Subsection", 0}, {"Subsubsection", 0}, {
            "Exercise", 0}}, FontFamily -> "Source Sans Pro Semibold", 
          FontSize -> 26, FontSlant -> "Plain", FontColor -> 
          RGBColor[
           0.9019607843137255, 0.4117647058823529, 0.027450980392156862`], 
          InterpretationBoxOptions -> {Editable -> True}], 
         Cell[
          StyleData["SectionNoDingbat", "Printout"], 
          CellMargins -> {{64, Inherited}, {12, 2}}]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["Exercise"], CellDingbat -> Cell[
            TextData[{"  ", 
              CounterBox["Section"], ".", 
              CounterBox["Exercise"]}], "ExerciseNumber", FontColor -> 
            RGBColor[
             0.9019607843137255, 0.4117647058823529, 0.027450980392156862`]], 
          ShowGroupOpener -> True, CellMargins -> {{90, 40}, {4, 18}}, 
          CellGroupingRules -> "InputGrouping", CounterIncrements -> 
          "Exercise", MenuSortingValue -> 10020, MenuCommandKey -> "2", 
          FontFamily -> "Source Sans Pro", FontSize -> 16, FontWeight -> 
          "Plain", FontSlant -> "Plain", FontColor -> GrayLevel[0.25]], 
         Cell[
          StyleData["Exercise", "Printout"], ShowGroupOpener -> False, 
          CellMargins -> {{110, Inherited}, {4, 8}}]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["ExerciseNumber"], FontFamily -> "Source Sans Pro", 
          FontSize -> 16, FontWeight -> "Bold", FontColor -> GrayLevel[0.25]], 
         Cell[
          StyleData["ExerciseNumber", "Printout"]]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["ExerciseInput", StyleDefinitions -> StyleData["Input"]], 
          CellMargins -> {{70, 30}, {4, 7}}, ShowCellLabel -> False, 
          CellFrameLabels -> {{None, None}, {None, None}}, SpanMaxSize -> 1, 
          FontSize -> 
          14, $CellContext`GeneratedCellStyles -> {
           "Output" -> "ExerciseOutput"}], 
         Cell[
          StyleData["ExerciseInput", "Printout"], 
          CellMargins -> {{88, 10}, {4, 7}}]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData[
          "ExerciseOutput", StyleDefinitions -> StyleData["Output"]], 
          CellMargins -> {{90, 40}, {0, 6}}, CellGroupingRules -> 
          "OutputGrouping", ShowCellLabel -> False, FontSize -> 14], 
         Cell[
          StyleData["ExerciseOutput", "Printout"], 
          CellMargins -> {{88, 10}, {10, 4}}]}, Closed]], 
      Cell[
       StyleData["ExerciseExpectedResult"], ShowCellBracket -> False, 
       ShowGroupOpener -> False, CellMargins -> {{90, 40}, {3, 9}}, 
       CellGroupingRules -> "InputGrouping", CounterIncrements -> "Exercise", 
       MenuSortingValue -> 10000, FontFamily -> "Source Sans Pro", FontSize -> 
       12, FontWeight -> "Plain", FontSlant -> "Plain"], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["Picture"], CellMargins -> {{66, 10}, {10, 10}}, 
          CellGroupingRules -> "GraphicsGrouping", StyleMenuListing -> None], 
         
         Cell[
          StyleData["Picture", "Printout"], 
          CellMargins -> {{66, 10}, {8, 8}}]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["Tentative"], 
          CellBracketOptions -> {
           "Color" -> RGBColor[
             0.30000000000000016`, 0.6000000000000003, 0.7000000000000003], 
            "Thickness" -> 5}, Evaluatable -> False, CellFrameMargins -> 4, 
          StyleMenuListing -> None, Background -> 
          RGBColor[0.8500000000000003, 0.9500000000000003, 1]], 
         Cell[
          StyleData["Tentative", "Printout"], 
          CellElementSpacings -> {"CellMinHeight" -> 0.1}, CellOpen -> False, 
          CellFrameMargins -> 0, FontSize -> 0.1, Magnification -> 0.01]}, 
        Closed]], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["WebOnly"], 
          CellBracketOptions -> {
           "Color" -> RGBColor[0.91, 0.92, 0.9], "Thickness" -> 5}, 
          CellFrameMargins -> 4, StyleMenuListing -> None, Background -> 
          RGBColor[0.91, 0.92, 0.86]], 
         Cell[
          StyleData["WebOnly", "Printout"], 
          CellElementSpacings -> {"CellMinHeight" -> 0.1}, CellOpen -> False, 
          CellFrameMargins -> 0, FontSize -> 0.1, Magnification -> 0.01]}, 
        Closed]], 
      Cell[
       StyleData["Lockdown"], 
       CellBracketOptions -> {
        "Color" -> RGBColor[0.8, 0.5, 0.4], "Thickness" -> 3}, Evaluatable -> 
       False, StyleMenuListing -> None], 
      Cell[
       StyleData["InlineCode"], SpanMaxSize -> 0, FontColor -> GrayLevel[0]], 
      
      Cell[
       StyleData["ExpectedOutputNote"], Selectable -> False, FontFamily -> 
       "Source Sans Pro", FontColor -> GrayLevel[0.3]], 
      Cell[
       StyleData["EIWLTextLink"], LineBreakWithin -> False, 
       TemplateBoxOptions -> {DisplayFunction :> (TagBox[
           
           ButtonBox[#, Appearance -> None, ButtonData -> #2, 
            BaseStyle -> {
             "Hyperlink", FontWeight -> Bold, FontSize -> 16, FontFamily -> 
              "Source Sans Pro"}], 
           MouseAppearanceTag["LinkHand"]]& )}, 
       ButtonBoxOptions -> {Appearance -> None, BaseStyle -> "Link"}], 
      Cell[
       StyleData["CheckAnswerDividerCloud"], ShowCellBracket -> False, 
       CellMargins -> {{40, 40}, {3, 6}}, 
       CellBracketOptions -> {"OverlapContent" -> True}, 
       CellGroupingRules -> {"SectionGrouping", 40}, 
       CellFrameMargins -> {{20, 20}, {2, 2}}, TextAlignment -> Right], 
      Cell[
       StyleData["CodeSectionDividerCloud"], Editable -> False, Selectable -> 
       False, ShowCellBracket -> False, CellMargins -> {{0, 0}, {0, 35}}, 
       CellBracketOptions -> {"OverlapContent" -> True}, 
       CellElementSpacings -> {"CellMinHeight" -> 6}, 
       CellGroupingRules -> {"SectionGrouping", -5}, 
       CellFrameMargins -> {{20, 20}, {2, 2}}, DefaultNewCellStyle -> "Input",
        FontSize -> 6, Background -> GrayLevel[0.95]], 
      Cell[
       StyleData["InlineCode"], SpanMaxSize -> 0, FontColor -> GrayLevel[0]], 
      
      Cell[
       StyleData["InlineCodeText"], SpanMaxSize -> 0, FontFamily -> 
       "Source Sans Pro"], 
      Cell[
       StyleData["Input"], CellMargins -> {{92, 20}, {5, 8}}, 
       CellFrameLabels -> {{None, 
          
          DynamicModuleBox[{$CellContext`EIWLExerciseCheck = 
            Automatic, $CellContext`buttonLabel = " CHECK MY SOLUTION "}, 
           DynamicBox[
            ToBoxes[
             If[
              TrueQ[$CellContext`EIWLExerciseCheck == Automatic], 
              MouseAppearance[
               Tooltip[
                Button[
                 Framed[
                  Panel[
                   
                   Style[$CellContext`buttonLabel, FontFamily -> 
                    "Source Sans Pro", FontSize -> 10, FontColor -> 
                    RGBColor[0.953948, 0.305638, 0.0285344]], Appearance -> 
                   None, Background -> GrayLevel[1], 
                   FrameMargins -> {{2, 2}, {0, 0}}, ImageMargins -> 0], 
                  FrameStyle -> {
                    Thickness[Tiny], 
                    RGBColor[0.953948, 0.305638, 0.0285344]}, RoundingRadius -> 
                  3], 
                 
                 Block[{$CellContext`usersCell, $CellContext`solutionResult, \
$CellContext`exerciseNumber, $CellContext`exerciseSwitchResult}, \
$CellContext`exerciseNumber = StringJoin[
                    If[
                    TrueQ[CurrentValue[{"CounterValue", "WebOnly"}] == 1], 
                    "x", ""], 
                    ToString[
                    CurrentValue[{"CounterValue", "SectionNumber"}]], ".", 
                    ToString[
                    
                    CurrentValue[{
                    "CounterValue", 
                    "ExerciseNumber"}]]]; $CellContext`buttonLabel = 
                   Row[{" CHECKING ", 
                    ProgressIndicator[Appearance -> "Percolate"]}]; 
                  SelectionMove[
                    ButtonNotebook[], All, ButtonCell, AutoScroll -> 
                    False]; $CellContext`usersCell = NotebookRead[
                    InputNotebook[]]; If[
                    TrueQ[Length[
                    Flatten[{$CellContext`usersCell}]] == 
                    1], $CellContext`solutionResult = ToExpression[
                    URLFetch[
                    "https://www.wolframcloud.com/objects/user-9b23d046-b2a9-\
4a5c-8723-08465cce25ed/EIWLGradingAPI", "Method" -> "POST", 
                    "Parameters" -> {
                    "exNum" -> $CellContext`exerciseNumber, "answer" -> 
                    ToString[$CellContext`usersCell, InputForm, 
                    CharacterEncoding -> "ASCII"], "user" -> 
                    ToString[$WolframID], "referer" -> "eiwl-nb", "uuid" -> 
                    ToString[$WolframUUID]}]]; \
$CellContext`SolutionResponseText[$CellContext`exerciseNumber] = \
$CellContext`SolutionResponseDetails[
                    $CellContext`solutionResult["Text"], 
                    $CellContext`solutionResult[
                    "CorrectQ"]]; $CellContext`exerciseSwitchResult = Switch[
                    $CellContext`solutionResult["CorrectQ"], 
                    True, $CellContext`EIWLExerciseCheck = 
                    True; $CellContext`SetUserSolutionsCorrect[$CellContext`\
exerciseNumber]; \
$CellContext`SetUserSolutionsTried[$CellContext`exerciseNumber]; Null, 
                    
                    Blank[], $CellContext`EIWLExerciseCheck = 
                    False; $CellContext`SetUserSolutionsTried[$CellContext`\
exerciseNumber]], 
                    CloudSystem`CreateCloudDialog[
                    StyleBox[
                    "Select a cell to be checked.", Selectable -> False], 
                    WindowTitle -> " "]]], Appearance -> None, Evaluator -> 
                 Automatic, Method -> "Queued"], 
                "Click to check your solution.", TooltipDelay -> 0.15], 
               "LinkHand"], 
              If[
               TrueQ[$CellContext`EIWLExerciseCheck], 
               MouseAppearance[
                Button[
                 Framed[
                  Row[{
                    Panel[
                    Style[
                    ToExpression[
                    "\!\(\* GraphicsBox[ TagBox[RasterBox[CompressedData[\" \
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBLECOU2VJahIzkCECxFJADGKrbtYa \
RUMUpZzMcNnnQRWjMk5lf/vzDWggtYwCkgNiFDBAsPqCPFcBjcLURYkH0fRS \
HlZwE6gV7EATfvz98f3Pd6rEIBClncpMPZlJFaNGEd0QANRpOvM= \"], {{0, 20}, { 26, \
0}}, {0, 255}, ColorFunction->RGBColor], BoxForm`ImageTag[ \"Byte\", \
Interleaving -> True, Magnification -> 1], Selectable->False], \
BaseStyle->\"ImageGraphics\", ImageSize->Magnification[1], ImageSizeRaw->{26, \
20}, PlotRange->{{0, 26}, {0, 20}}]\)"], Selectable -> False], Background -> 
                    RGBColor[0.146944, 0.70164, 0.16466], 
                    FrameMargins -> {{5, 5}, {0, 0}}, ImageMargins -> 0, 
                    Appearance -> None], 
                    Panel[
                    Style[
                    " CORRECT ", FontSize -> 10, FontColor -> 
                    RGBColor[0.146944, 0.70164, 0.16466], FontFamily -> 
                    "Source Sans Pro"], Background -> White, 
                    FrameMargins -> {{5, 5}, {0, 0}}, Appearance -> None]}], 
                  FrameStyle -> {
                    Thickness[Tiny], 
                    RGBColor[0.146944, 0.70164, 0.16466]}, FrameMargins -> 0, 
                  RoundingRadius -> 3], $CellContext`buttonLabel = 
                  " CHECK MY SOLUTION "; $CellContext`EIWLExerciseCheck = 
                  Automatic, Appearance -> None], "LinkHand"], 
               MouseAppearance[
                Button[
                 Framed[
                  Row[{
                    Panel[
                    Style[
                    ToExpression[
                    "\!\(\* GraphicsBox[ TagBox[RasterBox[CompressedData[\" \
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBLECOU2VJahIzkCECxGJADGK/YtAZ \
RTRCb1W8PnhlYooDBYFSxJgAVPnvy7cPfrkogn65IEFsJmM3BKIeZggal1RD \
yNOOMOT7DyAiTzvlJlDoCwpDkvLYpDxFjSLyEAAHORZk \"], {{0, 20}, {22, 0}}, { 0, \
255}, ColorFunction->RGBColor], BoxForm`ImageTag[ \"Byte\", Interleaving -> \
True, Magnification -> 1], Selectable->False], BaseStyle->\"ImageGraphics\", \
ImageSize->Magnification[1], ImageSizeRaw->{22, 20}, PlotRange->{{0, 22}, {0, \
20}}]\)"], Selectable -> False], Background -> 
                    RGBColor[0.918257, 0, 0.172488], 
                    FrameMargins -> {{5, 5}, {0, 0}}, ImageMargins -> 0, 
                    Appearance -> None], 
                    Panel[
                    Style[
                    " TRY AGAIN ", FontSize -> 10, FontColor -> 
                    RGBColor[0.918257, 0, 0.172488], FontFamily -> 
                    "Source Sans Pro"], Background -> White, 
                    FrameMargins -> {{5, 5}, {0, 0}}, Appearance -> None]}], 
                  FrameStyle -> {
                    Thickness[Tiny], 
                    RGBColor[0.918257, 0, 0.172488]}, FrameMargins -> 0, 
                  RoundingRadius -> 3], $CellContext`buttonLabel = 
                  " CHECK MY SOLUTION "; $CellContext`EIWLExerciseCheck = 
                  Automatic, Appearance -> None], "LinkHand"]]], 
             StandardForm], ImageSizeCache -> {109., {9., 16.}}], 
           DynamicModuleValues :> {}]}, {None, None}}, 
       CellChangeTimes -> {{3.6688095471029243`*^9, 3.66880959932793*^9}}, 
       MenuSortingValue -> 10000, FontSize -> 15], 
      Cell[
       StyleData["Output"], Deletable -> True, ShowCellBracket -> True, 
       CellMargins -> {{92, 50}, {10, 5}}, 
       CellBracketOptions -> {"OverlapContent" -> True}, CellEditDuplicate -> 
       True, GeneratedCell -> True, CellAutoOverwrite -> True, 
       LinebreakAdjustments -> {1, 2., 12., 1.25, 1.}, MenuSortingValue -> 
       None, FontSize -> 15], 
      Cell[
       StyleData["Message"], 
       CellMargins -> {{92, Inherited}, {Inherited, Inherited}}], 
      Cell[
       StyleData["EmptyCell"], Editable -> False, Selectable -> False, 
       CellMargins -> {{0, 0}, {-2, 0}}, 
       CellElementSpacings -> {"CellMinHeight" -> 1}, MenuSortingValue -> 
       10000, FontSize -> 1], 
      Cell[
       StyleData["CellLabel"], MenuSortingValue -> 10000, FontColor -> 
       GrayLevel[0.6]], 
      Cell[
       StyleData["Link"], LineBreakWithin -> False, 
       TemplateBoxOptions -> {DisplayFunction :> (TagBox[
           
           ButtonBox[#, Appearance -> None, ButtonData -> #2, 
            BaseStyle -> {
             "Hyperlink", FontSize -> 15, FontFamily -> "Source Sans Pro"}], 
           MouseAppearanceTag["LinkHand"]]& )}, 
       ButtonBoxOptions -> {Appearance -> None, BaseStyle -> "Link"}], 
      Cell[
       StyleData["ExpectedOutputText"], FontFamily -> "Arial", FontSize -> 13,
        FontColor -> RGBColor[0.8579079880979629, 0.4263828488593881, 0.]], 
      Cell[
       StyleData["CodeSectionDividerCloud"], Selectable -> False, 
       ShowCellBracket -> False, CellMargins -> {{0, 0}, {0, 35}}, 
       CellBracketOptions -> {"OverlapContent" -> True}, 
       CellElementSpacings -> {"CellMinHeight" -> 6}, 
       CellGroupingRules -> {"SectionGrouping", -5}, 
       CellFrameMargins -> {{20, 20}, {2, 2}}, DefaultNewCellStyle -> 
       "EmptyCell", FontSize -> 6, Background -> GrayLevel[0.95]], 
      Cell[
       StyleData["DockedCellAuthorName"], MenuSortingValue -> 10000, 
       FontFamily -> "Source Sans Pro", FontSize -> 12, FontColor -> 
       RGBColor[1, 0.929411, 0.721568]], 
      Cell[
       StyleData["DockedCellSectionTitle"], MenuSortingValue -> 10000, 
       FontFamily -> "Source Sans Pro", FontSize -> 18, FontColor -> 
       GrayLevel[1]], 
      Cell[
       StyleData["DockedCellSecondCell"], CellFrame -> 1, 
       CellMargins -> {{0, 0}, {0, 0}}, 
       CellFrameMargins -> {{10, 10}, {10, 10}}, CellFrameColor -> 
       RGBColor[1, 0.956862, 0.878431], MenuSortingValue -> 10000, Background -> 
       RGBColor[1, 0.956862, 0.878431]], 
      Cell[
       StyleData["CompletedExerciseHeader"], MenuSortingValue -> 10000, 
       FontFamily -> "Source Sans Pro", FontSize -> 14, FontColor -> 
       GrayLevel[0.5]], 
      Cell[
       StyleData["DockedCellShareButton"], MenuSortingValue -> 10000, 
       FontFamily -> "Source Sans Pro", FontSize -> 13, FontColor -> 
       GrayLevel[1]], 
      Cell[
       StyleData["DockedCellLinksSections"], MenuSortingValue -> 10000, 
       FontFamily -> "Source Sans Pro", FontSize -> 14, FontWeight -> "Plain",
        FontSlant -> "Plain", FontColor -> RGBColor[0.97647, 0.482352, 0]], 
      Cell[
       StyleData["DockedCellLinksDivider"], MenuSortingValue -> 10000, 
       FontFamily -> "Courier", FontSize -> 18, FontWeight -> "Plain", 
       FontSlant -> "Plain", FontColor -> RGBColor[0.97647, 0.482352, 0]], 
      Cell[
       StyleData["DockedCellSectionTitleDivider"], MenuSortingValue -> 10000, 
       FontFamily -> "Courier", FontSize -> 24, FontWeight -> "Plain", 
       FontSlant -> "Plain", FontColor -> GrayLevel[1]], 
      Cell[
       StyleData["SolutionTrue"], MenuSortingValue -> 10000, FontFamily -> 
       "Source Sans Pro", FontSize -> 12, FontWeight -> "Plain", FontSlant -> 
       "Plain", FontColor -> RGBColor[0.12, 0.7, 0.22]], 
      Cell[
       StyleData["SolutionFalse"], MenuSortingValue -> 10000, FontFamily -> 
       "Source Sans Pro", FontSize -> 12, FontWeight -> "Plain", FontSlant -> 
       "Plain", FontColor -> RGBColor[0.94, 0.08, 0.2]], 
      Cell[
       StyleData["SolutionResponseText"], ShowStringCharacters -> False, 
       FontFamily -> "Source Sans Pro", FontSize -> 12, FontWeight -> "Plain",
        FontSlant -> "Plain", FontColor -> GrayLevel[1]], 
      Cell[
       StyleData["SolutionResponse"], ShowCellBracket -> False, 
       CellMargins -> {{24, 25}, {6, 0}}, 
       CellFrameMargins -> {{8, 0}, {0, 12}}, TextAlignment -> Right, 
       ShowStringCharacters -> False, FontFamily -> "Source Sans Pro", 
       FontSize -> 12, FontWeight -> "Plain", FontSlant -> "Plain", 
       Background -> GrayLevel[1]], 
      Cell[
       StyleData["DockedCellCompletedExerciseText"], MenuSortingValue -> 
       10000, FontFamily -> "Source Sans Pro", FontSize -> 12, FontWeight -> 
       "Plain", FontSlant -> "Plain", FontColor -> GrayLevel[0.4]], 
      Cell[
       StyleData["DockedCellSolutionDivider"], MenuSortingValue -> 10000, 
       FontFamily -> "Courier", FontSize -> 16, FontWeight -> "Plain", 
       FontSlant -> "Plain", FontColor -> GrayLevel[0.6]], 
      Cell[
       StyleData["DockedCellCorrectExerciseText"], MenuSortingValue -> 10000, 
       FontFamily -> "Source Sans Pro", FontSize -> 12, FontWeight -> "Plain",
        FontSlant -> "Plain", FontColor -> RGBColor[0.12, 0.7, 0.22]], 
      Cell[
       CellGroupData[{
         Cell[
         "EIWL Cloud Link styles", "Subsubsection", 
          CellChangeTimes -> {{3.663512229965006*^9, 3.66351224118613*^9}}], 
         Cell[
          StyleData["EIWLTextLink"], LineBreakWithin -> False, 
          TemplateBoxOptions -> {DisplayFunction :> (TagBox[
              ButtonBox[#, Appearance -> None, ButtonData -> #2, 
               BaseStyle -> {
                "Hyperlink", FontSize -> 16, FontFamily -> 
                 "Source Sans Pro"}], 
              MouseAppearanceTag["LinkHand"]]& )}, 
          ButtonBoxOptions -> {Appearance -> None, BaseStyle -> "Link"}], 
         Cell[
          StyleData["EIWLTextLinkAnswer"], LineBreakWithin -> False, 
          TemplateBoxOptions -> {DisplayFunction :> (TagBox[
              
              ButtonBox[#, Appearance -> None, ButtonData -> #2, 
               BaseStyle -> {
                "Hyperlink", FontSize -> 13, FontColor -> GrayLevel[0.25], 
                 FontFamily -> "Source Sans Pro"}], 
              MouseAppearanceTag["LinkHand"]]& )}, 
          ButtonBoxOptions -> {Appearance -> None, BaseStyle -> "Link"}], 
         Cell[
          StyleData["EIWLTextLinkCodeCaption"], LineBreakWithin -> False, 
          TemplateBoxOptions -> {DisplayFunction :> (TagBox[
              
              ButtonBox[#, Appearance -> None, ButtonData -> #2, 
               BaseStyle -> {
                "Hyperlink", FontSize -> 14, FontColor -> GrayLevel[0.6], 
                 FontFamily -> "Source Sans Pro"}], 
              MouseAppearanceTag["LinkHand"]]& )}, 
          ButtonBoxOptions -> {Appearance -> None, BaseStyle -> "Link"}], 
         Cell[
          StyleData["EIWLTextLinkExercise"], LineBreakWithin -> False, 
          TemplateBoxOptions -> {DisplayFunction :> (TagBox[
              
              ButtonBox[#, Appearance -> None, ButtonData -> #2, 
               BaseStyle -> {
                "Hyperlink", FontSize -> 13, FontColor -> GrayLevel[0.25], 
                 FontFamily -> "Source Sans Pro"}], 
              MouseAppearanceTag["LinkHand"]]& )}, 
          ButtonBoxOptions -> {Appearance -> None, BaseStyle -> "Link"}], 
         Cell[
          StyleData["EIWLTextLinkExerciseNote"], LineBreakWithin -> False, 
          TemplateBoxOptions -> {DisplayFunction :> (TagBox[
              
              ButtonBox[#, Appearance -> None, ButtonData -> #2, 
               BaseStyle -> {
                "Hyperlink", FontSize -> 13, FontColor -> GrayLevel[0.25], 
                 FontFamily -> "Source Sans Pro"}], 
              MouseAppearanceTag["LinkHand"]]& )}, 
          ButtonBoxOptions -> {Appearance -> None, BaseStyle -> "Link"}], 
         Cell[
          StyleData["EIWLTextLinkInlineCode"], LineBreakWithin -> False, 
          TemplateBoxOptions -> {DisplayFunction :> (TagBox[
              
              ButtonBox[#, Appearance -> None, ButtonData -> #2, 
               BaseStyle -> {
                "Hyperlink", FontSize -> 13, FontColor -> GrayLevel[0], 
                 FontFamily -> "Source Sans Pro"}], 
              MouseAppearanceTag["LinkHand"]]& )}, 
          ButtonBoxOptions -> {Appearance -> None, BaseStyle -> "Link"}], 
         Cell[
          StyleData["EIWLTextLinkMoreExplore"], LineBreakWithin -> False, 
          TemplateBoxOptions -> {DisplayFunction :> (TagBox[
              
              ButtonBox[#, Appearance -> None, ButtonData -> #2, 
               BaseStyle -> {
                "Hyperlink", FontSize -> 13, FontFamily -> 
                 "Source Sans Pro"}], 
              MouseAppearanceTag["LinkHand"]]& )}, 
          ButtonBoxOptions -> {Appearance -> None, BaseStyle -> "Link"}], 
         Cell[
          StyleData["EIWLTextLinkQuestion"], LineBreakWithin -> False, 
          TemplateBoxOptions -> {DisplayFunction :> (TagBox[
              
              ButtonBox[#, Appearance -> None, ButtonData -> #2, 
               BaseStyle -> {
                "Hyperlink", FontSize -> 13, FontWeight -> Bold, FontFamily -> 
                 "Source Sans Pro"}], 
              MouseAppearanceTag["LinkHand"]]& )}, 
          ButtonBoxOptions -> {Appearance -> None, BaseStyle -> "Link"}], 
         Cell[
          StyleData["EIWLTextLinkTechNote"], LineBreakWithin -> False, 
          TemplateBoxOptions -> {DisplayFunction :> (TagBox[
              
              ButtonBox[#, Appearance -> None, ButtonData -> #2, 
               BaseStyle -> {
                "Hyperlink", FontSize -> 13, FontColor -> GrayLevel[0.25], 
                 FontFamily -> "Source Sans Pro"}], 
              MouseAppearanceTag["LinkHand"]]& )}, 
          ButtonBoxOptions -> {Appearance -> None, BaseStyle -> "Link"}], 
         Cell[
          StyleData["EIWLTextLinkText"], LineBreakWithin -> False, 
          TemplateBoxOptions -> {DisplayFunction :> (TagBox[
              
              ButtonBox[#, Appearance -> None, ButtonData -> #2, 
               BaseStyle -> {
                "Hyperlink", FontSize -> 17, FontFamily -> 
                 "Source Sans Pro"}], 
              MouseAppearanceTag["LinkHand"]]& )}, 
          ButtonBoxOptions -> {Appearance -> None, BaseStyle -> "Link"}], 
         Cell[
          StyleData["EIWLTextLinkInlineCodeLink"], LineBreakWithin -> False, 
          TemplateBoxOptions -> {DisplayFunction :> (TagBox[
              
              ButtonBox[#, Appearance -> None, ButtonData -> #2, 
               BaseStyle -> {
                "Hyperlink", FontSize -> 17, FontFamily -> 
                 "Source Sans Pro"}], 
              MouseAppearanceTag["LinkHand"]]& )}, 
          ButtonBoxOptions -> {Appearance -> None, BaseStyle -> "Link"}], 
         Cell[
          StyleData["EIWLTextLinkVocabularyTable"], LineBreakWithin -> False, 
          TemplateBoxOptions -> {DisplayFunction :> (TagBox[
              
              ButtonBox[#, Appearance -> None, ButtonData -> #2, 
               BaseStyle -> {
                "Hyperlink", FontSize -> 13, FontFamily -> 
                 "Source Sans Pro"}], 
              MouseAppearanceTag["LinkHand"]]& )}, 
          ButtonBoxOptions -> {Appearance -> None, BaseStyle -> "Link"}]}, 
        Closed]], 
      Cell[
       CellGroupData[{
         Cell[
         "EIWL Cloud Link", "Subsubsection", 
          CellChangeTimes -> {{3.664234597774767*^9, 3.664234605661516*^9}}], 
         
         Cell[
          StyleData["CodeLinkAnswer"], LineBreakWithin -> False, 
          TemplateBoxOptions -> {DisplayFunction :> (TagBox[
              
              ButtonBox[#, Appearance -> None, ButtonData -> #2, 
               BaseStyle -> {
                "Hyperlink", FontSize -> 13, FontColor -> GrayLevel[0.25], 
                 FontFamily -> "Source Sans Pro"}], 
              MouseAppearanceTag["LinkHand"]]& )}, 
          ButtonBoxOptions -> {Appearance -> None, BaseStyle -> "Link"}], 
         Cell[
          StyleData["CodeLinkCodeCaption"], LineBreakWithin -> False, 
          TemplateBoxOptions -> {DisplayFunction :> (TagBox[
              ButtonBox[#, Appearance -> None, ButtonData -> #2, 
               BaseStyle -> {
                "Hyperlink", FontSize -> 14, FontColor -> GrayLevel[0.6], 
                 FontFamily -> "Source Sans Pro"}], 
              MouseAppearanceTag["LinkHand"]]& )}, 
          ButtonBoxOptions -> {Appearance -> None, BaseStyle -> "Link"}], 
         Cell[
          StyleData["CodeLinkExercise"], LineBreakWithin -> False, 
          TemplateBoxOptions -> {DisplayFunction :> (TagBox[
              
              ButtonBox[#, Appearance -> None, ButtonData -> #2, 
               BaseStyle -> {
                "Hyperlink", FontSize -> 13, FontColor -> GrayLevel[0.25], 
                 FontFamily -> "Source Sans Pro"}], 
              MouseAppearanceTag["LinkHand"]]& )}, 
          ButtonBoxOptions -> {Appearance -> None, BaseStyle -> "Link"}], 
         Cell[
          StyleData["CodeLinkQuestion"], LineBreakWithin -> False, 
          TemplateBoxOptions -> {DisplayFunction :> (TagBox[
              
              ButtonBox[#, Appearance -> None, ButtonData -> #2, 
               BaseStyle -> {
                "Hyperlink", FontSize -> 13, FontWeight -> Bold, FontFamily -> 
                 "Source Sans Pro"}], 
              MouseAppearanceTag["LinkHand"]]& )}, 
          ButtonBoxOptions -> {Appearance -> None, BaseStyle -> "Link"}], 
         Cell[
          StyleData["CodeLinkTechNote"], LineBreakWithin -> False, 
          TemplateBoxOptions -> {DisplayFunction :> (TagBox[
              
              ButtonBox[#, Appearance -> None, ButtonData -> #2, 
               BaseStyle -> {
                "Hyperlink", FontSize -> 14, FontColor -> GrayLevel[0.25], 
                 FontFamily -> "Source Sans Pro"}], 
              MouseAppearanceTag["LinkHand"]]& )}, 
          ButtonBoxOptions -> {Appearance -> None, BaseStyle -> "Link"}], 
         Cell[
          StyleData["CodeLinkText"], LineBreakWithin -> False, 
          TemplateBoxOptions -> {DisplayFunction :> (TagBox[
              
              ButtonBox[#, Appearance -> None, ButtonData -> #2, 
               BaseStyle -> {
                "Hyperlink", FontSize -> 17, FontFamily -> 
                 "Source Sans Pro"}], 
              MouseAppearanceTag["LinkHand"]]& )}, 
          ButtonBoxOptions -> {Appearance -> None, BaseStyle -> "Link"}], 
         Cell[
          StyleData["CodeLinkVocabularyTable"], LineBreakWithin -> False, 
          TemplateBoxOptions -> {DisplayFunction :> (TagBox[
              
              ButtonBox[#, Appearance -> None, ButtonData -> #2, 
               BaseStyle -> {
                "Hyperlink", FontSize -> 14, FontFamily -> 
                 "Source Sans Pro"}], 
              MouseAppearanceTag["LinkHand"]]& )}, 
          ButtonBoxOptions -> {Appearance -> None, BaseStyle -> "Link"}], 
         Cell[
          StyleData["CodeLinkVocabularyTable3Column"], LineBreakWithin -> 
          False, TemplateBoxOptions -> {DisplayFunction :> (TagBox[
              
              ButtonBox[#, Appearance -> None, ButtonData -> #2, 
               BaseStyle -> {
                "Hyperlink", FontSize -> 14, FontFamily -> 
                 "Source Sans Pro"}], 
              MouseAppearanceTag["LinkHand"]]& )}, 
          ButtonBoxOptions -> {Appearance -> None, BaseStyle -> "Link"}], 
         Cell[
          StyleData["LinkAnswer"], LineBreakWithin -> False, 
          TemplateBoxOptions -> {DisplayFunction :> (TagBox[
              
              ButtonBox[#, Appearance -> None, ButtonData -> #2, 
               BaseStyle -> {
                "Hyperlink", FontSize -> 13, FontColor -> GrayLevel[0.25], 
                 FontFamily -> "Source Sans Pro"}], 
              MouseAppearanceTag["LinkHand"]]& )}, 
          ButtonBoxOptions -> {Appearance -> None, BaseStyle -> "Link"}], 
         Cell[
          StyleData["LinkCodeCaption"], LineBreakWithin -> False, 
          TemplateBoxOptions -> {DisplayFunction :> (TagBox[
              
              ButtonBox[#, Appearance -> None, ButtonData -> #2, 
               BaseStyle -> {
                "Hyperlink", FontSize -> 14, FontColor -> GrayLevel[0.6], 
                 FontFamily -> "Source Sans Pro"}], 
              MouseAppearanceTag["LinkHand"]]& )}, 
          ButtonBoxOptions -> {Appearance -> None, BaseStyle -> "Link"}], 
         Cell[
          StyleData["LinkExercise"], LineBreakWithin -> False, 
          TemplateBoxOptions -> {DisplayFunction :> (TagBox[
              ButtonBox[#, Appearance -> None, ButtonData -> #2, 
               BaseStyle -> {
                "Hyperlink", FontSize -> 13, FontColor -> GrayLevel[0.25], 
                 FontFamily -> "Source Sans Pro"}], 
              MouseAppearanceTag["LinkHand"]]& )}, 
          ButtonBoxOptions -> {Appearance -> None, BaseStyle -> "Link"}], 
         Cell[
          StyleData["LinkExerciseNote"], LineBreakWithin -> False, 
          TemplateBoxOptions -> {DisplayFunction :> (TagBox[
              
              ButtonBox[#, Appearance -> None, ButtonData -> #2, 
               BaseStyle -> {
                "Hyperlink", FontSize -> 13, FontColor -> GrayLevel[0.25], 
                 FontFamily -> "Source Sans Pro"}], 
              MouseAppearanceTag["LinkHand"]]& )}, 
          ButtonBoxOptions -> {Appearance -> None, BaseStyle -> "Link"}], 
         Cell[
          StyleData["LinkIndex"], LineBreakWithin -> False, 
          TemplateBoxOptions -> {DisplayFunction :> (TagBox[
              
              ButtonBox[#, Appearance -> None, ButtonData -> #2, 
               BaseStyle -> {
                "Hyperlink", FontSize -> 13, FontColor -> GrayLevel[0.25], 
                 FontFamily -> "Source Sans Pro"}], 
              MouseAppearanceTag["LinkHand"]]& )}, 
          ButtonBoxOptions -> {Appearance -> None, BaseStyle -> "Link"}], 
         Cell[
          StyleData["LinkIndexSubentry"], LineBreakWithin -> False, 
          TemplateBoxOptions -> {DisplayFunction :> (TagBox[
              
              ButtonBox[#, Appearance -> None, ButtonData -> #2, 
               BaseStyle -> {
                "Hyperlink", FontSize -> 13, FontColor -> GrayLevel[0.25], 
                 FontFamily -> "Source Sans Pro"}], 
              MouseAppearanceTag["LinkHand"]]& )}, 
          ButtonBoxOptions -> {Appearance -> None, BaseStyle -> "Link"}], 
         Cell[
          StyleData["LinkMoreExplore"], LineBreakWithin -> False, 
          TemplateBoxOptions -> {DisplayFunction :> (TagBox[
              
              ButtonBox[#, Appearance -> None, ButtonData -> #2, 
               BaseStyle -> {
                "Hyperlink", FontSize -> 13, FontFamily -> 
                 "Source Sans Pro"}], 
              MouseAppearanceTag["LinkHand"]]& )}, 
          ButtonBoxOptions -> {Appearance -> None, BaseStyle -> "Link"}], 
         Cell[
          StyleData["LinkQuestion"], LineBreakWithin -> False, 
          TemplateBoxOptions -> {DisplayFunction :> (TagBox[
              
              ButtonBox[#, Appearance -> None, ButtonData -> #2, 
               BaseStyle -> {
                "Hyperlink", FontSize -> 14, FontWeight -> Bold, FontColor -> 
                 GrayLevel[0], FontFamily -> "Source Sans Pro"}], 
              MouseAppearanceTag["LinkHand"]]& )}, 
          ButtonBoxOptions -> {Appearance -> None, BaseStyle -> "Link"}], 
         Cell[
          StyleData["LinkTechNote"], LineBreakWithin -> False, 
          TemplateBoxOptions -> {DisplayFunction :> (TagBox[
              
              ButtonBox[#, Appearance -> None, ButtonData -> #2, 
               BaseStyle -> {
                "Hyperlink", FontSize -> 13, FontColor -> GrayLevel[0.25], 
                 FontFamily -> "Source Sans Pro"}], 
              MouseAppearanceTag["LinkHand"]]& )}, 
          ButtonBoxOptions -> {Appearance -> None, BaseStyle -> "Link"}], 
         Cell[
          StyleData["LinkText"], LineBreakWithin -> False, 
          TemplateBoxOptions -> {DisplayFunction :> (TagBox[
              
              ButtonBox[#, Appearance -> None, ButtonData -> #2, 
               BaseStyle -> {
                "Hyperlink", FontSize -> 16, FontFamily -> 
                 "Source Sans Pro"}], 
              MouseAppearanceTag["LinkHand"]]& )}, 
          ButtonBoxOptions -> {Appearance -> None, BaseStyle -> "Link"}], 
         Cell[
          StyleData["LinkVocabularyTable"], LineBreakWithin -> False, 
          TemplateBoxOptions -> {DisplayFunction :> (TagBox[
              
              ButtonBox[#, Appearance -> None, ButtonData -> #2, 
               BaseStyle -> {
                "Hyperlink", FontSize -> 13, FontFamily -> 
                 "Source Sans Pro"}], 
              MouseAppearanceTag["LinkHand"]]& )}, 
          ButtonBoxOptions -> {Appearance -> None, BaseStyle -> "Link"}]}, 
        Closed]]}, Open]]}, Visible -> False, FrontEndVersion -> 
  "11.3 for Mac OS X x86 (32-bit, 64-bit Kernel) (March 5, 2018)", 
  StyleDefinitions -> "Default.nb"]
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{
 "FirstInputCell"->{
  Cell[9533, 230, 755, 25, 70, "Input",ExpressionUUID->"b9eff8cd-7e53-46f7-b0ab-728a5d045a63",
   CellTags->"FirstInputCell"],
  Cell[15871, 417, 755, 25, 70, "Input",ExpressionUUID->"72f00c45-8484-4f99-8631-1df631b7b86d",
   CellTags->"FirstInputCell"],
  Cell[28564, 710, 755, 25, 70, "Input",ExpressionUUID->"ebb55132-937b-4fe4-a889-5980198d2992",
   CellTags->"FirstInputCell"],
  Cell[36161, 930, 755, 25, 70, "Input",ExpressionUUID->"e6144162-cb77-4135-b75e-e6f21652f1b5",
   CellTags->"FirstInputCell"],
  Cell[45965, 1180, 755, 25, 70, "Input",ExpressionUUID->"a455e654-5e2d-4a3b-afbf-d9d037f9b175",
   CellTags->"FirstInputCell"],
  Cell[55361, 1419, 755, 25, 70, "Input",ExpressionUUID->"6587f3a2-5c09-42d7-8632-48f5d17b0c70",
   CellTags->"FirstInputCell"],
  Cell[61461, 1603, 755, 25, 70, "Input",ExpressionUUID->"c993a46e-ba48-46eb-8807-9dcf23759291",
   CellTags->"FirstInputCell"],
  Cell[67184, 1781, 755, 25, 70, "Input",ExpressionUUID->"7d9bceae-cb43-404c-8e1f-8e4097554f70",
   CellTags->"FirstInputCell"],
  Cell[75132, 1995, 755, 25, 70, "Input",ExpressionUUID->"14f6a56a-f657-4825-b6dc-6273b1b10fbc",
   CellTags->"FirstInputCell"],
  Cell[80971, 2175, 755, 25, 70, "Input",ExpressionUUID->"8ef7095f-cb10-4f5d-ba9c-833c1a507857",
   CellTags->"FirstInputCell"],
  Cell[87121, 2362, 755, 25, 70, "Input",ExpressionUUID->"6c0a5763-5f85-492c-86f3-0d756d629021",
   CellTags->"FirstInputCell"],
  Cell[92950, 2549, 755, 25, 70, "Input",ExpressionUUID->"b2ce9861-e42a-4c0d-ab83-020a7ffb0762",
   CellTags->"FirstInputCell"],
  Cell[144130, 3474, 755, 25, 70, "Input",ExpressionUUID->"7f80fab3-9ff7-4932-afb5-b39575a9d9b3",
   CellTags->"FirstInputCell"],
  Cell[153878, 3726, 755, 25, 70, "Input",ExpressionUUID->"d45b830c-d539-442d-94b7-65d89c08eb6e",
   CellTags->"FirstInputCell"],
  Cell[163351, 3965, 755, 25, 70, "Input",ExpressionUUID->"9010cb2e-1b32-4f5b-9c0d-e0cd469f7b86",
   CellTags->"FirstInputCell"],
  Cell[173376, 4219, 755, 25, 70, "Input",ExpressionUUID->"2e2863f0-475c-4689-943b-d679c877697a",
   CellTags->"FirstInputCell"],
  Cell[179117, 4397, 755, 25, 70, "Input",ExpressionUUID->"169ecb01-1d36-436f-a6b4-d47e3afd75dc",
   CellTags->"FirstInputCell"],
  Cell[184928, 4576, 755, 25, 70, "Input",ExpressionUUID->"46a16fef-1fb6-411d-828f-f8722e0f1351",
   CellTags->"FirstInputCell"],
  Cell[191253, 4763, 755, 25, 70, "Input",ExpressionUUID->"02e471d4-2033-470b-b9a3-0ccd30521fc5",
   CellTags->"FirstInputCell"],
  Cell[243957, 5713, 755, 25, 70, "Input",ExpressionUUID->"de104ec3-1282-45b2-ae25-5c9ec90d2efa",
   CellTags->"FirstInputCell"],
  Cell[325151, 7129, 755, 25, 70, "Input",ExpressionUUID->"9c9ce85f-d486-492e-82b3-bac3630b7fe8",
   CellTags->"FirstInputCell"]}
 }
*)
(*CellTagsIndex
CellTagsIndex->{
 {"FirstInputCell", 384557, 8355}
 }
*)
(*NotebookFileOutline
Notebook[{
Cell[646, 22, 397, 11, 70, "Exercise",ExpressionUUID->"16a3c41f-dd92-41be-8827-4f12c1b1ef12",
 CounterAssignments->{{"SectionNumber", 5}, {"ExerciseNumber", 1}, {"WebOnly", 0}}],
Cell[CellGroupData[{
Cell[1068, 37, 578, 18, 70, "ExerciseExpectedResult",ExpressionUUID->"9811f63e-4946-45ae-8d16-466d8d5a58af"],
Cell[1649, 57, 7336, 149, 70, "ExerciseOutput",ExpressionUUID->"f51af854-a2e3-4877-94f1-06660eafa109"]
}, Closed]],
Cell[CellGroupData[{
Cell[9022, 211, 508, 17, 70, "Subsection",ExpressionUUID->"24f6a74e-c79b-495b-9200-2b3823f0c06c"],
Cell[9533, 230, 755, 25, 70, "Input",ExpressionUUID->"b9eff8cd-7e53-46f7-b0ab-728a5d045a63",
 CellTags->"FirstInputCell"]
}, Open  ]],
Cell[CellGroupData[{
Cell[10325, 260, 224, 7, 70, "CodeSectionDividerCloud",ExpressionUUID->"ca73d563-66db-441f-8c56-5e2c7d05d028"],
Cell[10552, 269, 374, 9, 70, "Exercise",ExpressionUUID->"5a66896f-f93d-4206-b3d4-77403397e135",
 CounterAssignments->{{"SectionNumber", 5}, {"ExerciseNumber", 2}, {"WebOnly", 0}}],
Cell[CellGroupData[{
Cell[10951, 282, 578, 18, 70, "ExerciseExpectedResult",ExpressionUUID->"a16c067d-9515-4113-b228-bad5ac6c23d0"],
Cell[11532, 302, 3791, 91, 70, "ExerciseOutput",ExpressionUUID->"68b181f4-e8be-4d98-ba8a-9d4e08e5e926"]
}, Closed]],
Cell[CellGroupData[{
Cell[15360, 398, 508, 17, 70, "Subsection",ExpressionUUID->"4e893e16-e9cc-43df-86ac-c367010834a5"],
Cell[15871, 417, 755, 25, 70, "Input",ExpressionUUID->"72f00c45-8484-4f99-8631-1df631b7b86d",
 CellTags->"FirstInputCell"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[16675, 448, 224, 7, 70, "CodeSectionDividerCloud",ExpressionUUID->"af716510-f06f-4e18-978f-bbe5deb0655b"],
Cell[16902, 457, 412, 11, 70, "Exercise",ExpressionUUID->"560d7cf9-b2c9-41cd-876b-e79ba378a2f1",
 CounterAssignments->{{"SectionNumber", 5}, {"ExerciseNumber", 3}, {"WebOnly", 0}}],
Cell[CellGroupData[{
Cell[17339, 472, 578, 18, 70, "ExerciseExpectedResult",ExpressionUUID->"29f5d87d-ed56-499d-a38e-9c8b6f83ea06"],
Cell[17920, 492, 10096, 194, 70, "ExerciseOutput",ExpressionUUID->"c025bb95-abb7-40cc-bec8-a939d44d7d76"]
}, Closed]],
Cell[CellGroupData[{
Cell[28053, 691, 508, 17, 70, "Subsection",ExpressionUUID->"920808be-316e-42d3-90bf-96df71f4854b"],
Cell[28564, 710, 755, 25, 70, "Input",ExpressionUUID->"ebb55132-937b-4fe4-a889-5980198d2992",
 CellTags->"FirstInputCell"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[29368, 741, 224, 7, 70, "CodeSectionDividerCloud",ExpressionUUID->"b8c9e1f7-2b9b-4ffe-9420-eeb4dff86056"],
Cell[29595, 750, 693, 26, 70, "Exercise",ExpressionUUID->"46af38ba-8b5b-4d4d-8f4e-7640a0dabce2",
 CounterAssignments->{{"SectionNumber", 5}, {"ExerciseNumber", 4}, {"WebOnly", 0}}],
Cell[CellGroupData[{
Cell[30313, 780, 578, 18, 70, "ExerciseExpectedResult",ExpressionUUID->"16f642d9-74ad-454f-90a7-5546771e53d5"],
Cell[30894, 800, 4719, 106, 70, "ExerciseOutput",ExpressionUUID->"f4693364-ff7e-4940-afd3-19cbf5bc4209"]
}, Closed]],
Cell[CellGroupData[{
Cell[35650, 911, 508, 17, 70, "Subsection",ExpressionUUID->"0c214d7c-6c9b-4803-ade3-8795723eec33"],
Cell[36161, 930, 755, 25, 70, "Input",ExpressionUUID->"e6144162-cb77-4135-b75e-e6f21652f1b5",
 CellTags->"FirstInputCell"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[36965, 961, 224, 7, 70, "CodeSectionDividerCloud",ExpressionUUID->"ca05094d-9618-456f-9f04-6d6d3e2191df"],
Cell[37192, 970, 564, 18, 70, "Exercise",ExpressionUUID->"bf7e928c-4d0f-4743-abea-5cc0378dabf2",
 CounterAssignments->{{"SectionNumber", 5}, {"ExerciseNumber", 5}, {"WebOnly", 0}}],
Cell[CellGroupData[{
Cell[37781, 992, 578, 18, 70, "ExerciseExpectedResult",ExpressionUUID->"9cbcfb93-be54-45bd-a61f-7f3583332d68"],
Cell[38362, 1012, 7055, 144, 70, "ExerciseOutput",ExpressionUUID->"beef4f6c-6726-4fe0-a141-bc02bb94e72b"]
}, Closed]],
Cell[CellGroupData[{
Cell[45454, 1161, 508, 17, 70, "Subsection",ExpressionUUID->"14f48e2c-9423-49d4-afd7-2dd31d1319ac"],
Cell[45965, 1180, 755, 25, 70, "Input",ExpressionUUID->"a455e654-5e2d-4a3b-afbf-d9d037f9b175",
 CellTags->"FirstInputCell"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[46769, 1211, 224, 7, 70, "CodeSectionDividerCloud",ExpressionUUID->"e42046a4-40d1-4903-8af7-238d01e97cf6"],
Cell[46996, 1220, 461, 12, 70, "Exercise",ExpressionUUID->"6a5a00bf-7ef1-43e0-971e-31b8a399d52b",
 CounterAssignments->{{"SectionNumber", 5}, {"ExerciseNumber", 6}, {"WebOnly", 0}}],
Cell[CellGroupData[{
Cell[47482, 1236, 578, 18, 70, "ExerciseExpectedResult",ExpressionUUID->"6ef6a359-0a9f-4b9d-bff1-55bbc16a4386"],
Cell[48063, 1256, 6750, 139, 70, "ExerciseOutput",ExpressionUUID->"51460292-0cb9-4f52-a619-155a787a103a"]
}, Closed]],
Cell[CellGroupData[{
Cell[54850, 1400, 508, 17, 70, "Subsection",ExpressionUUID->"91916436-ae11-48b8-8675-acb9f7ea9c33"],
Cell[55361, 1419, 755, 25, 70, "Input",ExpressionUUID->"6587f3a2-5c09-42d7-8632-48f5d17b0c70",
 CellTags->"FirstInputCell"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[56165, 1450, 224, 7, 70, "CodeSectionDividerCloud",ExpressionUUID->"f526aaa5-606f-44b6-98af-8f8e9a8f8bd9"],
Cell[56392, 1459, 384, 9, 70, "Exercise",ExpressionUUID->"cd908c4e-d555-4697-8acf-0c648bb48b6f",
 CounterAssignments->{{"SectionNumber", 5}, {"ExerciseNumber", 7}, {"WebOnly", 0}}],
Cell[CellGroupData[{
Cell[56801, 1472, 578, 18, 70, "ExerciseExpectedResult",ExpressionUUID->"da988c0f-afc7-43e7-9a25-a87583081fed"],
Cell[57382, 1492, 3531, 87, 70, "ExerciseOutput",ExpressionUUID->"e07a3a78-d496-459a-83fc-5701412f1eb8"]
}, Closed]],
Cell[CellGroupData[{
Cell[60950, 1584, 508, 17, 70, "Subsection",ExpressionUUID->"87be4f6f-578d-41ab-93a4-3174b0a11d5e"],
Cell[61461, 1603, 755, 25, 70, "Input",ExpressionUUID->"c993a46e-ba48-46eb-8807-9dcf23759291",
 CellTags->"FirstInputCell"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[62265, 1634, 224, 7, 70, "CodeSectionDividerCloud",ExpressionUUID->"da1cf9b0-667a-4e76-aa21-88c36a9f7b01"],
Cell[62492, 1643, 371, 9, 70, "Exercise",ExpressionUUID->"50a2b758-2216-4ec3-b904-d7f2e99334ea",
 CounterAssignments->{{"SectionNumber", 5}, {"ExerciseNumber", 8}, {"WebOnly", 0}}],
Cell[CellGroupData[{
Cell[62888, 1656, 578, 18, 70, "ExerciseExpectedResult",ExpressionUUID->"7a547efd-4c8b-4069-bc2b-abbc6bb7eb1c"],
Cell[63469, 1676, 3167, 81, 70, "ExerciseOutput",ExpressionUUID->"704705dd-8807-4473-a64f-6a5f542373c9"]
}, Closed]],
Cell[CellGroupData[{
Cell[66673, 1762, 508, 17, 70, "Subsection",ExpressionUUID->"ab2e118b-824d-4077-9c9f-ca4bc08be1f0"],
Cell[67184, 1781, 755, 25, 70, "Input",ExpressionUUID->"7d9bceae-cb43-404c-8e1f-8e4097554f70",
 CellTags->"FirstInputCell"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[67988, 1812, 224, 7, 70, "CodeSectionDividerCloud",ExpressionUUID->"319b444e-9453-4a7e-be42-55f807f4aabd"],
Cell[68215, 1821, 379, 9, 70, "Exercise",ExpressionUUID->"abe041b0-d467-49fd-a351-b81265d79314",
 CounterAssignments->{{"SectionNumber", 5}, {"ExerciseNumber", 9}, {"WebOnly", 0}}],
Cell[CellGroupData[{
Cell[68619, 1834, 578, 18, 70, "ExerciseExpectedResult",ExpressionUUID->"9bcdea49-dd5f-4108-b3e9-1dbbc4b46e63"],
Cell[69200, 1854, 5384, 117, 70, "ExerciseOutput",ExpressionUUID->"1bb539fa-68aa-41b5-9c20-e24cc4720ef6"]
}, Closed]],
Cell[CellGroupData[{
Cell[74621, 1976, 508, 17, 70, "Subsection",ExpressionUUID->"0698df58-e6d9-4134-9b98-0c6d1956ed73"],
Cell[75132, 1995, 755, 25, 70, "Input",ExpressionUUID->"14f6a56a-f657-4825-b6dc-6273b1b10fbc",
 CellTags->"FirstInputCell"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[75936, 2026, 224, 7, 70, "CodeSectionDividerCloud",ExpressionUUID->"9c023ee2-a330-4788-938e-4d961d26de23"],
Cell[76163, 2035, 380, 9, 70, "Exercise",ExpressionUUID->"ad1c9320-508a-473b-b387-90cf0de13b71",
 CounterAssignments->{{"SectionNumber", 5}, {"ExerciseNumber", 10}, {"WebOnly", 0}}],
Cell[CellGroupData[{
Cell[76568, 2048, 578, 18, 70, "ExerciseExpectedResult",ExpressionUUID->"162de9b6-f34e-4c7f-8b57-6afdd61dc1a1"],
Cell[77149, 2068, 3273, 83, 70, "ExerciseOutput",ExpressionUUID->"b4fea50f-96a9-4f33-b50f-9a25d0866844"]
}, Closed]],
Cell[CellGroupData[{
Cell[80459, 2156, 509, 17, 70, "Subsection",ExpressionUUID->"2e561085-aa0d-42a0-af4a-535bf7205b5e"],
Cell[80971, 2175, 755, 25, 70, "Input",ExpressionUUID->"8ef7095f-cb10-4f5d-ba9c-833c1a507857",
 CellTags->"FirstInputCell"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[81775, 2206, 224, 7, 70, "CodeSectionDividerCloud",ExpressionUUID->"a7b82cd9-e0d2-4a4f-99fd-350c506f93d3"],
Cell[82002, 2215, 425, 12, 70, "Exercise",ExpressionUUID->"c097fac3-3880-4d84-bb09-430dff6971e8",
 CounterAssignments->{{"SectionNumber", 5}, {"ExerciseNumber", 11}, {"WebOnly", 0}}],
Cell[CellGroupData[{
Cell[82452, 2231, 578, 18, 70, "ExerciseExpectedResult",ExpressionUUID->"ab937935-0f73-4e22-9222-c22e0719ffc2"],
Cell[83033, 2251, 3539, 87, 70, "ExerciseOutput",ExpressionUUID->"79948137-704a-4166-af66-8c2531476479"]
}, Closed]],
Cell[CellGroupData[{
Cell[86609, 2343, 509, 17, 70, "Subsection",ExpressionUUID->"23ec55a6-3a57-456d-9fdc-7f4366f61b1a"],
Cell[87121, 2362, 755, 25, 70, "Input",ExpressionUUID->"6c0a5763-5f85-492c-86f3-0d756d629021",
 CellTags->"FirstInputCell"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[87925, 2393, 224, 7, 70, "CodeSectionDividerCloud",ExpressionUUID->"ba3d97bf-7724-480e-9496-0cfa62182b58"],
Cell[88152, 2402, 598, 20, 70, "Exercise",ExpressionUUID->"e140eaa9-a4d0-4864-93ef-ea33de2595da",
 CounterAssignments->{{"SectionNumber", 5}, {"ExerciseNumber", 12}, {"WebOnly", 0}}],
Cell[CellGroupData[{
Cell[88775, 2426, 578, 18, 70, "ExerciseExpectedResult",ExpressionUUID->"5384a62b-be36-4ccd-a9a5-b8ca5fbc8425"],
Cell[89356, 2446, 3045, 79, 70, "ExerciseOutput",ExpressionUUID->"d7be4763-9898-4e3a-be9a-523114a57408"]
}, Closed]],
Cell[CellGroupData[{
Cell[92438, 2530, 509, 17, 70, "Subsection",ExpressionUUID->"f524e40e-28e1-43f2-8d41-54cde5485f97"],
Cell[92950, 2549, 755, 25, 70, "Input",ExpressionUUID->"b2ce9861-e42a-4c0d-ab83-020a7ffb0762",
 CellTags->"FirstInputCell"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[93754, 2580, 224, 7, 70, "CodeSectionDividerCloud",ExpressionUUID->"c64362f4-4313-4695-9a45-860f509a6130"],
Cell[93981, 2589, 447, 12, 70, "Exercise",ExpressionUUID->"5c57ed52-052b-4633-b7e8-a1cbf338b898",
 CounterAssignments->{{"SectionNumber", 5}, {"ExerciseNumber", 13}, {"WebOnly", 0}}],
Cell[CellGroupData[{
Cell[94453, 2605, 578, 18, 70, "ExerciseExpectedResult",ExpressionUUID->"15410ded-b9a8-49ad-a7a8-f9cd27c372d5"],
Cell[95034, 2625, 48547, 825, 70, "ExerciseOutput",ExpressionUUID->"cdb0db97-ae11-46d3-a413-22ff9ac24450"]
}, Closed]],
Cell[CellGroupData[{
Cell[143618, 3455, 509, 17, 70, "Subsection",ExpressionUUID->"9914c4c3-42d3-476d-8ccf-92f80362e354"],
Cell[144130, 3474, 755, 25, 70, "Input",ExpressionUUID->"7f80fab3-9ff7-4932-afb5-b39575a9d9b3",
 CellTags->"FirstInputCell"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[144934, 3505, 224, 7, 70, "CodeSectionDividerCloud",ExpressionUUID->"b6c93ff6-a985-4e55-8b44-fea784043b61"],
Cell[145161, 3514, 629, 22, 70, "Exercise",ExpressionUUID->"850ca404-679b-42f3-aca2-f310603ee910",
 CounterAssignments->{{"SectionNumber", 5}, {"ExerciseNumber", 14}, {"WebOnly", 0}}],
Cell[CellGroupData[{
Cell[145815, 3540, 578, 18, 70, "ExerciseExpectedResult",ExpressionUUID->"aead6e06-3628-4d86-9aaf-da55e8e192a5"],
Cell[146396, 3560, 6933, 142, 70, "ExerciseOutput",ExpressionUUID->"47996e2e-976f-4bc5-a3bd-065181342477"]
}, Closed]],
Cell[CellGroupData[{
Cell[153366, 3707, 509, 17, 70, "Subsection",ExpressionUUID->"5a508de3-87fd-40ba-a19e-5b4797c689e0"],
Cell[153878, 3726, 755, 25, 70, "Input",ExpressionUUID->"d45b830c-d539-442d-94b7-65d89c08eb6e",
 CellTags->"FirstInputCell"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[154682, 3757, 224, 7, 70, "CodeSectionDividerCloud",ExpressionUUID->"94c4b254-35b4-47c8-91e1-9870c2a232a2"],
Cell[154909, 3766, 386, 9, 70, "Exercise",ExpressionUUID->"2ae4ba80-aaef-4dc8-b15b-18a625ee3855",
 CounterAssignments->{{"SectionNumber", 5}, {"ExerciseNumber", 1}, {"WebOnly", 1}}],
Cell[CellGroupData[{
Cell[155320, 3779, 578, 18, 70, "ExerciseExpectedResult",ExpressionUUID->"82f8fca1-d03a-4f70-bb6e-862f217cfd11"],
Cell[155901, 3799, 6901, 142, 70, "ExerciseOutput",ExpressionUUID->"dd3d03a4-6bbc-4a53-a121-1a535bf4fad8"]
}, Closed]],
Cell[CellGroupData[{
Cell[162839, 3946, 509, 17, 70, "Subsection",ExpressionUUID->"80350365-460e-439c-9d49-f171a5be0c1c"],
Cell[163351, 3965, 755, 25, 70, "Input",ExpressionUUID->"9010cb2e-1b32-4f5b-9c0d-e0cd469f7b86",
 CellTags->"FirstInputCell"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[164155, 3996, 224, 7, 70, "CodeSectionDividerCloud",ExpressionUUID->"ab1e5afb-e256-411e-9033-81646bd17a29"],
Cell[164382, 4005, 535, 17, 70, "Exercise",ExpressionUUID->"aeafa217-41a5-4196-a38d-7b287dc9fcc1",
 CounterAssignments->{{"SectionNumber", 5}, {"ExerciseNumber", 2}, {"WebOnly", 1}}],
Cell[CellGroupData[{
Cell[164942, 4026, 578, 18, 70, "ExerciseExpectedResult",ExpressionUUID->"e57c508d-125c-4a76-ae9d-8d1ab044bdc3"],
Cell[165523, 4046, 7304, 149, 70, "ExerciseOutput",ExpressionUUID->"3e6b7413-8b0b-4179-bcc1-13c3118da6c6"]
}, Closed]],
Cell[CellGroupData[{
Cell[172864, 4200, 509, 17, 70, "Subsection",ExpressionUUID->"73f02a97-9ef4-47d2-89a1-044686c3c9af"],
Cell[173376, 4219, 755, 25, 70, "Input",ExpressionUUID->"2e2863f0-475c-4689-943b-d679c877697a",
 CellTags->"FirstInputCell"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[174180, 4250, 224, 7, 70, "CodeSectionDividerCloud",ExpressionUUID->"ac129db7-1320-441c-9907-729638b087fa"],
Cell[174407, 4259, 380, 9, 70, "Exercise",ExpressionUUID->"9da6768c-57ea-4fba-ab86-9cd52f98e5c7",
 CounterAssignments->{{"SectionNumber", 5}, {"ExerciseNumber", 3}, {"WebOnly", 1}}],
Cell[CellGroupData[{
Cell[174812, 4272, 578, 18, 70, "ExerciseExpectedResult",ExpressionUUID->"83f13e27-468b-455a-93c6-7ef66f9ac708"],
Cell[175393, 4292, 3175, 81, 70, "ExerciseOutput",ExpressionUUID->"f27dae89-aabb-4110-9111-d0f3fae92708"]
}, Closed]],
Cell[CellGroupData[{
Cell[178605, 4378, 509, 17, 70, "Subsection",ExpressionUUID->"31740427-73a8-4050-8cba-b89d4e00c4ec"],
Cell[179117, 4397, 755, 25, 70, "Input",ExpressionUUID->"169ecb01-1d36-436f-a6b4-d47e3afd75dc",
 CellTags->"FirstInputCell"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[179921, 4428, 224, 7, 70, "CodeSectionDividerCloud",ExpressionUUID->"79d21c97-3304-4011-9c13-35f7c337c500"],
Cell[180148, 4437, 383, 9, 70, "Exercise",ExpressionUUID->"1ded3cc6-0552-4a49-b16b-2d54f2531dbd",
 CounterAssignments->{{"SectionNumber", 5}, {"ExerciseNumber", 4}, {"WebOnly", 1}}],
Cell[CellGroupData[{
Cell[180556, 4450, 578, 18, 70, "ExerciseExpectedResult",ExpressionUUID->"d61b2a32-7af6-4ff7-a541-0547f04a81ae"],
Cell[181137, 4470, 3242, 82, 70, "ExerciseOutput",ExpressionUUID->"bba32a04-57ff-4335-8bc2-8a92974a9f93"]
}, Closed]],
Cell[CellGroupData[{
Cell[184416, 4557, 509, 17, 70, "Subsection",ExpressionUUID->"b8da3a0d-9d55-42c4-b45e-e9511edf0970"],
Cell[184928, 4576, 755, 25, 70, "Input",ExpressionUUID->"46a16fef-1fb6-411d-828f-f8722e0f1351",
 CellTags->"FirstInputCell"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[185732, 4607, 224, 7, 70, "CodeSectionDividerCloud",ExpressionUUID->"2c380539-d46c-4157-b6c6-834168b8103a"],
Cell[185959, 4616, 385, 9, 70, "Exercise",ExpressionUUID->"b48f4eef-8b2b-4fb3-9ae4-7ff66a44b01b",
 CounterAssignments->{{"SectionNumber", 5}, {"ExerciseNumber", 5}, {"WebOnly", 1}}],
Cell[CellGroupData[{
Cell[186369, 4629, 578, 18, 70, "ExerciseExpectedResult",ExpressionUUID->"e8a084f2-35cb-4fe4-84f3-6d8db3cd1e54"],
Cell[186950, 4649, 3754, 90, 70, "ExerciseOutput",ExpressionUUID->"c28f7a63-58e1-4fac-919b-6e1fffb873d3"]
}, Closed]],
Cell[CellGroupData[{
Cell[190741, 4744, 509, 17, 70, "Subsection",ExpressionUUID->"fac71f57-fc25-426b-abb7-d5fa6af336dd"],
Cell[191253, 4763, 755, 25, 70, "Input",ExpressionUUID->"02e471d4-2033-470b-b9a3-0ccd30521fc5",
 CellTags->"FirstInputCell"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[192057, 4794, 224, 7, 70, "CodeSectionDividerCloud",ExpressionUUID->"2bc0d83f-8bba-411a-aab7-31a674c79008"],
Cell[192284, 4803, 430, 12, 70, "Exercise",ExpressionUUID->"92637d20-28f6-4d15-96b6-6a5a705f2a19",
 CounterAssignments->{{"SectionNumber", 5}, {"ExerciseNumber", 6}, {"WebOnly", 1}}],
Cell[CellGroupData[{
Cell[192739, 4819, 578, 18, 70, "ExerciseExpectedResult",ExpressionUUID->"2694767e-8122-4b12-a5f4-5a0dcce36392"],
Cell[193320, 4839, 50088, 850, 70, "ExerciseOutput",ExpressionUUID->"514e4bf0-7611-48e1-8d1c-ba49bef453e6"]
}, Closed]],
Cell[CellGroupData[{
Cell[243445, 5694, 509, 17, 70, "Subsection",ExpressionUUID->"57bc2f81-3fe4-4341-9763-fd315c0b589f"],
Cell[243957, 5713, 755, 25, 70, "Input",ExpressionUUID->"de104ec3-1282-45b2-ae25-5c9ec90d2efa",
 CellTags->"FirstInputCell"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[244761, 5744, 224, 7, 70, "CodeSectionDividerCloud",ExpressionUUID->"74f09139-96f2-41e1-9988-89182989c51c"],
Cell[244988, 5753, 454, 12, 70, "Exercise",ExpressionUUID->"fdc44fda-ab56-4e4b-8ac2-8574d7cf20ac",
 CounterAssignments->{{"SectionNumber", 5}, {"ExerciseNumber", 7}, {"WebOnly", 1}}],
Cell[CellGroupData[{
Cell[245467, 5769, 578, 18, 70, "ExerciseExpectedResult",ExpressionUUID->"49361842-7fd0-40b4-96fa-ddf96602632d"],
Cell[246048, 5789, 78554, 1316, 70, "ExerciseOutput",ExpressionUUID->"8a395242-a875-42cb-847b-30384ef1e0a8"]
}, Closed]],
Cell[CellGroupData[{
Cell[324639, 7110, 509, 17, 70, "Subsection",ExpressionUUID->"199798a1-c8e1-4bdb-a38d-ed9f0abdb291"],
Cell[325151, 7129, 755, 25, 70, "Input",ExpressionUUID->"9c9ce85f-d486-492e-82b3-bac3630b7fe8",
 CellTags->"FirstInputCell"]
}, Open  ]]
}, Open  ]],
Cell[325933, 7158, 224, 7, 70, "CodeSectionDividerCloud",ExpressionUUID->"8dcaf987-77db-4d7b-9da0-2d0881850fcc"]
}
]
*)

(* End of internal cache information *)
(* NotebookSignature LRWXuoBCd44qAlu9eNwjUWpO *)
