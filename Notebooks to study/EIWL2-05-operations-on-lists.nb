(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 11.3' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    456340,      10434]
NotebookOptionsPosition[    347742,       8262]
NotebookOutlinePosition[    442477,      10188]
CellTagsIndexPosition[    441963,      10166]
WindowTitle->Operaciones con listas: Una introducci\363n elemental a Wolfram \
Language
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell[BoxData[
 InterpretationBox[Cell["Operaciones con listas", "SectionInline"],
  $Line = 0; Null]], "Section",
 Editable->False,
 Selectable->False,
 Deletable->False,
 ShowCellBracket->False,
 ShowCellLabel->False,
 CounterAssignments->{{"Section", 4}, {"Subsection", 0}, {
   "Subsubsection", 0}, {"Exercise", 0}, {"Question", 0}},
 CellTags->{"p:15", "i:1"}],

Cell["\<\
En Wolfram Language hay miles de funciones que trabajan con listas. \
\>", "Text",
 Editable->False,
 Deletable->False,
 ShowCellBracket->False],

Cell["Puede hacerse aritm\[EAcute]tica con listas:", "CodeCaption",
 Editable->False,
 Deletable->False,
 ShowCellBracket->False,
 CellTags->"i:2"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{"1", ",", "2", ",", "3"}], "}"}], "+", "10"}]], "Input",
 Deletable->False,
 CellLabel->"In[1]:="],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"11", ",", "12", ",", "13"}], "}"}]], "Output",
 Editable->False,
 CellEditDuplicate->False,
 Evaluatable->False,
 CellLabel->"Out[1]="]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{"1", ",", "1", ",", "2"}], "}"}], "*", 
  RowBox[{"{", 
   RowBox[{"1", ",", "2", ",", "3"}], "}"}]}]], "Input",
 Deletable->False,
 CellLabel->"In[2]:="],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1", ",", "2", ",", "6"}], "}"}]], "Output",
 Editable->False,
 CellEditDuplicate->False,
 Evaluatable->False,
 CellLabel->"Out[2]="]
}, Open  ]],

Cell["Calcule los 10 primeros cuadrados:", "CodeCaption",
 Editable->False,
 Deletable->False,
 ShowCellBracket->False],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Range", "[", "10", "]"}], "^", "2"}]], "Input",
 Deletable->False,
 CellLabel->"In[3]:="],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "1", ",", "4", ",", "9", ",", "16", ",", "25", ",", "36", ",", "49", ",", 
   "64", ",", "81", ",", "100"}], "}"}]], "Output",
 Editable->False,
 CellEditDuplicate->False,
 Evaluatable->False,
 CellLabel->"Out[3]="]
}, Open  ]],

Cell["Grafique los 20 primeros cuadrados:", "CodeCaption",
 Editable->False,
 Deletable->False,
 ShowCellBracket->False],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListPlot", "[", 
  RowBox[{
   RowBox[{"Range", "[", "20", "]"}], "^", "2"}], "]"}]], "Input",
 Deletable->False,
 CellLabel->"In[4]:="],

Cell[BoxData[
 GraphicsBox[{{}, {{}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.012833333333333334`],
      AbsoluteThickness[1.6], PointBox[CompressedData["
1:eJxTTMoPSmViYGAQAWIQDQEf7FFpBgcIJQClOaC0Epq4AZQWgdKWUFoCSjtB
aRkI3eAB5StA6QBUcx1CoHwVKB0JpdWg8nFQvgaUToLSWhBaIRXK14HalwHl
60Hlc9DcXQClDSG0QBGUbwS1rwTKN4bQE8qgfBMoXekAAOkrGTI=
      "]]}, {}}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->{200.03125, Automatic},
  Method->{},
  PlotRange->{{0., 20.}, {0, 400.}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 Editable->False,
 CellEditDuplicate->False,
 Evaluatable->False,
 CellLabel->"Out[4]="]
}, Open  ]],

Cell[TextData[{
 ButtonBox["Sort",
  BaseStyle->"Link"],
 " ordena una lista:"
}], "CodeCaption",
 Editable->False,
 Deletable->False,
 ShowCellBracket->False,
 CellTags->"i:3"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Sort", "[", 
  RowBox[{"{", 
   RowBox[{"4", ",", "2", ",", "1", ",", "3", ",", "6"}], "}"}], 
  "]"}]], "Input",
 Deletable->False,
 CellLabel->"In[5]:="],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1", ",", "2", ",", "3", ",", "4", ",", "6"}], "}"}]], "Output",
 Editable->False,
 CellEditDuplicate->False,
 Evaluatable->False,
 CellLabel->"Out[5]="]
}, Open  ]],

Cell[TextData[{
 ButtonBox["Length",
  BaseStyle->"Link"],
 " encuentra la longitud de una lista:"
}], "CodeCaption",
 Editable->False,
 Deletable->False,
 ShowCellBracket->False,
 CellTags->"i:4"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Length", "[", 
  RowBox[{"{", 
   RowBox[{"5", ",", "3", ",", "4", ",", "5", ",", "3", ",", "4", ",", "5"}], 
   "}"}], "]"}]], "Input",
 Deletable->False,
 CellLabel->"In[6]:="],

Cell[BoxData["7"], "Output",
 Editable->False,
 CellEditDuplicate->False,
 Evaluatable->False,
 CellLabel->"Out[6]="]
}, Open  ]],

Cell[TextData[{
 ButtonBox["Total",
  BaseStyle->"Link"],
 " calcula la suma de los elementos de una lista:"
}], "CodeCaption",
 Editable->False,
 Deletable->False,
 ShowCellBracket->False,
 CellTags->"i:5"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Total", "[", 
  RowBox[{"{", 
   RowBox[{"1", ",", "1", ",", "2", ",", "2"}], "}"}], "]"}]], "Input",
 Deletable->False,
 CellLabel->"In[7]:="],

Cell[BoxData["6"], "Output",
 Editable->False,
 CellEditDuplicate->False,
 Evaluatable->False,
 CellLabel->"Out[7]="]
}, Open  ]],

Cell["Encuentre el total de los n\[UAcute]meros del 1 al 10:", "CodeCaption",
 Editable->False,
 Deletable->False,
 ShowCellBracket->False],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Total", "[", 
  RowBox[{"Range", "[", "10", "]"}], "]"}]], "Input",
 Deletable->False,
 CellLabel->"In[8]:="],

Cell[BoxData["55"], "Output",
 Editable->False,
 CellEditDuplicate->False,
 Evaluatable->False,
 CellTags->"LastCellOfAPage",
 CellLabel->"Out[8]="]
}, Open  ]],

Cell[TextData[{
 ButtonBox["Count",
  BaseStyle->"Link"],
 " cuenta el n\[UAcute]mero de veces que alguna cosa aparece en una lista."
}], "Text",
 Editable->False,
 Deletable->False,
 ShowCellBracket->False,
 CellTags->{"p:16", "i:6"}],

Cell[TextData[{
 "Cuente el n\[UAcute]mero de veces que ",
 Cell[BoxData["a"], "InlineCode"],
 " aparece en la lista:"
}], "CodeCaption",
 Editable->False,
 Deletable->False,
 ShowCellBracket->False],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Count", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"a", ",", "b", ",", "a", ",", "a", ",", "c", ",", "b", ",", "a"}],
     "}"}], ",", "a"}], "]"}]], "Input",
 Deletable->False,
 CellLabel->"In[9]:="],

Cell[BoxData["4"], "Output",
 Editable->False,
 CellEditDuplicate->False,
 Evaluatable->False,
 CellLabel->"Out[9]="]
}, Open  ]],

Cell[TextData[{
 "Frecuentemente es de utilidad obtener elementos individuales de una lista. ",
 ButtonBox["First",
  BaseStyle->"Link"],
 " encuentra el primer elemento; ",
 ButtonBox["Last",
  BaseStyle->"Link"],
 " encuentra el \[UAcute]ltimo. ",
 ButtonBox["Part",
  BaseStyle->"Link"],
 " encuentra el elemento que est\[AAcute] en una posici\[OAcute]n \
especificada."
}], "Text",
 Editable->False,
 Deletable->False,
 ShowCellBracket->False,
 CellTags->"i:7"],

Cell["Obtenga el primer elemento de una lista:", "CodeCaption",
 Editable->False,
 Deletable->False,
 ShowCellBracket->False],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"First", "[", 
  RowBox[{"{", 
   RowBox[{"7", ",", "6", ",", "5"}], "}"}], "]"}]], "Input",
 Deletable->False,
 CellLabel->"In[10]:="],

Cell[BoxData["7"], "Output",
 Editable->False,
 CellEditDuplicate->False,
 Evaluatable->False,
 CellLabel->"Out[10]="]
}, Open  ]],

Cell["Obtenga el \[UAcute]ltimo elemento:", "CodeCaption",
 Editable->False,
 Deletable->False,
 ShowCellBracket->False],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Last", "[", 
  RowBox[{"{", 
   RowBox[{"7", ",", "6", ",", "5"}], "}"}], "]"}]], "Input",
 Deletable->False,
 CellLabel->"In[11]:="],

Cell[BoxData["5"], "Output",
 Editable->False,
 CellEditDuplicate->False,
 Evaluatable->False,
 CellLabel->"Out[11]="]
}, Open  ]],

Cell["Obtenga el elemento n\[UAcute]mero 2:", "CodeCaption",
 Editable->False,
 Deletable->False,
 ShowCellBracket->False],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Part", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"7", ",", "6", ",", "5"}], "}"}], ",", "2"}], "]"}]], "Input",
 Deletable->False,
 CellLabel->"In[12]:="],

Cell[BoxData["6"], "Output",
 Editable->False,
 CellEditDuplicate->False,
 Evaluatable->False,
 CellLabel->"Out[12]="]
}, Open  ]],

Cell["\<\
Obtener el primer elemento de una lista previamente ordenada es lo mismo que \
obtener el elemento m\[AAcute]s peque\[NTilde]o:\
\>", "CodeCaption",
 Editable->False,
 Deletable->False,
 ShowCellBracket->False],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"First", "[", 
  RowBox[{"Sort", "[", 
   RowBox[{"{", 
    RowBox[{"6", ",", "7", ",", "1", ",", "2", ",", "4", ",", "5"}], "}"}], 
   "]"}], "]"}]], "Input",
 Deletable->False,
 CellLabel->"In[13]:="],

Cell[BoxData["1"], "Output",
 Editable->False,
 CellEditDuplicate->False,
 Evaluatable->False,
 CellLabel->"Out[13]="]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Min", "[", 
  RowBox[{"{", 
   RowBox[{"6", ",", "7", ",", "1", ",", "2", ",", "4", ",", "5"}], "}"}], 
  "]"}]], "Input",
 Deletable->False,
 CellLabel->"In[14]:="],

Cell[BoxData["1"], "Output",
 Editable->False,
 CellEditDuplicate->False,
 Evaluatable->False,
 CellLabel->"Out[14]="]
}, Open  ]],

Cell[TextData[{
 "Si se tiene un n\[UAcute]mero, como el 5\[VeryThinSpace]671, puede \
obtenerse la lista de sus d\[IAcute]gitos mediante ",
 Cell[BoxData[
  RowBox[{
   ButtonBox["IntegerDigits",
    BaseStyle->"CodeLink"], "[", "5671", "]"}]], "InlineCodeText"],
 "."
}], "Text",
 Editable->False,
 Deletable->False,
 ShowCellBracket->False,
 CellTags->"i:8"],

Cell["Descomponga un n\[UAcute]mero para obtener la lista de sus \
d\[IAcute]gitos:", "CodeCaption",
 Editable->False,
 Deletable->False,
 ShowCellBracket->False],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"IntegerDigits", "[", "1988", "]"}]], "Input",
 Deletable->False,
 CellLabel->"In[15]:="],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1", ",", "9", ",", "8", ",", "8"}], "}"}]], "Output",
 Editable->False,
 CellEditDuplicate->False,
 Evaluatable->False,
 CellLabel->"Out[15]="]
}, Open  ]],

Cell["Encuentre el \[UAcute]ltimo d\[IAcute]gito:", "CodeCaption",
 Editable->False,
 Deletable->False,
 ShowCellBracket->False],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Last", "[", 
  RowBox[{"IntegerDigits", "[", "1988", "]"}], "]"}]], "Input",
 Deletable->False,
 CellLabel->"In[16]:="],

Cell[BoxData["8"], "Output",
 Editable->False,
 CellEditDuplicate->False,
 Evaluatable->False,
 CellTags->"LastCellOfAPage",
 CellLabel->"Out[16]="]
}, Open  ]],

Cell[TextData[{
 ButtonBox["Take",
  BaseStyle->"Link"],
 " permite tomar un n\[UAcute]mero especificado de elementos a partir del \
principio de una lista."
}], "Text",
 Editable->False,
 Deletable->False,
 ShowCellBracket->False,
 CellTags->{"p:17", "i:9"}],

Cell["Tome los 3 primeros elementos de una lista:", "CodeCaption",
 Editable->False,
 Deletable->False,
 ShowCellBracket->False],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Take", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
    "101", ",", "203", ",", "401", ",", "602", ",", "332", ",", "412"}], 
    "}"}], ",", "3"}], "]"}]], "Input",
 Deletable->False,
 CellLabel->"In[17]:="],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"101", ",", "203", ",", "401"}], "}"}]], "Output",
 Editable->False,
 CellEditDuplicate->False,
 Evaluatable->False,
 CellLabel->"Out[17]="]
}, Open  ]],

Cell["Tome los 10 primeros d\[IAcute]gitos de 2 a la potencia 100:", \
"CodeCaption",
 Editable->False,
 Deletable->False,
 ShowCellBracket->False],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Take", "[", 
  RowBox[{
   RowBox[{"IntegerDigits", "[", 
    RowBox[{"2", "^", "100"}], "]"}], ",", "10"}], "]"}]], "Input",
 Deletable->False,
 CellLabel->"In[18]:="],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "1", ",", "2", ",", "6", ",", "7", ",", "6", ",", "5", ",", "0", ",", "6", 
   ",", "0", ",", "0"}], "}"}]], "Output",
 Editable->False,
 CellEditDuplicate->False,
 Evaluatable->False,
 CellLabel->"Out[18]="]
}, Open  ]],

Cell[TextData[{
 ButtonBox["Drop",
  BaseStyle->"Link"],
 " desecha elementos a partir del inicio de una lista."
}], "Text",
 Editable->False,
 Deletable->False,
 ShowCellBracket->False,
 CellTags->"i:10"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Drop", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
    "101", ",", "203", ",", "401", ",", "602", ",", "332", ",", "412"}], 
    "}"}], ",", "3"}], "]"}]], "Input",
 Deletable->False,
 CellLabel->"In[19]:="],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"602", ",", "332", ",", "412"}], "}"}]], "Output",
 Editable->False,
 CellEditDuplicate->False,
 Evaluatable->False,
 CellLabel->"Out[19]="]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Vocabulario", "VocabularySection",
 Editable->False,
 Deletable->False,
 ShowCellBracket->False],

Cell[BoxData[GridBox[{
   {
    RowBox[{
     RowBox[{"{", 
      RowBox[{"2", ",", "3", ",", "4"}], "}"}], 
     ButtonBox["+",
      BaseStyle->"CodeLink",
      ButtonData->"Plus"], 
     RowBox[{"{", 
      RowBox[{"5", ",", "6", ",", "2"}], "}"}]}], " ", Cell[
    "aritm\[EAcute]tica con listas", "VocabularyText"]},
   {
    RowBox[{
     ButtonBox["Sort",
      BaseStyle->"CodeLink"], "[", 
     RowBox[{"{", 
      RowBox[{"5", ",", "7", ",", "1"}], "}"}], "]"}], " ", Cell[
    "ordena una lista", "VocabularyText"]},
   {
    RowBox[{
     ButtonBox["Length",
      BaseStyle->"CodeLink"], "[", 
     RowBox[{"{", 
      RowBox[{"3", ",", "3"}], "}"}], "]"}], " ", Cell[
    "longitud de una lista (n\[UAcute]mero de elementos)", 
     "VocabularyText"]},
   {
    RowBox[{
     ButtonBox["Total",
      BaseStyle->"CodeLink"], "[", 
     RowBox[{"{", 
      RowBox[{"1", ",", "1", ",", "2"}], "}"}], "]"}], " ", Cell[
    "total de los elementos de una lista", "VocabularyText"]},
   {
    RowBox[{
     ButtonBox["Count",
      BaseStyle->"CodeLink"], "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"3", ",", "2", ",", "3"}], "}"}], ",", "3"}], "]"}], " ", Cell[
    "cuenta cu\[AAcute]ntas veces aparece un elemento", "VocabularyText"]},
   {
    RowBox[{
     ButtonBox["First",
      BaseStyle->"CodeLink"], "[", 
     RowBox[{"{", 
      RowBox[{"2", ",", "3"}], "}"}], "]"}], " ", Cell[
    "primer elemento de una lista", "VocabularyText"]},
   {
    RowBox[{
     ButtonBox["Last",
      BaseStyle->"CodeLink"], "[", 
     RowBox[{"{", 
      RowBox[{"6", ",", "7", ",", "8"}], "}"}], "]"}], " ", Cell[
    "\[UAcute]ltimo elemento de una lista", "VocabularyText"]},
   {
    RowBox[{
     ButtonBox["Part",
      BaseStyle->"CodeLink"], "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"3", ",", "1", ",", "4"}], "}"}], ",", "2"}], "]"}], " ", Cell[
    TextData[{
     "un elemento particular de una lista, que tambi\[EAcute]n se escribe \
como ",
     Cell[BoxData[
      RowBox[{
       RowBox[{"{", 
        RowBox[{"3", ",", "1", ",", "4"}], "}"}], "[", 
       RowBox[{"[", "2", "]"}], "]"}]], "InlineCode"]
    }], "VocabularyText"]},
   {
    RowBox[{
     ButtonBox["Take",
      BaseStyle->"CodeLink"], "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"6", ",", "4", ",", "3", ",", "1"}], "}"}], ",", "2"}], "]"}], 
    " ", Cell["toma elementos del principio de la lista", "VocabularyText"]},
   {
    RowBox[{
     ButtonBox["Drop",
      BaseStyle->"CodeLink"], "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"6", ",", "4", ",", "3", ",", "1"}], "}"}], ",", "2"}], "]"}], 
    " ", Cell[
    "desecha elementos del principio de una lista", "VocabularyText"]},
   {
    RowBox[{
     ButtonBox["IntegerDigits",
      BaseStyle->"CodeLink"], "[", "1234", "]"}], " ", Cell[
    "lista de los d\[IAcute]gitos de un n\[UAcute]mero", "VocabularyText"]}
  }]], "VocabularyTable",
 Editable->False,
 Deletable->False,
 ShowCellBracket->False]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 DynamicModuleBox[{$CellContext`open$$ = False}, 
  TagBox[GridBox[{
     {
      StyleBox["\<\"Exercises\"\>",
       StripOnInput->False,
       FontSlant->"Italic"], 
      PaneBox[
       TagBox[
        ButtonBox[
         DynamicBox[ToBoxes[
           If[$CellContext`open$$, 
            Row[{
              Style["-", "ExercisePreviewButtonTextHighlight"], 
              Style[" Preview Exercises", "ExercisePreviewButtonText"]}], 
            Row[{
              Style["+", "ExercisePreviewButtonTextHighlight"], 
              Style[" Preview Exercises", "ExercisePreviewButtonText"]}]], 
           StandardForm],
          ImageSizeCache->{115., {1., 10.}}],
         Appearance->None,
         ButtonFunction:>(
          If[$CellContext`open$$, $CellContext`open$$ = 
            False, $CellContext`open$$ = True]; NotebookFind[
            EvaluationNotebook[], "ExerciseSummaryCell", Next, CellStyle, 
            WrapAround -> True, AutoScroll -> False]; FrontEndTokenExecute[
            EvaluationNotebook[], "ExpandSelection"]; FrontEndExecute[
            FrontEndToken[
             EvaluationNotebook[], "OpenCloseGroup"]]),
         Evaluator->Automatic,
         Method->"Preemptive"],
        MouseAppearanceTag["LinkHand"]],
       Alignment->Right,
       ImageSize->Full]}
    },
    AutoDelete->False,
    GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
    GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
   "Grid"],
  DynamicModuleValues:>{}]], "ExerciseSection",
 Editable->False,
 ShowCellBracket->False,
 GeneratedCell->True,
 CellAutoOverwrite->True,
 CellChangeTimes->{3.669991951589675*^9},
 ShowStringCharacters->False],

Cell[CellGroupData[{

Cell[BoxData[
 TagBox[GridBox[{
    {
     TagBox[GridBox[{
        {
         PaneBox[
          
          StyleBox["\<\"14 Exercises Available\"\>", "ExerciseSummaryHeading",
           
           StripOnInput->False],
          ImageMargins->{{20, 0}, {0, 10}}]},
        {
         PaneBox[
          StyleBox["\<\"with 7 extras\"\>", "ExerciseSummarySubheading",
           StripOnInput->False],
          ImageMargins->{{20, 0}, {10, 0}}]}
       },
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
       
       GridBoxSpacings->{"Columns" -> {{Automatic}}, "Rows" -> {{0}}}],
      "Column"], 
     PaneBox[
      ButtonBox[
       StyleBox["\<\"Get Started \[RightGuillemet]\"\>", 
        "ExerciseSummaryHeading",
        StripOnInput->False],
       Appearance->None,
       ButtonFunction:>
        NotebookLocate[{"EIWL2-05-operations-on-lists-exercises.nb", ""}],
       Evaluator->Automatic,
       Method->"Preemptive"],
      FrameMargins->{{10, 0}, {10, 10}},
      ImageSize->Full]}
   },
   AutoDelete->False,
   GridBoxAlignment->{"Columns" -> {{Left}}},
   GridBoxItemSize->{"Columns" -> {
       Scaled[0.7], 
       Scaled[0.3]}, "Rows" -> {{Automatic}}}],
  "Grid"]], "ExerciseSummaryCell",
 Editable->False,
 Deletable->False,
 ShowCellBracket->False],

Cell[CellGroupData[{

Cell[TextData[{
 "Cree una lista de los 10 primeros cuadrados en orden inverso.",
 StyleBox[ButtonBox["\[NonBreakingSpace]\[RightGuillemet]",
  Appearance->None,
  Evaluator->Automatic,
  Method->"Preemptive",
  ButtonFunction:>(SelectionMove[
     ButtonNotebook[], All, ButtonCell, AutoScroll -> False]; 
   FrontEndExecute[
     FrontEndToken[
      ButtonNotebook[], "OpenCloseGroup"]])],
  FontColor->RGBColor[1, 0.501961, 0]]
}], "Exercise",
 Editable->False,
 Selectable->False,
 Deletable->False,
 CellDingbat->Cell[
  "5.1", "ExerciseNumber", FontColor -> 
   RGBColor[0.9019607843137255, 0.4117647058823529, 0.027450980392156862`]],
 ShowCellBracket->False],

Cell[BoxData[
 PaneBox[GridBox[{
    {" ", 
     StyleBox[
      RowBox[{"Expected", " ", 
       RowBox[{"output", ":"}]}],
      Editable->False,
      Selectable->False,
      StripOnInput->False,
      FontColor->RGBColor[0.45, 0.45, 0.45]], " "},
    {" ", 
     InterpretationBox[Cell[BoxData[
       RowBox[{"{", 
        RowBox[{
        "100", ",", "81", ",", "64", ",", "49", ",", "36", ",", "25", ",", 
         "16", ",", "9", ",", "4", ",", "1"}], "}"}]], "ExerciseOutput"],
      Apply[TextCell, 
       Cell[
        BoxData[
         RowBox[{"{", 
           
           RowBox[{"100", ",", "81", ",", "64", ",", "49", ",", "36", ",", 
             "25", ",", "16", ",", "9", ",", "4", ",", "1"}], "}"}]], 
        "ExerciseOutput", Selectable -> False, Copyable -> False, Editable -> 
        False, ShowCellBracket -> False]]], " "}
   },
   GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Center}}},
   GridBoxBackground->{"Columns" -> {{
        RGBColor[1, 1, 1]}}},
   GridBoxSpacings->{"Columns" -> {{Automatic}}, "Rows" -> {{1}}}],
  FrameMargins->0]], "ExerciseOutput",
 Editable->False,
 Selectable->False,
 Deletable->False,
 CellFrame->{{1, 1}, {1, 1}},
 ShowCellBracket->False,
 CellFrameColor->RGBColor[0.85, 0.85, 0.85],
 LineBreakWithin->Automatic]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 "Calcule el total de los 10 primeros cuadrados.",
 StyleBox[ButtonBox["\[NonBreakingSpace]\[RightGuillemet]",
  Appearance->None,
  Evaluator->Automatic,
  Method->"Preemptive",
  ButtonFunction:>(SelectionMove[
     ButtonNotebook[], All, ButtonCell, AutoScroll -> False]; 
   FrontEndExecute[
     FrontEndToken[
      ButtonNotebook[], "OpenCloseGroup"]])],
  FontColor->RGBColor[1, 0.501961, 0]]
}], "Exercise",
 Editable->False,
 Selectable->False,
 Deletable->False,
 CellDingbat->Cell[
  "5.2", "ExerciseNumber", FontColor -> 
   RGBColor[0.9019607843137255, 0.4117647058823529, 0.027450980392156862`]],
 ShowCellBracket->False],

Cell[BoxData[
 PaneBox[GridBox[{
    {" ", 
     StyleBox[
      RowBox[{"Expected", " ", 
       RowBox[{"output", ":"}]}],
      Editable->False,
      Selectable->False,
      StripOnInput->False,
      FontColor->RGBColor[0.45, 0.45, 0.45]], " "},
    {" ", 
     InterpretationBox[Cell[BoxData["385"], "ExerciseOutput"],
      Apply[TextCell, 
       Cell[
        BoxData["385"], "ExerciseOutput", Selectable -> False, Copyable -> 
        False, Editable -> False, ShowCellBracket -> False]]], " "}
   },
   GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Center}}},
   GridBoxBackground->{"Columns" -> {{
        RGBColor[1, 1, 1]}}},
   GridBoxSpacings->{"Columns" -> {{Automatic}}, "Rows" -> {{1}}}],
  FrameMargins->0]], "ExerciseOutput",
 Editable->False,
 Selectable->False,
 Deletable->False,
 CellFrame->{{1, 1}, {1, 1}},
 ShowCellBracket->False,
 CellFrameColor->RGBColor[0.85, 0.85, 0.85],
 LineBreakWithin->Automatic]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 "Muestre gr\[AAcute]ficamente los 10 primeros cuadrados, comenzando por el \
1.",
 StyleBox[ButtonBox["\[NonBreakingSpace]\[RightGuillemet]",
  Appearance->None,
  Evaluator->Automatic,
  Method->"Preemptive",
  ButtonFunction:>(SelectionMove[
     ButtonNotebook[], All, ButtonCell, AutoScroll -> False]; 
   FrontEndExecute[
     FrontEndToken[
      ButtonNotebook[], "OpenCloseGroup"]])],
  FontColor->RGBColor[1, 0.501961, 0]]
}], "Exercise",
 Editable->False,
 Selectable->False,
 Deletable->False,
 CellDingbat->Cell[
  "5.3", "ExerciseNumber", FontColor -> 
   RGBColor[0.9019607843137255, 0.4117647058823529, 0.027450980392156862`]],
 ShowCellBracket->False],

Cell[BoxData[
 PaneBox[GridBox[{
    {" ", 
     StyleBox[
      RowBox[{"Expected", " ", 
       RowBox[{"output", ":"}]}],
      Editable->False,
      Selectable->False,
      StripOnInput->False,
      FontColor->RGBColor[0.45, 0.45, 0.45]], " "},
    {" ", 
     InterpretationBox[Cell[BoxData[
       GraphicsBox[{{}, {{}, 
          {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
           0.012833333333333334`], AbsoluteThickness[1.6], 
           PointBox[{{1., 1.}, {2., 4.}, {3., 9.}, {4., 16.}, {5., 25.}, {6., 
            36.}, {7., 49.}, {8., 64.}, {9., 81.}, {10., 100.}}]}, {}}, {}},
        AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
        Axes->{True, True},
        AxesLabel->{None, None},
        AxesOrigin->{0, 0},
        DisplayFunction->Identity,
        Frame->{{False, False}, {False, False}},
        FrameLabel->{{None, None}, {None, None}},
        FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
        GridLines->{None, None},
        GridLinesStyle->Directive[
          GrayLevel[0.5, 0.4]],
        Method->{},
        PlotRange->{{0., 10.}, {0, 100.}},
        PlotRangeClipping->True,
        PlotRangePadding->{{
           Scaled[0.02], 
           Scaled[0.02]}, {
           Scaled[0.02], 
           Scaled[0.05]}},
        Ticks->{Automatic, Automatic}]], "ExerciseOutput"],
      Apply[TextCell, 
       Cell[
        BoxData[
         GraphicsBox[{{}, {{}, {{
              RGBColor[0.368417, 0.506779, 0.709798], 
              PointSize[0.012833333333333334`], 
              AbsoluteThickness[1.6], 
              
              PointBox[{{1., 1.}, {2., 4.}, {3., 9.}, {4., 16.}, {5., 25.}, {
               6., 36.}, {7., 49.}, {8., 64.}, {9., 81.}, {10., 
               100.}}]}}, {}}, {}}, AspectRatio -> 
          NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
          AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction -> 
          Identity, Frame -> {{False, False}, {False, False}}, 
          FrameLabel -> {{None, None}, {None, None}}, 
          FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
          GridLines -> {None, None}, GridLinesStyle -> Directive[
            GrayLevel[0.5, 0.4]], Method -> {}, 
          PlotRange -> {{0., 10.}, {0, 100.}}, PlotRangeClipping -> True, 
          PlotRangePadding -> {{
             Scaled[0.02], 
             Scaled[0.02]}, {
             Scaled[0.02], 
             Scaled[0.05]}}, Ticks -> {Automatic, Automatic}]], 
        "ExerciseOutput", Selectable -> False, Copyable -> False, Editable -> 
        False, ShowCellBracket -> False]]], " "}
   },
   GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Center}}},
   GridBoxBackground->{"Columns" -> {{
        RGBColor[1, 1, 1]}}},
   GridBoxSpacings->{"Columns" -> {{Automatic}}, "Rows" -> {{1}}}],
  FrameMargins->0]], "ExerciseOutput",
 Editable->False,
 Selectable->False,
 Deletable->False,
 CellFrame->{{1, 1}, {1, 1}},
 ShowCellBracket->False,
 CellFrameColor->RGBColor[0.85, 0.85, 0.85],
 LineBreakWithin->Automatic]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 "Use ",
 ButtonBox["Sort",
  BaseStyle->"Link"],
 ", ",
 ButtonBox["Join",
  BaseStyle->"Link"],
 " y ",
 ButtonBox["Range",
  BaseStyle->"Link"],
 " para crear ",
 Cell[BoxData[
  RowBox[{"{", 
   RowBox[{
   "1", ",", "1", ",", "2", ",", "2", ",", "3", ",", "3", ",", "4", ",", 
    "4"}], "}"}]], "InlineCode"],
 ".",
 StyleBox[ButtonBox["\[NonBreakingSpace]\[RightGuillemet]",
  Appearance->None,
  Evaluator->Automatic,
  Method->"Preemptive",
  ButtonFunction:>(SelectionMove[
     ButtonNotebook[], All, ButtonCell, AutoScroll -> False]; 
   FrontEndExecute[
     FrontEndToken[
      ButtonNotebook[], "OpenCloseGroup"]])],
  FontColor->RGBColor[1, 0.501961, 0]]
}], "Exercise",
 Editable->False,
 Selectable->False,
 Deletable->False,
 CellDingbat->Cell[
  "5.4", "ExerciseNumber", FontColor -> 
   RGBColor[0.9019607843137255, 0.4117647058823529, 0.027450980392156862`]],
 ShowCellBracket->False],

Cell[BoxData[
 PaneBox[GridBox[{
    {" ", 
     StyleBox[
      RowBox[{"Expected", " ", 
       RowBox[{"output", ":"}]}],
      Editable->False,
      Selectable->False,
      StripOnInput->False,
      FontColor->RGBColor[0.45, 0.45, 0.45]], " "},
    {" ", 
     InterpretationBox[Cell[BoxData[
       RowBox[{"{", 
        RowBox[{
        "1", ",", "1", ",", "2", ",", "2", ",", "3", ",", "3", ",", "4", ",", 
         "4"}], "}"}]], "ExerciseOutput"],
      Apply[TextCell, 
       Cell[
        BoxData[
         RowBox[{"{", 
           
           RowBox[{"1", ",", "1", ",", "2", ",", "2", ",", "3", ",", "3", ",",
              "4", ",", "4"}], "}"}]], "ExerciseOutput", Selectable -> False, 
        Copyable -> False, Editable -> False, ShowCellBracket -> False]]], " "}
   },
   GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Center}}},
   GridBoxBackground->{"Columns" -> {{
        RGBColor[1, 1, 1]}}},
   GridBoxSpacings->{"Columns" -> {{Automatic}}, "Rows" -> {{1}}}],
  FrameMargins->0]], "ExerciseOutput",
 Editable->False,
 Selectable->False,
 Deletable->False,
 CellFrame->{{1, 1}, {1, 1}},
 ShowCellBracket->False,
 CellFrameColor->RGBColor[0.85, 0.85, 0.85],
 LineBreakWithin->Automatic]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 "Use ",
 ButtonBox["Range",
  BaseStyle->"Link"],
 " y ",
 Cell[BoxData[
  ButtonBox["+",
   BaseStyle->"Link",
   ButtonData->"Plus"]], "InlineCode"],
 " para formar la lista de los n\[UAcute]meros del 10 al 20, inclusive.",
 StyleBox[ButtonBox["\[NonBreakingSpace]\[RightGuillemet]",
  Appearance->None,
  Evaluator->Automatic,
  Method->"Preemptive",
  ButtonFunction:>(SelectionMove[
     ButtonNotebook[], All, ButtonCell, AutoScroll -> False]; 
   FrontEndExecute[
     FrontEndToken[
      ButtonNotebook[], "OpenCloseGroup"]])],
  FontColor->RGBColor[1, 0.501961, 0]]
}], "Exercise",
 Editable->False,
 Selectable->False,
 Deletable->False,
 CellDingbat->Cell[
  "5.5", "ExerciseNumber", FontColor -> 
   RGBColor[0.9019607843137255, 0.4117647058823529, 0.027450980392156862`]],
 ShowCellBracket->False,
 CellTags->"LastCellOfAPage"],

Cell[BoxData[
 PaneBox[GridBox[{
    {" ", 
     StyleBox[
      RowBox[{"Expected", " ", 
       RowBox[{"output", ":"}]}],
      Editable->False,
      Selectable->False,
      StripOnInput->False,
      FontColor->RGBColor[0.45, 0.45, 0.45]], " "},
    {" ", 
     InterpretationBox[Cell[BoxData[
       RowBox[{"{", 
        RowBox[{
        "10", ",", "11", ",", "12", ",", "13", ",", "14", ",", "15", ",", 
         "16", ",", "17", ",", "18", ",", "19", ",", "20"}], "}"}]], 
       "ExerciseOutput"],
      Apply[TextCell, 
       Cell[
        BoxData[
         RowBox[{"{", 
           
           RowBox[{"10", ",", "11", ",", "12", ",", "13", ",", "14", ",", 
             "15", ",", "16", ",", "17", ",", "18", ",", "19", ",", "20"}], 
           "}"}]], "ExerciseOutput", Selectable -> False, Copyable -> False, 
        Editable -> False, ShowCellBracket -> False]]], " "}
   },
   GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Center}}},
   GridBoxBackground->{"Columns" -> {{
        RGBColor[1, 1, 1]}}},
   GridBoxSpacings->{"Columns" -> {{Automatic}}, "Rows" -> {{1}}}],
  FrameMargins->0]], "ExerciseOutput",
 Editable->False,
 Selectable->False,
 Deletable->False,
 CellFrame->{{1, 1}, {1, 1}},
 ShowCellBracket->False,
 CellFrameColor->RGBColor[0.85, 0.85, 0.85],
 LineBreakWithin->Automatic]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 "Forme una lista combinada de los 5 primeros cuadrados y cubos \
(n\[UAcute]meros elevados a la potencia 3), puestos en orden.",
 StyleBox[ButtonBox["\[NonBreakingSpace]\[RightGuillemet]",
  Appearance->None,
  Evaluator->Automatic,
  Method->"Preemptive",
  ButtonFunction:>(SelectionMove[
     ButtonNotebook[], All, ButtonCell, AutoScroll -> False]; 
   FrontEndExecute[
     FrontEndToken[
      ButtonNotebook[], "OpenCloseGroup"]])],
  FontColor->RGBColor[1, 0.501961, 0]]
}], "Exercise",
 Editable->False,
 Selectable->False,
 Deletable->False,
 CellDingbat->Cell[
  "5.6", "ExerciseNumber", FontColor -> 
   RGBColor[0.9019607843137255, 0.4117647058823529, 0.027450980392156862`]],
 ShowCellBracket->False,
 CellTags->"p:18"],

Cell[BoxData[
 PaneBox[GridBox[{
    {" ", 
     StyleBox[
      RowBox[{"Expected", " ", 
       RowBox[{"output", ":"}]}],
      Editable->False,
      Selectable->False,
      StripOnInput->False,
      FontColor->RGBColor[0.45, 0.45, 0.45]], " "},
    {" ", 
     InterpretationBox[Cell[BoxData[
       RowBox[{"{", 
        RowBox[{
        "1", ",", "1", ",", "4", ",", "8", ",", "9", ",", "16", ",", "25", 
         ",", "27", ",", "64", ",", "125"}], "}"}]], "ExerciseOutput"],
      Apply[TextCell, 
       Cell[
        BoxData[
         RowBox[{"{", 
           
           RowBox[{"1", ",", "1", ",", "4", ",", "8", ",", "9", ",", "16", 
             ",", "25", ",", "27", ",", "64", ",", "125"}], "}"}]], 
        "ExerciseOutput", Selectable -> False, Copyable -> False, Editable -> 
        False, ShowCellBracket -> False]]], " "}
   },
   GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Center}}},
   GridBoxBackground->{"Columns" -> {{
        RGBColor[1, 1, 1]}}},
   GridBoxSpacings->{"Columns" -> {{Automatic}}, "Rows" -> {{1}}}],
  FrameMargins->0]], "ExerciseOutput",
 Editable->False,
 Selectable->False,
 Deletable->False,
 CellFrame->{{1, 1}, {1, 1}},
 ShowCellBracket->False,
 CellFrameColor->RGBColor[0.85, 0.85, 0.85],
 LineBreakWithin->Automatic]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 "Encuentre el n\[UAcute]mero de d\[IAcute]gitos en 2^128.",
 StyleBox[ButtonBox["\[NonBreakingSpace]\[RightGuillemet]",
  Appearance->None,
  Evaluator->Automatic,
  Method->"Preemptive",
  ButtonFunction:>(SelectionMove[
     ButtonNotebook[], All, ButtonCell, AutoScroll -> False]; 
   FrontEndExecute[
     FrontEndToken[
      ButtonNotebook[], "OpenCloseGroup"]])],
  FontColor->RGBColor[1, 0.501961, 0]]
}], "Exercise",
 Editable->False,
 Selectable->False,
 Deletable->False,
 CellDingbat->Cell[
  "5.7", "ExerciseNumber", FontColor -> 
   RGBColor[0.9019607843137255, 0.4117647058823529, 0.027450980392156862`]],
 ShowCellBracket->False],

Cell[BoxData[
 PaneBox[GridBox[{
    {" ", 
     StyleBox[
      RowBox[{"Expected", " ", 
       RowBox[{"output", ":"}]}],
      Editable->False,
      Selectable->False,
      StripOnInput->False,
      FontColor->RGBColor[0.45, 0.45, 0.45]], " "},
    {" ", 
     InterpretationBox[Cell[BoxData["39"], "ExerciseOutput"],
      Apply[TextCell, 
       Cell[
        BoxData["39"], "ExerciseOutput", Selectable -> False, Copyable -> 
        False, Editable -> False, ShowCellBracket -> False]]], " "}
   },
   GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Center}}},
   GridBoxBackground->{"Columns" -> {{
        RGBColor[1, 1, 1]}}},
   GridBoxSpacings->{"Columns" -> {{Automatic}}, "Rows" -> {{1}}}],
  FrameMargins->0]], "ExerciseOutput",
 Editable->False,
 Selectable->False,
 Deletable->False,
 CellFrame->{{1, 1}, {1, 1}},
 ShowCellBracket->False,
 CellFrameColor->RGBColor[0.85, 0.85, 0.85],
 LineBreakWithin->Automatic]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 "Encuentre el primer d\[IAcute]gito de 2^32.",
 StyleBox[ButtonBox["\[NonBreakingSpace]\[RightGuillemet]",
  Appearance->None,
  Evaluator->Automatic,
  Method->"Preemptive",
  ButtonFunction:>(SelectionMove[
     ButtonNotebook[], All, ButtonCell, AutoScroll -> False]; 
   FrontEndExecute[
     FrontEndToken[
      ButtonNotebook[], "OpenCloseGroup"]])],
  FontColor->RGBColor[1, 0.501961, 0]]
}], "Exercise",
 Editable->False,
 Selectable->False,
 Deletable->False,
 CellDingbat->Cell[
  "5.8", "ExerciseNumber", FontColor -> 
   RGBColor[0.9019607843137255, 0.4117647058823529, 0.027450980392156862`]],
 ShowCellBracket->False],

Cell[BoxData[
 PaneBox[GridBox[{
    {" ", 
     StyleBox[
      RowBox[{"Expected", " ", 
       RowBox[{"output", ":"}]}],
      Editable->False,
      Selectable->False,
      StripOnInput->False,
      FontColor->RGBColor[0.45, 0.45, 0.45]], " "},
    {" ", 
     InterpretationBox[Cell[BoxData["4"], "ExerciseOutput"],
      Apply[TextCell, 
       Cell[
        BoxData["4"], "ExerciseOutput", Selectable -> False, Copyable -> 
        False, Editable -> False, ShowCellBracket -> False]]], " "}
   },
   GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Center}}},
   GridBoxBackground->{"Columns" -> {{
        RGBColor[1, 1, 1]}}},
   GridBoxSpacings->{"Columns" -> {{Automatic}}, "Rows" -> {{1}}}],
  FrameMargins->0]], "ExerciseOutput",
 Editable->False,
 Selectable->False,
 Deletable->False,
 CellFrame->{{1, 1}, {1, 1}},
 ShowCellBracket->False,
 CellFrameColor->RGBColor[0.85, 0.85, 0.85],
 LineBreakWithin->Automatic]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 "Encuentre los 10 primeros d\[IAcute]gitos en 2^100.",
 StyleBox[ButtonBox["\[NonBreakingSpace]\[RightGuillemet]",
  Appearance->None,
  Evaluator->Automatic,
  Method->"Preemptive",
  ButtonFunction:>(SelectionMove[
     ButtonNotebook[], All, ButtonCell, AutoScroll -> False]; 
   FrontEndExecute[
     FrontEndToken[
      ButtonNotebook[], "OpenCloseGroup"]])],
  FontColor->RGBColor[1, 0.501961, 0]]
}], "Exercise",
 Editable->False,
 Selectable->False,
 Deletable->False,
 CellDingbat->Cell[
  "5.9", "ExerciseNumber", FontColor -> 
   RGBColor[0.9019607843137255, 0.4117647058823529, 0.027450980392156862`]],
 ShowCellBracket->False],

Cell[BoxData[
 PaneBox[GridBox[{
    {" ", 
     StyleBox[
      RowBox[{"Expected", " ", 
       RowBox[{"output", ":"}]}],
      Editable->False,
      Selectable->False,
      StripOnInput->False,
      FontColor->RGBColor[0.45, 0.45, 0.45]], " "},
    {" ", 
     InterpretationBox[Cell[BoxData[
       RowBox[{"{", 
        RowBox[{
        "1", ",", "2", ",", "6", ",", "7", ",", "6", ",", "5", ",", "0", ",", 
         "6", ",", "0", ",", "0"}], "}"}]], "ExerciseOutput"],
      Apply[TextCell, 
       Cell[
        BoxData[
         RowBox[{"{", 
           
           RowBox[{"1", ",", "2", ",", "6", ",", "7", ",", "6", ",", "5", ",",
              "0", ",", "6", ",", "0", ",", "0"}], "}"}]], "ExerciseOutput", 
        Selectable -> False, Copyable -> False, Editable -> False, 
        ShowCellBracket -> False]]], " "}
   },
   GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Center}}},
   GridBoxBackground->{"Columns" -> {{
        RGBColor[1, 1, 1]}}},
   GridBoxSpacings->{"Columns" -> {{Automatic}}, "Rows" -> {{1}}}],
  FrameMargins->0]], "ExerciseOutput",
 Editable->False,
 Selectable->False,
 Deletable->False,
 CellFrame->{{1, 1}, {1, 1}},
 ShowCellBracket->False,
 CellFrameColor->RGBColor[0.85, 0.85, 0.85],
 LineBreakWithin->Automatic]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 "Encuentre el mayor de los d\[IAcute]gitos en 2^20.",
 StyleBox[ButtonBox["\[NonBreakingSpace]\[RightGuillemet]",
  Appearance->None,
  Evaluator->Automatic,
  Method->"Preemptive",
  ButtonFunction:>(SelectionMove[
     ButtonNotebook[], All, ButtonCell, AutoScroll -> False]; 
   FrontEndExecute[
     FrontEndToken[
      ButtonNotebook[], "OpenCloseGroup"]])],
  FontColor->RGBColor[1, 0.501961, 0]]
}], "Exercise",
 Editable->False,
 Selectable->False,
 Deletable->False,
 CellDingbat->Cell[
  "5.10", "ExerciseNumber", FontColor -> 
   RGBColor[0.9019607843137255, 0.4117647058823529, 0.027450980392156862`]],
 ShowCellBracket->False],

Cell[BoxData[
 PaneBox[GridBox[{
    {" ", 
     StyleBox[
      RowBox[{"Expected", " ", 
       RowBox[{"output", ":"}]}],
      Editable->False,
      Selectable->False,
      StripOnInput->False,
      FontColor->RGBColor[0.45, 0.45, 0.45]], " "},
    {" ", 
     InterpretationBox[Cell[BoxData["8"], "ExerciseOutput"],
      Apply[TextCell, 
       Cell[
        BoxData["8"], "ExerciseOutput", Selectable -> False, Copyable -> 
        False, Editable -> False, ShowCellBracket -> False]]], " "}
   },
   GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Center}}},
   GridBoxBackground->{"Columns" -> {{
        RGBColor[1, 1, 1]}}},
   GridBoxSpacings->{"Columns" -> {{Automatic}}, "Rows" -> {{1}}}],
  FrameMargins->0]], "ExerciseOutput",
 Editable->False,
 Selectable->False,
 Deletable->False,
 CellFrame->{{1, 1}, {1, 1}},
 ShowCellBracket->False,
 CellFrameColor->RGBColor[0.85, 0.85, 0.85],
 LineBreakWithin->Automatic]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 "Encuentre cu\[AAcute]ntos ceros hay en los d\[IAcute]gitos de 2^1\
\[VeryThinSpace]000.",
 StyleBox[ButtonBox["\[NonBreakingSpace]\[RightGuillemet]",
  Appearance->None,
  Evaluator->Automatic,
  Method->"Preemptive",
  ButtonFunction:>(SelectionMove[
     ButtonNotebook[], All, ButtonCell, AutoScroll -> False]; 
   FrontEndExecute[
     FrontEndToken[
      ButtonNotebook[], "OpenCloseGroup"]])],
  FontColor->RGBColor[1, 0.501961, 0]]
}], "Exercise",
 Editable->False,
 Selectable->False,
 Deletable->False,
 CellDingbat->Cell[
  "5.11", "ExerciseNumber", FontColor -> 
   RGBColor[0.9019607843137255, 0.4117647058823529, 0.027450980392156862`]],
 ShowCellBracket->False],

Cell[BoxData[
 PaneBox[GridBox[{
    {" ", 
     StyleBox[
      RowBox[{"Expected", " ", 
       RowBox[{"output", ":"}]}],
      Editable->False,
      Selectable->False,
      StripOnInput->False,
      FontColor->RGBColor[0.45, 0.45, 0.45]], " "},
    {" ", 
     InterpretationBox[Cell[BoxData["28"], "ExerciseOutput"],
      Apply[TextCell, 
       Cell[
        BoxData["28"], "ExerciseOutput", Selectable -> False, Copyable -> 
        False, Editable -> False, ShowCellBracket -> False]]], " "}
   },
   GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Center}}},
   GridBoxBackground->{"Columns" -> {{
        RGBColor[1, 1, 1]}}},
   GridBoxSpacings->{"Columns" -> {{Automatic}}, "Rows" -> {{1}}}],
  FrameMargins->0]], "ExerciseOutput",
 Editable->False,
 Selectable->False,
 Deletable->False,
 CellFrame->{{1, 1}, {1, 1}},
 ShowCellBracket->False,
 CellFrameColor->RGBColor[0.85, 0.85, 0.85],
 LineBreakWithin->Automatic]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 "Use ",
 ButtonBox["Part",
  BaseStyle->"Link"],
 ", ",
 ButtonBox["Sort",
  BaseStyle->"Link"],
 " e ",
 ButtonBox["IntegerDigits",
  BaseStyle->"Link"],
 " para encontrar el segundo menor de los d\[IAcute]gitos en 2^20.",
 StyleBox[ButtonBox["\[NonBreakingSpace]\[RightGuillemet]",
  Appearance->None,
  Evaluator->Automatic,
  Method->"Preemptive",
  ButtonFunction:>(SelectionMove[
     ButtonNotebook[], All, ButtonCell, AutoScroll -> False]; 
   FrontEndExecute[
     FrontEndToken[
      ButtonNotebook[], "OpenCloseGroup"]])],
  FontColor->RGBColor[1, 0.501961, 0]]
}], "Exercise",
 Editable->False,
 Selectable->False,
 Deletable->False,
 CellDingbat->Cell[
  "5.12", "ExerciseNumber", FontColor -> 
   RGBColor[0.9019607843137255, 0.4117647058823529, 0.027450980392156862`]],
 ShowCellBracket->False],

Cell[BoxData[
 PaneBox[GridBox[{
    {" ", 
     StyleBox[
      RowBox[{"Expected", " ", 
       RowBox[{"output", ":"}]}],
      Editable->False,
      Selectable->False,
      StripOnInput->False,
      FontColor->RGBColor[0.45, 0.45, 0.45]], " "},
    {" ", 
     InterpretationBox[Cell[BoxData["1"], "ExerciseOutput"],
      Apply[TextCell, 
       Cell[
        BoxData["1"], "ExerciseOutput", Selectable -> False, Copyable -> 
        False, Editable -> False, ShowCellBracket -> False]]], " "}
   },
   GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Center}}},
   GridBoxBackground->{"Columns" -> {{
        RGBColor[1, 1, 1]}}},
   GridBoxSpacings->{"Columns" -> {{Automatic}}, "Rows" -> {{1}}}],
  FrameMargins->0]], "ExerciseOutput",
 Editable->False,
 Selectable->False,
 Deletable->False,
 CellFrame->{{1, 1}, {1, 1}},
 ShowCellBracket->False,
 CellFrameColor->RGBColor[0.85, 0.85, 0.85],
 LineBreakWithin->Automatic]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 "Represente gr\[AAcute]ficamente los puntos unidos de la secuencia de d\
\[IAcute]gitos que aparecen en 2^128.",
 StyleBox[ButtonBox["\[NonBreakingSpace]\[RightGuillemet]",
  Appearance->None,
  Evaluator->Automatic,
  Method->"Preemptive",
  ButtonFunction:>(SelectionMove[
     ButtonNotebook[], All, ButtonCell, AutoScroll -> False]; 
   FrontEndExecute[
     FrontEndToken[
      ButtonNotebook[], "OpenCloseGroup"]])],
  FontColor->RGBColor[1, 0.501961, 0]]
}], "Exercise",
 Editable->False,
 Selectable->False,
 Deletable->False,
 CellDingbat->Cell[
  "5.13", "ExerciseNumber", FontColor -> 
   RGBColor[0.9019607843137255, 0.4117647058823529, 0.027450980392156862`]],
 ShowCellBracket->False],

Cell[BoxData[
 PaneBox[GridBox[{
    {" ", 
     StyleBox[
      RowBox[{"Expected", " ", 
       RowBox[{"output", ":"}]}],
      Editable->False,
      Selectable->False,
      StripOnInput->False,
      FontColor->RGBColor[0.45, 0.45, 0.45]], " "},
    {" ", 
     InterpretationBox[Cell[BoxData[
       GraphicsBox[{{}, {{}, {}, 
          {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
           0.019444444444444445`], AbsoluteThickness[1.6], 
           LineBox[CompressedData["
1:eJxdkjsOwjAQRC0qSgqKFBSAECCEEP8/iYEbcAQkaq7gI3MEQJkp/CxFT7Oe
3XGc9J7vx6sRQhj9nj/r9alqNqMKYiuiHvK6fW2xKxbY72AOfX3oAepDzBvj
PBP4p8ibIXcu+j0WyF+ifwX/Gv4N/Fvoneh72GPeAfOOotcJ/Wf0X5BXiv6u
FfpjnpesfT9X52vf2vNuuU7WPs9d1H+RrIv4BSHkI7k=
            "]]}}, {}},
        AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
        Axes->{True, True},
        AxesLabel->{None, None},
        AxesOrigin->{0, 0},
        DisplayFunction->Identity,
        Frame->{{False, False}, {False, False}},
        FrameLabel->{{None, None}, {None, None}},
        FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
        GridLines->{None, None},
        GridLinesStyle->Directive[
          GrayLevel[0.5, 0.4]],
        Method->{},
        PlotRange->{{0., 39.}, {0, 9.}},
        PlotRangeClipping->True,
        PlotRangePadding->{{
           Scaled[0.02], 
           Scaled[0.02]}, {
           Scaled[0.02], 
           Scaled[0.05]}},
        Ticks->{Automatic, Automatic}]], "ExerciseOutput"],
      Apply[TextCell, 
       Cell[
        BoxData[
         GraphicsBox[{{}, {{}, {}, {{
              RGBColor[0.368417, 0.506779, 0.709798], 
              PointSize[0.019444444444444445`], 
              AbsoluteThickness[1.6], 
              LineBox[CompressedData["
1:eJxdkjsOwjAQRC0qSgqKFBSAECCEEP8/iYEbcAQkaq7gI3MEQJkp/CxFT7Oe
3XGc9J7vx6sRQhj9nj/r9alqNqMKYiuiHvK6fW2xKxbY72AOfX3oAepDzBvj
PBP4p8ibIXcu+j0WyF+ifwX/Gv4N/Fvoneh72GPeAfOOotcJ/Wf0X5BXiv6u
FfpjnpesfT9X52vf2vNuuU7WPs9d1H+RrIv4BSHkI7k=
               "]]}}}, {}}, 
          AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
          Axes -> {True, True}, AxesLabel -> {None, None}, 
          AxesOrigin -> {0, 0}, DisplayFunction -> Identity, 
          Frame -> {{False, False}, {False, False}}, 
          FrameLabel -> {{None, None}, {None, None}}, 
          FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
          GridLines -> {None, None}, GridLinesStyle -> Directive[
            GrayLevel[0.5, 0.4]], Method -> {}, 
          PlotRange -> {{0., 39.}, {0, 9.}}, PlotRangeClipping -> True, 
          PlotRangePadding -> {{
             Scaled[0.02], 
             Scaled[0.02]}, {
             Scaled[0.02], 
             Scaled[0.05]}}, Ticks -> {Automatic, Automatic}]], 
        "ExerciseOutput", Selectable -> False, Copyable -> False, Editable -> 
        False, ShowCellBracket -> False]]], " "}
   },
   GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Center}}},
   GridBoxBackground->{"Columns" -> {{
        RGBColor[1, 1, 1]}}},
   GridBoxSpacings->{"Columns" -> {{Automatic}}, "Rows" -> {{1}}}],
  FrameMargins->0]], "ExerciseOutput",
 Editable->False,
 Selectable->False,
 Deletable->False,
 CellFrame->{{1, 1}, {1, 1}},
 ShowCellBracket->False,
 CellFrameColor->RGBColor[0.85, 0.85, 0.85],
 LineBreakWithin->Automatic]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 "Use ",
 ButtonBox["Take",
  BaseStyle->"Link"],
 " y ",
 ButtonBox["Drop",
  BaseStyle->"Link"],
 " para obtener la secuencia 11 al 20 en ",
 Cell[BoxData[
  RowBox[{
   ButtonBox["Range",
    BaseStyle->"CodeLink"], "[", "100", "]"}]], "InlineCode"],
 ".",
 StyleBox[ButtonBox["\[NonBreakingSpace]\[RightGuillemet]",
  Appearance->None,
  Evaluator->Automatic,
  Method->"Preemptive",
  ButtonFunction:>(SelectionMove[
     ButtonNotebook[], All, ButtonCell, AutoScroll -> False]; 
   FrontEndExecute[
     FrontEndToken[
      ButtonNotebook[], "OpenCloseGroup"]])],
  FontColor->RGBColor[1, 0.501961, 0]]
}], "Exercise",
 Editable->False,
 Selectable->False,
 Deletable->False,
 CellDingbat->Cell[
  "5.14", "ExerciseNumber", FontColor -> 
   RGBColor[0.9019607843137255, 0.4117647058823529, 0.027450980392156862`]],
 ShowCellBracket->False],

Cell[BoxData[
 PaneBox[GridBox[{
    {" ", 
     StyleBox[
      RowBox[{"Expected", " ", 
       RowBox[{"output", ":"}]}],
      Editable->False,
      Selectable->False,
      StripOnInput->False,
      FontColor->RGBColor[0.45, 0.45, 0.45]], " "},
    {" ", 
     InterpretationBox[Cell[BoxData[
       RowBox[{"{", 
        RowBox[{
        "11", ",", "12", ",", "13", ",", "14", ",", "15", ",", "16", ",", 
         "17", ",", "18", ",", "19", ",", "20"}], "}"}]], "ExerciseOutput"],
      Apply[TextCell, 
       Cell[
        BoxData[
         RowBox[{"{", 
           
           RowBox[{"11", ",", "12", ",", "13", ",", "14", ",", "15", ",", 
             "16", ",", "17", ",", "18", ",", "19", ",", "20"}], "}"}]], 
        "ExerciseOutput", Selectable -> False, Copyable -> False, Editable -> 
        False, ShowCellBracket -> False]]], " "}
   },
   GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Center}}},
   GridBoxBackground->{"Columns" -> {{
        RGBColor[1, 1, 1]}}},
   GridBoxSpacings->{"Columns" -> {{Automatic}}, "Rows" -> {{1}}}],
  FrameMargins->0]], "ExerciseOutput",
 Editable->False,
 Selectable->False,
 Deletable->False,
 CellFrame->{{1, 1}, {1, 1}},
 ShowCellBracket->False,
 CellFrameColor->RGBColor[0.85, 0.85, 0.85],
 LineBreakWithin->Automatic]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 "Cree una lista de los 10 primeros m\[UAcute]ltiplos de 3.",
 StyleBox[ButtonBox["\[NonBreakingSpace]\[RightGuillemet]",
  Appearance->None,
  Evaluator->Automatic,
  Method->"Preemptive",
  ButtonFunction:>(SelectionMove[
     ButtonNotebook[], All, ButtonCell, AutoScroll -> False]; 
   FrontEndExecute[
     FrontEndToken[
      ButtonNotebook[], "OpenCloseGroup"]])],
  FontColor->RGBColor[1, 0.501961, 0]]
}], "Exercise",
 Editable->False,
 Selectable->False,
 Deletable->False,
 CellDingbat->Cell[
  "+5.1", "ExerciseNumber", FontColor -> 
   RGBColor[0.9019607843137255, 0.4117647058823529, 0.027450980392156862`]],
 ShowCellBracket->False],

Cell[BoxData[
 PaneBox[GridBox[{
    {" ", 
     StyleBox[
      RowBox[{"Expected", " ", 
       RowBox[{"output", ":"}]}],
      Editable->False,
      Selectable->False,
      StripOnInput->False,
      FontColor->RGBColor[0.45, 0.45, 0.45]], " "},
    {" ", 
     InterpretationBox[Cell[BoxData[
       RowBox[{"{", 
        RowBox[{
        "3", ",", "6", ",", "9", ",", "12", ",", "15", ",", "18", ",", "21", 
         ",", "24", ",", "27", ",", "30"}], "}"}]], "ExerciseOutput"],
      Apply[TextCell, 
       Cell[
        BoxData[
         RowBox[{"{", 
           
           RowBox[{"3", ",", "6", ",", "9", ",", "12", ",", "15", ",", "18", 
             ",", "21", ",", "24", ",", "27", ",", "30"}], "}"}]], 
        "ExerciseOutput", Selectable -> False, Copyable -> False, Editable -> 
        False, ShowCellBracket -> False]]], " "}
   },
   GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Center}}},
   GridBoxBackground->{"Columns" -> {{
        RGBColor[1, 1, 1]}}},
   GridBoxSpacings->{"Columns" -> {{Automatic}}, "Rows" -> {{1}}}],
  FrameMargins->0]], "ExerciseOutput",
 Editable->False,
 Selectable->False,
 Deletable->False,
 CellFrame->{{1, 1}, {1, 1}},
 ShowCellBracket->False,
 CellFrameColor->RGBColor[0.85, 0.85, 0.85],
 LineBreakWithin->Automatic]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 "Forme la lista de los 10 primeros cuadrados, usando \[UAcute]nicamente ",
 ButtonBox["Range",
  BaseStyle->"Link"],
 " y ",
 ButtonBox["Times",
  BaseStyle->"Link"],
 ".",
 StyleBox[ButtonBox["\[NonBreakingSpace]\[RightGuillemet]",
  Appearance->None,
  Evaluator->Automatic,
  Method->"Preemptive",
  ButtonFunction:>(SelectionMove[
     ButtonNotebook[], All, ButtonCell, AutoScroll -> False]; 
   FrontEndExecute[
     FrontEndToken[
      ButtonNotebook[], "OpenCloseGroup"]])],
  FontColor->RGBColor[1, 0.501961, 0]]
}], "Exercise",
 Editable->False,
 Selectable->False,
 Deletable->False,
 CellDingbat->Cell[
  "+5.2", "ExerciseNumber", FontColor -> 
   RGBColor[0.9019607843137255, 0.4117647058823529, 0.027450980392156862`]],
 ShowCellBracket->False],

Cell[BoxData[
 PaneBox[GridBox[{
    {" ", 
     StyleBox[
      RowBox[{"Expected", " ", 
       RowBox[{"output", ":"}]}],
      Editable->False,
      Selectable->False,
      StripOnInput->False,
      FontColor->RGBColor[0.45, 0.45, 0.45]], " "},
    {" ", 
     InterpretationBox[Cell[BoxData[
       RowBox[{"{", 
        RowBox[{
        "1", ",", "4", ",", "9", ",", "16", ",", "25", ",", "36", ",", "49", 
         ",", "64", ",", "81", ",", "100"}], "}"}]], "ExerciseOutput"],
      Apply[TextCell, 
       Cell[
        BoxData[
         RowBox[{"{", 
           
           RowBox[{"1", ",", "4", ",", "9", ",", "16", ",", "25", ",", "36", 
             ",", "49", ",", "64", ",", "81", ",", "100"}], "}"}]], 
        "ExerciseOutput", Selectable -> False, Copyable -> False, Editable -> 
        False, ShowCellBracket -> False]]], " "}
   },
   GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Center}}},
   GridBoxBackground->{"Columns" -> {{
        RGBColor[1, 1, 1]}}},
   GridBoxSpacings->{"Columns" -> {{Automatic}}, "Rows" -> {{1}}}],
  FrameMargins->0]], "ExerciseOutput",
 Editable->False,
 Selectable->False,
 Deletable->False,
 CellFrame->{{1, 1}, {1, 1}},
 ShowCellBracket->False,
 CellFrameColor->RGBColor[0.85, 0.85, 0.85],
 LineBreakWithin->Automatic]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 "Encuentre el \[UAcute]ltimo d\[IAcute]gito de 2^37.",
 StyleBox[ButtonBox["\[NonBreakingSpace]\[RightGuillemet]",
  Appearance->None,
  Evaluator->Automatic,
  Method->"Preemptive",
  ButtonFunction:>(SelectionMove[
     ButtonNotebook[], All, ButtonCell, AutoScroll -> False]; 
   FrontEndExecute[
     FrontEndToken[
      ButtonNotebook[], "OpenCloseGroup"]])],
  FontColor->RGBColor[1, 0.501961, 0]]
}], "Exercise",
 Editable->False,
 Selectable->False,
 Deletable->False,
 CellDingbat->Cell[
  "+5.3", "ExerciseNumber", FontColor -> 
   RGBColor[0.9019607843137255, 0.4117647058823529, 0.027450980392156862`]],
 ShowCellBracket->False],

Cell[BoxData[
 PaneBox[GridBox[{
    {" ", 
     StyleBox[
      RowBox[{"Expected", " ", 
       RowBox[{"output", ":"}]}],
      Editable->False,
      Selectable->False,
      StripOnInput->False,
      FontColor->RGBColor[0.45, 0.45, 0.45]], " "},
    {" ", 
     InterpretationBox[Cell[BoxData["2"], "ExerciseOutput"],
      Apply[TextCell, 
       Cell[
        BoxData["2"], "ExerciseOutput", Selectable -> False, Copyable -> 
        False, Editable -> False, ShowCellBracket -> False]]], " "}
   },
   GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Center}}},
   GridBoxBackground->{"Columns" -> {{
        RGBColor[1, 1, 1]}}},
   GridBoxSpacings->{"Columns" -> {{Automatic}}, "Rows" -> {{1}}}],
  FrameMargins->0]], "ExerciseOutput",
 Editable->False,
 Selectable->False,
 Deletable->False,
 CellFrame->{{1, 1}, {1, 1}},
 ShowCellBracket->False,
 CellFrameColor->RGBColor[0.85, 0.85, 0.85],
 LineBreakWithin->Automatic]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 "Encuentre el pen\[UAcute]ltimo d\[IAcute]gito de 2^32.",
 StyleBox[ButtonBox["\[NonBreakingSpace]\[RightGuillemet]",
  Appearance->None,
  Evaluator->Automatic,
  Method->"Preemptive",
  ButtonFunction:>(SelectionMove[
     ButtonNotebook[], All, ButtonCell, AutoScroll -> False]; 
   FrontEndExecute[
     FrontEndToken[
      ButtonNotebook[], "OpenCloseGroup"]])],
  FontColor->RGBColor[1, 0.501961, 0]]
}], "Exercise",
 Editable->False,
 Selectable->False,
 Deletable->False,
 CellDingbat->Cell[
  "+5.4", "ExerciseNumber", FontColor -> 
   RGBColor[0.9019607843137255, 0.4117647058823529, 0.027450980392156862`]],
 ShowCellBracket->False],

Cell[BoxData[
 PaneBox[GridBox[{
    {" ", 
     StyleBox[
      RowBox[{"Expected", " ", 
       RowBox[{"output", ":"}]}],
      Editable->False,
      Selectable->False,
      StripOnInput->False,
      FontColor->RGBColor[0.45, 0.45, 0.45]], " "},
    {" ", 
     InterpretationBox[Cell[BoxData["9"], "ExerciseOutput"],
      Apply[TextCell, 
       Cell[
        BoxData["9"], "ExerciseOutput", Selectable -> False, Copyable -> 
        False, Editable -> False, ShowCellBracket -> False]]], " "}
   },
   GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Center}}},
   GridBoxBackground->{"Columns" -> {{
        RGBColor[1, 1, 1]}}},
   GridBoxSpacings->{"Columns" -> {{Automatic}}, "Rows" -> {{1}}}],
  FrameMargins->0]], "ExerciseOutput",
 Editable->False,
 Selectable->False,
 Deletable->False,
 CellFrame->{{1, 1}, {1, 1}},
 ShowCellBracket->False,
 CellFrameColor->RGBColor[0.85, 0.85, 0.85],
 LineBreakWithin->Automatic]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 "Encuentre la suma de todos los d\[IAcute]gitos en 3^126.",
 StyleBox[ButtonBox["\[NonBreakingSpace]\[RightGuillemet]",
  Appearance->None,
  Evaluator->Automatic,
  Method->"Preemptive",
  ButtonFunction:>(SelectionMove[
     ButtonNotebook[], All, ButtonCell, AutoScroll -> False]; 
   FrontEndExecute[
     FrontEndToken[
      ButtonNotebook[], "OpenCloseGroup"]])],
  FontColor->RGBColor[1, 0.501961, 0]]
}], "Exercise",
 Editable->False,
 Selectable->False,
 Deletable->False,
 CellDingbat->Cell[
  "+5.5", "ExerciseNumber", FontColor -> 
   RGBColor[0.9019607843137255, 0.4117647058823529, 0.027450980392156862`]],
 ShowCellBracket->False],

Cell[BoxData[
 PaneBox[GridBox[{
    {" ", 
     StyleBox[
      RowBox[{"Expected", " ", 
       RowBox[{"output", ":"}]}],
      Editable->False,
      Selectable->False,
      StripOnInput->False,
      FontColor->RGBColor[0.45, 0.45, 0.45]], " "},
    {" ", 
     InterpretationBox[Cell[BoxData["234"], "ExerciseOutput"],
      Apply[TextCell, 
       Cell[
        BoxData["234"], "ExerciseOutput", Selectable -> False, Copyable -> 
        False, Editable -> False, ShowCellBracket -> False]]], " "}
   },
   GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Center}}},
   GridBoxBackground->{"Columns" -> {{
        RGBColor[1, 1, 1]}}},
   GridBoxSpacings->{"Columns" -> {{Automatic}}, "Rows" -> {{1}}}],
  FrameMargins->0]], "ExerciseOutput",
 Editable->False,
 Selectable->False,
 Deletable->False,
 CellFrame->{{1, 1}, {1, 1}},
 ShowCellBracket->False,
 CellFrameColor->RGBColor[0.85, 0.85, 0.85],
 LineBreakWithin->Automatic]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 "Construya el diagrama circular de la secuencia de los d\[IAcute]gitos que \
aparecen en 2^32.",
 StyleBox[ButtonBox["\[NonBreakingSpace]\[RightGuillemet]",
  Appearance->None,
  Evaluator->Automatic,
  Method->"Preemptive",
  ButtonFunction:>(SelectionMove[
     ButtonNotebook[], All, ButtonCell, AutoScroll -> False]; 
   FrontEndExecute[
     FrontEndToken[
      ButtonNotebook[], "OpenCloseGroup"]])],
  FontColor->RGBColor[1, 0.501961, 0]]
}], "Exercise",
 Editable->False,
 Selectable->False,
 Deletable->False,
 CellDingbat->Cell[
  "+5.6", "ExerciseNumber", FontColor -> 
   RGBColor[0.9019607843137255, 0.4117647058823529, 0.027450980392156862`]],
 ShowCellBracket->False],

Cell[BoxData[
 PaneBox[GridBox[{
    {" ", 
     StyleBox[
      RowBox[{"Expected", " ", 
       RowBox[{"output", ":"}]}],
      Editable->False,
      Selectable->False,
      StripOnInput->False,
      FontColor->RGBColor[0.45, 0.45, 0.45]], " "},
    {" ", 
     InterpretationBox[Cell[BoxData[
       GraphicsBox[{{}, {}, 
         DynamicModuleBox[{DynamicChart`click$34454$34514 = False, 
          DynamicChart`click$34457$34514 = False, 
          DynamicChart`click$34460$34514 = False, 
          DynamicChart`click$34463$34514 = False, 
          DynamicChart`click$34466$34514 = False, 
          DynamicChart`click$34469$34514 = False, 
          DynamicChart`click$34472$34514 = False, 
          DynamicChart`click$34475$34514 = False, 
          DynamicChart`click$34478$34514 = False, 
          DynamicChart`click$34481$34514 = False}, {
           {RGBColor[0.5, 0.5, 1.], EdgeForm[{GrayLevel[0], Opacity[
            0.5]}], {{{}, {
               {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{GrayLevel[
                0], Opacity[0.5]}], GeometricTransformationBox[
                 TagBox[
                  TagBox[
                   TooltipBox[
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 1., {2.708269528956718, 
                    3.141592653589793}]},
                    
                    ImageSizeCache->{{22.585786437626904`, 
                    121.41421356237309`}, {-44.72356731215852, \
-1.5857864376269042`}}],
                    StatusArea[#, 4]& ,
                    TagBoxNote->"4"],
                    StyleBox["4", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]],
                   Annotation[#, 
                    Style[4, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ],
                  EventHandlerTag[{
                   "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$34454$34514, 
                    FEPrivate`Not[DynamicChart`click$34454$34514]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], Dynamic[
                 If[DynamicChart`click$34454$34514, {{{1., 0}, {
                    0, 1.}}, {-0.19532411114201734`, 0.04299408804220486}}, {{
                   1, 0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                  TrackedSymbols :> {DynamicChart`click$34454$34514}]]}, 
               {RGBColor[0.99048, 0.6546373333333334, 0.2701484444444444], 
                EdgeForm[{GrayLevel[0], Opacity[0.5]}], 
                GeometricTransformationBox[
                 TagBox[
                  TagBox[
                   TooltipBox[
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 1., {2.491607966640181, 
                    2.708269528956718}]},
                    
                    ImageSizeCache->{{31.45854614921505, 
                    121.41421356237309`}, {-62.51093822097455, \
-1.5857864376269042`}}],
                    StatusArea[#, 2]& ,
                    TagBoxNote->"2"],
                    StyleBox["2", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]],
                   Annotation[#, 
                    Style[2, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ],
                  
                  EventHandlerTag[{
                   "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$34457$34514, 
                    FEPrivate`Not[DynamicChart`click$34457$34514]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], Dynamic[
                 If[DynamicChart`click$34457$34514, {{{1., 0}, {
                    0, 1.}}, {-0.17137143523351786`, 
                    0.10311077143540433`}}, {{1, 0}, {0, 1}}, {{1, 0}, {0, 
                   1}}], 
                  TrackedSymbols :> {DynamicChart`click$34457$34514}]]}, 
               {RGBColor[0.998096, 0.5661274666666667, 0.2140296888888889], 
                EdgeForm[{GrayLevel[0], Opacity[0.5]}], 
                GeometricTransformationBox[
                 TagBox[
                  TagBox[
                   TooltipBox[
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 1., {1.5166309362157622`, 
                    2.491607966640181}]},
                    
                    ImageSizeCache->{{42.1608521298851, 
                    126.61154878657318`}, {-100.41421356237309`, \
-1.5857864376269104`}}],
                    StatusArea[#, 9]& ,
                    TagBoxNote->"9"],
                    StyleBox["9", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]],
                   Annotation[#, 
                    Style[9, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ],
                  
                  EventHandlerTag[{
                   "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$34460$34514, 
                    FEPrivate`Not[DynamicChart`click$34460$34514]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], Dynamic[
                 If[DynamicChart`click$34460$34514, {{{1., 0}, {
                    0, 1.}}, {-0.08397782031205293, 0.1815150839341914}}, {{1,
                    0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                  TrackedSymbols :> {DynamicChart`click$34460$34514}]]}, 
               {RGBColor[0.928, 0.5210666666666667, 0.2], EdgeForm[{GrayLevel[
                0], Opacity[0.5]}], GeometricTransformationBox[
                 TagBox[
                  TagBox[
                   TooltipBox[
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 1., {1.0833078115826873`, 
                    1.5166309362157622`}]},
                    
                    ImageSizeCache->{{118.5857864376269, 
                    166.38142386955298`}, {-100.273421292081, \
-1.5857864376268935`}}],
                    StatusArea[#, 4]& ,
                    TagBoxNote->"4"],
                    StyleBox["4", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]],
                   Annotation[#, 
                    Style[4, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ],
                  
                  EventHandlerTag[{
                   "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$34463$34514, 
                    FEPrivate`Not[DynamicChart`click$34463$34514]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], Dynamic[
                 If[DynamicChart`click$34463$34514, {{{1., 0}, {0, 1.}}, {
                    0.053505667705844154`, 0.19270999850384463`}}, {{1, 0}, {
                   0, 1}}, {{1, 0}, {0, 1}}], 
                  TrackedSymbols :> {DynamicChart`click$34463$34514}]]}, 
               {RGBColor[0.8320000000000001, 0.49048888888888886`, 0.2], 
                EdgeForm[{GrayLevel[0], Opacity[0.5]}], 
                GeometricTransformationBox[
                 TagBox[
                  TagBox[
                   TooltipBox[
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 1., {0.10833078115826877`, 
                    1.0833078115826873`}]},
                    
                    ImageSizeCache->{{118.5857864376269, 216.85145744919163`},
                     {-89.23136982919131, -1.5857864376268935`}}],
                    StatusArea[#, 9]& ,
                    TagBoxNote->"9"],
                    StyleBox["9", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]],
                   Annotation[#, 
                    Style[9, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ],
                  
                  EventHandlerTag[{
                   "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$34466$34514, 
                    FEPrivate`Not[DynamicChart`click$34466$34514]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], Dynamic[
                 If[DynamicChart`click$34466$34514, {{{1., 0}, {0, 1.}}, {
                    0.16553779963137813`, 0.11223741307247648`}}, {{1, 0}, {0,
                    1}}, {{1, 0}, {0, 1}}], 
                  TrackedSymbols :> {DynamicChart`click$34466$34514}]]}, 
               {RGBColor[
                0.7598801777777778, 0.4773333333333333, 0.3161064888888889], 
                EdgeForm[{GrayLevel[0], Opacity[0.5]}], 
                GeometricTransformationBox[
                 TagBox[
                  TagBox[
                   TooltipBox[
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 1., {-0.5416539057913434, 
                    0.10833078115826877`}]},
                    
                    ImageSizeCache->{{118.5857864376269, 
                    217.4142135623731}, {-14.793639331071518`, 
                    47.90738385136717}}],
                    StatusArea[#, 6]& ,
                    TagBoxNote->"6"],
                    StyleBox["6", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]],
                   Annotation[#, 
                    Style[6, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ],
                  
                  EventHandlerTag[{
                   "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$34469$34514, 
                    FEPrivate`Not[DynamicChart`click$34469$34514]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], Dynamic[
                 If[DynamicChart`click$34469$34514, {{{1., 0}, {0, 1.}}, {
                    0.19532411114201736`, -0.04299408804220479}}, {{1, 0}, {0,
                    1}}, {{1, 0}, {0, 1}}], 
                  TrackedSymbols :> {DynamicChart`click$34469$34514}]]}, 
               {RGBColor[0.7116405333333333, 0.4816, 0.5483194666666666], 
                EdgeForm[{GrayLevel[0], Opacity[0.5]}], 
                GeometricTransformationBox[
                 TagBox[
                  TagBox[
                   TooltipBox[
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 
                    1., {-1.2999693738992244`, -0.5416539057913434}]},
                    
                    ImageSizeCache->{{118.5857864376269, 
                    203.67250247446168`}, {-4.4142135623731065`, 
                    90.9150128442185}}],
                    StatusArea[#, 7]& ,
                    TagBoxNote->"7"],
                    StyleBox["7", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]],
                   Annotation[#, 
                    Style[7, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ],
                  
                  EventHandlerTag[{
                   "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$34472$34514, 
                    FEPrivate`Not[DynamicChart`click$34472$34514]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], Dynamic[
                 If[DynamicChart`click$34472$34514, {{{1., 0}, {0, 1.}}, {
                    0.1210348430387531, -0.15921861314112873`}}, {{1, 0}, {0, 
                   1}}, {{1, 0}, {0, 1}}], 
                  TrackedSymbols :> {DynamicChart`click$34472$34514}]]}, 
               {RGBColor[
                0.6558762666666667, 0.4926222222222222, 0.7345293333333333], 
                EdgeForm[{GrayLevel[0], Opacity[0.5]}], 
                GeometricTransformationBox[
                 TagBox[
                  TagBox[
                   TooltipBox[
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 
                    1., {-1.5166309362157628`, -1.2999693738992244`}]},
                    
                    ImageSizeCache->{{118.5857864376269, 
                    147.09693406117833`}, {-4.4142135623731065`, 
                    94.273421292081}}],
                    StatusArea[#, 2]& ,
                    TagBoxNote->"2"],
                    StyleBox["2", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]],
                   Annotation[#, 
                    Style[2, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ],
                  
                  EventHandlerTag[{
                   "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$34475$34514, 
                    FEPrivate`Not[DynamicChart`click$34475$34514]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], Dynamic[
                 If[DynamicChart`click$34475$34514, {{{1., 0}, {0, 1.}}, {
                    0.032356399310552925`, -0.19736530450830525`}}, {{1, 0}, {
                   0, 1}}, {{1, 0}, {0, 1}}], 
                  TrackedSymbols :> {DynamicChart`click$34475$34514}]]}, 
               {RGBColor[
                0.5775381333333334, 0.5239111111111111, 0.7827298666666667], 
                EdgeForm[{GrayLevel[0], Opacity[0.5]}], 
                GeometricTransformationBox[
                 TagBox[
                  TagBox[
                   TooltipBox[
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 
                    1., {-2.4916079666401805`, -1.5166309362157628`}]},
                    
                    ImageSizeCache->{{42.16085212988513, 
                    126.61154878657312`}, {-4.414213562373092, 
                    94.41421356237309}}],
                    StatusArea[#, 9]& ,
                    TagBoxNote->"9"],
                    StyleBox["9", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]],
                   Annotation[#, 
                    Style[9, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ],
                  
                  EventHandlerTag[{
                   "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$34478$34514, 
                    FEPrivate`Not[DynamicChart`click$34478$34514]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], Dynamic[
                 If[DynamicChart`click$34478$34514, {{{1., 0}, {
                    0, 1.}}, {-0.08397782031205293, -0.1815150839341914}}, {{
                   1, 0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                  TrackedSymbols :> {DynamicChart`click$34478$34514}]]}, 
               {RGBColor[0.4992, 0.5552, 0.8309304], EdgeForm[{GrayLevel[0], 
                Opacity[0.5]}], GeometricTransformationBox[
                 TagBox[
                  TagBox[
                   TooltipBox[
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    DiskBox[{0, 0}, 
                    1., {-3.141592653589793, -2.4916079666401805`}]},
                    
                    ImageSizeCache->{{22.585786437626904`, 
                    121.41421356237309`}, {-4.4142135623731065`, 
                    56.51093822097458}}],
                    StatusArea[#, 6]& ,
                    TagBoxNote->"6"],
                    StyleBox["6", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]],
                   Annotation[#, 
                    Style[6, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ],
                  
                  EventHandlerTag[{
                   "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$34481$34514, 
                    FEPrivate`Not[DynamicChart`click$34481$34514]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], Dynamic[
                 If[DynamicChart`click$34481$34514, {{{1., 0}, {
                    0, 1.}}, {-0.18953063423656047`, -0.06386030602719604}}, \
{{1, 0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                  TrackedSymbols :> {
                   DynamicChart`click$34481$34514}]]}}}, {}}, {}}, {{{
              GeometricTransformationBox[
               TagBox[
                TagBox[
                 TooltipBox[
                  TagBox[{{}, {}},
                   StatusArea[#, 4]& ,
                   TagBoxNote->"4"],
                  StyleBox["4", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                   False]],
                 Annotation[#, 
                  Style[4, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ],
                
                EventHandlerTag[{
                 "MouseClicked" :> 
                  FEPrivate`Set[DynamicChart`click$34454$34514, 
                    FEPrivate`Not[DynamicChart`click$34454$34514]], 
                  PassEventsDown -> True, Method -> "Preemptive", 
                  PassEventsUp -> True}]], Dynamic[
               If[DynamicChart`click$34454$34514, {{{1., 0}, {
                   0, 1.}}, {-0.19532411114201734`, 0.04299408804220486}}, {{
                 1, 0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                TrackedSymbols :> {DynamicChart`click$34454$34514}]], 
              GeometricTransformationBox[
               TagBox[
                TagBox[
                 TooltipBox[
                  TagBox[{{}, {}},
                   StatusArea[#, 2]& ,
                   TagBoxNote->"2"],
                  StyleBox["2", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                   False]],
                 Annotation[#, 
                  Style[2, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ],
                
                EventHandlerTag[{
                 "MouseClicked" :> 
                  FEPrivate`Set[DynamicChart`click$34457$34514, 
                    FEPrivate`Not[DynamicChart`click$34457$34514]], 
                  PassEventsDown -> True, Method -> "Preemptive", 
                  PassEventsUp -> True}]], Dynamic[
               If[DynamicChart`click$34457$34514, {{{1., 0}, {
                   0, 1.}}, {-0.17137143523351786`, 0.10311077143540433`}}, {{
                 1, 0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                TrackedSymbols :> {DynamicChart`click$34457$34514}]], 
              GeometricTransformationBox[
               TagBox[
                TagBox[
                 TooltipBox[
                  TagBox[{{}, {}},
                   StatusArea[#, 9]& ,
                   TagBoxNote->"9"],
                  StyleBox["9", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                   False]],
                 Annotation[#, 
                  Style[9, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ],
                
                EventHandlerTag[{
                 "MouseClicked" :> 
                  FEPrivate`Set[DynamicChart`click$34460$34514, 
                    FEPrivate`Not[DynamicChart`click$34460$34514]], 
                  PassEventsDown -> True, Method -> "Preemptive", 
                  PassEventsUp -> True}]], Dynamic[
               If[DynamicChart`click$34460$34514, {{{1., 0}, {
                   0, 1.}}, {-0.08397782031205293, 0.1815150839341914}}, {{1, 
                 0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                TrackedSymbols :> {DynamicChart`click$34460$34514}]], 
              GeometricTransformationBox[
               TagBox[
                TagBox[
                 TooltipBox[
                  TagBox[{{}, {}},
                   StatusArea[#, 4]& ,
                   TagBoxNote->"4"],
                  StyleBox["4", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                   False]],
                 Annotation[#, 
                  Style[4, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ],
                
                EventHandlerTag[{
                 "MouseClicked" :> 
                  FEPrivate`Set[DynamicChart`click$34463$34514, 
                    FEPrivate`Not[DynamicChart`click$34463$34514]], 
                  PassEventsDown -> True, Method -> "Preemptive", 
                  PassEventsUp -> True}]], Dynamic[
               If[DynamicChart`click$34463$34514, {{{1., 0}, {0, 1.}}, {
                  0.053505667705844154`, 0.19270999850384463`}}, {{1, 0}, {0, 
                 1}}, {{1, 0}, {0, 1}}], 
                TrackedSymbols :> {DynamicChart`click$34463$34514}]], 
              GeometricTransformationBox[
               TagBox[
                TagBox[
                 TooltipBox[
                  TagBox[{{}, {}},
                   StatusArea[#, 9]& ,
                   TagBoxNote->"9"],
                  StyleBox["9", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                   False]],
                 Annotation[#, 
                  Style[9, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ],
                
                EventHandlerTag[{
                 "MouseClicked" :> 
                  FEPrivate`Set[DynamicChart`click$34466$34514, 
                    FEPrivate`Not[DynamicChart`click$34466$34514]], 
                  PassEventsDown -> True, Method -> "Preemptive", 
                  PassEventsUp -> True}]], Dynamic[
               If[DynamicChart`click$34466$34514, {{{1., 0}, {0, 1.}}, {
                  0.16553779963137813`, 0.11223741307247648`}}, {{1, 0}, {0, 
                 1}}, {{1, 0}, {0, 1}}], 
                TrackedSymbols :> {DynamicChart`click$34466$34514}]], 
              GeometricTransformationBox[
               TagBox[
                TagBox[
                 TooltipBox[
                  TagBox[{{}, {}},
                   StatusArea[#, 6]& ,
                   TagBoxNote->"6"],
                  StyleBox["6", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                   False]],
                 Annotation[#, 
                  Style[6, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ],
                
                EventHandlerTag[{
                 "MouseClicked" :> 
                  FEPrivate`Set[DynamicChart`click$34469$34514, 
                    FEPrivate`Not[DynamicChart`click$34469$34514]], 
                  PassEventsDown -> True, Method -> "Preemptive", 
                  PassEventsUp -> True}]], Dynamic[
               If[DynamicChart`click$34469$34514, {{{1., 0}, {0, 1.}}, {
                  0.19532411114201736`, -0.04299408804220479}}, {{1, 0}, {0, 
                 1}}, {{1, 0}, {0, 1}}], 
                TrackedSymbols :> {DynamicChart`click$34469$34514}]], 
              GeometricTransformationBox[
               TagBox[
                TagBox[
                 TooltipBox[
                  TagBox[{{}, {}},
                   StatusArea[#, 7]& ,
                   TagBoxNote->"7"],
                  StyleBox["7", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                   False]],
                 Annotation[#, 
                  Style[7, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ],
                
                EventHandlerTag[{
                 "MouseClicked" :> 
                  FEPrivate`Set[DynamicChart`click$34472$34514, 
                    FEPrivate`Not[DynamicChart`click$34472$34514]], 
                  PassEventsDown -> True, Method -> "Preemptive", 
                  PassEventsUp -> True}]], Dynamic[
               If[DynamicChart`click$34472$34514, {{{1., 0}, {0, 1.}}, {
                  0.1210348430387531, -0.15921861314112873`}}, {{1, 0}, {0, 
                 1}}, {{1, 0}, {0, 1}}], 
                TrackedSymbols :> {DynamicChart`click$34472$34514}]], 
              GeometricTransformationBox[
               TagBox[
                TagBox[
                 TooltipBox[
                  TagBox[{{}, {}},
                   StatusArea[#, 2]& ,
                   TagBoxNote->"2"],
                  StyleBox["2", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                   False]],
                 Annotation[#, 
                  Style[2, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ],
                
                EventHandlerTag[{
                 "MouseClicked" :> 
                  FEPrivate`Set[DynamicChart`click$34475$34514, 
                    FEPrivate`Not[DynamicChart`click$34475$34514]], 
                  PassEventsDown -> True, Method -> "Preemptive", 
                  PassEventsUp -> True}]], Dynamic[
               If[DynamicChart`click$34475$34514, {{{1., 0}, {0, 1.}}, {
                  0.032356399310552925`, -0.19736530450830525`}}, {{1, 0}, {0,
                  1}}, {{1, 0}, {0, 1}}], 
                TrackedSymbols :> {DynamicChart`click$34475$34514}]], 
              GeometricTransformationBox[
               TagBox[
                TagBox[
                 TooltipBox[
                  TagBox[{{}, {}},
                   StatusArea[#, 9]& ,
                   TagBoxNote->"9"],
                  StyleBox["9", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                   False]],
                 Annotation[#, 
                  Style[9, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ],
                
                EventHandlerTag[{
                 "MouseClicked" :> 
                  FEPrivate`Set[DynamicChart`click$34478$34514, 
                    FEPrivate`Not[DynamicChart`click$34478$34514]], 
                  PassEventsDown -> True, Method -> "Preemptive", 
                  PassEventsUp -> True}]], Dynamic[
               If[DynamicChart`click$34478$34514, {{{1., 0}, {
                   0, 1.}}, {-0.08397782031205293, -0.1815150839341914}}, {{1,
                  0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                TrackedSymbols :> {DynamicChart`click$34478$34514}]], 
              GeometricTransformationBox[
               TagBox[
                TagBox[
                 TooltipBox[
                  TagBox[{{}, {}},
                   StatusArea[#, 6]& ,
                   TagBoxNote->"6"],
                  StyleBox["6", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                   False]],
                 Annotation[#, 
                  Style[6, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ],
                
                EventHandlerTag[{
                 "MouseClicked" :> 
                  FEPrivate`Set[DynamicChart`click$34481$34514, 
                    FEPrivate`Not[DynamicChart`click$34481$34514]], 
                  PassEventsDown -> True, Method -> "Preemptive", 
                  PassEventsUp -> True}]], Dynamic[
               If[DynamicChart`click$34481$34514, {{{1., 0}, {
                   0, 1.}}, {-0.18953063423656047`, -0.06386030602719604}}, {{
                 1, 0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                TrackedSymbols :> {
                 DynamicChart`click$34481$34514}]]}, {}}, {}}},
          DynamicModuleValues:>{}], {{}, {}}, {{{}, {}, {}, {}}, {}}},
        ContentSelectable->False,
        GridLinesStyle->Directive[
          GrayLevel[0.5, 0.4]],
        LabelStyle->{
          GrayLevel[0], FontFamily -> "Arial"},
        PlotRange->{{-1.2, 1.2}, {-1.2, 1.2}},
        PlotRangePadding->Scaled[0.02]]], "ExerciseOutput"],
      Apply[TextCell, 
       Cell[
        BoxData[
         GraphicsBox[{{}, {}, 
           
           DynamicModuleBox[{
            DynamicChart`click$34454$34514 = False, 
             DynamicChart`click$34457$34514 = False, 
             DynamicChart`click$34460$34514 = False, 
             DynamicChart`click$34463$34514 = False, 
             DynamicChart`click$34466$34514 = False, 
             DynamicChart`click$34469$34514 = False, 
             DynamicChart`click$34472$34514 = False, 
             DynamicChart`click$34475$34514 = False, 
             DynamicChart`click$34478$34514 = False, 
             DynamicChart`click$34481$34514 = False}, {{
              RGBColor[0.5, 0.5, 1.], 
              EdgeForm[{
                GrayLevel[0], 
                Opacity[0.5]}], {{{}, {{
                  RGBColor[0.982864, 0.7431472, 0.3262672], 
                  EdgeForm[{
                    GrayLevel[0], 
                    Opacity[0.5]}], 
                  GeometricTransformationBox[
                   TagBox[
                    TagBox[
                    TooltipBox[
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 1., {2.708269528956718, 
                    3.141592653589793}]}, 
                    ImageSizeCache -> {{22.585786437626904`, 
                    121.41421356237309`}, {-44.72356731215852, \
-1.5857864376269042`}}], StatusArea[#, 4]& , TagBoxNote -> "4"], 
                    StyleBox["4", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]], Annotation[#, 
                    Style[4, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$34454$34514, 
                    FEPrivate`Not[DynamicChart`click$34454$34514]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], 
                   Dynamic[
                    If[
                    DynamicChart`click$34454$34514, {{{1., 0}, {
                    0, 1.}}, {-0.19532411114201734`, 0.04299408804220486}}, {{
                    1, 0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                    TrackedSymbols :> {DynamicChart`click$34454$34514}]]}, {
                  RGBColor[0.99048, 0.6546373333333334, 0.2701484444444444], 
                  EdgeForm[{
                    GrayLevel[0], 
                    Opacity[0.5]}], 
                  GeometricTransformationBox[
                   TagBox[
                    TagBox[
                    TooltipBox[
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 1., {2.491607966640181, 
                    2.708269528956718}]}, 
                    ImageSizeCache -> {{31.45854614921505, 
                    121.41421356237309`}, {-62.51093822097455, \
-1.5857864376269042`}}], StatusArea[#, 2]& , TagBoxNote -> "2"], 
                    StyleBox["2", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]], Annotation[#, 
                    Style[2, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$34457$34514, 
                    FEPrivate`Not[DynamicChart`click$34457$34514]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], 
                   Dynamic[
                    If[
                    DynamicChart`click$34457$34514, {{{1., 0}, {
                    0, 1.}}, {-0.17137143523351786`, 
                    0.10311077143540433`}}, {{1, 0}, {0, 1}}, {{1, 0}, {0, 
                    1}}], TrackedSymbols :> {
                    DynamicChart`click$34457$34514}]]}, {
                  RGBColor[0.998096, 0.5661274666666667, 0.2140296888888889], 
                  
                  EdgeForm[{
                    GrayLevel[0], 
                    Opacity[0.5]}], 
                  GeometricTransformationBox[
                   TagBox[
                    TagBox[
                    TooltipBox[
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 1., {1.5166309362157622`, 
                    2.491607966640181}]}, 
                    ImageSizeCache -> {{42.1608521298851, 
                    126.61154878657318`}, {-100.41421356237309`, \
-1.5857864376269104`}}], StatusArea[#, 9]& , TagBoxNote -> "9"], 
                    StyleBox["9", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]], Annotation[#, 
                    Style[9, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$34460$34514, 
                    FEPrivate`Not[DynamicChart`click$34460$34514]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], 
                   Dynamic[
                    If[
                    DynamicChart`click$34460$34514, {{{1., 0}, {
                    0, 1.}}, {-0.08397782031205293, 0.1815150839341914}}, {{1,
                     0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                    TrackedSymbols :> {DynamicChart`click$34460$34514}]]}, {
                  RGBColor[0.928, 0.5210666666666667, 0.2], 
                  EdgeForm[{
                    GrayLevel[0], 
                    Opacity[0.5]}], 
                  GeometricTransformationBox[
                   TagBox[
                    TagBox[
                    TooltipBox[
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 1., {1.0833078115826873`, 
                    1.5166309362157622`}]}, 
                    ImageSizeCache -> {{118.5857864376269, 
                    166.38142386955298`}, {-100.273421292081, \
-1.5857864376268935`}}], StatusArea[#, 4]& , TagBoxNote -> "4"], 
                    StyleBox["4", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]], Annotation[#, 
                    Style[4, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ], 
                    EventHandlerTag[{
                    "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$34463$34514, 
                    FEPrivate`Not[DynamicChart`click$34463$34514]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], 
                   Dynamic[
                    If[
                    DynamicChart`click$34463$34514, {{{1., 0}, {0, 1.}}, {
                    0.053505667705844154`, 0.19270999850384463`}}, {{1, 0}, {
                    0, 1}}, {{1, 0}, {0, 1}}], 
                    TrackedSymbols :> {DynamicChart`click$34463$34514}]]}, {
                  RGBColor[0.8320000000000001, 0.49048888888888886`, 0.2], 
                  EdgeForm[{
                    GrayLevel[0], 
                    Opacity[0.5]}], 
                  GeometricTransformationBox[
                   TagBox[
                    TagBox[
                    TooltipBox[
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 1., {0.10833078115826877`, 
                    1.0833078115826873`}]}, 
                    ImageSizeCache -> {{118.5857864376269, 
                    216.85145744919163`}, {-89.23136982919131, \
-1.5857864376268935`}}], StatusArea[#, 9]& , TagBoxNote -> "9"], 
                    StyleBox["9", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]], Annotation[#, 
                    Style[9, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$34466$34514, 
                    FEPrivate`Not[DynamicChart`click$34466$34514]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], 
                   Dynamic[
                    If[
                    DynamicChart`click$34466$34514, {{{1., 0}, {0, 1.}}, {
                    0.16553779963137813`, 0.11223741307247648`}}, {{1, 0}, {0,
                     1}}, {{1, 0}, {0, 1}}], 
                    TrackedSymbols :> {DynamicChart`click$34466$34514}]]}, {
                  RGBColor[
                  0.7598801777777778, 0.4773333333333333, 0.3161064888888889], 
                  EdgeForm[{
                    GrayLevel[0], 
                    Opacity[0.5]}], 
                  GeometricTransformationBox[
                   TagBox[
                    TagBox[
                    TooltipBox[
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 1., {-0.5416539057913434, 
                    0.10833078115826877`}]}, 
                    ImageSizeCache -> {{118.5857864376269, 
                    217.4142135623731}, {-14.793639331071518`, 
                    47.90738385136717}}], StatusArea[#, 6]& , TagBoxNote -> 
                    "6"], 
                    StyleBox["6", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]], Annotation[#, 
                    Style[6, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$34469$34514, 
                    FEPrivate`Not[DynamicChart`click$34469$34514]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], 
                   Dynamic[
                    If[
                    DynamicChart`click$34469$34514, {{{1., 0}, {0, 1.}}, {
                    0.19532411114201736`, -0.04299408804220479}}, {{1, 0}, {0,
                     1}}, {{1, 0}, {0, 1}}], 
                    TrackedSymbols :> {DynamicChart`click$34469$34514}]]}, {
                  RGBColor[0.7116405333333333, 0.4816, 0.5483194666666666], 
                  EdgeForm[{
                    GrayLevel[0], 
                    Opacity[0.5]}], 
                  GeometricTransformationBox[
                   TagBox[
                    TagBox[
                    TooltipBox[
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 
                    1., {-1.2999693738992244`, -0.5416539057913434}]}, 
                    ImageSizeCache -> {{118.5857864376269, 
                    203.67250247446168`}, {-4.4142135623731065`, 
                    90.9150128442185}}], StatusArea[#, 7]& , TagBoxNote -> 
                    "7"], 
                    StyleBox["7", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]], Annotation[#, 
                    Style[7, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$34472$34514, 
                    FEPrivate`Not[DynamicChart`click$34472$34514]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], 
                   Dynamic[
                    If[
                    DynamicChart`click$34472$34514, {{{1., 0}, {0, 1.}}, {
                    0.1210348430387531, -0.15921861314112873`}}, {{1, 0}, {0, 
                    1}}, {{1, 0}, {0, 1}}], 
                    TrackedSymbols :> {DynamicChart`click$34472$34514}]]}, {
                  RGBColor[
                  0.6558762666666667, 0.4926222222222222, 0.7345293333333333], 
                  EdgeForm[{
                    GrayLevel[0], 
                    Opacity[0.5]}], 
                  GeometricTransformationBox[
                   TagBox[
                    TagBox[
                    TooltipBox[
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 
                    1., {-1.5166309362157628`, -1.2999693738992244`}]}, 
                    ImageSizeCache -> {{118.5857864376269, 
                    147.09693406117833`}, {-4.4142135623731065`, 
                    94.273421292081}}], StatusArea[#, 2]& , TagBoxNote -> 
                    "2"], 
                    StyleBox["2", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]], Annotation[#, 
                    Style[2, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$34475$34514, 
                    FEPrivate`Not[DynamicChart`click$34475$34514]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], 
                   Dynamic[
                    If[
                    DynamicChart`click$34475$34514, {{{1., 0}, {0, 1.}}, {
                    0.032356399310552925`, -0.19736530450830525`}}, {{1, 0}, {
                    0, 1}}, {{1, 0}, {0, 1}}], 
                    TrackedSymbols :> {DynamicChart`click$34475$34514}]]}, {
                  RGBColor[
                  0.5775381333333334, 0.5239111111111111, 0.7827298666666667], 
                  EdgeForm[{
                    GrayLevel[0], 
                    Opacity[0.5]}], 
                  GeometricTransformationBox[
                   TagBox[
                    TagBox[
                    TooltipBox[
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 
                    1., {-2.4916079666401805`, -1.5166309362157628`}]}, 
                    ImageSizeCache -> {{40.74663856751203, 
                    128.02576234894622`}, {-5.828427124746213, 
                    95.82842712474618}}], StatusArea[#, 9]& , TagBoxNote -> 
                    "9"], 
                    StyleBox["9", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]], Annotation[#, 
                    Style[9, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$34478$34514, 
                    FEPrivate`Not[DynamicChart`click$34478$34514]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], 
                   Dynamic[
                    If[
                    DynamicChart`click$34478$34514, {{{1., 0}, {
                    0, 1.}}, {-0.08397782031205293, -0.1815150839341914}}, {{
                    1, 0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                    TrackedSymbols :> {DynamicChart`click$34478$34514}]]}, {
                  RGBColor[0.4992, 0.5552, 0.8309304], 
                  EdgeForm[{
                    GrayLevel[0], 
                    Opacity[0.5]}], 
                  GeometricTransformationBox[
                   TagBox[
                    TagBox[
                    TooltipBox[
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 
                    1., {-3.141592653589793, -2.4916079666401805`}]}, 
                    ImageSizeCache -> {{22.585786437626904`, 
                    121.41421356237309`}, {-4.4142135623731065`, 
                    56.51093822097458}}], StatusArea[#, 6]& , TagBoxNote -> 
                    "6"], 
                    StyleBox["6", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]], Annotation[#, 
                    Style[6, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$34481$34514, 
                    FEPrivate`Not[DynamicChart`click$34481$34514]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], 
                   Dynamic[
                    If[
                    DynamicChart`click$34481$34514, {{{1., 0}, {
                    0, 1.}}, {-0.18953063423656047`, -0.06386030602719604}}, \
{{1, 0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                    TrackedSymbols :> {
                    DynamicChart`click$34481$34514}]]}}}, {}}, {}}, {{{
                GeometricTransformationBox[
                 TagBox[
                  TagBox[
                   TooltipBox[
                    TagBox[{{}, {}}, StatusArea[#, 4]& , TagBoxNote -> "4"], 
                    StyleBox["4", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]], Annotation[#, 
                    Style[4, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ], 
                  
                  EventHandlerTag[{
                   "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$34454$34514, 
                    FEPrivate`Not[DynamicChart`click$34454$34514]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], 
                 Dynamic[
                  If[
                  DynamicChart`click$34454$34514, {{{1., 0}, {
                    0, 1.}}, {-0.19532411114201734`, 0.04299408804220486}}, {{
                   1, 0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                  TrackedSymbols :> {DynamicChart`click$34454$34514}]], 
                GeometricTransformationBox[
                 TagBox[
                  TagBox[
                   TooltipBox[
                    TagBox[{{}, {}}, StatusArea[#, 2]& , TagBoxNote -> "2"], 
                    StyleBox["2", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]], Annotation[#, 
                    Style[2, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ], 
                  
                  EventHandlerTag[{
                   "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$34457$34514, 
                    FEPrivate`Not[DynamicChart`click$34457$34514]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], 
                 Dynamic[
                  If[
                  DynamicChart`click$34457$34514, {{{1., 0}, {
                    0, 1.}}, {-0.17137143523351786`, 
                    0.10311077143540433`}}, {{1, 0}, {0, 1}}, {{1, 0}, {0, 
                   1}}], TrackedSymbols :> {DynamicChart`click$34457$34514}]], 
                GeometricTransformationBox[
                 TagBox[
                  TagBox[
                   TooltipBox[
                    TagBox[{{}, {}}, StatusArea[#, 9]& , TagBoxNote -> "9"], 
                    StyleBox["9", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]], Annotation[#, 
                    Style[9, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ], 
                  
                  EventHandlerTag[{
                   "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$34460$34514, 
                    FEPrivate`Not[DynamicChart`click$34460$34514]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], 
                 Dynamic[
                  If[
                  DynamicChart`click$34460$34514, {{{1., 0}, {
                    0, 1.}}, {-0.08397782031205293, 0.1815150839341914}}, {{1,
                    0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                  TrackedSymbols :> {DynamicChart`click$34460$34514}]], 
                GeometricTransformationBox[
                 TagBox[
                  TagBox[
                   TooltipBox[
                    TagBox[{{}, {}}, StatusArea[#, 4]& , TagBoxNote -> "4"], 
                    StyleBox["4", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]], Annotation[#, 
                    Style[4, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ], 
                  
                  EventHandlerTag[{
                   "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$34463$34514, 
                    FEPrivate`Not[DynamicChart`click$34463$34514]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], 
                 Dynamic[
                  If[
                  DynamicChart`click$34463$34514, {{{1., 0}, {0, 1.}}, {
                    0.053505667705844154`, 0.19270999850384463`}}, {{1, 0}, {
                   0, 1}}, {{1, 0}, {0, 1}}], 
                  TrackedSymbols :> {DynamicChart`click$34463$34514}]], 
                GeometricTransformationBox[
                 TagBox[
                  TagBox[
                   TooltipBox[
                    TagBox[{{}, {}}, StatusArea[#, 9]& , TagBoxNote -> "9"], 
                    StyleBox["9", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]], Annotation[#, 
                    Style[9, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ], 
                  
                  EventHandlerTag[{
                   "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$34466$34514, 
                    FEPrivate`Not[DynamicChart`click$34466$34514]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], 
                 Dynamic[
                  If[
                  DynamicChart`click$34466$34514, {{{1., 0}, {0, 1.}}, {
                    0.16553779963137813`, 0.11223741307247648`}}, {{1, 0}, {0,
                    1}}, {{1, 0}, {0, 1}}], 
                  TrackedSymbols :> {DynamicChart`click$34466$34514}]], 
                GeometricTransformationBox[
                 TagBox[
                  TagBox[
                   TooltipBox[
                    TagBox[{{}, {}}, StatusArea[#, 6]& , TagBoxNote -> "6"], 
                    StyleBox["6", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]], Annotation[#, 
                    Style[6, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ], 
                  
                  EventHandlerTag[{
                   "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$34469$34514, 
                    FEPrivate`Not[DynamicChart`click$34469$34514]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], 
                 Dynamic[
                  If[
                  DynamicChart`click$34469$34514, {{{1., 0}, {0, 1.}}, {
                    0.19532411114201736`, -0.04299408804220479}}, {{1, 0}, {0,
                    1}}, {{1, 0}, {0, 1}}], 
                  TrackedSymbols :> {DynamicChart`click$34469$34514}]], 
                GeometricTransformationBox[
                 TagBox[
                  TagBox[
                   TooltipBox[
                    TagBox[{{}, {}}, StatusArea[#, 7]& , TagBoxNote -> "7"], 
                    StyleBox["7", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]], Annotation[#, 
                    Style[7, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ], 
                  
                  EventHandlerTag[{
                   "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$34472$34514, 
                    FEPrivate`Not[DynamicChart`click$34472$34514]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], 
                 Dynamic[
                  If[
                  DynamicChart`click$34472$34514, {{{1., 0}, {0, 1.}}, {
                    0.1210348430387531, -0.15921861314112873`}}, {{1, 0}, {0, 
                   1}}, {{1, 0}, {0, 1}}], 
                  TrackedSymbols :> {DynamicChart`click$34472$34514}]], 
                GeometricTransformationBox[
                 TagBox[
                  TagBox[
                   TooltipBox[
                    TagBox[{{}, {}}, StatusArea[#, 2]& , TagBoxNote -> "2"], 
                    StyleBox["2", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]], Annotation[#, 
                    Style[2, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ], 
                  
                  EventHandlerTag[{
                   "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$34475$34514, 
                    FEPrivate`Not[DynamicChart`click$34475$34514]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], 
                 Dynamic[
                  If[
                  DynamicChart`click$34475$34514, {{{1., 0}, {0, 1.}}, {
                    0.032356399310552925`, -0.19736530450830525`}}, {{1, 0}, {
                   0, 1}}, {{1, 0}, {0, 1}}], 
                  TrackedSymbols :> {DynamicChart`click$34475$34514}]], 
                GeometricTransformationBox[
                 TagBox[
                  TagBox[
                   TooltipBox[
                    TagBox[{{}, {}}, StatusArea[#, 9]& , TagBoxNote -> "9"], 
                    StyleBox["9", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]], Annotation[#, 
                    Style[9, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ], 
                  
                  EventHandlerTag[{
                   "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$34478$34514, 
                    FEPrivate`Not[DynamicChart`click$34478$34514]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], 
                 Dynamic[
                  If[
                  DynamicChart`click$34478$34514, {{{1., 0}, {
                    0, 1.}}, {-0.08397782031205293, -0.1815150839341914}}, {{
                   1, 0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                  TrackedSymbols :> {DynamicChart`click$34478$34514}]], 
                GeometricTransformationBox[
                 TagBox[
                  TagBox[
                   TooltipBox[
                    TagBox[{{}, {}}, StatusArea[#, 6]& , TagBoxNote -> "6"], 
                    StyleBox["6", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]], Annotation[#, 
                    Style[6, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ], 
                  
                  EventHandlerTag[{
                   "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$34481$34514, 
                    FEPrivate`Not[DynamicChart`click$34481$34514]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], 
                 Dynamic[
                  If[
                  DynamicChart`click$34481$34514, {{{1., 0}, {
                    0, 1.}}, {-0.18953063423656047`, -0.06386030602719604}}, \
{{1, 0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                  TrackedSymbols :> {
                   DynamicChart`click$34481$34514}]]}, {}}, {}}}, 
            DynamicModuleValues :> {}], {{}, {}}, {{{}, {}, {}, {}}, {}}}, 
          ContentSelectable -> False, GridLinesStyle -> Directive[
            GrayLevel[0.5, 0.4]], LabelStyle -> {
            GrayLevel[0], FontFamily -> "Arial"}, 
          PlotRange -> {{-1.2, 1.2}, {-1.2, 1.2}}, PlotRangePadding -> 
          Scaled[0.02]]], "ExerciseOutput", Selectable -> False, Copyable -> 
        False, Editable -> False, ShowCellBracket -> False]]], " "}
   },
   GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Center}}},
   GridBoxBackground->{"Columns" -> {{
        RGBColor[1, 1, 1]}}},
   GridBoxSpacings->{"Columns" -> {{Automatic}}, "Rows" -> {{1}}}],
  FrameMargins->0]], "ExerciseOutput",
 Editable->False,
 Selectable->False,
 Deletable->False,
 CellFrame->{{1, 1}, {1, 1}},
 ShowCellBracket->False,
 CellFrameColor->RGBColor[0.85, 0.85, 0.85],
 LineBreakWithin->Automatic]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 "Haga una lista de diagramas circulares para las secuencias de los \
d\[IAcute]gitos que aparecen en 2^20, 2^40, 2^60.",
 StyleBox[ButtonBox["\[NonBreakingSpace]\[RightGuillemet]",
  Appearance->None,
  Evaluator->Automatic,
  Method->"Preemptive",
  ButtonFunction:>(SelectionMove[
     ButtonNotebook[], All, ButtonCell, AutoScroll -> False]; 
   FrontEndExecute[
     FrontEndToken[
      ButtonNotebook[], "OpenCloseGroup"]])],
  FontColor->RGBColor[1, 0.501961, 0]]
}], "Exercise",
 Editable->False,
 Selectable->False,
 Deletable->False,
 CellDingbat->Cell[
  "+5.7", "ExerciseNumber", FontColor -> 
   RGBColor[0.9019607843137255, 0.4117647058823529, 0.027450980392156862`]],
 ShowCellBracket->False],

Cell[BoxData[
 PaneBox[GridBox[{
    {" ", 
     StyleBox[
      RowBox[{"Expected", " ", 
       RowBox[{"output", ":"}]}],
      Editable->False,
      Selectable->False,
      StripOnInput->False,
      FontColor->RGBColor[0.45, 0.45, 0.45]], " "},
    {" ", 
     InterpretationBox[Cell[BoxData[
       RowBox[{"{", 
        RowBox[{
         GraphicsBox[{{}, {}, 
           
           DynamicModuleBox[{DynamicChart`click$34807$35044 = False, 
            DynamicChart`click$34810$35044 = False, 
            DynamicChart`click$34813$35044 = False, 
            DynamicChart`click$34816$35044 = False, 
            DynamicChart`click$34819$35044 = False, 
            DynamicChart`click$34822$35044 = False}, {
             {RGBColor[0.5, 0.5, 1.], EdgeForm[{GrayLevel[0], Opacity[
              0.5]}], {{{}, {
                 {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{
                  GrayLevel[0], Opacity[0.5]}], GeometricTransformationBox[
                   TagBox[
                    TagBox[
                    TooltipBox[
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    DiskBox[{0, 0}, 1., {2.938909256584, 3.141592653589793}]},
                    
                    
                    ImageSizeCache->{{22.585786437626904`, 
                    121.41421356237309`}, {-23.738871490884467`, \
-1.5857864376269042`}}],
                    StatusArea[#, 1]& ,
                    TagBoxNote->"1"],
                    StyleBox["1", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]],
                    Annotation[#, 
                    Style[1, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ],
                    
                    EventHandlerTag[{
                    "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$34807$35044, 
                    FEPrivate`Not[DynamicChart`click$34807$35044]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], Dynamic[
                   If[DynamicChart`click$34807$35044, {{{1., 0}, {
                    0, 1.}}, {-0.19897386467837905`, 0.02023366439748646}}, {{
                    1, 0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                    TrackedSymbols :> {DynamicChart`click$34807$35044}]]}, {}, 
                 {RGBColor[0.928, 0.5210666666666667, 0.2], EdgeForm[{
                  GrayLevel[0], Opacity[0.5]}], GeometricTransformationBox[
                   TagBox[
                    TagBox[
                    TooltipBox[
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 1., {2.1281756685608277`, 
                    2.938909256584}]},
                    
                    ImageSizeCache->{{24.550912077387434`, 
                    121.4142135623731}, {-85.88406228186918, \
-1.585786437626897}}],
                    StatusArea[#, 4]& ,
                    TagBoxNote->"4"],
                    StyleBox["4", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]],
                    Annotation[#, 
                    Style[4, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ],
                    
                    EventHandlerTag[{
                    "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$34810$35044, 
                    FEPrivate`Not[DynamicChart`click$34810$35044]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], Dynamic[
                   If[DynamicChart`click$34810$35044, {{{1., 0}, {
                    0, 1.}}, {-0.16415268824145526`, 
                    0.11425364301895846`}}, {{1, 0}, {0, 1}}, {{1, 0}, {0, 
                    1}}], TrackedSymbols :> {
                    DynamicChart`click$34810$35044}]]}, 
                 {RGBColor[0.784, 0.47519999999999996`, 0.2], EdgeForm[{
                  GrayLevel[0], Opacity[0.5]}], GeometricTransformationBox[
                   TagBox[
                    TagBox[
                    TooltipBox[
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 1., {0.5067084925144831, 
                    2.1281756685608277`}]},
                    
                    ImageSizeCache->{{67.8052414462385, 
                    205.35148871225294`}, {-100.4142135623731, \
-1.5857864376268935`}}],
                    StatusArea[#, 8]& ,
                    TagBoxNote->"8"],
                    StyleBox["8", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]],
                    Annotation[#, 
                    Style[8, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ],
                    
                    EventHandlerTag[{
                    "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$34813$35044, 
                    FEPrivate`Not[DynamicChart`click$34813$35044]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], Dynamic[
                   If[DynamicChart`click$34813$35044, {{{1., 0}, {0, 1.}}, {
                    0.05013050645174408, 0.1936154237732409}}, {{1, 0}, {0, 
                    1}}, {{1, 0}, {0, 1}}], 
                    TrackedSymbols :> {DynamicChart`click$34813$35044}]]}, 
                 {RGBColor[0.7116405333333333, 0.4816, 0.5483194666666666], 
                  EdgeForm[{GrayLevel[0], Opacity[0.5]}], 
                  GeometricTransformationBox[
                   TagBox[
                    TagBox[
                    TooltipBox[
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 1., {-0.5067084925144822, 
                    0.5067084925144831}]},
                    
                    ImageSizeCache->{{118.5857864376269, 
                    217.4142135623731}, {-51.00320196535692, 
                    45.00320196535684}}],
                    StatusArea[#, 5]& ,
                    TagBoxNote->"5"],
                    StyleBox["5", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]],
                    Annotation[#, 
                    Style[5, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ],
                    
                    EventHandlerTag[{
                    "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$34816$35044, 
                    FEPrivate`Not[DynamicChart`click$34816$35044]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], Dynamic[
                   If[DynamicChart`click$34816$35044, {{{1., 0}, {0, 1.}}, {
                    0.2, 8.881784197001253*^-17}}, {{1, 0}, {0, 1}}, {{1, 
                    0}, {0, 1}}], 
                    TrackedSymbols :> {DynamicChart`click$34816$35044}]]}, 
                 {RGBColor[0.6167072, 0.5082666666666666, 0.7586295999999999],
                   EdgeForm[{GrayLevel[0], Opacity[0.5]}], 
                  GeometricTransformationBox[
                   TagBox[
                    TagBox[
                    TooltipBox[
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 
                    1., {-1.9254922715550338`, -0.5067084925144822}]},
                    
                    ImageSizeCache->{{85.24448216452421, 
                    205.351488712253}, {-4.4142135623731065`, 
                    94.4142135623731}}],
                    StatusArea[#, 7]& ,
                    TagBoxNote->"7"],
                    StyleBox["7", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]],
                    Annotation[#, 
                    Style[7, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ],
                    
                    EventHandlerTag[{
                    "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$34819$35044, 
                    FEPrivate`Not[DynamicChart`click$34819$35044]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], Dynamic[
                   If[DynamicChart`click$34819$35044, {{{1., 0}, {0, 1.}}, {
                    0.06946105056896418, -0.18755042642941605`}}, {{1, 0}, {0,
                     1}}, {{1, 0}, {0, 1}}], 
                    TrackedSymbols :> {DynamicChart`click$34819$35044}]]}, 
                 {RGBColor[0.4992, 0.5552, 0.8309304], EdgeForm[{GrayLevel[0],
                   Opacity[0.5]}], GeometricTransformationBox[
                   TagBox[
                    TagBox[
                    TooltipBox[
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 
                    1., {-3.141592653589793, -1.9254922715550338`}]},
                    
                    ImageSizeCache->{{22.585786437626904`, 
                    121.41421356237309`}, {-4.414213562373092, 
                    88.43841824849285}}],
                    StatusArea[#, 6]& ,
                    TagBoxNote->"6"],
                    StyleBox["6", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]],
                    Annotation[#, 
                    Style[6, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ],
                    
                    EventHandlerTag[{
                    "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$34822$35044, 
                    FEPrivate`Not[DynamicChart`click$34822$35044]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], Dynamic[
                   If[DynamicChart`click$34822$35044, {{{1., 0}, {
                    0, 1.}}, {-0.16415268824145524`, -0.11425364301895853`}}, \
{{1, 0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                    TrackedSymbols :> {
                    DynamicChart`click$34822$35044}]]}}}, {}}, {}}, {{{
                GeometricTransformationBox[
                 TagBox[
                  TagBox[
                   TooltipBox[
                    TagBox[{{}, {}},
                    StatusArea[#, 1]& ,
                    TagBoxNote->"1"],
                    StyleBox["1", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]],
                   Annotation[#, 
                    Style[1, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ],
                  
                  EventHandlerTag[{
                   "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$34807$35044, 
                    FEPrivate`Not[DynamicChart`click$34807$35044]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], Dynamic[
                 If[DynamicChart`click$34807$35044, {{{1., 0}, {
                    0, 1.}}, {-0.19897386467837905`, 0.02023366439748646}}, {{
                   1, 0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                  TrackedSymbols :> {DynamicChart`click$34807$35044}]], {}, 
                GeometricTransformationBox[
                 TagBox[
                  TagBox[
                   TooltipBox[
                    TagBox[{{}, {}},
                    StatusArea[#, 4]& ,
                    TagBoxNote->"4"],
                    StyleBox["4", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]],
                   Annotation[#, 
                    Style[4, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ],
                  EventHandlerTag[{
                   "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$34810$35044, 
                    FEPrivate`Not[DynamicChart`click$34810$35044]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], Dynamic[
                 If[DynamicChart`click$34810$35044, {{{1., 0}, {
                    0, 1.}}, {-0.16415268824145526`, 
                    0.11425364301895846`}}, {{1, 0}, {0, 1}}, {{1, 0}, {0, 
                   1}}], TrackedSymbols :> {DynamicChart`click$34810$35044}]],
                 GeometricTransformationBox[
                 TagBox[
                  TagBox[
                   TooltipBox[
                    TagBox[{{}, {}},
                    StatusArea[#, 8]& ,
                    TagBoxNote->"8"],
                    StyleBox["8", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]],
                   Annotation[#, 
                    Style[8, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ],
                  
                  EventHandlerTag[{
                   "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$34813$35044, 
                    FEPrivate`Not[DynamicChart`click$34813$35044]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], Dynamic[
                 If[DynamicChart`click$34813$35044, {{{1., 0}, {0, 1.}}, {
                    0.05013050645174408, 0.1936154237732409}}, {{1, 0}, {0, 
                   1}}, {{1, 0}, {0, 1}}], 
                  TrackedSymbols :> {DynamicChart`click$34813$35044}]], 
                GeometricTransformationBox[
                 TagBox[
                  TagBox[
                   TooltipBox[
                    TagBox[{{}, {}},
                    StatusArea[#, 5]& ,
                    TagBoxNote->"5"],
                    StyleBox["5", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]],
                   Annotation[#, 
                    Style[5, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ],
                  EventHandlerTag[{
                   "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$34816$35044, 
                    FEPrivate`Not[DynamicChart`click$34816$35044]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], Dynamic[
                 If[DynamicChart`click$34816$35044, {{{1., 0}, {0, 1.}}, {0.2,
                     8.881784197001253*^-17}}, {{1, 0}, {0, 1}}, {{1, 0}, {0, 
                   1}}], TrackedSymbols :> {DynamicChart`click$34816$35044}]],
                 GeometricTransformationBox[
                 TagBox[
                  TagBox[
                   TooltipBox[
                    TagBox[{{}, {}},
                    StatusArea[#, 7]& ,
                    TagBoxNote->"7"],
                    StyleBox["7", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]],
                   Annotation[#, 
                    Style[7, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ],
                  
                  EventHandlerTag[{
                   "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$34819$35044, 
                    FEPrivate`Not[DynamicChart`click$34819$35044]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], Dynamic[
                 If[DynamicChart`click$34819$35044, {{{1., 0}, {0, 1.}}, {
                    0.06946105056896418, -0.18755042642941605`}}, {{1, 0}, {0,
                    1}}, {{1, 0}, {0, 1}}], 
                  TrackedSymbols :> {DynamicChart`click$34819$35044}]], 
                GeometricTransformationBox[
                 TagBox[
                  TagBox[
                   TooltipBox[
                    TagBox[{{}, {}},
                    StatusArea[#, 6]& ,
                    TagBoxNote->"6"],
                    StyleBox["6", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]],
                   Annotation[#, 
                    Style[6, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ],
                  
                  EventHandlerTag[{
                   "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$34822$35044, 
                    FEPrivate`Not[DynamicChart`click$34822$35044]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], Dynamic[
                 If[DynamicChart`click$34822$35044, {{{1., 0}, {
                    0, 1.}}, {-0.16415268824145524`, -0.11425364301895853`}}, \
{{1, 0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                  TrackedSymbols :> {
                   DynamicChart`click$34822$35044}]]}, {}}, {}}},
            DynamicModuleValues:>{}], {{}, {}}, {{{}, {}, {}, {}}, {}}},
          ContentSelectable->False,
          GridLinesStyle->Directive[
            GrayLevel[0.5, 0.4]],
          LabelStyle->{
            GrayLevel[0], FontFamily -> "Arial"},
          PlotRange->{{-1.2, 1.2}, {-1.2, 1.2}},
          PlotRangePadding->Scaled[0.02]], ",", 
         GraphicsBox[{{}, {}, 
           
           DynamicModuleBox[{DynamicChart`click$34863$35045 = False, 
            DynamicChart`click$34866$35045 = False, 
            DynamicChart`click$34869$35045 = False, 
            DynamicChart`click$34872$35045 = False, 
            DynamicChart`click$34875$35045 = False, 
            DynamicChart`click$34878$35045 = False, 
            DynamicChart`click$34881$35045 = False, 
            DynamicChart`click$34884$35045 = False, 
            DynamicChart`click$34887$35045 = False, 
            DynamicChart`click$34890$35045 = False, 
            DynamicChart`click$34893$35045 = False, 
            DynamicChart`click$34896$35045 = False}, {
             {RGBColor[0.5, 0.5, 1.], EdgeForm[{GrayLevel[0], Opacity[
              0.5]}], {{{}, {
                 {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{
                  GrayLevel[0], Opacity[0.5]}], GeometricTransformationBox[
                   TagBox[
                    TagBox[
                    TooltipBox[
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 1., {3.038589615767177, 
                    3.141592653589793}]},
                    
                    ImageSizeCache->{{22.585786437626904`, 
                    121.41421356237309`}, {-14.28502928755972, \
-1.5857864376269042`}}],
                    StatusArea[#, 1]& ,
                    TagBoxNote->"1"],
                    StyleBox["1", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]],
                    Annotation[#, 
                    Style[1, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ],
                    
                    EventHandlerTag[{
                    "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$34863$35045, 
                    FEPrivate`Not[DynamicChart`click$34863$35045]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], Dynamic[
                   If[DynamicChart`click$34863$35045, {{{1., 0}, {
                    0, 1.}}, {-0.19973481797696613`, 
                    0.010295750954069347`}}, {{1, 0}, {0, 1}}, {{1, 0}, {0, 
                    1}}], TrackedSymbols :> {
                    DynamicChart`click$34863$35045}]]}, {}, 
                 {RGBColor[0.994288, 0.6103824, 0.24208906666666669`], 
                  EdgeForm[{GrayLevel[0], Opacity[0.5]}], 
                  GeometricTransformationBox[
                   TagBox[
                    TagBox[
                    TooltipBox[
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 1., {2.1115622753636316`, 
                    3.038589615767177}]},
                    
                    ImageSizeCache->{{23.094598378626355`, 
                    121.4142135623731}, {-86.71641785770099, \
-1.5857864376269113`}}],
                    StatusArea[#, 9]& ,
                    TagBoxNote->"9"],
                    StyleBox["9", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]],
                    Annotation[#, 
                    Style[9, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ],
                    
                    EventHandlerTag[{
                    "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$34866$35045, 
                    FEPrivate`Not[DynamicChart`click$34866$35045]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], Dynamic[
                   If[DynamicChart`click$34866$35045, {{{1., 0}, {
                    0, 1.}}, {-0.16875511196463713`, 
                    0.10733923879832011`}}, {{1, 0}, {0, 1}}, {{1, 0}, {0, 
                    1}}], TrackedSymbols :> {
                    DynamicChart`click$34866$35045}]]}, 
                 {RGBColor[1., 0.544, 0.2], EdgeForm[{GrayLevel[0], Opacity[
                  0.5]}], GeometricTransformationBox[
                   TagBox[
                    TagBox[
                    TooltipBox[
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 1., {1.1845349349600858`, 
                    2.1115622753636316`}]},
                    
                    ImageSizeCache->{{69.16567749268314, 
                    157.58009135135086`}, {-100.4142135623731, \
-1.5857864376268935`}}],
                    StatusArea[#, 9]& ,
                    TagBoxNote->"9"],
                    StyleBox["9", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]],
                    Annotation[#, 
                    Style[9, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ],
                    
                    EventHandlerTag[{
                    "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$34869$35045, 
                    FEPrivate`Not[DynamicChart`click$34869$35045]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], Dynamic[
                   If[DynamicChart`click$34869$35045, {{{1., 0}, {
                    0, 1.}}, {-0.015435092425329236`, 
                    0.19940350528970535`}}, {{1, 0}, {0, 1}}, {{1, 0}, {0, 
                    1}}], TrackedSymbols :> {
                    DynamicChart`click$34869$35045}]]}, 
                 {RGBColor[0.928, 0.5210666666666667, 0.2], EdgeForm[{
                  GrayLevel[0], Opacity[0.5]}], GeometricTransformationBox[
                   TagBox[
                    TagBox[
                    TooltipBox[
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 1., {0.6695197458470052, 
                    1.1845349349600858`}]},
                    
                    ImageSizeCache->{{118.5857864376269, 
                    196.6897149937373}, {-93.34131451451661, \
-1.5857864376268935`}}],
                    StatusArea[#, 5]& ,
                    TagBoxNote->"5"],
                    StyleBox["5", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]],
                    Annotation[#, 
                    Style[5, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ],
                    
                    EventHandlerTag[{
                    "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$34872$35045, 
                    FEPrivate`Not[DynamicChart`click$34872$35045]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], Dynamic[
                   If[DynamicChart`click$34872$35045, {{{1., 0}, {0, 1.}}, {
                    0.12004285610967365`, 0.15996784894794389`}}, {{1, 0}, {0,
                     1}}, {{1, 0}, {0, 1}}], 
                    TrackedSymbols :> {DynamicChart`click$34872$35045}]]}, 
                 {RGBColor[0.8560000000000001, 0.4981333333333333, 0.2], 
                  EdgeForm[{GrayLevel[0], Opacity[0.5]}], 
                  GeometricTransformationBox[
                   TagBox[
                    TagBox[
                    TooltipBox[
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 1., {0.5665167080243889, 
                    0.6695197458470052}]},
                    
                    ImageSizeCache->{{118.5857864376269, 
                    202.4166673053989}, {-63.99272381780572, \
-1.5857864376268935`}}],
                    StatusArea[#, 1]& ,
                    TagBoxNote->"1"],
                    StyleBox["1", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]],
                    Annotation[#, 
                    Style[1, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ],
                    
                    EventHandlerTag[{
                    "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$34875$35045, 
                    FEPrivate`Not[DynamicChart`click$34875$35045]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], Dynamic[
                   If[DynamicChart`click$34875$35045, {{{1., 0}, {0, 1.}}, {
                    0.1630056675033623, 0.11588421964091276`}}, {{1, 0}, {0, 
                    1}}, {{1, 0}, {0, 1}}], 
                    TrackedSymbols :> {DynamicChart`click$34875$35045}]]}, 
                 {RGBColor[0.784, 0.47519999999999996`, 0.2], EdgeForm[{
                  GrayLevel[0], Opacity[0.5]}], GeometricTransformationBox[
                   TagBox[
                    TagBox[
                    TooltipBox[
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 1., {0.4635136702017726, 
                    0.5665167080243889}]},
                    
                    ImageSizeCache->{{118.5857864376269, 
                    207.28497345633747`}, {-55.93704818556675, \
-1.5857864376268935`}}],
                    StatusArea[#, 1]& ,
                    TagBoxNote->"1"],
                    StyleBox["1", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]],
                    Annotation[#, 
                    Style[1, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ],
                    
                    EventHandlerTag[{
                    "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$34878$35045, 
                    FEPrivate`Not[DynamicChart`click$34878$35045]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], Dynamic[
                   If[DynamicChart`click$34878$35045, {{{1., 0}, {0, 1.}}, {
                    0.17405704820603107`, 0.09850961359077287}}, {{1, 0}, {0, 
                    1}}, {{1, 0}, {0, 1}}], 
                    TrackedSymbols :> {DynamicChart`click$34878$35045}]]}, 
                 {RGBColor[0.7478202666666667, 0.4784, 0.3741597333333332], 
                  EdgeForm[{GrayLevel[0], Opacity[0.5]}], 
                  GeometricTransformationBox[
                   TagBox[
                    TagBox[
                    TooltipBox[
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 1., {-0.1545045567339245, 
                    0.4635136702017726}]},
                    
                    ImageSizeCache->{{118.5857864376269, 
                    217.4142135623731}, {-47.335217688944034`, 
                    13.187708925963058`}}],
                    StatusArea[#, 6]& ,
                    TagBoxNote->"6"],
                    StyleBox["6", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]],
                    Annotation[#, 
                    Style[6, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ],
                    
                    EventHandlerTag[{
                    "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$34881$35045, 
                    FEPrivate`Not[DynamicChart`click$34881$35045]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], Dynamic[
                   If[DynamicChart`click$34881$35045, {{{1., 0}, {0, 1.}}, {
                    0.19761757921821543`, 0.030778115340812318`}}, {{1, 0}, {
                    0, 1}}, {{1, 0}, {0, 1}}], 
                    TrackedSymbols :> {DynamicChart`click$34881$35045}]]}, 
                 {RGBColor[0.7116405333333333, 0.4816, 0.5483194666666666], 
                  EdgeForm[{GrayLevel[0], Opacity[0.5]}], 
                  GeometricTransformationBox[
                   TagBox[
                    TagBox[
                    TooltipBox[
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 
                    1., {-0.36051063237915715`, -0.1545045567339245}]},
                    
                    ImageSizeCache->{{118.5857864376269, 
                    216.2706515871165}, {-4.414213562373114, 
                    32.27841387108625}}],
                    StatusArea[#, 2]& ,
                    TagBoxNote->"2"],
                    StyleBox["2", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]],
                    Annotation[#, 
                    Style[2, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ],
                    EventHandlerTag[{
                    "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$34884$35045, 
                    FEPrivate`Not[DynamicChart`click$34884$35045]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], Dynamic[
                   If[DynamicChart`click$34884$35045, {{{1., 0}, {0, 1.}}, {
                    0.19340554495826406`, -0.050934224048245824`}}, {{1, 0}, {
                    0, 1}}, {{1, 0}, {0, 1}}], 
                    TrackedSymbols :> {DynamicChart`click$34884$35045}]]}, 
                 {RGBColor[0.6754608, 0.4848, 0.7224792], EdgeForm[{GrayLevel[
                  0], Opacity[0.5]}], GeometricTransformationBox[
                   TagBox[
                    TagBox[
                    TooltipBox[
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 
                    1., {-1.08153189713747, -0.36051063237915715`}]},
                    
                    ImageSizeCache->{{118.5857864376269, 
                    211.24302819026047`}, {-4.4142135623731065`, 
                    83.15137820162568}}],
                    StatusArea[#, 7]& ,
                    TagBoxNote->"7"],
                    StyleBox["7", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]],
                    Annotation[#, 
                    Style[7, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ],
                    
                    EventHandlerTag[{
                    "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$34887$35045, 
                    FEPrivate`Not[DynamicChart`click$34887$35045]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], Dynamic[
                   If[DynamicChart`click$34887$35045, {{{1., 0}, {0, 1.}}, {
                    0.15022638617410394`, -0.13203042413424643`}}, {{1, 0}, {
                    0, 1}}, {{1, 0}, {0, 1}}], 
                    TrackedSymbols :> {DynamicChart`click$34887$35045}]]}, 
                 {RGBColor[0.6167072, 0.5082666666666666, 0.7586295999999999],
                   EdgeForm[{GrayLevel[0], Opacity[0.5]}], 
                  GeometricTransformationBox[
                   TagBox[
                    TagBox[
                    TooltipBox[
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 
                    1., {-1.8025531618957826`, -1.08153189713747}]},
                    
                    ImageSizeCache->{{96.53576319297456, 
                    166.53198089299582`}, {-4.4142135623731065`, 
                    94.4142135623731}}],
                    StatusArea[#, 7]& ,
                    TagBoxNote->"7"],
                    StyleBox["7", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]],
                    Annotation[#, 
                    Style[7, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ],
                    
                    EventHandlerTag[{
                    "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$34890$35045, 
                    FEPrivate`Not[DynamicChart`click$34890$35045]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], Dynamic[
                   If[DynamicChart`click$34890$35045, {{{1., 0}, {0, 1.}}, {
                    0.025679671029310198`, -0.1983445348272203}}, {{1, 0}, {0,
                     1}}, {{1, 0}, {0, 1}}], 
                    TrackedSymbols :> {DynamicChart`click$34890$35045}]]}, 
                 {RGBColor[0.5579536, 0.5317333333333334, 0.7947799999999999],
                   EdgeForm[{GrayLevel[0], Opacity[0.5]}], 
                  GeometricTransformationBox[
                   TagBox[
                    TagBox[
                    TooltipBox[
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 
                    1., {-2.523574426654096, -1.8025531618957826`}]},
                    
                    ImageSizeCache->{{40.34306603601303, 
                    121.41421356237309`}, {-4.414213562373092, 
                    91.84759343760982}}],
                    StatusArea[#, 7]& ,
                    TagBoxNote->"7"],
                    StyleBox["7", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]],
                    Annotation[#, 
                    Style[7, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ],
                    
                    EventHandlerTag[{
                    "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$34893$35045, 
                    FEPrivate`Not[DynamicChart`click$34893$35045]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], Dynamic[
                   If[DynamicChart`click$34893$35045, {{{1., 0}, {
                    0, 1.}}, {-0.11164874440537292`, -0.16593540271052382`}}, \
{{1, 0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                    TrackedSymbols :> {DynamicChart`click$34893$35045}]]}, 
                 {RGBColor[0.4992, 0.5552, 0.8309304], EdgeForm[{GrayLevel[0],
                   Opacity[0.5]}], GeometricTransformationBox[
                   TagBox[
                    TagBox[
                    TooltipBox[
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 
                    1., {-3.141592653589793, -2.523574426654096}]},
                    ImageSizeCache->{{22.585786437626904`, 
                    121.41421356237309`}, {-4.414213562373099, 
                    54.03863899001122}}],
                    StatusArea[#, 6]& ,
                    TagBoxNote->"6"],
                    StyleBox["6", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]],
                    Annotation[#, 
                    Style[6, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ],
                    
                    EventHandlerTag[{
                    "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$34896$35045, 
                    FEPrivate`Not[DynamicChart`click$34896$35045]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], Dynamic[
                   If[DynamicChart`click$34896$35045, {{{1., 0}, {
                    0, 1.}}, {-0.19052707616067652`, -0.06082296646550361}}, \
{{1, 0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                    TrackedSymbols :> {
                    DynamicChart`click$34896$35045}]]}}}, {}}, {}}, {{{
                GeometricTransformationBox[
                 TagBox[
                  TagBox[
                   TooltipBox[
                    TagBox[{{}, {}},
                    StatusArea[#, 1]& ,
                    TagBoxNote->"1"],
                    StyleBox["1", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]],
                   Annotation[#, 
                    Style[1, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ],
                  
                  EventHandlerTag[{
                   "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$34863$35045, 
                    FEPrivate`Not[DynamicChart`click$34863$35045]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], Dynamic[
                 If[DynamicChart`click$34863$35045, {{{1., 0}, {
                    0, 1.}}, {-0.19973481797696613`, 
                    0.010295750954069347`}}, {{1, 0}, {0, 1}}, {{1, 0}, {0, 
                   1}}], TrackedSymbols :> {
                   DynamicChart`click$34863$35045}]], {}, 
                GeometricTransformationBox[
                 TagBox[
                  TagBox[
                   TooltipBox[
                    TagBox[{{}, {}},
                    StatusArea[#, 9]& ,
                    TagBoxNote->"9"],
                    StyleBox["9", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]],
                   Annotation[#, 
                    Style[9, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ],
                  
                  EventHandlerTag[{
                   "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$34866$35045, 
                    FEPrivate`Not[DynamicChart`click$34866$35045]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], Dynamic[
                 If[DynamicChart`click$34866$35045, {{{1., 0}, {
                    0, 1.}}, {-0.16875511196463713`, 
                    0.10733923879832011`}}, {{1, 0}, {0, 1}}, {{1, 0}, {0, 
                   1}}], TrackedSymbols :> {DynamicChart`click$34866$35045}]],
                 GeometricTransformationBox[
                 TagBox[
                  TagBox[
                   TooltipBox[
                    TagBox[{{}, {}},
                    StatusArea[#, 9]& ,
                    TagBoxNote->"9"],
                    StyleBox["9", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]],
                   Annotation[#, 
                    Style[9, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ],
                  
                  EventHandlerTag[{
                   "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$34869$35045, 
                    FEPrivate`Not[DynamicChart`click$34869$35045]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], Dynamic[
                 If[DynamicChart`click$34869$35045, {{{1., 0}, {
                    0, 1.}}, {-0.015435092425329236`, 
                    0.19940350528970535`}}, {{1, 0}, {0, 1}}, {{1, 0}, {0, 
                   1}}], TrackedSymbols :> {DynamicChart`click$34869$35045}]],
                 GeometricTransformationBox[
                 TagBox[
                  TagBox[
                   TooltipBox[
                    TagBox[{{}, {}},
                    StatusArea[#, 5]& ,
                    TagBoxNote->"5"],
                    StyleBox["5", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]],
                   Annotation[#, 
                    Style[5, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ],
                  
                  EventHandlerTag[{
                   "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$34872$35045, 
                    FEPrivate`Not[DynamicChart`click$34872$35045]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], Dynamic[
                 If[DynamicChart`click$34872$35045, {{{1., 0}, {0, 1.}}, {
                    0.12004285610967365`, 0.15996784894794389`}}, {{1, 0}, {0,
                    1}}, {{1, 0}, {0, 1}}], 
                  TrackedSymbols :> {DynamicChart`click$34872$35045}]], 
                GeometricTransformationBox[
                 TagBox[
                  TagBox[
                   TooltipBox[
                    TagBox[{{}, {}},
                    StatusArea[#, 1]& ,
                    TagBoxNote->"1"],
                    StyleBox["1", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]],
                   Annotation[#, 
                    Style[1, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ],
                  
                  EventHandlerTag[{
                   "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$34875$35045, 
                    FEPrivate`Not[DynamicChart`click$34875$35045]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], Dynamic[
                 If[DynamicChart`click$34875$35045, {{{1., 0}, {0, 1.}}, {
                    0.1630056675033623, 0.11588421964091276`}}, {{1, 0}, {0, 
                   1}}, {{1, 0}, {0, 1}}], 
                  TrackedSymbols :> {DynamicChart`click$34875$35045}]], 
                GeometricTransformationBox[
                 TagBox[
                  TagBox[
                   TooltipBox[
                    TagBox[{{}, {}},
                    StatusArea[#, 1]& ,
                    TagBoxNote->"1"],
                    StyleBox["1", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]],
                   Annotation[#, 
                    Style[1, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ],
                  
                  EventHandlerTag[{
                   "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$34878$35045, 
                    FEPrivate`Not[DynamicChart`click$34878$35045]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], Dynamic[
                 If[DynamicChart`click$34878$35045, {{{1., 0}, {0, 1.}}, {
                    0.17405704820603107`, 0.09850961359077287}}, {{1, 0}, {0, 
                   1}}, {{1, 0}, {0, 1}}], 
                  TrackedSymbols :> {DynamicChart`click$34878$35045}]], 
                GeometricTransformationBox[
                 TagBox[
                  TagBox[
                   TooltipBox[
                    TagBox[{{}, {}},
                    StatusArea[#, 6]& ,
                    TagBoxNote->"6"],
                    StyleBox["6", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]],
                   Annotation[#, 
                    Style[6, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ],
                  
                  EventHandlerTag[{
                   "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$34881$35045, 
                    FEPrivate`Not[DynamicChart`click$34881$35045]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], Dynamic[
                 If[DynamicChart`click$34881$35045, {{{1., 0}, {0, 1.}}, {
                    0.19761757921821543`, 0.030778115340812318`}}, {{1, 0}, {
                   0, 1}}, {{1, 0}, {0, 1}}], 
                  TrackedSymbols :> {DynamicChart`click$34881$35045}]], 
                GeometricTransformationBox[
                 TagBox[
                  TagBox[
                   TooltipBox[
                    TagBox[{{}, {}},
                    StatusArea[#, 2]& ,
                    TagBoxNote->"2"],
                    StyleBox["2", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]],
                   Annotation[#, 
                    Style[2, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ],
                  
                  EventHandlerTag[{
                   "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$34884$35045, 
                    FEPrivate`Not[DynamicChart`click$34884$35045]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], Dynamic[
                 If[DynamicChart`click$34884$35045, {{{1., 0}, {0, 1.}}, {
                    0.19340554495826406`, -0.050934224048245824`}}, {{1, 0}, {
                   0, 1}}, {{1, 0}, {0, 1}}], 
                  TrackedSymbols :> {DynamicChart`click$34884$35045}]], 
                GeometricTransformationBox[
                 TagBox[
                  TagBox[
                   TooltipBox[
                    TagBox[{{}, {}},
                    StatusArea[#, 7]& ,
                    TagBoxNote->"7"],
                    StyleBox["7", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]],
                   Annotation[#, 
                    Style[7, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ],
                  
                  EventHandlerTag[{
                   "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$34887$35045, 
                    FEPrivate`Not[DynamicChart`click$34887$35045]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], Dynamic[
                 If[DynamicChart`click$34887$35045, {{{1., 0}, {0, 1.}}, {
                    0.15022638617410394`, -0.13203042413424643`}}, {{1, 0}, {
                   0, 1}}, {{1, 0}, {0, 1}}], 
                  TrackedSymbols :> {DynamicChart`click$34887$35045}]], 
                GeometricTransformationBox[
                 TagBox[
                  TagBox[
                   TooltipBox[
                    TagBox[{{}, {}},
                    StatusArea[#, 7]& ,
                    TagBoxNote->"7"],
                    StyleBox["7", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]],
                   Annotation[#, 
                    Style[7, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ],
                  
                  EventHandlerTag[{
                   "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$34890$35045, 
                    FEPrivate`Not[DynamicChart`click$34890$35045]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], Dynamic[
                 If[DynamicChart`click$34890$35045, {{{1., 0}, {0, 1.}}, {
                    0.025679671029310198`, -0.1983445348272203}}, {{1, 0}, {0,
                    1}}, {{1, 0}, {0, 1}}], 
                  TrackedSymbols :> {DynamicChart`click$34890$35045}]], 
                GeometricTransformationBox[
                 TagBox[
                  TagBox[
                   TooltipBox[
                    TagBox[{{}, {}},
                    StatusArea[#, 7]& ,
                    TagBoxNote->"7"],
                    StyleBox["7", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]],
                   Annotation[#, 
                    Style[7, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ],
                  
                  EventHandlerTag[{
                   "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$34893$35045, 
                    FEPrivate`Not[DynamicChart`click$34893$35045]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], Dynamic[
                 If[DynamicChart`click$34893$35045, {{{1., 0}, {
                    0, 1.}}, {-0.11164874440537292`, -0.16593540271052382`}}, \
{{1, 0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                  TrackedSymbols :> {DynamicChart`click$34893$35045}]], 
                GeometricTransformationBox[
                 TagBox[
                  TagBox[
                   TooltipBox[
                    TagBox[{{}, {}},
                    StatusArea[#, 6]& ,
                    TagBoxNote->"6"],
                    StyleBox["6", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]],
                   Annotation[#, 
                    Style[6, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ],
                  
                  EventHandlerTag[{
                   "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$34896$35045, 
                    FEPrivate`Not[DynamicChart`click$34896$35045]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], Dynamic[
                 If[DynamicChart`click$34896$35045, {{{1., 0}, {
                    0, 1.}}, {-0.19052707616067652`, -0.06082296646550361}}, \
{{1, 0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                  TrackedSymbols :> {
                   DynamicChart`click$34896$35045}]]}, {}}, {}}},
            DynamicModuleValues:>{}], {{}, {}}, {{{}, {}, {}, {}}, {}}},
          ContentSelectable->False,
          GridLinesStyle->Directive[
            GrayLevel[0.5, 0.4]],
          LabelStyle->{
            GrayLevel[0], FontFamily -> "Arial"},
          PlotRange->{{-1.2, 1.2}, {-1.2, 1.2}},
          PlotRangePadding->Scaled[0.02]], ",", 
         GraphicsBox[{{}, {}, 
           
           DynamicModuleBox[{DynamicChart`click$34949$35046 = False, 
            DynamicChart`click$34952$35046 = False, 
            DynamicChart`click$34955$35046 = False, 
            DynamicChart`click$34958$35046 = False, 
            DynamicChart`click$34961$35046 = False, 
            DynamicChart`click$34964$35046 = False, 
            DynamicChart`click$34967$35046 = False, 
            DynamicChart`click$34970$35046 = False, 
            DynamicChart`click$34973$35046 = False, 
            DynamicChart`click$34976$35046 = False, 
            DynamicChart`click$34979$35046 = False, 
            DynamicChart`click$34982$35046 = False, 
            DynamicChart`click$34985$35046 = False, 
            DynamicChart`click$34988$35046 = False, 
            DynamicChart`click$34991$35046 = False, 
            DynamicChart`click$34994$35046 = False, 
            DynamicChart`click$34997$35046 = False}, {
             {RGBColor[0.5, 0.5, 1.], EdgeForm[{GrayLevel[0], Opacity[
              0.5]}], {{{}, {
                 {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{
                  GrayLevel[0], Opacity[0.5]}], GeometricTransformationBox[
                   TagBox[
                    TagBox[
                    TooltipBox[
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 1., {3.0649684425266273`, 
                    3.141592653589793}]},
                    
                    ImageSizeCache->{{22.585786437626904`, 
                    121.41421356237309`}, {-11.762941834676706`, \
-1.5857864376269042`}}],
                    StatusArea[#, 1]& ,
                    TagBoxNote->"1"],
                    StyleBox["1", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]],
                    Annotation[#, 
                    Style[1, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ],
                    
                    EventHandlerTag[{
                    "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$34949$35046, 
                    FEPrivate`Not[DynamicChart`click$34949$35046]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], Dynamic[
                   If[DynamicChart`click$34949$35046, {{{1., 0}, {
                    0, 1.}}, {-0.19985323621016202`, 
                    0.007660546738007111}}, {{1, 0}, {0, 1}}, {{1, 0}, {0, 
                    1}}], TrackedSymbols :> {
                    DynamicChart`click$34949$35046}]]}, 
                 {RGBColor[0.986672, 0.6988922666666667, 0.2982078222222222], 
                  EdgeForm[{GrayLevel[0], Opacity[0.5]}], 
                  GeometricTransformationBox[
                   TagBox[
                    TagBox[
                    TooltipBox[
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 1., {2.988344231463462, 
                    3.0649684425266273`}]},
                    
                    ImageSizeCache->{{22.86746952398782, 
                    121.41421356237309`}, {-19.068544847385045`, \
-1.5857864376269042`}}],
                    StatusArea[#, 1]& ,
                    TagBoxNote->"1"],
                    StyleBox["1", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]],
                    Annotation[#, 
                    Style[1, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ],
                    
                    EventHandlerTag[{
                    "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$34952$35046, 
                    FEPrivate`Not[DynamicChart`click$34952$35046]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], Dynamic[
                   If[DynamicChart`click$34952$35046, {{{1., 0}, {
                    0, 1.}}, {-0.19868041795193503`, 
                    0.022936685079680164`}}, {{1, 0}, {0, 1}}, {{1, 0}, {0, 
                    1}}], TrackedSymbols :> {
                    DynamicChart`click$34952$35046}]]}, 
                 {RGBColor[0.99048, 0.6546373333333334, 0.2701484444444444], 
                  EdgeForm[{GrayLevel[0], Opacity[0.5]}], 
                  GeometricTransformationBox[
                   TagBox[
                    TagBox[
                    TooltipBox[
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 1., {2.6052231761476334`, 
                    2.988344231463462}]},
                    
                    ImageSizeCache->{{23.71086575471345, 
                    121.41421356237309`}, {-53.47200678929569, \
-1.5857864376269042`}}],
                    StatusArea[#, 5]& ,
                    TagBoxNote->"5"],
                    StyleBox["5", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]],
                    Annotation[#, 
                    Style[5, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ],
                    
                    EventHandlerTag[{
                    "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$34955$35046, 
                    FEPrivate`Not[DynamicChart`click$34955$35046]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], Dynamic[
                   If[DynamicChart`click$34955$35046, {{{1., 0}, {
                    0, 1.}}, {-0.18822800959591232`, 0.06760337568170055}}, {{
                    1, 0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                    TrackedSymbols :> {DynamicChart`click$34955$35046}]]}, 
                 {RGBColor[0.994288, 0.6103824, 0.24208906666666669`], 
                  EdgeForm[{GrayLevel[0], Opacity[0.5]}], 
                  GeometricTransformationBox[
                   TagBox[
                    TagBox[
                    TooltipBox[
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 1., {2.451974754021302, 
                    2.6052231761476334`}]},
                    
                    ImageSizeCache->{{36.0671041668556, 
                    121.41421356237309`}, {-65.49348802572283, \
-1.5857864376269033`}}],
                    StatusArea[#, 2]& ,
                    TagBoxNote->"2"],
                    StyleBox["2", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]],
                    Annotation[#, 
                    Style[2, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ],
                    
                    EventHandlerTag[{
                    "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$34958$35046, 
                    FEPrivate`Not[DynamicChart`click$34958$35046]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], Dynamic[
                   If[DynamicChart`click$34958$35046, {{{1., 0}, {
                    0, 1.}}, {-0.16358587215334358`, 
                    0.11506373204372407`}}, {{1, 0}, {0, 1}}, {{1, 0}, {0, 
                    1}}], TrackedSymbols :> {
                    DynamicChart`click$34958$35046}]]}, 
                 {RGBColor[0.998096, 0.5661274666666667, 0.2140296888888889], 
                  EdgeForm[{GrayLevel[0], Opacity[0.5]}], 
                  GeometricTransformationBox[
                   TagBox[
                    TagBox[
                    TooltipBox[
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 1., {1.7623568544528108`, 
                    2.451974754021302}]},
                    
                    ImageSizeCache->{{44.52282517472038, 
                    121.41421356237309`}, {-98.65821228207116, \
-1.5857864376269104`}}],
                    StatusArea[#, 9]& ,
                    TagBoxNote->"9"],
                    StyleBox["9", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]],
                    Annotation[#, 
                    Style[9, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ],
                    
                    EventHandlerTag[{
                    "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$34961$35046, 
                    FEPrivate`Not[DynamicChart`click$34961$35046]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], Dynamic[
                   If[DynamicChart`click$34961$35046, {{{1., 0}, {
                    0, 1.}}, {-0.10220373588942211`, 
                    0.17191392139744022`}}, {{1, 0}, {0, 1}}, {{1, 0}, {0, 
                    1}}], TrackedSymbols :> {
                    DynamicChart`click$34961$35046}]]}, 
                 {RGBColor[0.976, 0.5363555555555556, 0.2], EdgeForm[{
                  GrayLevel[0], Opacity[0.5]}], GeometricTransformationBox[
                   TagBox[
                    TagBox[
                    TooltipBox[
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 1., {1.6091084323264795`, 
                    1.7623568544528108`}]},
                    
                    ImageSizeCache->{{100.30823995781874`, 
                    121.4142135623731}, {-100.34376694325086`, \
-1.5857864376269104`}}],
                    StatusArea[#, 2]& ,
                    TagBoxNote->"2"],
                    StyleBox["2", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]],
                    Annotation[#, 
                    Style[2, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ],
                    
                    EventHandlerTag[{
                    "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$34964$35046, 
                    FEPrivate`Not[DynamicChart`click$34964$35046]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], Dynamic[
                   If[DynamicChart`click$34964$35046, {{{1., 0}, {
                    0, 1.}}, {-0.02293668507968008, 0.19868041795193503`}}, {{
                    1, 0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                    TrackedSymbols :> {DynamicChart`click$34964$35046}]]}, 
                 {RGBColor[0.928, 0.5210666666666667, 0.2], EdgeForm[{
                  GrayLevel[0], Opacity[0.5]}], GeometricTransformationBox[
                   TagBox[
                    TagBox[
                    TooltipBox[
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 1., {1.5324842212633136`, 
                    1.6091084323264795`}]},
                    
                    ImageSizeCache->{{114.90872400338351`, 
                    125.0912759966165}, {-100.41421356237309`, \
-1.5857864376269104`}}],
                    StatusArea[#, 1]& ,
                    TagBoxNote->"1"],
                    StyleBox["1", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]],
                    Annotation[#, 
                    Style[1, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ],
                    
                    EventHandlerTag[{
                    "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$34967$35046, 
                    FEPrivate`Not[DynamicChart`click$34967$35046]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], Dynamic[
                   If[DynamicChart`click$34967$35046, {{{1., 0}, {0, 1.}}, {
                    1.2246467991473533`*^-17, 0.2}}, {{1, 0}, {0, 1}}, {{1, 
                    0}, {0, 1}}], 
                    TrackedSymbols :> {DynamicChart`click$34967$35046}]]}, 
                 {RGBColor[0.8800000000000001, 0.5057777777777778, 0.2], 
                  EdgeForm[{GrayLevel[0], Opacity[0.5]}], 
                  GeometricTransformationBox[
                   TagBox[
                    TagBox[
                    TooltipBox[
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 1., {1.1493631659474852`, 
                    1.5324842212633136`}]},
                    
                    ImageSizeCache->{{118.5857864376269, 
                    160.68480273082173`}, {-100.34376694325087`, \
-1.5857864376268935`}}],
                    StatusArea[#, 5]& ,
                    TagBoxNote->"5"],
                    StyleBox["5", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]],
                    Annotation[#, 
                    Style[5, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ],
                    
                    EventHandlerTag[{
                    "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$34970$35046, 
                    FEPrivate`Not[DynamicChart`click$34970$35046]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], Dynamic[
                   If[DynamicChart`click$34970$35046, {{{1., 0}, {0, 1.}}, {
                    0.04557070178062755, 0.1947390847755558}}, {{1, 0}, {0, 
                    1}}, {{1, 0}, {0, 1}}], 
                    TrackedSymbols :> {DynamicChart`click$34970$35046}]]}, {}, 
                 {RGBColor[0.784, 0.47519999999999996`, 0.2], EdgeForm[{
                  GrayLevel[0], Opacity[0.5]}], GeometricTransformationBox[
                   TagBox[
                    TagBox[
                    TooltipBox[
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 1., {0.8428663216948227, 
                    1.1493631659474852`}]},
                    
                    ImageSizeCache->{{118.5857864376269, 
                    185.28548077826736`}, {-92.01456074412191, \
-1.5857864376268935`}}],
                    StatusArea[#, 4]& ,
                    TagBoxNote->"4"],
                    StyleBox["4", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]],
                    Annotation[#, 
                    Style[4, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ],
                    
                    EventHandlerTag[{
                    "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$34973$35046, 
                    FEPrivate`Not[DynamicChart`click$34973$35046]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], Dynamic[
                   If[DynamicChart`click$34973$35046, {{{1., 0}, {0, 1.}}, {
                    0.10871351000024423`, 0.16787308522639}}, {{1, 0}, {0, 
                    1}}, {{1, 0}, {0, 1}}], 
                    TrackedSymbols :> {DynamicChart`click$34973$35046}]]}, 
                 {RGBColor[
                  0.7598801777777778, 0.4773333333333333, 0.3161064888888889],
                   EdgeForm[{GrayLevel[0], Opacity[0.5]}], 
                  GeometricTransformationBox[
                   TagBox[
                    TagBox[
                    TooltipBox[
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 1., {0.3831210553158284, 
                    0.8428663216948227}]},
                    
                    ImageSizeCache->{{118.5857864376269, 
                    210.4544488681742}, {-76.08332283712153, \
-1.5857864376268935`}}],
                    StatusArea[#, 6]& ,
                    TagBoxNote->"6"],
                    StyleBox["6", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]],
                    Annotation[#, 
                    Style[6, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ],
                    EventHandlerTag[{
                    "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$34976$35046, 
                    FEPrivate`Not[DynamicChart`click$34976$35046]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], Dynamic[
                   If[DynamicChart`click$34976$35046, {{{1., 0}, {0, 1.}}, {
                    0.16358587215334353`, 0.11506373204372414`}}, {{1, 0}, {0,
                     1}}, {{1, 0}, {0, 1}}], 
                    TrackedSymbols :> {DynamicChart`click$34976$35046}]]}, {}, 
                 {RGBColor[0.7116405333333333, 0.4816, 0.5483194666666666], 
                  EdgeForm[{GrayLevel[0], Opacity[0.5]}], 
                  GeometricTransformationBox[
                   TagBox[
                    TagBox[
                    TooltipBox[
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 1., {-0.07662421106316586, 
                    0.3831210553158284}]},
                    
                    ImageSizeCache->{{118.5857864376269, 
                    217.4142135623731}, {-40.300652459086905`, 
                    5.7629418346767025`}}],
                    StatusArea[#, 6]& ,
                    TagBoxNote->"6"],
                    StyleBox["6", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]],
                    Annotation[#, 
                    Style[6, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ],
                    
                    EventHandlerTag[{
                    "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$34979$35046, 
                    FEPrivate`Not[DynamicChart`click$34979$35046]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], Dynamic[
                   If[DynamicChart`click$34979$35046, {{{1., 0}, {0, 1.}}, {
                    0.19765608475606972`, 0.030529856843774877`}}, {{1, 0}, {
                    0, 1}}, {{1, 0}, {0, 1}}], 
                    TrackedSymbols :> {DynamicChart`click$34979$35046}]]}, 
                 {RGBColor[
                  0.6875207111111111, 0.48373333333333335`, 
                   0.6644259555555556], EdgeForm[{GrayLevel[0], Opacity[
                  0.5]}], GeometricTransformationBox[
                   TagBox[
                    TagBox[
                    TooltipBox[
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 
                    1., {-0.689617899568491, -0.07662421106316586}]},
                    
                    ImageSizeCache->{{118.5857864376269, 
                    217.13253047601216`}, {-4.414213562373114, 
                    59.49348802572284}}],
                    StatusArea[#, 8]& ,
                    TagBoxNote->"8"],
                    StyleBox["8", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]],
                    Annotation[#, 
                    Style[8, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ],
                    
                    EventHandlerTag[{
                    "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$34982$35046, 
                    FEPrivate`Not[DynamicChart`click$34982$35046]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], Dynamic[
                   If[DynamicChart`click$34982$35046, {{{1., 0}, {0, 1.}}, {
                    0.18550049022041895`, -0.07476341436815374}}, {{1, 0}, {0,
                     1}}, {{1, 0}, {0, 1}}], 
                    TrackedSymbols :> {DynamicChart`click$34982$35046}]]}, 
                 {RGBColor[
                  0.6558762666666667, 0.4926222222222222, 0.7345293333333333],
                   EdgeForm[{GrayLevel[0], Opacity[0.5]}], 
                  GeometricTransformationBox[
                   TagBox[
                    TagBox[
                    TooltipBox[
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 
                    1., {-0.9961147438211544, -0.689617899568491}]},
                    
                    ImageSizeCache->{{118.5857864376269, 
                    195.47717482527963`}, {-4.4142135623731065`, 
                    78.99329447104033}}],
                    StatusArea[#, 4]& ,
                    TagBoxNote->"4"],
                    StyleBox["4", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]],
                    Annotation[#, 
                    Style[4, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ],
                    
                    EventHandlerTag[{
                    "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$34985$35046, 
                    FEPrivate`Not[DynamicChart`click$34985$35046]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], Dynamic[
                   If[DynamicChart`click$34985$35046, {{{1., 0}, {0, 1.}}, {
                    0.13306514003311307`, -0.14931064432239255`}}, {{1, 0}, {
                    0, 1}}, {{1, 0}, {0, 1}}], 
                    TrackedSymbols :> {DynamicChart`click$34985$35046}]]}, 
                 {RGBColor[0.6167072, 0.5082666666666666, 0.7586295999999999],
                   EdgeForm[{GrayLevel[0], Opacity[0.5]}], 
                  GeometricTransformationBox[
                   TagBox[
                    TagBox[
                    TooltipBox[
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 
                    1., {-1.4558600102001478`, -0.9961147438211544}]},
                    ImageSizeCache->{{118.5857864376269, 
                    173.59669836249032`}, {-4.4142135623731065`, 
                    93.78081417930191}}],
                    StatusArea[#, 6]& ,
                    TagBoxNote->"6"],
                    StyleBox["6", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]],
                    Annotation[#, 
                    Style[6, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ],
                    
                    EventHandlerTag[{
                    "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$34988$35046, 
                    FEPrivate`Not[DynamicChart`click$34988$35046]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], Dynamic[
                   If[DynamicChart`click$34988$35046, {{{1., 0}, {0, 1.}}, {
                    0.06760337568170054, -0.18822800959591235`}}, {{1, 0}, {0,
                     1}}, {{1, 0}, {0, 1}}], 
                    TrackedSymbols :> {DynamicChart`click$34988$35046}]]}, 
                 {RGBColor[
                  0.5775381333333334, 0.5239111111111111, 0.7827298666666667],
                   EdgeForm[{GrayLevel[0], Opacity[0.5]}], 
                  GeometricTransformationBox[
                   TagBox[
                    TagBox[
                    TooltipBox[
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 
                    1., {-2.1454779097686396`, -1.4558600102001478`}]},
                    
                    ImageSizeCache->{{66.40330163750964, 
                    132.42382240061954`}, {-4.4142135623731065`, 
                    94.4142135623731}}],
                    StatusArea[#, 9]& ,
                    TagBoxNote->"9"],
                    StyleBox["9", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]],
                    Annotation[#, 
                    Style[9, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ],
                    
                    EventHandlerTag[{
                    "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$34991$35046, 
                    FEPrivate`Not[DynamicChart`click$34991$35046]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], Dynamic[
                   If[DynamicChart`click$34991$35046, {{{1., 0}, {
                    0, 1.}}, {-0.04557070178062752, -0.19473908477555582`}}, \
{{1, 0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                    TrackedSymbols :> {DynamicChart`click$34991$35046}]]}, 
                 {RGBColor[
                  0.5383690666666667, 0.5395555555555556, 0.8068301333333333],
                   EdgeForm[{GrayLevel[0], Opacity[0.5]}], 
                  GeometricTransformationBox[
                   TagBox[
                    TagBox[
                    TooltipBox[
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 
                    1., {-2.681847387210799, -2.1454779097686396`}]},
                    
                    ImageSizeCache->{{32.55389296936558, 
                    121.41421356237309`}, {-4.414213562373092, 
                    78.99329447104027}}],
                    StatusArea[#, 7]& ,
                    TagBoxNote->"7"],
                    StyleBox["7", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]],
                    Annotation[#, 
                    Style[7, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ],
                    
                    EventHandlerTag[{
                    "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$34994$35046, 
                    FEPrivate`Not[DynamicChart`click$34994$35046]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], Dynamic[
                   If[DynamicChart`click$34994$35046, {{{1., 0}, {
                    0, 1.}}, {-0.14931064432239255`, -0.13306514003311307`}}, \
{{1, 0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                    TrackedSymbols :> {DynamicChart`click$34994$35046}]]}, 
                 {RGBColor[0.4992, 0.5552, 0.8309304], EdgeForm[{GrayLevel[0],
                   Opacity[0.5]}], GeometricTransformationBox[
                   TagBox[
                    TagBox[
                    TooltipBox[
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 
                    1., {-3.141592653589793, -2.681847387210799}]},
                    
                    ImageSizeCache->{{22.585786437626904`, 
                    121.41421356237309`}, {-4.4142135623731065`, 
                    41.01131799760124}}],
                    StatusArea[#, 6]& ,
                    TagBoxNote->"6"],
                    StyleBox["6", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]],
                    Annotation[#, 
                    Style[6, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ],
                    
                    EventHandlerTag[{
                    "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$34997$35046, 
                    FEPrivate`Not[DynamicChart`click$34997$35046]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], Dynamic[
                   If[DynamicChart`click$34997$35046, {{{1., 0}, {
                    0, 1.}}, {-0.1947390847755558, -0.045570701780627554`}}, \
{{1, 0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                    TrackedSymbols :> {
                    DynamicChart`click$34997$35046}]]}}}, {}}, {}}, {{{
                GeometricTransformationBox[
                 TagBox[
                  TagBox[
                   TooltipBox[
                    TagBox[{{}, {}},
                    StatusArea[#, 1]& ,
                    TagBoxNote->"1"],
                    StyleBox["1", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]],
                   Annotation[#, 
                    Style[1, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ],
                  
                  EventHandlerTag[{
                   "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$34949$35046, 
                    FEPrivate`Not[DynamicChart`click$34949$35046]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], Dynamic[
                 If[DynamicChart`click$34949$35046, {{{1., 0}, {
                    0, 1.}}, {-0.19985323621016202`, 
                    0.007660546738007111}}, {{1, 0}, {0, 1}}, {{1, 0}, {0, 
                   1}}], TrackedSymbols :> {DynamicChart`click$34949$35046}]],
                 GeometricTransformationBox[
                 TagBox[
                  TagBox[
                   TooltipBox[
                    TagBox[{{}, {}},
                    StatusArea[#, 1]& ,
                    TagBoxNote->"1"],
                    StyleBox["1", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]],
                   Annotation[#, 
                    Style[1, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ],
                  
                  EventHandlerTag[{
                   "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$34952$35046, 
                    FEPrivate`Not[DynamicChart`click$34952$35046]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], Dynamic[
                 If[DynamicChart`click$34952$35046, {{{1., 0}, {
                    0, 1.}}, {-0.19868041795193503`, 
                    0.022936685079680164`}}, {{1, 0}, {0, 1}}, {{1, 0}, {0, 
                   1}}], TrackedSymbols :> {DynamicChart`click$34952$35046}]],
                 GeometricTransformationBox[
                 TagBox[
                  TagBox[
                   TooltipBox[
                    TagBox[{{}, {}},
                    StatusArea[#, 5]& ,
                    TagBoxNote->"5"],
                    StyleBox["5", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]],
                   Annotation[#, 
                    Style[5, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ],
                  
                  EventHandlerTag[{
                   "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$34955$35046, 
                    FEPrivate`Not[DynamicChart`click$34955$35046]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], Dynamic[
                 If[DynamicChart`click$34955$35046, {{{1., 0}, {
                    0, 1.}}, {-0.18822800959591232`, 0.06760337568170055}}, {{
                   1, 0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                  TrackedSymbols :> {DynamicChart`click$34955$35046}]], 
                GeometricTransformationBox[
                 TagBox[
                  TagBox[
                   TooltipBox[
                    TagBox[{{}, {}},
                    StatusArea[#, 2]& ,
                    TagBoxNote->"2"],
                    StyleBox["2", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]],
                   Annotation[#, 
                    Style[2, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ],
                  
                  EventHandlerTag[{
                   "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$34958$35046, 
                    FEPrivate`Not[DynamicChart`click$34958$35046]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], Dynamic[
                 If[DynamicChart`click$34958$35046, {{{1., 0}, {
                    0, 1.}}, {-0.16358587215334358`, 
                    0.11506373204372407`}}, {{1, 0}, {0, 1}}, {{1, 0}, {0, 
                   1}}], TrackedSymbols :> {DynamicChart`click$34958$35046}]],
                 GeometricTransformationBox[
                 TagBox[
                  TagBox[
                   TooltipBox[
                    TagBox[{{}, {}},
                    StatusArea[#, 9]& ,
                    TagBoxNote->"9"],
                    StyleBox["9", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]],
                   Annotation[#, 
                    Style[9, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ],
                  
                  EventHandlerTag[{
                   "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$34961$35046, 
                    FEPrivate`Not[DynamicChart`click$34961$35046]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], Dynamic[
                 If[DynamicChart`click$34961$35046, {{{1., 0}, {
                    0, 1.}}, {-0.10220373588942211`, 
                    0.17191392139744022`}}, {{1, 0}, {0, 1}}, {{1, 0}, {0, 
                   1}}], TrackedSymbols :> {DynamicChart`click$34961$35046}]],
                 GeometricTransformationBox[
                 TagBox[
                  TagBox[
                   TooltipBox[
                    TagBox[{{}, {}},
                    StatusArea[#, 2]& ,
                    TagBoxNote->"2"],
                    StyleBox["2", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]],
                   Annotation[#, 
                    Style[2, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ],
                  
                  EventHandlerTag[{
                   "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$34964$35046, 
                    FEPrivate`Not[DynamicChart`click$34964$35046]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], Dynamic[
                 If[DynamicChart`click$34964$35046, {{{1., 0}, {
                    0, 1.}}, {-0.02293668507968008, 0.19868041795193503`}}, {{
                   1, 0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                  TrackedSymbols :> {DynamicChart`click$34964$35046}]], 
                GeometricTransformationBox[
                 TagBox[
                  TagBox[
                   TooltipBox[
                    TagBox[{{}, {}},
                    StatusArea[#, 1]& ,
                    TagBoxNote->"1"],
                    StyleBox["1", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]],
                   Annotation[#, 
                    Style[1, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ],
                  
                  EventHandlerTag[{
                   "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$34967$35046, 
                    FEPrivate`Not[DynamicChart`click$34967$35046]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], Dynamic[
                 If[DynamicChart`click$34967$35046, {{{1., 0}, {0, 1.}}, {
                    1.2246467991473533`*^-17, 0.2}}, {{1, 0}, {0, 1}}, {{1, 
                   0}, {0, 1}}], 
                  TrackedSymbols :> {DynamicChart`click$34967$35046}]], 
                GeometricTransformationBox[
                 TagBox[
                  TagBox[
                   TooltipBox[
                    TagBox[{{}, {}},
                    StatusArea[#, 5]& ,
                    TagBoxNote->"5"],
                    StyleBox["5", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]],
                   Annotation[#, 
                    Style[5, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ],
                  
                  EventHandlerTag[{
                   "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$34970$35046, 
                    FEPrivate`Not[DynamicChart`click$34970$35046]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], Dynamic[
                 If[DynamicChart`click$34970$35046, {{{1., 0}, {0, 1.}}, {
                    0.04557070178062755, 0.1947390847755558}}, {{1, 0}, {0, 
                   1}}, {{1, 0}, {0, 1}}], 
                  TrackedSymbols :> {DynamicChart`click$34970$35046}]], {}, 
                GeometricTransformationBox[
                 TagBox[
                  TagBox[
                   TooltipBox[
                    TagBox[{{}, {}},
                    StatusArea[#, 4]& ,
                    TagBoxNote->"4"],
                    StyleBox["4", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]],
                   Annotation[#, 
                    Style[4, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ],
                  
                  EventHandlerTag[{
                   "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$34973$35046, 
                    FEPrivate`Not[DynamicChart`click$34973$35046]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], Dynamic[
                 If[DynamicChart`click$34973$35046, {{{1., 0}, {0, 1.}}, {
                    0.10871351000024423`, 0.16787308522639}}, {{1, 0}, {0, 
                   1}}, {{1, 0}, {0, 1}}], 
                  TrackedSymbols :> {DynamicChart`click$34973$35046}]], 
                GeometricTransformationBox[
                 TagBox[
                  TagBox[
                   TooltipBox[
                    TagBox[{{}, {}},
                    StatusArea[#, 6]& ,
                    TagBoxNote->"6"],
                    StyleBox["6", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]],
                   Annotation[#, 
                    Style[6, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ],
                  
                  EventHandlerTag[{
                   "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$34976$35046, 
                    FEPrivate`Not[DynamicChart`click$34976$35046]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], Dynamic[
                 If[DynamicChart`click$34976$35046, {{{1., 0}, {0, 1.}}, {
                    0.16358587215334353`, 0.11506373204372414`}}, {{1, 0}, {0,
                    1}}, {{1, 0}, {0, 1}}], 
                  TrackedSymbols :> {DynamicChart`click$34976$35046}]], {}, 
                GeometricTransformationBox[
                 TagBox[
                  TagBox[
                   TooltipBox[
                    TagBox[{{}, {}},
                    StatusArea[#, 6]& ,
                    TagBoxNote->"6"],
                    StyleBox["6", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]],
                   Annotation[#, 
                    Style[6, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ],
                  
                  EventHandlerTag[{
                   "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$34979$35046, 
                    FEPrivate`Not[DynamicChart`click$34979$35046]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], Dynamic[
                 If[DynamicChart`click$34979$35046, {{{1., 0}, {0, 1.}}, {
                    0.19765608475606972`, 0.030529856843774877`}}, {{1, 0}, {
                   0, 1}}, {{1, 0}, {0, 1}}], 
                  TrackedSymbols :> {DynamicChart`click$34979$35046}]], 
                GeometricTransformationBox[
                 TagBox[
                  TagBox[
                   TooltipBox[
                    TagBox[{{}, {}},
                    StatusArea[#, 8]& ,
                    TagBoxNote->"8"],
                    StyleBox["8", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]],
                   Annotation[#, 
                    Style[8, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ],
                  
                  EventHandlerTag[{
                   "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$34982$35046, 
                    FEPrivate`Not[DynamicChart`click$34982$35046]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], Dynamic[
                 If[DynamicChart`click$34982$35046, {{{1., 0}, {0, 1.}}, {
                    0.18550049022041895`, -0.07476341436815374}}, {{1, 0}, {0,
                    1}}, {{1, 0}, {0, 1}}], 
                  TrackedSymbols :> {DynamicChart`click$34982$35046}]], 
                GeometricTransformationBox[
                 TagBox[
                  TagBox[
                   TooltipBox[
                    TagBox[{{}, {}},
                    StatusArea[#, 4]& ,
                    TagBoxNote->"4"],
                    StyleBox["4", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]],
                   Annotation[#, 
                    Style[4, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ],
                  
                  EventHandlerTag[{
                   "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$34985$35046, 
                    FEPrivate`Not[DynamicChart`click$34985$35046]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], Dynamic[
                 If[DynamicChart`click$34985$35046, {{{1., 0}, {0, 1.}}, {
                    0.13306514003311307`, -0.14931064432239255`}}, {{1, 0}, {
                   0, 1}}, {{1, 0}, {0, 1}}], 
                  TrackedSymbols :> {DynamicChart`click$34985$35046}]], 
                GeometricTransformationBox[
                 TagBox[
                  TagBox[
                   TooltipBox[
                    TagBox[{{}, {}},
                    StatusArea[#, 6]& ,
                    TagBoxNote->"6"],
                    StyleBox["6", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]],
                   Annotation[#, 
                    Style[6, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ],
                  
                  EventHandlerTag[{
                   "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$34988$35046, 
                    FEPrivate`Not[DynamicChart`click$34988$35046]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], Dynamic[
                 If[DynamicChart`click$34988$35046, {{{1., 0}, {0, 1.}}, {
                    0.06760337568170054, -0.18822800959591235`}}, {{1, 0}, {0,
                    1}}, {{1, 0}, {0, 1}}], 
                  TrackedSymbols :> {DynamicChart`click$34988$35046}]], 
                GeometricTransformationBox[
                 TagBox[
                  TagBox[
                   TooltipBox[
                    TagBox[{{}, {}},
                    StatusArea[#, 9]& ,
                    TagBoxNote->"9"],
                    StyleBox["9", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]],
                   Annotation[#, 
                    Style[9, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ],
                  
                  EventHandlerTag[{
                   "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$34991$35046, 
                    FEPrivate`Not[DynamicChart`click$34991$35046]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], Dynamic[
                 If[DynamicChart`click$34991$35046, {{{1., 0}, {
                    0, 1.}}, {-0.04557070178062752, -0.19473908477555582`}}, \
{{1, 0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                  TrackedSymbols :> {DynamicChart`click$34991$35046}]], 
                GeometricTransformationBox[
                 TagBox[
                  TagBox[
                   TooltipBox[
                    TagBox[{{}, {}},
                    StatusArea[#, 7]& ,
                    TagBoxNote->"7"],
                    StyleBox["7", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]],
                   Annotation[#, 
                    Style[7, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ],
                  
                  EventHandlerTag[{
                   "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$34994$35046, 
                    FEPrivate`Not[DynamicChart`click$34994$35046]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], Dynamic[
                 If[DynamicChart`click$34994$35046, {{{1., 0}, {
                    0, 1.}}, {-0.14931064432239255`, -0.13306514003311307`}}, \
{{1, 0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                  TrackedSymbols :> {DynamicChart`click$34994$35046}]], 
                GeometricTransformationBox[
                 TagBox[
                  TagBox[
                   TooltipBox[
                    TagBox[{{}, {}},
                    StatusArea[#, 6]& ,
                    TagBoxNote->"6"],
                    StyleBox["6", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]],
                   Annotation[#, 
                    Style[6, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ],
                  
                  EventHandlerTag[{
                   "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$34997$35046, 
                    FEPrivate`Not[DynamicChart`click$34997$35046]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], Dynamic[
                 If[DynamicChart`click$34997$35046, {{{1., 0}, {
                    0, 1.}}, {-0.1947390847755558, -0.045570701780627554`}}, \
{{1, 0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                  TrackedSymbols :> {
                   DynamicChart`click$34997$35046}]]}, {}}, {}}},
            DynamicModuleValues:>{}], {{}, {}}, {{{}, {}, {}, {}}, {}}},
          ContentSelectable->False,
          GridLinesStyle->Directive[
            GrayLevel[0.5, 0.4]],
          LabelStyle->{
            GrayLevel[0], FontFamily -> "Arial"},
          PlotRange->{{-1.2, 1.2}, {-1.2, 1.2}},
          PlotRangePadding->Scaled[0.02]]}], "}"}]], "ExerciseOutput"],
      Apply[TextCell, 
       Cell[
        BoxData[
         RowBox[{"{", 
           RowBox[{
             GraphicsBox[{{}, {}, 
               
               DynamicModuleBox[{
                DynamicChart`click$34807$35044 = False, 
                 DynamicChart`click$34810$35044 = False, 
                 DynamicChart`click$34813$35044 = False, 
                 DynamicChart`click$34816$35044 = False, 
                 DynamicChart`click$34819$35044 = False, 
                 DynamicChart`click$34822$35044 = False}, {{
                  RGBColor[0.5, 0.5, 1.], 
                  EdgeForm[{
                    GrayLevel[0], 
                    Opacity[0.5]}], {{{}, {{
                    RGBColor[0.982864, 0.7431472, 0.3262672], 
                    EdgeForm[{
                    GrayLevel[0], 
                    Opacity[0.5]}], 
                    GeometricTransformationBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    DiskBox[{0, 0}, 1., {2.938909256584, 3.141592653589793}]},
                     ImageSizeCache -> {{22.585786437626904`, 
                    121.41421356237309`}, {-23.738871490884467`, \
-1.5857864376269042`}}], StatusArea[#, 1]& , TagBoxNote -> "1"], 
                    StyleBox["1", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]], Annotation[#, 
                    Style[1, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$34807$35044, 
                    FEPrivate`Not[DynamicChart`click$34807$35044]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], 
                    Dynamic[
                    If[
                    DynamicChart`click$34807$35044, {{{1., 0}, {
                    0, 1.}}, {-0.19897386467837905`, 0.02023366439748646}}, {{
                    1, 0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                    TrackedSymbols :> {
                    DynamicChart`click$34807$35044}]]}, {}, {
                    RGBColor[0.928, 0.5210666666666667, 0.2], 
                    EdgeForm[{
                    GrayLevel[0], 
                    Opacity[0.5]}], 
                    GeometricTransformationBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 1., {2.1281756685608277`, 
                    2.938909256584}]}, 
                    ImageSizeCache -> {{24.550912077387434`, 
                    121.4142135623731}, {-85.88406228186918, \
-1.585786437626897}}], StatusArea[#, 4]& , TagBoxNote -> "4"], 
                    StyleBox["4", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]], Annotation[#, 
                    Style[4, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$34810$35044, 
                    FEPrivate`Not[DynamicChart`click$34810$35044]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], 
                    Dynamic[
                    If[
                    DynamicChart`click$34810$35044, {{{1., 0}, {
                    0, 1.}}, {-0.16415268824145526`, 
                    0.11425364301895846`}}, {{1, 0}, {0, 1}}, {{1, 0}, {0, 
                    1}}], TrackedSymbols :> {
                    DynamicChart`click$34810$35044}]]}, {
                    RGBColor[0.784, 0.47519999999999996`, 0.2], 
                    EdgeForm[{
                    GrayLevel[0], 
                    Opacity[0.5]}], 
                    GeometricTransformationBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 1., {0.5067084925144831, 
                    2.1281756685608277`}]}, 
                    ImageSizeCache -> {{67.8052414462385, 
                    205.35148871225294`}, {-100.4142135623731, \
-1.5857864376268935`}}], StatusArea[#, 8]& , TagBoxNote -> "8"], 
                    StyleBox["8", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]], Annotation[#, 
                    Style[8, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$34813$35044, 
                    FEPrivate`Not[DynamicChart`click$34813$35044]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], 
                    Dynamic[
                    If[
                    DynamicChart`click$34813$35044, {{{1., 0}, {0, 1.}}, {
                    0.05013050645174408, 0.1936154237732409}}, {{1, 0}, {0, 
                    1}}, {{1, 0}, {0, 1}}], 
                    TrackedSymbols :> {DynamicChart`click$34813$35044}]]}, {
                    RGBColor[0.7116405333333333, 0.4816, 0.5483194666666666], 
                    
                    EdgeForm[{
                    GrayLevel[0], 
                    Opacity[0.5]}], 
                    GeometricTransformationBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 1., {-0.5067084925144822, 
                    0.5067084925144831}]}, 
                    ImageSizeCache -> {{118.5857864376269, 
                    217.4142135623731}, {-51.00320196535692, 
                    45.00320196535684}}], StatusArea[#, 5]& , TagBoxNote -> 
                    "5"], 
                    StyleBox["5", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]], Annotation[#, 
                    Style[5, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ], 
                    EventHandlerTag[{
                    "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$34816$35044, 
                    FEPrivate`Not[DynamicChart`click$34816$35044]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], 
                    Dynamic[
                    If[
                    DynamicChart`click$34816$35044, {{{1., 0}, {0, 1.}}, {0.2,
                     8.881784197001253*^-17}}, {{1, 0}, {0, 1}}, {{1, 0}, {0, 
                    1}}], TrackedSymbols :> {
                    DynamicChart`click$34816$35044}]]}, {
                    RGBColor[
                    0.6167072, 0.5082666666666666, 0.7586295999999999], 
                    EdgeForm[{
                    GrayLevel[0], 
                    Opacity[0.5]}], 
                    GeometricTransformationBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 
                    1., {-1.9254922715550338`, -0.5067084925144822}]}, 
                    ImageSizeCache -> {{85.24448216452421, 
                    205.351488712253}, {-4.4142135623731065`, 
                    94.4142135623731}}], StatusArea[#, 7]& , TagBoxNote -> 
                    "7"], 
                    StyleBox["7", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]], Annotation[#, 
                    Style[7, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$34819$35044, 
                    FEPrivate`Not[DynamicChart`click$34819$35044]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], 
                    Dynamic[
                    If[
                    DynamicChart`click$34819$35044, {{{1., 0}, {0, 1.}}, {
                    0.06946105056896418, -0.18755042642941605`}}, {{1, 0}, {0,
                     1}}, {{1, 0}, {0, 1}}], 
                    TrackedSymbols :> {DynamicChart`click$34819$35044}]]}, {
                    RGBColor[0.4992, 0.5552, 0.8309304], 
                    EdgeForm[{
                    GrayLevel[0], 
                    Opacity[0.5]}], 
                    GeometricTransformationBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 
                    1., {-3.141592653589793, -1.9254922715550338`}]}, 
                    ImageSizeCache -> {{22.585786437626904`, 
                    121.41421356237309`}, {-4.414213562373092, 
                    88.43841824849285}}], StatusArea[#, 6]& , TagBoxNote -> 
                    "6"], 
                    StyleBox["6", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]], Annotation[#, 
                    Style[6, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$34822$35044, 
                    FEPrivate`Not[DynamicChart`click$34822$35044]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], 
                    Dynamic[
                    If[
                    DynamicChart`click$34822$35044, {{{1., 0}, {
                    0, 1.}}, {-0.16415268824145524`, -0.11425364301895853`}}, \
{{1, 0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                    TrackedSymbols :> {
                    DynamicChart`click$34822$35044}]]}}}, {}}, {}}, {{{
                    GeometricTransformationBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    TagBox[{{}, {}}, StatusArea[#, 1]& , TagBoxNote -> "1"], 
                    StyleBox["1", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]], Annotation[#, 
                    Style[1, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$34807$35044, 
                    FEPrivate`Not[DynamicChart`click$34807$35044]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], 
                    Dynamic[
                    If[
                    DynamicChart`click$34807$35044, {{{1., 0}, {
                    0, 1.}}, {-0.19897386467837905`, 0.02023366439748646}}, {{
                    1, 0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                    TrackedSymbols :> {DynamicChart`click$34807$35044}]], {}, 
                    
                    GeometricTransformationBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    TagBox[{{}, {}}, StatusArea[#, 4]& , TagBoxNote -> "4"], 
                    StyleBox["4", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]], Annotation[#, 
                    Style[4, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$34810$35044, 
                    FEPrivate`Not[DynamicChart`click$34810$35044]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], 
                    Dynamic[
                    If[
                    DynamicChart`click$34810$35044, {{{1., 0}, {
                    0, 1.}}, {-0.16415268824145526`, 
                    0.11425364301895846`}}, {{1, 0}, {0, 1}}, {{1, 0}, {0, 
                    1}}], TrackedSymbols :> {
                    DynamicChart`click$34810$35044}]], 
                    GeometricTransformationBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    TagBox[{{}, {}}, StatusArea[#, 8]& , TagBoxNote -> "8"], 
                    StyleBox["8", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]], Annotation[#, 
                    Style[8, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$34813$35044, 
                    FEPrivate`Not[DynamicChart`click$34813$35044]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], 
                    Dynamic[
                    If[
                    DynamicChart`click$34813$35044, {{{1., 0}, {0, 1.}}, {
                    0.05013050645174408, 0.1936154237732409}}, {{1, 0}, {0, 
                    1}}, {{1, 0}, {0, 1}}], 
                    TrackedSymbols :> {DynamicChart`click$34813$35044}]], 
                    GeometricTransformationBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    TagBox[{{}, {}}, StatusArea[#, 5]& , TagBoxNote -> "5"], 
                    StyleBox["5", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]], Annotation[#, 
                    Style[5, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$34816$35044, 
                    FEPrivate`Not[DynamicChart`click$34816$35044]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], 
                    Dynamic[
                    If[
                    DynamicChart`click$34816$35044, {{{1., 0}, {0, 1.}}, {0.2,
                     8.881784197001253*^-17}}, {{1, 0}, {0, 1}}, {{1, 0}, {0, 
                    1}}], TrackedSymbols :> {
                    DynamicChart`click$34816$35044}]], 
                    GeometricTransformationBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    TagBox[{{}, {}}, StatusArea[#, 7]& , TagBoxNote -> "7"], 
                    StyleBox["7", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]], Annotation[#, 
                    Style[7, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$34819$35044, 
                    FEPrivate`Not[DynamicChart`click$34819$35044]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], 
                    Dynamic[
                    If[
                    DynamicChart`click$34819$35044, {{{1., 0}, {0, 1.}}, {
                    0.06946105056896418, -0.18755042642941605`}}, {{1, 0}, {0,
                     1}}, {{1, 0}, {0, 1}}], 
                    TrackedSymbols :> {DynamicChart`click$34819$35044}]], 
                    GeometricTransformationBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    TagBox[{{}, {}}, StatusArea[#, 6]& , TagBoxNote -> "6"], 
                    StyleBox["6", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]], Annotation[#, 
                    Style[6, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$34822$35044, 
                    FEPrivate`Not[DynamicChart`click$34822$35044]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], 
                    Dynamic[
                    If[
                    DynamicChart`click$34822$35044, {{{1., 0}, {
                    0, 1.}}, {-0.16415268824145524`, -0.11425364301895853`}}, \
{{1, 0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                    TrackedSymbols :> {
                    DynamicChart`click$34822$35044}]]}, {}}, {}}}, 
                DynamicModuleValues :> {}], {{}, {}}, {{{}, {}, {}, {}}, {}}},
               ContentSelectable -> False, GridLinesStyle -> Directive[
                GrayLevel[0.5, 0.4]], LabelStyle -> {
                GrayLevel[0], FontFamily -> "Arial"}, 
              PlotRange -> {{-1.2, 1.2}, {-1.2, 1.2}}, PlotRangePadding -> 
              Scaled[0.02]], ",", 
             GraphicsBox[{{}, {}, 
               
               DynamicModuleBox[{
                DynamicChart`click$34863$35045 = False, 
                 DynamicChart`click$34866$35045 = False, 
                 DynamicChart`click$34869$35045 = False, 
                 DynamicChart`click$34872$35045 = False, 
                 DynamicChart`click$34875$35045 = False, 
                 DynamicChart`click$34878$35045 = False, 
                 DynamicChart`click$34881$35045 = False, 
                 DynamicChart`click$34884$35045 = False, 
                 DynamicChart`click$34887$35045 = False, 
                 DynamicChart`click$34890$35045 = False, 
                 DynamicChart`click$34893$35045 = False, 
                 DynamicChart`click$34896$35045 = False}, {{
                  RGBColor[0.5, 0.5, 1.], 
                  EdgeForm[{
                    GrayLevel[0], 
                    Opacity[0.5]}], {{{}, {{
                    RGBColor[0.982864, 0.7431472, 0.3262672], 
                    EdgeForm[{
                    GrayLevel[0], 
                    Opacity[0.5]}], 
                    GeometricTransformationBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 1., {3.038589615767177, 
                    3.141592653589793}]}, 
                    ImageSizeCache -> {{22.585786437626904`, 
                    121.41421356237309`}, {-14.28502928755972, \
-1.5857864376269042`}}], StatusArea[#, 1]& , TagBoxNote -> "1"], 
                    StyleBox["1", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]], Annotation[#, 
                    Style[1, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$34863$35045, 
                    FEPrivate`Not[DynamicChart`click$34863$35045]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], 
                    Dynamic[
                    If[
                    DynamicChart`click$34863$35045, {{{1., 0}, {
                    0, 1.}}, {-0.19973481797696613`, 
                    0.010295750954069347`}}, {{1, 0}, {0, 1}}, {{1, 0}, {0, 
                    1}}], TrackedSymbols :> {
                    DynamicChart`click$34863$35045}]]}, {}, {
                    RGBColor[0.994288, 0.6103824, 0.24208906666666669`], 
                    EdgeForm[{
                    GrayLevel[0], 
                    Opacity[0.5]}], 
                    GeometricTransformationBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 1., {2.1115622753636316`, 
                    3.038589615767177}]}, 
                    ImageSizeCache -> {{23.094598378626355`, 
                    121.4142135623731}, {-86.71641785770099, \
-1.5857864376269113`}}], StatusArea[#, 9]& , TagBoxNote -> "9"], 
                    StyleBox["9", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]], Annotation[#, 
                    Style[9, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$34866$35045, 
                    FEPrivate`Not[DynamicChart`click$34866$35045]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], 
                    Dynamic[
                    If[
                    DynamicChart`click$34866$35045, {{{1., 0}, {
                    0, 1.}}, {-0.16875511196463713`, 
                    0.10733923879832011`}}, {{1, 0}, {0, 1}}, {{1, 0}, {0, 
                    1}}], TrackedSymbols :> {
                    DynamicChart`click$34866$35045}]]}, {
                    RGBColor[1., 0.544, 0.2], 
                    EdgeForm[{
                    GrayLevel[0], 
                    Opacity[0.5]}], 
                    GeometricTransformationBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 1., {1.1845349349600858`, 
                    2.1115622753636316`}]}, 
                    ImageSizeCache -> {{69.16567749268314, 
                    157.58009135135086`}, {-100.4142135623731, \
-1.5857864376268935`}}], StatusArea[#, 9]& , TagBoxNote -> "9"], 
                    StyleBox["9", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]], Annotation[#, 
                    Style[9, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$34869$35045, 
                    FEPrivate`Not[DynamicChart`click$34869$35045]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], 
                    Dynamic[
                    If[
                    DynamicChart`click$34869$35045, {{{1., 0}, {
                    0, 1.}}, {-0.015435092425329236`, 
                    0.19940350528970535`}}, {{1, 0}, {0, 1}}, {{1, 0}, {0, 
                    1}}], TrackedSymbols :> {
                    DynamicChart`click$34869$35045}]]}, {
                    RGBColor[0.928, 0.5210666666666667, 0.2], 
                    EdgeForm[{
                    GrayLevel[0], 
                    Opacity[0.5]}], 
                    GeometricTransformationBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 1., {0.6695197458470052, 
                    1.1845349349600858`}]}, 
                    ImageSizeCache -> {{118.5857864376269, 
                    196.6897149937373}, {-93.34131451451661, \
-1.5857864376268935`}}], StatusArea[#, 5]& , TagBoxNote -> "5"], 
                    StyleBox["5", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]], Annotation[#, 
                    Style[5, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$34872$35045, 
                    FEPrivate`Not[DynamicChart`click$34872$35045]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], 
                    Dynamic[
                    If[
                    DynamicChart`click$34872$35045, {{{1., 0}, {0, 1.}}, {
                    0.12004285610967365`, 0.15996784894794389`}}, {{1, 0}, {0,
                     1}}, {{1, 0}, {0, 1}}], 
                    TrackedSymbols :> {DynamicChart`click$34872$35045}]]}, {
                    RGBColor[0.8560000000000001, 0.4981333333333333, 0.2], 
                    EdgeForm[{
                    GrayLevel[0], 
                    Opacity[0.5]}], 
                    GeometricTransformationBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 1., {0.5665167080243889, 
                    0.6695197458470052}]}, 
                    ImageSizeCache -> {{118.5857864376269, 
                    202.4166673053989}, {-63.99272381780572, \
-1.5857864376268935`}}], StatusArea[#, 1]& , TagBoxNote -> "1"], 
                    StyleBox["1", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]], Annotation[#, 
                    Style[1, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$34875$35045, 
                    FEPrivate`Not[DynamicChart`click$34875$35045]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], 
                    Dynamic[
                    If[
                    DynamicChart`click$34875$35045, {{{1., 0}, {0, 1.}}, {
                    0.1630056675033623, 0.11588421964091276`}}, {{1, 0}, {0, 
                    1}}, {{1, 0}, {0, 1}}], 
                    TrackedSymbols :> {DynamicChart`click$34875$35045}]]}, {
                    RGBColor[0.784, 0.47519999999999996`, 0.2], 
                    EdgeForm[{
                    GrayLevel[0], 
                    Opacity[0.5]}], 
                    GeometricTransformationBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 1., {0.4635136702017726, 
                    0.5665167080243889}]}, 
                    ImageSizeCache -> {{118.5857864376269, 
                    207.28497345633747`}, {-55.93704818556675, \
-1.5857864376268935`}}], StatusArea[#, 1]& , TagBoxNote -> "1"], 
                    StyleBox["1", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]], Annotation[#, 
                    Style[1, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$34878$35045, 
                    FEPrivate`Not[DynamicChart`click$34878$35045]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], 
                    Dynamic[
                    If[
                    DynamicChart`click$34878$35045, {{{1., 0}, {0, 1.}}, {
                    0.17405704820603107`, 0.09850961359077287}}, {{1, 0}, {0, 
                    1}}, {{1, 0}, {0, 1}}], 
                    TrackedSymbols :> {DynamicChart`click$34878$35045}]]}, {
                    RGBColor[0.7478202666666667, 0.4784, 0.3741597333333332], 
                    
                    EdgeForm[{
                    GrayLevel[0], 
                    Opacity[0.5]}], 
                    GeometricTransformationBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 1., {-0.1545045567339245, 
                    0.4635136702017726}]}, 
                    ImageSizeCache -> {{118.5857864376269, 
                    217.4142135623731}, {-47.335217688944034`, 
                    13.187708925963058`}}], StatusArea[#, 6]& , TagBoxNote -> 
                    "6"], 
                    StyleBox["6", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]], Annotation[#, 
                    Style[6, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$34881$35045, 
                    FEPrivate`Not[DynamicChart`click$34881$35045]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], 
                    Dynamic[
                    If[
                    DynamicChart`click$34881$35045, {{{1., 0}, {0, 1.}}, {
                    0.19761757921821543`, 0.030778115340812318`}}, {{1, 0}, {
                    0, 1}}, {{1, 0}, {0, 1}}], 
                    TrackedSymbols :> {DynamicChart`click$34881$35045}]]}, {
                    RGBColor[0.7116405333333333, 0.4816, 0.5483194666666666], 
                    
                    EdgeForm[{
                    GrayLevel[0], 
                    Opacity[0.5]}], 
                    GeometricTransformationBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 
                    1., {-0.36051063237915715`, -0.1545045567339245}]}, 
                    ImageSizeCache -> {{118.5857864376269, 
                    216.2706515871165}, {-4.414213562373114, 
                    32.27841387108625}}], StatusArea[#, 2]& , TagBoxNote -> 
                    "2"], 
                    StyleBox["2", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]], Annotation[#, 
                    Style[2, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$34884$35045, 
                    FEPrivate`Not[DynamicChart`click$34884$35045]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], 
                    Dynamic[
                    If[
                    DynamicChart`click$34884$35045, {{{1., 0}, {0, 1.}}, {
                    0.19340554495826406`, -0.050934224048245824`}}, {{1, 0}, {
                    0, 1}}, {{1, 0}, {0, 1}}], 
                    TrackedSymbols :> {DynamicChart`click$34884$35045}]]}, {
                    RGBColor[0.6754608, 0.4848, 0.7224792], 
                    EdgeForm[{
                    GrayLevel[0], 
                    Opacity[0.5]}], 
                    GeometricTransformationBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 
                    1., {-1.08153189713747, -0.36051063237915715`}]}, 
                    ImageSizeCache -> {{118.5857864376269, 
                    211.24302819026047`}, {-4.4142135623731065`, 
                    83.15137820162568}}], StatusArea[#, 7]& , TagBoxNote -> 
                    "7"], 
                    StyleBox["7", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]], Annotation[#, 
                    Style[7, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$34887$35045, 
                    FEPrivate`Not[DynamicChart`click$34887$35045]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], 
                    Dynamic[
                    If[
                    DynamicChart`click$34887$35045, {{{1., 0}, {0, 1.}}, {
                    0.15022638617410394`, -0.13203042413424643`}}, {{1, 0}, {
                    0, 1}}, {{1, 0}, {0, 1}}], 
                    TrackedSymbols :> {DynamicChart`click$34887$35045}]]}, {
                    RGBColor[
                    0.6167072, 0.5082666666666666, 0.7586295999999999], 
                    EdgeForm[{
                    GrayLevel[0], 
                    Opacity[0.5]}], 
                    GeometricTransformationBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 
                    1., {-1.8025531618957826`, -1.08153189713747}]}, 
                    ImageSizeCache -> {{96.53576319297456, 
                    166.53198089299582`}, {-4.4142135623731065`, 
                    94.4142135623731}}], StatusArea[#, 7]& , TagBoxNote -> 
                    "7"], 
                    StyleBox["7", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]], Annotation[#, 
                    Style[7, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$34890$35045, 
                    FEPrivate`Not[DynamicChart`click$34890$35045]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], 
                    Dynamic[
                    If[
                    DynamicChart`click$34890$35045, {{{1., 0}, {0, 1.}}, {
                    0.025679671029310198`, -0.1983445348272203}}, {{1, 0}, {0,
                     1}}, {{1, 0}, {0, 1}}], 
                    TrackedSymbols :> {DynamicChart`click$34890$35045}]]}, {
                    RGBColor[
                    0.5579536, 0.5317333333333334, 0.7947799999999999], 
                    EdgeForm[{
                    GrayLevel[0], 
                    Opacity[0.5]}], 
                    GeometricTransformationBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 
                    1., {-2.523574426654096, -1.8025531618957826`}]}, 
                    ImageSizeCache -> {{40.34306603601303, 
                    121.41421356237309`}, {-4.414213562373092, 
                    91.84759343760982}}], StatusArea[#, 7]& , TagBoxNote -> 
                    "7"], 
                    StyleBox["7", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]], Annotation[#, 
                    Style[7, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$34893$35045, 
                    FEPrivate`Not[DynamicChart`click$34893$35045]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], 
                    Dynamic[
                    If[
                    DynamicChart`click$34893$35045, {{{1., 0}, {
                    0, 1.}}, {-0.11164874440537292`, -0.16593540271052382`}}, \
{{1, 0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                    TrackedSymbols :> {DynamicChart`click$34893$35045}]]}, {
                    RGBColor[0.4992, 0.5552, 0.8309304], 
                    EdgeForm[{
                    GrayLevel[0], 
                    Opacity[0.5]}], 
                    GeometricTransformationBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 
                    1., {-3.141592653589793, -2.523574426654096}]}, 
                    ImageSizeCache -> {{22.585786437626904`, 
                    121.41421356237309`}, {-4.414213562373099, 
                    54.03863899001122}}], StatusArea[#, 6]& , TagBoxNote -> 
                    "6"], 
                    StyleBox["6", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]], Annotation[#, 
                    Style[6, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$34896$35045, 
                    FEPrivate`Not[DynamicChart`click$34896$35045]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], 
                    Dynamic[
                    If[
                    DynamicChart`click$34896$35045, {{{1., 0}, {
                    0, 1.}}, {-0.19052707616067652`, -0.06082296646550361}}, \
{{1, 0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                    TrackedSymbols :> {
                    DynamicChart`click$34896$35045}]]}}}, {}}, {}}, {{{
                    GeometricTransformationBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    TagBox[{{}, {}}, StatusArea[#, 1]& , TagBoxNote -> "1"], 
                    StyleBox["1", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]], Annotation[#, 
                    Style[1, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$34863$35045, 
                    FEPrivate`Not[DynamicChart`click$34863$35045]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], 
                    Dynamic[
                    If[
                    DynamicChart`click$34863$35045, {{{1., 0}, {
                    0, 1.}}, {-0.19973481797696613`, 
                    0.010295750954069347`}}, {{1, 0}, {0, 1}}, {{1, 0}, {0, 
                    1}}], 
                    TrackedSymbols :> {DynamicChart`click$34863$35045}]], {}, 
                    
                    GeometricTransformationBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    TagBox[{{}, {}}, StatusArea[#, 9]& , TagBoxNote -> "9"], 
                    StyleBox["9", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]], Annotation[#, 
                    Style[9, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$34866$35045, 
                    FEPrivate`Not[DynamicChart`click$34866$35045]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], 
                    Dynamic[
                    If[
                    DynamicChart`click$34866$35045, {{{1., 0}, {
                    0, 1.}}, {-0.16875511196463713`, 
                    0.10733923879832011`}}, {{1, 0}, {0, 1}}, {{1, 0}, {0, 
                    1}}], TrackedSymbols :> {
                    DynamicChart`click$34866$35045}]], 
                    GeometricTransformationBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    TagBox[{{}, {}}, StatusArea[#, 9]& , TagBoxNote -> "9"], 
                    StyleBox["9", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]], Annotation[#, 
                    Style[9, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$34869$35045, 
                    FEPrivate`Not[DynamicChart`click$34869$35045]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], 
                    Dynamic[
                    If[
                    DynamicChart`click$34869$35045, {{{1., 0}, {
                    0, 1.}}, {-0.015435092425329236`, 
                    0.19940350528970535`}}, {{1, 0}, {0, 1}}, {{1, 0}, {0, 
                    1}}], 
                    TrackedSymbols :> {DynamicChart`click$34869$35045}]], 
                    GeometricTransformationBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    TagBox[{{}, {}}, StatusArea[#, 5]& , TagBoxNote -> "5"], 
                    StyleBox["5", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]], Annotation[#, 
                    Style[5, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$34872$35045, 
                    FEPrivate`Not[DynamicChart`click$34872$35045]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], 
                    Dynamic[
                    If[
                    DynamicChart`click$34872$35045, {{{1., 0}, {0, 1.}}, {
                    0.12004285610967365`, 0.15996784894794389`}}, {{1, 0}, {0,
                     1}}, {{1, 0}, {0, 1}}], 
                    TrackedSymbols :> {DynamicChart`click$34872$35045}]], 
                    GeometricTransformationBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    TagBox[{{}, {}}, StatusArea[#, 1]& , TagBoxNote -> "1"], 
                    StyleBox["1", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]], Annotation[#, 
                    Style[1, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$34875$35045, 
                    FEPrivate`Not[DynamicChart`click$34875$35045]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], 
                    Dynamic[
                    If[
                    DynamicChart`click$34875$35045, {{{1., 0}, {0, 1.}}, {
                    0.1630056675033623, 0.11588421964091276`}}, {{1, 0}, {0, 
                    1}}, {{1, 0}, {0, 1}}], 
                    TrackedSymbols :> {DynamicChart`click$34875$35045}]], 
                    GeometricTransformationBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    TagBox[{{}, {}}, StatusArea[#, 1]& , TagBoxNote -> "1"], 
                    StyleBox["1", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]], Annotation[#, 
                    Style[1, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$34878$35045, 
                    FEPrivate`Not[DynamicChart`click$34878$35045]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], 
                    Dynamic[
                    If[
                    DynamicChart`click$34878$35045, {{{1., 0}, {0, 1.}}, {
                    0.17405704820603107`, 0.09850961359077287}}, {{1, 0}, {0, 
                    1}}, {{1, 0}, {0, 1}}], 
                    TrackedSymbols :> {DynamicChart`click$34878$35045}]], 
                    GeometricTransformationBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    TagBox[{{}, {}}, StatusArea[#, 6]& , TagBoxNote -> "6"], 
                    StyleBox["6", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]], Annotation[#, 
                    Style[6, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$34881$35045, 
                    FEPrivate`Not[DynamicChart`click$34881$35045]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], 
                    Dynamic[
                    If[
                    DynamicChart`click$34881$35045, {{{1., 0}, {0, 1.}}, {
                    0.19761757921821543`, 0.030778115340812318`}}, {{1, 0}, {
                    0, 1}}, {{1, 0}, {0, 1}}], 
                    TrackedSymbols :> {DynamicChart`click$34881$35045}]], 
                    GeometricTransformationBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    TagBox[{{}, {}}, StatusArea[#, 2]& , TagBoxNote -> "2"], 
                    StyleBox["2", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]], Annotation[#, 
                    Style[2, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$34884$35045, 
                    FEPrivate`Not[DynamicChart`click$34884$35045]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], 
                    Dynamic[
                    If[
                    DynamicChart`click$34884$35045, {{{1., 0}, {0, 1.}}, {
                    0.19340554495826406`, -0.050934224048245824`}}, {{1, 0}, {
                    0, 1}}, {{1, 0}, {0, 1}}], 
                    TrackedSymbols :> {DynamicChart`click$34884$35045}]], 
                    GeometricTransformationBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    TagBox[{{}, {}}, StatusArea[#, 7]& , TagBoxNote -> "7"], 
                    StyleBox["7", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]], Annotation[#, 
                    Style[7, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$34887$35045, 
                    FEPrivate`Not[DynamicChart`click$34887$35045]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], 
                    Dynamic[
                    If[
                    DynamicChart`click$34887$35045, {{{1., 0}, {0, 1.}}, {
                    0.15022638617410394`, -0.13203042413424643`}}, {{1, 0}, {
                    0, 1}}, {{1, 0}, {0, 1}}], 
                    TrackedSymbols :> {DynamicChart`click$34887$35045}]], 
                    GeometricTransformationBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    TagBox[{{}, {}}, StatusArea[#, 7]& , TagBoxNote -> "7"], 
                    StyleBox["7", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]], Annotation[#, 
                    Style[7, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$34890$35045, 
                    FEPrivate`Not[DynamicChart`click$34890$35045]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], 
                    Dynamic[
                    If[
                    DynamicChart`click$34890$35045, {{{1., 0}, {0, 1.}}, {
                    0.025679671029310198`, -0.1983445348272203}}, {{1, 0}, {0,
                     1}}, {{1, 0}, {0, 1}}], 
                    TrackedSymbols :> {DynamicChart`click$34890$35045}]], 
                    GeometricTransformationBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    TagBox[{{}, {}}, StatusArea[#, 7]& , TagBoxNote -> "7"], 
                    StyleBox["7", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]], Annotation[#, 
                    Style[7, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$34893$35045, 
                    FEPrivate`Not[DynamicChart`click$34893$35045]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], 
                    Dynamic[
                    If[
                    DynamicChart`click$34893$35045, {{{1., 0}, {
                    0, 1.}}, {-0.11164874440537292`, -0.16593540271052382`}}, \
{{1, 0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                    TrackedSymbols :> {DynamicChart`click$34893$35045}]], 
                    GeometricTransformationBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    TagBox[{{}, {}}, StatusArea[#, 6]& , TagBoxNote -> "6"], 
                    StyleBox["6", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]], Annotation[#, 
                    Style[6, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$34896$35045, 
                    FEPrivate`Not[DynamicChart`click$34896$35045]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], 
                    Dynamic[
                    If[
                    DynamicChart`click$34896$35045, {{{1., 0}, {
                    0, 1.}}, {-0.19052707616067652`, -0.06082296646550361}}, \
{{1, 0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                    TrackedSymbols :> {
                    DynamicChart`click$34896$35045}]]}, {}}, {}}}, 
                DynamicModuleValues :> {}], {{}, {}}, {{{}, {}, {}, {}}, {}}},
               ContentSelectable -> False, GridLinesStyle -> Directive[
                GrayLevel[0.5, 0.4]], LabelStyle -> {
                GrayLevel[0], FontFamily -> "Arial"}, 
              PlotRange -> {{-1.2, 1.2}, {-1.2, 1.2}}, PlotRangePadding -> 
              Scaled[0.02]], ",", 
             GraphicsBox[{{}, {}, 
               
               DynamicModuleBox[{
                DynamicChart`click$34949$35046 = False, 
                 DynamicChart`click$34952$35046 = False, 
                 DynamicChart`click$34955$35046 = False, 
                 DynamicChart`click$34958$35046 = False, 
                 DynamicChart`click$34961$35046 = False, 
                 DynamicChart`click$34964$35046 = False, 
                 DynamicChart`click$34967$35046 = False, 
                 DynamicChart`click$34970$35046 = False, 
                 DynamicChart`click$34973$35046 = False, 
                 DynamicChart`click$34976$35046 = False, 
                 DynamicChart`click$34979$35046 = False, 
                 DynamicChart`click$34982$35046 = False, 
                 DynamicChart`click$34985$35046 = False, 
                 DynamicChart`click$34988$35046 = False, 
                 DynamicChart`click$34991$35046 = False, 
                 DynamicChart`click$34994$35046 = False, 
                 DynamicChart`click$34997$35046 = False}, {{
                  RGBColor[0.5, 0.5, 1.], 
                  EdgeForm[{
                    GrayLevel[0], 
                    Opacity[0.5]}], {{{}, {{
                    RGBColor[0.982864, 0.7431472, 0.3262672], 
                    EdgeForm[{
                    GrayLevel[0], 
                    Opacity[0.5]}], 
                    GeometricTransformationBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 1., {3.0649684425266273`, 
                    3.141592653589793}]}, 
                    ImageSizeCache -> {{22.585786437626904`, 
                    121.41421356237309`}, {-11.762941834676706`, \
-1.5857864376269042`}}], StatusArea[#, 1]& , TagBoxNote -> "1"], 
                    StyleBox["1", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]], Annotation[#, 
                    Style[1, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$34949$35046, 
                    FEPrivate`Not[DynamicChart`click$34949$35046]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], 
                    Dynamic[
                    If[
                    DynamicChart`click$34949$35046, {{{1., 0}, {
                    0, 1.}}, {-0.19985323621016202`, 
                    0.007660546738007111}}, {{1, 0}, {0, 1}}, {{1, 0}, {0, 
                    1}}], 
                    TrackedSymbols :> {DynamicChart`click$34949$35046}]]}, {
                    RGBColor[
                    0.986672, 0.6988922666666667, 0.2982078222222222], 
                    EdgeForm[{
                    GrayLevel[0], 
                    Opacity[0.5]}], 
                    GeometricTransformationBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 1., {2.988344231463462, 
                    3.0649684425266273`}]}, 
                    ImageSizeCache -> {{22.86746952398782, 
                    121.41421356237309`}, {-19.068544847385045`, \
-1.5857864376269042`}}], StatusArea[#, 1]& , TagBoxNote -> "1"], 
                    StyleBox["1", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]], Annotation[#, 
                    Style[1, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$34952$35046, 
                    FEPrivate`Not[DynamicChart`click$34952$35046]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], 
                    Dynamic[
                    If[
                    DynamicChart`click$34952$35046, {{{1., 0}, {
                    0, 1.}}, {-0.19868041795193503`, 
                    0.022936685079680164`}}, {{1, 0}, {0, 1}}, {{1, 0}, {0, 
                    1}}], TrackedSymbols :> {
                    DynamicChart`click$34952$35046}]]}, {
                    RGBColor[0.99048, 0.6546373333333334, 0.2701484444444444], 
                    EdgeForm[{
                    GrayLevel[0], 
                    Opacity[0.5]}], 
                    GeometricTransformationBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 1., {2.6052231761476334`, 
                    2.988344231463462}]}, 
                    ImageSizeCache -> {{23.71086575471345, 
                    121.41421356237309`}, {-53.47200678929569, \
-1.5857864376269042`}}], StatusArea[#, 5]& , TagBoxNote -> "5"], 
                    StyleBox["5", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]], Annotation[#, 
                    Style[5, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$34955$35046, 
                    FEPrivate`Not[DynamicChart`click$34955$35046]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], 
                    Dynamic[
                    If[
                    DynamicChart`click$34955$35046, {{{1., 0}, {
                    0, 1.}}, {-0.18822800959591232`, 0.06760337568170055}}, {{
                    1, 0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                    TrackedSymbols :> {DynamicChart`click$34955$35046}]]}, {
                    RGBColor[0.994288, 0.6103824, 0.24208906666666669`], 
                    EdgeForm[{
                    GrayLevel[0], 
                    Opacity[0.5]}], 
                    GeometricTransformationBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 1., {2.451974754021302, 
                    2.6052231761476334`}]}, 
                    ImageSizeCache -> {{36.0671041668556, 
                    121.41421356237309`}, {-65.49348802572283, \
-1.5857864376269033`}}], StatusArea[#, 2]& , TagBoxNote -> "2"], 
                    StyleBox["2", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]], Annotation[#, 
                    Style[2, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$34958$35046, 
                    FEPrivate`Not[DynamicChart`click$34958$35046]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], 
                    Dynamic[
                    If[
                    DynamicChart`click$34958$35046, {{{1., 0}, {
                    0, 1.}}, {-0.16358587215334358`, 
                    0.11506373204372407`}}, {{1, 0}, {0, 1}}, {{1, 0}, {0, 
                    1}}], TrackedSymbols :> {
                    DynamicChart`click$34958$35046}]]}, {
                    RGBColor[
                    0.998096, 0.5661274666666667, 0.2140296888888889], 
                    EdgeForm[{
                    GrayLevel[0], 
                    Opacity[0.5]}], 
                    GeometricTransformationBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 1., {1.7623568544528108`, 
                    2.451974754021302}]}, 
                    ImageSizeCache -> {{44.52282517472038, 
                    121.41421356237309`}, {-98.65821228207116, \
-1.5857864376269104`}}], StatusArea[#, 9]& , TagBoxNote -> "9"], 
                    StyleBox["9", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]], Annotation[#, 
                    Style[9, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$34961$35046, 
                    FEPrivate`Not[DynamicChart`click$34961$35046]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], 
                    Dynamic[
                    If[
                    DynamicChart`click$34961$35046, {{{1., 0}, {
                    0, 1.}}, {-0.10220373588942211`, 
                    0.17191392139744022`}}, {{1, 0}, {0, 1}}, {{1, 0}, {0, 
                    1}}], TrackedSymbols :> {
                    DynamicChart`click$34961$35046}]]}, {
                    RGBColor[0.976, 0.5363555555555556, 0.2], 
                    EdgeForm[{
                    GrayLevel[0], 
                    Opacity[0.5]}], 
                    GeometricTransformationBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 1., {1.6091084323264795`, 
                    1.7623568544528108`}]}, 
                    ImageSizeCache -> {{100.30823995781874`, 
                    121.4142135623731}, {-100.34376694325086`, \
-1.5857864376269104`}}], StatusArea[#, 2]& , TagBoxNote -> "2"], 
                    StyleBox["2", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]], Annotation[#, 
                    Style[2, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ], 
                    EventHandlerTag[{
                    "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$34964$35046, 
                    FEPrivate`Not[DynamicChart`click$34964$35046]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], 
                    Dynamic[
                    If[
                    DynamicChart`click$34964$35046, {{{1., 0}, {
                    0, 1.}}, {-0.02293668507968008, 0.19868041795193503`}}, {{
                    1, 0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                    TrackedSymbols :> {DynamicChart`click$34964$35046}]]}, {
                    RGBColor[0.928, 0.5210666666666667, 0.2], 
                    EdgeForm[{
                    GrayLevel[0], 
                    Opacity[0.5]}], 
                    GeometricTransformationBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 1., {1.5324842212633136`, 
                    1.6091084323264795`}]}, 
                    ImageSizeCache -> {{114.90872400338351`, 
                    125.0912759966165}, {-100.41421356237309`, \
-1.5857864376269104`}}], StatusArea[#, 1]& , TagBoxNote -> "1"], 
                    StyleBox["1", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]], Annotation[#, 
                    Style[1, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$34967$35046, 
                    FEPrivate`Not[DynamicChart`click$34967$35046]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], 
                    Dynamic[
                    If[
                    DynamicChart`click$34967$35046, {{{1., 0}, {0, 1.}}, {
                    1.2246467991473533`*^-17, 0.2}}, {{1, 0}, {0, 1}}, {{1, 
                    0}, {0, 1}}], 
                    TrackedSymbols :> {DynamicChart`click$34967$35046}]]}, {
                    RGBColor[0.8800000000000001, 0.5057777777777778, 0.2], 
                    EdgeForm[{
                    GrayLevel[0], 
                    Opacity[0.5]}], 
                    GeometricTransformationBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 1., {1.1493631659474852`, 
                    1.5324842212633136`}]}, 
                    ImageSizeCache -> {{118.5857864376269, 
                    160.68480273082173`}, {-100.34376694325087`, \
-1.5857864376268935`}}], StatusArea[#, 5]& , TagBoxNote -> "5"], 
                    StyleBox["5", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]], Annotation[#, 
                    Style[5, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$34970$35046, 
                    FEPrivate`Not[DynamicChart`click$34970$35046]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], 
                    Dynamic[
                    If[
                    DynamicChart`click$34970$35046, {{{1., 0}, {0, 1.}}, {
                    0.04557070178062755, 0.1947390847755558}}, {{1, 0}, {0, 
                    1}}, {{1, 0}, {0, 1}}], 
                    TrackedSymbols :> {
                    DynamicChart`click$34970$35046}]]}, {}, {
                    RGBColor[0.784, 0.47519999999999996`, 0.2], 
                    EdgeForm[{
                    GrayLevel[0], 
                    Opacity[0.5]}], 
                    GeometricTransformationBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 1., {0.8428663216948227, 
                    1.1493631659474852`}]}, 
                    ImageSizeCache -> {{118.5857864376269, 
                    185.28548077826736`}, {-92.01456074412191, \
-1.5857864376268935`}}], StatusArea[#, 4]& , TagBoxNote -> "4"], 
                    StyleBox["4", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]], Annotation[#, 
                    Style[4, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$34973$35046, 
                    FEPrivate`Not[DynamicChart`click$34973$35046]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], 
                    Dynamic[
                    If[
                    DynamicChart`click$34973$35046, {{{1., 0}, {0, 1.}}, {
                    0.10871351000024423`, 0.16787308522639}}, {{1, 0}, {0, 
                    1}}, {{1, 0}, {0, 1}}], 
                    TrackedSymbols :> {DynamicChart`click$34973$35046}]]}, {
                    RGBColor[
                    0.7598801777777778, 0.4773333333333333, 
                    0.3161064888888889], 
                    EdgeForm[{
                    GrayLevel[0], 
                    Opacity[0.5]}], 
                    GeometricTransformationBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 1., {0.3831210553158284, 
                    0.8428663216948227}]}, 
                    ImageSizeCache -> {{118.5857864376269, 
                    210.4544488681742}, {-76.08332283712153, \
-1.5857864376268935`}}], StatusArea[#, 6]& , TagBoxNote -> "6"], 
                    StyleBox["6", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]], Annotation[#, 
                    Style[6, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$34976$35046, 
                    FEPrivate`Not[DynamicChart`click$34976$35046]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], 
                    Dynamic[
                    If[
                    DynamicChart`click$34976$35046, {{{1., 0}, {0, 1.}}, {
                    0.16358587215334353`, 0.11506373204372414`}}, {{1, 0}, {0,
                     1}}, {{1, 0}, {0, 1}}], 
                    TrackedSymbols :> {
                    DynamicChart`click$34976$35046}]]}, {}, {
                    RGBColor[0.7116405333333333, 0.4816, 0.5483194666666666], 
                    
                    EdgeForm[{
                    GrayLevel[0], 
                    Opacity[0.5]}], 
                    GeometricTransformationBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 1., {-0.07662421106316586, 
                    0.3831210553158284}]}, 
                    ImageSizeCache -> {{118.5857864376269, 
                    217.4142135623731}, {-40.300652459086905`, 
                    5.7629418346767025`}}], StatusArea[#, 6]& , TagBoxNote -> 
                    "6"], 
                    StyleBox["6", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]], Annotation[#, 
                    Style[6, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$34979$35046, 
                    FEPrivate`Not[DynamicChart`click$34979$35046]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], 
                    Dynamic[
                    If[
                    DynamicChart`click$34979$35046, {{{1., 0}, {0, 1.}}, {
                    0.19765608475606972`, 0.030529856843774877`}}, {{1, 0}, {
                    0, 1}}, {{1, 0}, {0, 1}}], 
                    TrackedSymbols :> {DynamicChart`click$34979$35046}]]}, {
                    RGBColor[
                    0.6875207111111111, 0.48373333333333335`, 
                    0.6644259555555556], 
                    EdgeForm[{
                    GrayLevel[0], 
                    Opacity[0.5]}], 
                    GeometricTransformationBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 
                    1., {-0.689617899568491, -0.07662421106316586}]}, 
                    ImageSizeCache -> {{118.5857864376269, 
                    217.13253047601216`}, {-4.414213562373114, 
                    59.49348802572284}}], StatusArea[#, 8]& , TagBoxNote -> 
                    "8"], 
                    StyleBox["8", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]], Annotation[#, 
                    Style[8, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$34982$35046, 
                    FEPrivate`Not[DynamicChart`click$34982$35046]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], 
                    Dynamic[
                    If[
                    DynamicChart`click$34982$35046, {{{1., 0}, {0, 1.}}, {
                    0.18550049022041895`, -0.07476341436815374}}, {{1, 0}, {0,
                     1}}, {{1, 0}, {0, 1}}], 
                    TrackedSymbols :> {DynamicChart`click$34982$35046}]]}, {
                    RGBColor[
                    0.6558762666666667, 0.4926222222222222, 
                    0.7345293333333333], 
                    EdgeForm[{
                    GrayLevel[0], 
                    Opacity[0.5]}], 
                    GeometricTransformationBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 
                    1., {-0.9961147438211544, -0.689617899568491}]}, 
                    ImageSizeCache -> {{118.5857864376269, 
                    195.47717482527963`}, {-4.4142135623731065`, 
                    78.99329447104033}}], StatusArea[#, 4]& , TagBoxNote -> 
                    "4"], 
                    StyleBox["4", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]], Annotation[#, 
                    Style[4, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$34985$35046, 
                    FEPrivate`Not[DynamicChart`click$34985$35046]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], 
                    Dynamic[
                    If[
                    DynamicChart`click$34985$35046, {{{1., 0}, {0, 1.}}, {
                    0.13306514003311307`, -0.14931064432239255`}}, {{1, 0}, {
                    0, 1}}, {{1, 0}, {0, 1}}], 
                    TrackedSymbols :> {DynamicChart`click$34985$35046}]]}, {
                    RGBColor[
                    0.6167072, 0.5082666666666666, 0.7586295999999999], 
                    EdgeForm[{
                    GrayLevel[0], 
                    Opacity[0.5]}], 
                    GeometricTransformationBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 
                    1., {-1.4558600102001478`, -0.9961147438211544}]}, 
                    ImageSizeCache -> {{118.5857864376269, 
                    173.59669836249032`}, {-4.4142135623731065`, 
                    93.78081417930191}}], StatusArea[#, 6]& , TagBoxNote -> 
                    "6"], 
                    StyleBox["6", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]], Annotation[#, 
                    Style[6, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$34988$35046, 
                    FEPrivate`Not[DynamicChart`click$34988$35046]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], 
                    Dynamic[
                    If[
                    DynamicChart`click$34988$35046, {{{1., 0}, {0, 1.}}, {
                    0.06760337568170054, -0.18822800959591235`}}, {{1, 0}, {0,
                     1}}, {{1, 0}, {0, 1}}], 
                    TrackedSymbols :> {DynamicChart`click$34988$35046}]]}, {
                    RGBColor[
                    0.5775381333333334, 0.5239111111111111, 
                    0.7827298666666667], 
                    EdgeForm[{
                    GrayLevel[0], 
                    Opacity[0.5]}], 
                    GeometricTransformationBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 
                    1., {-2.1454779097686396`, -1.4558600102001478`}]}, 
                    ImageSizeCache -> {{66.40330163750964, 
                    132.42382240061954`}, {-4.4142135623731065`, 
                    94.4142135623731}}], StatusArea[#, 9]& , TagBoxNote -> 
                    "9"], 
                    StyleBox["9", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]], Annotation[#, 
                    Style[9, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$34991$35046, 
                    FEPrivate`Not[DynamicChart`click$34991$35046]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], 
                    Dynamic[
                    If[
                    DynamicChart`click$34991$35046, {{{1., 0}, {
                    0, 1.}}, {-0.04557070178062752, -0.19473908477555582`}}, \
{{1, 0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                    TrackedSymbols :> {DynamicChart`click$34991$35046}]]}, {
                    RGBColor[
                    0.5383690666666667, 0.5395555555555556, 
                    0.8068301333333333], 
                    EdgeForm[{
                    GrayLevel[0], 
                    Opacity[0.5]}], 
                    GeometricTransformationBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 
                    1., {-2.681847387210799, -2.1454779097686396`}]}, 
                    ImageSizeCache -> {{32.55389296936558, 
                    121.41421356237309`}, {-4.414213562373092, 
                    78.99329447104027}}], StatusArea[#, 7]& , TagBoxNote -> 
                    "7"], 
                    StyleBox["7", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]], Annotation[#, 
                    Style[7, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$34994$35046, 
                    FEPrivate`Not[DynamicChart`click$34994$35046]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], 
                    Dynamic[
                    If[
                    DynamicChart`click$34994$35046, {{{1., 0}, {
                    0, 1.}}, {-0.14931064432239255`, -0.13306514003311307`}}, \
{{1, 0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                    TrackedSymbols :> {DynamicChart`click$34994$35046}]]}, {
                    RGBColor[0.4992, 0.5552, 0.8309304], 
                    EdgeForm[{
                    GrayLevel[0], 
                    Opacity[0.5]}], 
                    GeometricTransformationBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 
                    1., {-3.141592653589793, -2.681847387210799}]}, 
                    ImageSizeCache -> {{22.585786437626904`, 
                    121.41421356237309`}, {-4.4142135623731065`, 
                    41.01131799760124}}], StatusArea[#, 6]& , TagBoxNote -> 
                    "6"], 
                    StyleBox["6", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]], Annotation[#, 
                    Style[6, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$34997$35046, 
                    FEPrivate`Not[DynamicChart`click$34997$35046]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], 
                    Dynamic[
                    If[
                    DynamicChart`click$34997$35046, {{{1., 0}, {
                    0, 1.}}, {-0.1947390847755558, -0.045570701780627554`}}, \
{{1, 0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                    TrackedSymbols :> {
                    DynamicChart`click$34997$35046}]]}}}, {}}, {}}, {{{
                    GeometricTransformationBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    TagBox[{{}, {}}, StatusArea[#, 1]& , TagBoxNote -> "1"], 
                    StyleBox["1", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]], Annotation[#, 
                    Style[1, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$34949$35046, 
                    FEPrivate`Not[DynamicChart`click$34949$35046]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], 
                    Dynamic[
                    If[
                    DynamicChart`click$34949$35046, {{{1., 0}, {
                    0, 1.}}, {-0.19985323621016202`, 
                    0.007660546738007111}}, {{1, 0}, {0, 1}}, {{1, 0}, {0, 
                    1}}], TrackedSymbols :> {
                    DynamicChart`click$34949$35046}]], 
                    GeometricTransformationBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    TagBox[{{}, {}}, StatusArea[#, 1]& , TagBoxNote -> "1"], 
                    StyleBox["1", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]], Annotation[#, 
                    Style[1, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$34952$35046, 
                    FEPrivate`Not[DynamicChart`click$34952$35046]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], 
                    Dynamic[
                    If[
                    DynamicChart`click$34952$35046, {{{1., 0}, {
                    0, 1.}}, {-0.19868041795193503`, 
                    0.022936685079680164`}}, {{1, 0}, {0, 1}}, {{1, 0}, {0, 
                    1}}], TrackedSymbols :> {
                    DynamicChart`click$34952$35046}]], 
                    GeometricTransformationBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    TagBox[{{}, {}}, StatusArea[#, 5]& , TagBoxNote -> "5"], 
                    StyleBox["5", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]], Annotation[#, 
                    Style[5, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$34955$35046, 
                    FEPrivate`Not[DynamicChart`click$34955$35046]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], 
                    Dynamic[
                    If[
                    DynamicChart`click$34955$35046, {{{1., 0}, {
                    0, 1.}}, {-0.18822800959591232`, 0.06760337568170055}}, {{
                    1, 0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                    TrackedSymbols :> {DynamicChart`click$34955$35046}]], 
                    GeometricTransformationBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    TagBox[{{}, {}}, StatusArea[#, 2]& , TagBoxNote -> "2"], 
                    StyleBox["2", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]], Annotation[#, 
                    Style[2, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$34958$35046, 
                    FEPrivate`Not[DynamicChart`click$34958$35046]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], 
                    Dynamic[
                    If[
                    DynamicChart`click$34958$35046, {{{1., 0}, {
                    0, 1.}}, {-0.16358587215334358`, 
                    0.11506373204372407`}}, {{1, 0}, {0, 1}}, {{1, 0}, {0, 
                    1}}], TrackedSymbols :> {
                    DynamicChart`click$34958$35046}]], 
                    GeometricTransformationBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    TagBox[{{}, {}}, StatusArea[#, 9]& , TagBoxNote -> "9"], 
                    StyleBox["9", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]], Annotation[#, 
                    Style[9, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$34961$35046, 
                    FEPrivate`Not[DynamicChart`click$34961$35046]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], 
                    Dynamic[
                    If[
                    DynamicChart`click$34961$35046, {{{1., 0}, {
                    0, 1.}}, {-0.10220373588942211`, 
                    0.17191392139744022`}}, {{1, 0}, {0, 1}}, {{1, 0}, {0, 
                    1}}], TrackedSymbols :> {
                    DynamicChart`click$34961$35046}]], 
                    GeometricTransformationBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    TagBox[{{}, {}}, StatusArea[#, 2]& , TagBoxNote -> "2"], 
                    StyleBox["2", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]], Annotation[#, 
                    Style[2, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$34964$35046, 
                    FEPrivate`Not[DynamicChart`click$34964$35046]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], 
                    Dynamic[
                    If[
                    DynamicChart`click$34964$35046, {{{1., 0}, {
                    0, 1.}}, {-0.02293668507968008, 0.19868041795193503`}}, {{
                    1, 0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                    TrackedSymbols :> {DynamicChart`click$34964$35046}]], 
                    GeometricTransformationBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    TagBox[{{}, {}}, StatusArea[#, 1]& , TagBoxNote -> "1"], 
                    StyleBox["1", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]], Annotation[#, 
                    Style[1, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$34967$35046, 
                    FEPrivate`Not[DynamicChart`click$34967$35046]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], 
                    Dynamic[
                    If[
                    DynamicChart`click$34967$35046, {{{1., 0}, {0, 1.}}, {
                    1.2246467991473533`*^-17, 0.2}}, {{1, 0}, {0, 1}}, {{1, 
                    0}, {0, 1}}], 
                    TrackedSymbols :> {DynamicChart`click$34967$35046}]], 
                    GeometricTransformationBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    TagBox[{{}, {}}, StatusArea[#, 5]& , TagBoxNote -> "5"], 
                    StyleBox["5", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]], Annotation[#, 
                    Style[5, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$34970$35046, 
                    FEPrivate`Not[DynamicChart`click$34970$35046]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], 
                    Dynamic[
                    If[
                    DynamicChart`click$34970$35046, {{{1., 0}, {0, 1.}}, {
                    0.04557070178062755, 0.1947390847755558}}, {{1, 0}, {0, 
                    1}}, {{1, 0}, {0, 1}}], 
                    TrackedSymbols :> {DynamicChart`click$34970$35046}]], {}, 
                    
                    GeometricTransformationBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    TagBox[{{}, {}}, StatusArea[#, 4]& , TagBoxNote -> "4"], 
                    StyleBox["4", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]], Annotation[#, 
                    Style[4, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$34973$35046, 
                    FEPrivate`Not[DynamicChart`click$34973$35046]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], 
                    Dynamic[
                    If[
                    DynamicChart`click$34973$35046, {{{1., 0}, {0, 1.}}, {
                    0.10871351000024423`, 0.16787308522639}}, {{1, 0}, {0, 
                    1}}, {{1, 0}, {0, 1}}], 
                    TrackedSymbols :> {DynamicChart`click$34973$35046}]], 
                    GeometricTransformationBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    TagBox[{{}, {}}, StatusArea[#, 6]& , TagBoxNote -> "6"], 
                    StyleBox["6", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]], Annotation[#, 
                    Style[6, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$34976$35046, 
                    FEPrivate`Not[DynamicChart`click$34976$35046]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], 
                    Dynamic[
                    If[
                    DynamicChart`click$34976$35046, {{{1., 0}, {0, 1.}}, {
                    0.16358587215334353`, 0.11506373204372414`}}, {{1, 0}, {0,
                     1}}, {{1, 0}, {0, 1}}], 
                    TrackedSymbols :> {DynamicChart`click$34976$35046}]], {}, 
                    
                    GeometricTransformationBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    TagBox[{{}, {}}, StatusArea[#, 6]& , TagBoxNote -> "6"], 
                    StyleBox["6", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]], Annotation[#, 
                    Style[6, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$34979$35046, 
                    FEPrivate`Not[DynamicChart`click$34979$35046]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], 
                    Dynamic[
                    If[
                    DynamicChart`click$34979$35046, {{{1., 0}, {0, 1.}}, {
                    0.19765608475606972`, 0.030529856843774877`}}, {{1, 0}, {
                    0, 1}}, {{1, 0}, {0, 1}}], 
                    TrackedSymbols :> {DynamicChart`click$34979$35046}]], 
                    GeometricTransformationBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    TagBox[{{}, {}}, StatusArea[#, 8]& , TagBoxNote -> "8"], 
                    StyleBox["8", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]], Annotation[#, 
                    Style[8, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$34982$35046, 
                    FEPrivate`Not[DynamicChart`click$34982$35046]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], 
                    Dynamic[
                    If[
                    DynamicChart`click$34982$35046, {{{1., 0}, {0, 1.}}, {
                    0.18550049022041895`, -0.07476341436815374}}, {{1, 0}, {0,
                     1}}, {{1, 0}, {0, 1}}], 
                    TrackedSymbols :> {DynamicChart`click$34982$35046}]], 
                    GeometricTransformationBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    TagBox[{{}, {}}, StatusArea[#, 4]& , TagBoxNote -> "4"], 
                    StyleBox["4", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]], Annotation[#, 
                    Style[4, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$34985$35046, 
                    FEPrivate`Not[DynamicChart`click$34985$35046]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], 
                    Dynamic[
                    If[
                    DynamicChart`click$34985$35046, {{{1., 0}, {0, 1.}}, {
                    0.13306514003311307`, -0.14931064432239255`}}, {{1, 0}, {
                    0, 1}}, {{1, 0}, {0, 1}}], 
                    TrackedSymbols :> {DynamicChart`click$34985$35046}]], 
                    GeometricTransformationBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    TagBox[{{}, {}}, StatusArea[#, 6]& , TagBoxNote -> "6"], 
                    StyleBox["6", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]], Annotation[#, 
                    Style[6, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$34988$35046, 
                    FEPrivate`Not[DynamicChart`click$34988$35046]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], 
                    Dynamic[
                    If[
                    DynamicChart`click$34988$35046, {{{1., 0}, {0, 1.}}, {
                    0.06760337568170054, -0.18822800959591235`}}, {{1, 0}, {0,
                     1}}, {{1, 0}, {0, 1}}], 
                    TrackedSymbols :> {DynamicChart`click$34988$35046}]], 
                    GeometricTransformationBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    TagBox[{{}, {}}, StatusArea[#, 9]& , TagBoxNote -> "9"], 
                    StyleBox["9", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]], Annotation[#, 
                    Style[9, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$34991$35046, 
                    FEPrivate`Not[DynamicChart`click$34991$35046]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], 
                    Dynamic[
                    If[
                    DynamicChart`click$34991$35046, {{{1., 0}, {
                    0, 
                    1.}}, {-0.04557070178062752, -0.19473908477555582`}}, {{1,
                     0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                    TrackedSymbols :> {DynamicChart`click$34991$35046}]], 
                    GeometricTransformationBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    TagBox[{{}, {}}, StatusArea[#, 7]& , TagBoxNote -> "7"], 
                    StyleBox["7", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]], Annotation[#, 
                    Style[7, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$34994$35046, 
                    FEPrivate`Not[DynamicChart`click$34994$35046]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], 
                    Dynamic[
                    If[
                    DynamicChart`click$34994$35046, {{{1., 0}, {
                    0, 1.}}, {-0.14931064432239255`, -0.13306514003311307`}}, \
{{1, 0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                    TrackedSymbols :> {DynamicChart`click$34994$35046}]], 
                    GeometricTransformationBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    TagBox[{{}, {}}, StatusArea[#, 6]& , TagBoxNote -> "6"], 
                    StyleBox["6", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]], Annotation[#, 
                    Style[6, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$34997$35046, 
                    FEPrivate`Not[DynamicChart`click$34997$35046]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], 
                    Dynamic[
                    If[
                    DynamicChart`click$34997$35046, {{{1., 0}, {
                    0, 
                    1.}}, {-0.1947390847755558, -0.045570701780627554`}}, {{1,
                     0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                    TrackedSymbols :> {
                    DynamicChart`click$34997$35046}]]}, {}}, {}}}, 
                DynamicModuleValues :> {}], {{}, {}}, {{{}, {}, {}, {}}, {}}},
               ContentSelectable -> False, GridLinesStyle -> Directive[
                GrayLevel[0.5, 0.4]], LabelStyle -> {
                GrayLevel[0], FontFamily -> "Arial"}, 
              PlotRange -> {{-1.2, 1.2}, {-1.2, 1.2}}, PlotRangePadding -> 
              Scaled[0.02]]}], "}"}]], "ExerciseOutput", Selectable -> False, 
        Copyable -> False, Editable -> False, ShowCellBracket -> False]]], " "}
   },
   GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Center}}},
   GridBoxBackground->{"Columns" -> {{
        RGBColor[1, 1, 1]}}},
   GridBoxSpacings->{"Columns" -> {{Automatic}}, "Rows" -> {{1}}}],
  FrameMargins->0]], "ExerciseOutput",
 Editable->False,
 Selectable->False,
 Deletable->False,
 CellFrame->{{1, 1}, {1, 1}},
 ShowCellBracket->False,
 CellFrameColor->RGBColor[0.85, 0.85, 0.85],
 LineBreakWithin->Automatic]
}, Closed]]
}, Closed]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Preguntas y respuestas", "QASection",
 Editable->False,
 Deletable->False,
 ShowCellBracket->False],

Cell["\[DownQuestion]Pueden sumarse listas de diferente longitud?", "Question",
 Editable->False,
 Deletable->False,
 ShowCellBracket->False],

Cell[TextData[{
 "No. ",
 Cell[BoxData[
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", "2"}], "}"}], 
   ButtonBox["+",
    BaseStyle->"Link",
    ButtonData->"Plus"], 
   RowBox[{"{", 
    RowBox[{"1", ",", "2", ",", "3"}], "}"}]}]], "InlineCode"],
 " no funciona. ",
 Cell[BoxData[
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", "2", ",", "0"}], "}"}], 
   ButtonBox["+",
    BaseStyle->"Link",
    ButtonData->"Plus"], 
   RowBox[{"{", 
    RowBox[{"1", ",", "2", ",", "3"}], "}"}]}]], "InlineCode"],
 " est\[AAcute] bien si, en efecto, eso es lo que se quiere."
}], "Answer",
 Editable->False,
 Deletable->False,
 ShowCellBracket->False],

Cell["\[DownQuestion]Puede haber una lista que no contenga nada?", "Question",
 Editable->False,
 Deletable->False,
 ShowCellBracket->False,
 CellTags->"i:11"],

Cell[TextData[{
 "S\[IAcute]. ",
 Cell[BoxData[
  RowBox[{"{", "\[VeryThinSpace]", "}"}]], "InlineCode"],
 " es una lista de longitud cero, sin elementos. Generalmente se le llama ",
 StyleBox["lista nula",
  FontSlant->"Italic"],
 " o ",
 StyleBox["lista vac\[IAcute]a",
  FontSlant->"Italic"],
 "."
}], "Answer",
 Editable->False,
 Deletable->False,
 ShowCellBracket->False]
}, Open  ]],

Cell[CellGroupData[{

Cell["Notas t\[EAcute]cnicas", "TechNoteSection",
 Editable->False,
 Deletable->False,
 ShowCellBracket->False],

Cell[TextData[{
 Cell[BoxData[
  RowBox[{
   ButtonBox["IntegerDigits",
    BaseStyle->"CodeLink"], "[", "5671", "]"}]], "InlineCode"],
 " da los d\[IAcute]gitos en base 10. ",
 Cell[BoxData[
  RowBox[{
   ButtonBox["IntegerDigits",
    BaseStyle->"CodeLink"], "[", 
   RowBox[{"5671", ",", "2"}], "]"}]], "InlineCode"],
 " da los d\[IAcute]gitos en base 2. Puede usarse cualquier base. ",
 Cell[BoxData[
  RowBox[{
   ButtonBox["FromDigits",
    BaseStyle->"CodeLink"], "[", 
   RowBox[{"{", 
    RowBox[{"5", ",", "6", ",", "7", ",", "1"}], "}"}], "]"}]], 
  "InlineCode"],
 " reconstruye un n\[UAcute]mero a partir de la lista de sus \
d\[IAcute]gitos."
}], "TechNote",
 Editable->False,
 Deletable->False,
 ShowCellBracket->False,
 CellTags->"i:12"],

Cell[TextData[{
 Cell[BoxData[
  RowBox[{
   ButtonBox["Rest",
    BaseStyle->"CodeLink"], "[", 
   StyleBox["lista", "CodeVariable"], "]"}]], "InlineCode"],
 " da todos los elementos de ",
 Cell[BoxData[
  StyleBox["lista", "CodeVariable"]], "InlineCode"],
 " excepto el primero. ",
 Cell[BoxData[
  RowBox[{
   ButtonBox["Most",
    BaseStyle->"CodeLink"], "[", 
   StyleBox["lista", "CodeVariable"], "]"}]], "InlineCode"],
 " da todos los elementos excepto el \[UAcute]ltimo."
}], "TechNote",
 Editable->False,
 Deletable->False,
 ShowCellBracket->False,
 CellTags->"i:13"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Para explorar m\[AAcute]s", "MoreExploreSection",
 Editable->False,
 Deletable->False,
 ShowCellBracket->False],

Cell[TextData[ButtonBox["Gu\[IAcute]a para manipulaci\[OAcute]n de listas en \
Wolfram Language\[NonBreakingSpace]\[RightGuillemet]",
 BaseStyle->"Link",
 ButtonData->"paclet:guide/ListManipulation"]], "MoreExplore",
 Editable->False,
 Deletable->False,
 ShowCellBracket->False,
 CellTags->"LastCellOfAPage"]
}, Open  ]]
},
Saveable->False,
WindowToolbars->{},
BlinkingCellInsertionPoint->False,
CellInsertionPointCell->None,
WindowSize->{830, 800},
WindowMargins->Automatic,
WindowPersistentStyles->{
 WindowFrame, WindowMargins, WindowSize, Magnification},
WindowTitle->"Operaciones con listas: Una introducci\[OAcute]n elemental a \
Wolfram Language",
DockedCells->{
  Cell[
   BoxData[
    TagBox[
     GridBox[{{
        TemplateBox[{
         "\[ThickSpace]\[ThickSpace]\[ThickSpace]\[ThickSpace]", 
          "\"\[ThickSpace]\[ThickSpace]\[ThickSpace]\[ThickSpace]\"", 
          GraphicsBox[
           TagBox[
            RasterBox[CompressedData["
1:eJztl01IVFEUxyctMFzUysjIyUDCTauiIJFM6ENpM4NEtJrBUaSYZMYPhCRm
rYuoICgiW0VEBVIUEbTNEMTAIqRsk6JGCVFBHx7//+4JLo/36DqvB4Ie+Mk7
7+t3733nHpzq9NlEW0ksFsuX4U8i1duQy6X6kpuRtGTzHe3ZTOuxbFemPZPb
ny7FyZ2gEqwHInICfJToguOIReywPVHHlYDzcY4hJHZ486giyBOXtfms5Pms
Bs9zUBDTow6DJOgBT8DP/+B5CepAPbgqZm+zT70Bt9VXCx6H8DwE28Gw5ufB
IT2eA1N6PKquC0V4xtUxqfkE6ARD4BHYAx5Y938Gu8GdZXq4VsNWngIfwDzY
Aa6Bm55nOKYq8NXRw29eb+Uz4JSVd4Nn4IbPs2fARUdPQcfLWAQJ8Mq6Tkdd
gGcEHHT0sHYn9Jg1dcnnnhf6vnee8xzXVkcP9wdr97eY7z0NnlrX74qpxffg
iOZ2VDp6kvqOe6AVXAb7xNQB462YNfsCfoBzoE1MzTEqHD096mgE98WsEec4
Jqamvvk8cx2kwWuw19HDXnIAbNAx03ka9IO8mO+3ScyebRZTi01i1rqguHjY
r3aJWaugOA5O6vEC+K6ebWDW0cNgv6oBnwKus87KwKDmv8BRMOBz77/6G/sV
e8lkwHWuTwm4pQ7WzGIRHgb7FXsJ9/mI5z2si42gXMw8/ByuHgb7FXsJ9yX3
IPfHFjF1xTl5v0exnrCx5gnn+fu7JC7h/z/0Y52+P+rfWX9iCXVYErg=
             "], {{0,
              34}, {26, 0}}, {0, 255}, ColorFunction -> RGBColor], 
            BoxForm`ImageTag[
            "Byte", ColorSpace -> "RGB", Interleaving -> True, Magnification -> 
             1], Selectable -> False], DefaultBaseStyle -> "ImageGraphics", 
           ImageSize -> Magnification[1], ImageSizeRaw -> {26, 34}, 
           PlotRange -> {{0, 26}, {0, 34}}], 
          GraphicsBox[
           TagBox[
            RasterBox[CompressedData["
1:eJztXUuS47gRLX8WXtYRaJ+gl17SS+8U4/CeM+H2hDdtRY8jHF6ZR9AReATt
qrwyj6AjcO+ZaN0gLZCZwEMiQVJqSd2qwYvgdBGf/AF4+LFqfvvd37/56y+f
np5++M3pP998+88/fPz47b/+9Hx6+fOHH/72/Yf3f/njh3+8//79x99/96tT
4u9Oz79/8fT066cY9NNLSz++9uPz0+uOPv3n3Zj+40vj083npZktd5IVdJzk
hvT9pHOq78uc9I75rD/KA31n6/z03+dY1lRX64jkQh3LLpevbWI7t6N/Esv/
vdSJDpcOdpr5M74lvk/tt6VPL1VG3j7v79Qedr2XLlevoKDgsTHx8Cud+OTA
XDKM7yfOijnmlB+XC9zvuGfMm+HhqfwR8sjLY54ddbJuw05yesL7Sp2qHtY1
4+F8VjZ4Xajf2/q6Gd/HuUDH6OTvZOM21jHZmm0TsTvH/d531WZOn5o3x3lL
Ys22pnFN87Bezs6CgoLHhFsnMqd1IW1cz26TsrO8nOdSX8bgO+CwZlmHzf2L
OoXbYE08y/2e80AXcDGkbVEuzEXbIAvmA9S/kvuz+aIL5yeJHbTlVHbcQwzT
/BDncT5l6xXuLyh4k4C1Xfb8wZe9Bfcrnr0J949r43H9vV9bl2Oyn2w88Te/
Yx0+DxmiOiddiSyDk2/B/cEGFWPm/GkOeDmavo5zQ5wnaYX7CwreJvy61HGb
cc7uy63g/rEMPLEeg/tl7cxrZa/DpStZ2TOfFTo1Vy5yP88Zk02vGzkTic54
prjx/JDuFWJ501nXXCwS/Wev+9m+aN/Bdrk8dUYVZE1zv7n/4vScHQUFBY8L
f2fpz99PP1v8vob71ROV8efSruxYfj9xojujVuf92cfg/mWdPf88yDp9ed0f
8uXMZJIxroP5zN3ar6Tn6cGOsK5efd6f8S1/3n/6Nzrbirl7sj852yFuk87P
Zfzzmr1VQUHBY2M6+x/HPJnnCddY9yOXjevmkz7kqhut+xPZS9zv1/juvnvc
N3STTv5+R8XCsi+2Y+Joyy67fLijxifxXbhf5uzkeyZ/zt/yt0ADzrXs06RH
fJ7uKI7TnXfh/oKCnwvgDiD67u8W5/1JmZuc92vOndbus9wvd+D+TEq+ZQ3v
wpNTebkTMO5S4b4gZ5dp9xlnPp7/cR7F73v0g9/K4v7Ff4c17VEK9xcUvE2M
vJR828dcpc/m3wL3e05fvsPktW/0jY7n02m9PSS6FP+infHvJlyZ+4352p/h
671AWi5wv/+2R/Y5hfsLCt4icKzD2cpe3xmOZS8484nuIm/E/efqpJXfLkIc
hihdvtnP7YvcuYq/Ww1nM7EM/v5I2y5zzCV3vXJeF/YCg7Yx8kv2LMj9MofI
7/YV7i8oeJOY1vhwxh+e5JvPS+5643vGG3H/mTr9efYi9/vf5+qUHebc6O0P
c4M8e+Mc3rzLDWcvF3C/P6fnuSdno5xX+d/Lm7mnKNxfUPDmodeeBZdjXD+P
sYw5v6CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoOBr
BxE9n57aPV/aloLr4dSeFbdr9m/CXlmf60fVPXTdGi5mHLvqS9uyhNz45fTm
9LTu3y9jXcFacHu1/NRXktlmnprzXb8ZcQ19Pxdw3K7WTtcG2+bQ30nf4fQc
7zXX3BIuZhy79kryKhl3Kt1K23J6tVK2OX7Bh69mbFv+FkzgeVpg/r9bL5CZ
Q8v5D8n99+S1jP4W43hm3Zvbfivuz/nN6Y7/b/57dCcdwzX6K/T9VqXfgvuj
MYZpBPPluWPRGr9KdkdfyXz8iDxzLzi+5/Ac+d/PHkfQB7bcT+SpOP/huJ+m
PflDcj/Eu7+NZV7PXbn/nrhWf70X97NMGdM1v+M6b8tp0q+T/+/cCh/ISrsG
h1wLj8Yz9wJN5z3C+x3/3KgyY7/g8XeE8vn/z1dAncnP7Rk3xOsrRof9SHiF
6x/gXc4Zxb6dkvuO4v1oT/G6R/JQhvt3w/mNsmuUAbL3Kk/rF50tlNnyv3tV
VvQk8SWDA0HeJba3UFfi2UIbYb2Dtol9HyBf4thr+1a0/Vbpk3bdUYoWZRP0
M8Nu3dai38ntVLmEs9jHAylAvu6zkT4lC9tI+yKx2yt5jZJh6TO5FmQKz6O/
e7DJv4PPOF6cPh1jHweK+4H2S2yUdnT+yzkz1hkobifpmxsK3HNkeysKYy6q
Z8TA25nJrykdv63hK/ogequZmCFqMtZfZI9nHIsSr0bZvKW0H3nZNMW3W5Cx
4bwOftZcRErG0SqXqROt+4146jEkcPZIv+gytmC/ORpp77hOBfk9hfY5gFxs
syPIGYz2OHL5HeftVLqgUXajjcJrggr6j9drxHWO+0XHEWUs2N5COnG5DduB
aVhfbMW4DqT4SNu30PYt1JUz/IEC9+vYNcr3WsVvzu6aYuA4S//+Xcr9PYUx
Vis5EoOR3wxZDZTRvmjewHg+G/51YFevdam4SnsPYOfR6lOUtiv6LmPK4n4d
I91G6HMFaRi33rBdxwPXN6u5aCa/A3nYBtKndH/BdulADtoXjQUK9/g5H1tD
jo59ZdiD+a68tDPOix3EqTb8dn0SuUivtYntdGU8Ry/FWwPyrfEvfjT8/sw2
Hw25so4R3h0otNWg5EgZbCdp43fqfc96fd80bPZtB3Zu4F307SBN0Km6En/x
p9V1Vfk57u8usB25H9dcYheuBSVGnRH7Z1Wvh3o5WzBN+qbEYfTD0O39Vr7X
/C593rJbxoXo92sh8MXkEMtmpa+DNOl/yTyiYq59ETt7CuM8GrOgbwv1RJ81
12xQptgKunCtKjokFr3hp+wVrDbMxUig98IbitcRWp7E6cD5yE/S18W/41MG
lk0q38nG8St9uNV+UeifjREjgV47VUoO1rHGs6uLY1F4sTbigvviDuo74LgU
e5GTxL4NxecoTS52ZLRTLt4cx1YeyLf6jqCH52iVMWKH8Yx4At4PIFfGS63K
1DO6TP6E2O4hntomwbOqJzIP/C7xrzJxneP+s22nzFwDduCYiPq7jrOSl/hu
2ELWe8bvtdwv7Tpn99wYjOKTszmnf6WsJe5vjTTxD/di0RhBG6C+jFVXRniy
ARsaUnMH6MT5Rfw/qvfV3J+xbUfqPG0uTpSO2zV9Zzafy1jjt13ha2/YJnEU
v/ReCetYPjo+30I7aHsiHieY3/l9y++yj+lJ7Q8pPmPRwHVTEjsrzcqnM877
oU6vn5xeupz75dHr/npGV44/8cynA1lZu1V935/Fzpm43or7W5U+GDJ1H/sa
ud/a22q7H5n7BVZfrjL6JCbST/H8we/dDJ1Nzn8rHksxUmm4Lu4hJkvcr+Px
2dxP8ZnPTrfDgq89pAknu7EjXHtYqBP5SBPvH0BOS2EsYhwkrYc4bpRM5H55
RE8H9Vt+pC9k19or4ymoM/lWPMWfjVXH0kvruL/D94zcc7jf2WmdidUzNmXj
BeWlzc2zAlW2hbQk1mfYvsRDuEeMzkUgrp1RJvGdwt5X1iXCI7iX9z5k7OlU
uo69xZ9ipz6vQBuX+BrP2a39eGPo6zKyTF0Z2zXXJby8BKjjoM9PPf/O2a9t
ps/n/tbQoeXdnPspvneQ9brm47Xc731iO7cUjzWpg/OBnKVpXdhOms/ceHHj
WOb/PcVj34/1mZhIu+tvNyIOtmK3Nt6kznwonK/WUEbSJHbjOSyFfdhGyzXi
jW2gY4W6XPmN2GXUqWd04fjvKb3LOpD6bmRNvCjufw7VTFw/l/u17Tnuxz1h
C+W8Hoq/F9zN+C79aU9qH2vE/8i6OoL7UiXb6ZL92pxNObvP5n6ly/nTqnrO
1i3F34HUGTlbKOPHLa3jfvFP4iRjpJmxG2Ng3YNondhXdhS+sSEK/QbHQqPr
WXGbsWlHcDdqlJmLx2rup5iHWq6LY8/Jxn7W5nSQ3YfEhx2F71twnYAxi3y2
dFE6XqSM9IGBfxZdlWGLq79hfXKXKWN7MGIl/nczbZekZeKtgbGaW3MIjmTw
HLwvcr+KF8IaB/Wcj6S+veI0HO/OXpnL+zlZSq7Umf3Gmi7k/hnbTe43/CKr
HKXfkUkc0fdWyfD9GcrgXhfL1Zxfq7x2xnfLbuvs2rLRp62IR2XEQNDMyHG+
JvdCtIL7M3aMZxUz+qJ5PCNno+pY40XfCUXjl87jfjzzIYI7OChzbe7XaJVM
iWVuLb523a8x3skauhyk76CPOA4GsvsFzhsI/J0NXebA6RWpeQnkRnn8c63K
JGlWvvHgPOj0bLUNbJ9LT85+tF7LD8r8XRQu2/Cj71yljt6jJT7SNJYaZccG
5Ro2ZeNFExdI+2bPe5S/FaTVa2ynMOd72y15hj6JWa6MtJfpO5RpQW8utjWX
S3RBf9lQ/O1E5PuS3RT+Fo3ui+Z4UHU3FL5bxnhLDLJxMmwQ+2ScJf3W6pfK
v+z5qOGvtrmy0g0dpk96/KIeVS7X1lK/Ql8N+7LxyOm09BsPyh3HhZJZqXe0
zepDbgwPFP4+hoxpUnWlD1VaF8j2bavjQGHe6Sic0yfraCi7pRV9suC+4H4g
87w/4ygoKHgcUNhb4f2YnMsTLawpztTVa5kUzhH7a+kpuC0o3vc2X9qegoKC
80Hp78Phmr+7si48q5O9hqwdrzbHFNwWFL61rr60LQUFBZeDwt9N7Sl8O1nf
SFdD4XuijtQ3RXP4P6lulfg=
             "], {{0, 34}, {383, 0}}, {0, 255}, 
             ColorFunction -> RGBColor], 
            BoxForm`ImageTag[
            "Byte", ColorSpace -> "RGB", Interleaving -> True, Magnification -> 
             1], Selectable -> False], DefaultBaseStyle -> "ImageGraphics", 
           ImageSize -> Magnification[1], ImageSizeRaw -> {383, 34}, 
           PlotRange -> {{0, 383}, {0, 34}}]}, "RowWithSeparators"], 
        PaneBox[
         StyleBox["\[VeryThinSpace]", ShowStringCharacters -> False], 
         Alignment -> Right, ImageSize -> {174, 47}], 
        PaneBox[
         PaneBox[
          TemplateBox[{"\[ThinSpace]", "\" \"", 
            TagBox[
             TooltipBox[
              PaneSelectorBox[{False -> ButtonBox[
                  PaneBox[
                   GraphicsBox[
                    TagBox[
                    RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UJAPiDmBmIUBO/j//z8jEDcA8W8g3oBFnhmIZ/9HgE9o8mxAvBZJ/hsQuyPJ
8wPxfiT5N0BsjiQvCsTnkOSfALEWkrwSEN9Bkr8OxDJobniAJP8ZZCYWfxCj
RpGQXcS4mVi/ExuGxMYFmlp4nAIAG14fWQ==
                    "], {{0, 14}, {9, 
                    0}}, {0, 255}, ColorFunction -> RGBColor], 
                    BoxForm`ImageTag[
                    "Byte", ColorSpace -> "RGB", Interleaving -> True], 
                    Selectable -> False], DefaultBaseStyle -> "ImageGraphics",
                     ImageSizeRaw -> {9, 14}, PlotRange -> {{0, 9}, {0, 14}}, 
                    ImageSize -> Magnification[1]], ImageSize -> {35, 30}, 
                   Alignment -> Center], 
                  ButtonFunction :> (
                   NotebookLocate[{"EIWL2-04-displaying-lists.nb", ""}, 
                    FrontEnd`HistoryData :> {
                    EvaluationNotebook[]}]& ), Enabled -> True, Appearance -> 
                  None, Evaluator -> Automatic, Method -> "Preemptive"], True -> 
                ButtonBox[
                  PaneBox[
                   GraphicsBox[
                    TagBox[
                    RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UJAPiDmBmIUBO/j//z8jEDcA8W8g3oBFnhmIZ/9HgE9o8mxAvBZJ/hsQuyPJ
8wPxfiT5N0BsjiQvCsTnkOSfALEWkrwSEN9Bkr8OxDJobniAJP8ZZCYWfxCj
RpGQXcS4mVi/ExuGxMYFmlp4nAIAG14fWQ==
                    "], {{0, 14}, {9, 
                    0}}, {0, 255}, ColorFunction -> RGBColor], 
                    BoxForm`ImageTag[
                    "Byte", ColorSpace -> "RGB", Interleaving -> True], 
                    Selectable -> False], DefaultBaseStyle -> "ImageGraphics",
                     ImageSizeRaw -> {9, 14}, PlotRange -> {{0, 9}, {0, 14}}, 
                    ImageSize -> Magnification[1]], ImageSize -> {35, 30}, 
                   Alignment -> Center], 
                  ButtonFunction :> (
                   NotebookLocate[{"EIWL2-04-displaying-lists.nb", ""}, 
                    FrontEnd`HistoryData :> {
                    EvaluationNotebook[]}]& ), Enabled -> True, Appearance -> 
                  None, Background -> RGBColor[0.835294, 0.364706, 0.0196078],
                   Evaluator -> Automatic, Method -> "Preemptive"]}, 
               Dynamic[
                CurrentValue["MouseOver"]], ImageSize -> Automatic, 
               FrameMargins -> 0], "\"Visualizaci\[OAcute]n de listas\"", 
              TooltipDelay -> 0.15, LabelStyle -> "TextStyling"], 
             Annotation[#, "Visualizaci\[OAcute]n de listas", "Tooltip"]& ], 
            TemplateBox[{5}, "Spacer1"], 
            TagBox[
             TooltipBox[
              PaneSelectorBox[{False -> ButtonBox[
                  PaneBox[
                   GraphicsBox[
                    TagBox[
                    RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UJAfiDmBmAWI////vwKIfwFxMQMOAJT7+R8B6nGoSf+PCjpwqMskUl0SEP9F
UtcHxIxY1EWjqZuOQ10Mmr2TcNj7BEnNP1LNIeQeIDsZn78IhQ8x4fwfNb4a
cPgTFu8l2ORBAAC+1hnm
                    "], {{0, 15}, {9, 0}}, {0, 255}, 
                    ColorFunction -> RGBColor], 
                    BoxForm`ImageTag[
                    "Byte", ColorSpace -> "RGB", Interleaving -> True], 
                    Selectable -> False], DefaultBaseStyle -> "ImageGraphics",
                     ImageSizeRaw -> {9, 15}, PlotRange -> {{0, 9}, {0, 15}}, 
                    ImageSize -> Magnification[1]], ImageSize -> {35, 30}, 
                   Alignment -> Center], 
                  ButtonFunction :> (
                   NotebookLocate[{"EIWL2-06-making-tables.nb", ""}, 
                    FrontEnd`HistoryData :> {
                    EvaluationNotebook[]}]& ), Appearance -> None, Evaluator -> 
                  Automatic, Method -> "Preemptive"], True -> ButtonBox[
                  PaneBox[
                   GraphicsBox[
                    TagBox[
                    RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UJAfiDmBmAWI////vwKIfwFxMQMOAJT7+R8B6nGoSf+PCjpwqMskUl0SEP9F
UtcHxIxY1EWjqZuOQ10Mmr2TcNj7BEnNP1LNIeQeIDsZn78IhQ8x4fwfNb4a
cPgTFu8l2ORBAAC+1hnm
                    "], {{0, 15}, {9, 0}}, {0, 255}, 
                    ColorFunction -> RGBColor], 
                    BoxForm`ImageTag[
                    "Byte", ColorSpace -> "RGB", Interleaving -> True], 
                    Selectable -> False], DefaultBaseStyle -> "ImageGraphics",
                     ImageSizeRaw -> {9, 15}, PlotRange -> {{0, 9}, {0, 15}}, 
                    ImageSize -> Magnification[1]], ImageSize -> {35, 30}, 
                   Alignment -> Center], 
                  ButtonFunction :> (
                   NotebookLocate[{"EIWL2-06-making-tables.nb", ""}, 
                    FrontEnd`HistoryData :> {
                    EvaluationNotebook[]}]& ), Appearance -> None, Background -> 
                  RGBColor[0.835294, 0.364706, 0.0196078], Evaluator -> 
                  Automatic, Method -> "Preemptive"]}, 
               Dynamic[
                CurrentValue["MouseOver"]], ImageSize -> Automatic, 
               FrameMargins -> 0], "\"Construcci\[OAcute]n de tablas\"", 
              TooltipDelay -> 0.15, LabelStyle -> "TextStyling"], 
             Annotation[#, "Construcci\[OAcute]n de tablas", "Tooltip"]& ]}, 
           "RowWithSeparators"], Alignment -> Right], ImageSize -> {100, 30}, 
         FrameMargins -> {{0, 6}, {0, 0}}, Alignment -> Right], 
        ActionMenuBox[
         PaneSelectorBox[{True -> PanelBox[
             GraphicsBox[
              TagBox[
               RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UBAkIQ3ELED8////Jf/pA0D2/KWTXSB7ZtPBPrA9DKOAYgAMR1Eg9gPiABpi
P6g912mcLmAAZM9XOtkFsicKiNcD8QYaYpD5UQOdXoYD+E/HMooO9iDbR7c6
BQDxtyEt
                "], {{0, 16}, {27, 0}}, {0, 255}, ColorFunction -> 
                RGBColor], 
               BoxForm`ImageTag[
               "Byte", ColorSpace -> "RGB", Interleaving -> True, 
                Magnification -> 1], Selectable -> False], DefaultBaseStyle -> 
              "ImageGraphics", ImageSize -> Magnification[1], 
              ImageSizeRaw -> {27, 16}, PlotRange -> {{0, 27}, {0, 16}}], 
             Appearance -> None, Background -> 
             RGBColor[0.835294, 0.364706, 0.0196078], ImageSize -> {35, 30}, 
             Alignment -> Center], False -> PanelBox[
             GraphicsBox[
              TagBox[
               RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UBAkIQ3ELED8////Jf/pA0D2/KWTXSB7ZtPBPrA9DKOAYgAMR1Eg9gPiABpi
P6g912mcLmAAZM9XOtkFsicKiNcD8QYaYpD5UQOdXoYD+E/HMooO9iDbR7c6
BQDxtyEt
                "], {{0, 16}, {27, 0}}, {0, 255}, ColorFunction -> 
                RGBColor], 
               BoxForm`ImageTag[
               "Byte", ColorSpace -> "RGB", Interleaving -> True, 
                Magnification -> 1], Selectable -> False], DefaultBaseStyle -> 
              "ImageGraphics", ImageSize -> Magnification[1], 
              ImageSizeRaw -> {27, 16}, PlotRange -> {{0, 27}, {0, 16}}], 
             Appearance -> None, Background -> 
             RGBColor[0.952941, 0.509804, 0], ImageSize -> {35, 30}, 
             Alignment -> Center]}, 
          Dynamic[
           CurrentValue["MouseOver"]]], {
         "Prefacio" :> 
          NotebookLocate[{"EIWL2-0a-preface.nb", ""}, FrontEnd`HistoryData :> {
              EvaluationNotebook[]}], 
          "\[DownQuestion]Qu\[EAcute] es Wolfram Language?" :> 
          NotebookLocate[{"EIWL2-0b-what-is-the-wolfram-language.nb", ""}, 
            FrontEnd`HistoryData :> {
              EvaluationNotebook[]}], 
          "Aspectos pr\[AAcute]cticos en el uso de Wolfram Language" :> 
          NotebookLocate[{
            "EIWL2-0c-practicalities-of-using-the-wolfram-language.nb", ""}, 
            FrontEnd`HistoryData :> {
              EvaluationNotebook[]}], "Otros recursos" :> 
          NotebookLocate[{"EIWL2-0d-other-resources.nb", ""}, 
            FrontEnd`HistoryData :> {
              EvaluationNotebook[]}], 
          "Sobre la traducci\[OAcute]n al espa\[NTilde]ol" :> 
          NotebookLocate[{"EIWL2-0e-translation-notes.nb", ""}, 
            FrontEnd`HistoryData :> {
              EvaluationNotebook[]}], 
          "\[ThickSpace]\[ThickSpace]\[ThinSpace]1\[ThickSpace]\[ThickSpace]|\
\[ThickSpace]\[ThickSpace]Inicio: aritm\[EAcute]tica elemental" :> 
          NotebookLocate[{
            "EIWL2-01-starting-out-elementary-arithmetic.nb", ""}, 
            FrontEnd`HistoryData :> {
              EvaluationNotebook[]}], 
          "\[ThickSpace]\[ThickSpace]\[ThinSpace]2\[ThickSpace]\[ThickSpace]|\
\[ThickSpace]\[ThickSpace]Introducci\[OAcute]n a las funciones" :> 
          NotebookLocate[{"EIWL2-02-introducing-functions.nb", ""}, 
            FrontEnd`HistoryData :> {
              EvaluationNotebook[]}], 
          "\[ThickSpace]\[ThickSpace]\[ThinSpace]3\[ThickSpace]\[ThickSpace]|\
\[ThickSpace]\[ThickSpace]Un primer vistazo a las listas" :> 
          NotebookLocate[{"EIWL2-03-first-look-at-lists.nb", ""}, 
            FrontEnd`HistoryData :> {
              EvaluationNotebook[]}], 
          "\[ThickSpace]\[ThickSpace]\[ThinSpace]4\[ThickSpace]\[ThickSpace]|\
\[ThickSpace]\[ThickSpace]Visualizaci\[OAcute]n de listas" :> 
          NotebookLocate[{"EIWL2-04-displaying-lists.nb", ""}, 
            FrontEnd`HistoryData :> {
              EvaluationNotebook[]}], 
          "\[ThickSpace]\[ThickSpace]\[ThinSpace]5\[ThickSpace]\[ThickSpace]|\
\[ThickSpace]\[ThickSpace]Operaciones con listas" :> 
          NotebookLocate[{"EIWL2-05-operations-on-lists.nb", ""}, 
            FrontEnd`HistoryData :> {
              EvaluationNotebook[]}], 
          "\[ThickSpace]\[ThickSpace]\[ThinSpace]6\[ThickSpace]\[ThickSpace]|\
\[ThickSpace]\[ThickSpace]Construcci\[OAcute]n de tablas" :> 
          NotebookLocate[{"EIWL2-06-making-tables.nb", ""}, 
            FrontEnd`HistoryData :> {
              EvaluationNotebook[]}], 
          "\[ThickSpace]\[ThickSpace]\[ThinSpace]7\[ThickSpace]\[ThickSpace]|\
\[ThickSpace]\[ThickSpace]Colores y estilos" :> 
          NotebookLocate[{"EIWL2-07-colors-and-styles.nb", ""}, 
            FrontEnd`HistoryData :> {
              EvaluationNotebook[]}], 
          "\[ThickSpace]\[ThickSpace]\[ThinSpace]8\[ThickSpace]\[ThickSpace]|\
\[ThickSpace]\[ThickSpace]Objetos gr\[AAcute]ficos elementales" :> 
          NotebookLocate[{"EIWL2-08-basic-graphics-objects.nb", ""}, 
            FrontEnd`HistoryData :> {
              EvaluationNotebook[]}], 
          "\[ThickSpace]\[ThickSpace]\[ThinSpace]9\[ThickSpace]\[ThickSpace]|\
\[ThickSpace]\[ThickSpace]Manipulaci\[OAcute]n interactiva" :> 
          NotebookLocate[{"EIWL2-09-interactive-manipulation.nb", ""}, 
            FrontEnd`HistoryData :> {
              EvaluationNotebook[]}], 
          "10\[ThickSpace]\[ThickSpace]|\[ThickSpace]\[ThickSpace]Im\[AAcute]\
genes" :> NotebookLocate[{"EIWL2-10-images.nb", ""}, 
            FrontEnd`HistoryData :> {
              EvaluationNotebook[]}], 
          "11\[ThickSpace]\[ThickSpace]|\[ThickSpace]\[ThickSpace]Cadenas de \
caracteres y texto" :> 
          NotebookLocate[{"EIWL2-11-strings-and-text.nb", ""}, 
            FrontEnd`HistoryData :> {
              EvaluationNotebook[]}], 
          "12\[ThickSpace]\[ThickSpace]|\[ThickSpace]\[ThickSpace]Sonido" :> 
          NotebookLocate[{"EIWL2-12-sound.nb", ""}, FrontEnd`HistoryData :> {
              EvaluationNotebook[]}], 
          "13\[ThickSpace]\[ThickSpace]|\[ThickSpace]\[ThickSpace]Arreglos o \
listas de listas" :> 
          NotebookLocate[{"EIWL2-13-arrays-or-lists-of-lists.nb", ""}, 
            FrontEnd`HistoryData :> {
              EvaluationNotebook[]}], 
          "14\[ThickSpace]\[ThickSpace]|\[ThickSpace]\[ThickSpace]Coordenadas \
y gr\[AAcute]ficos" :> 
          NotebookLocate[{"EIWL2-14-coordinates-and-graphics.nb", ""}, 
            FrontEnd`HistoryData :> {
              EvaluationNotebook[]}], 
          "15\[ThickSpace]\[ThickSpace]|\[ThickSpace]\[ThickSpace]El alcance \
de Wolfram Language" :> 
          NotebookLocate[{
            "EIWL2-15-the-scope-of-the-wolfram-language.nb", ""}, 
            FrontEnd`HistoryData :> {
              EvaluationNotebook[]}], 
          "16\[ThickSpace]\[ThickSpace]|\[ThickSpace]\[ThickSpace]Datos del \
mundo real" :> 
          NotebookLocate[{"EIWL2-16-real-world-data.nb", ""}, 
            FrontEnd`HistoryData :> {
              EvaluationNotebook[]}], 
          "17\[ThickSpace]\[ThickSpace]|\[ThickSpace]\[ThickSpace]Unidades" :> 
          NotebookLocate[{"EIWL2-17-units.nb", ""}, FrontEnd`HistoryData :> {
              EvaluationNotebook[]}], 
          "18\[ThickSpace]\[ThickSpace]|\[ThickSpace]\[ThickSpace]\
Geocomputaci\[OAcute]n" :> 
          NotebookLocate[{"EIWL2-18-geocomputation.nb", ""}, 
            FrontEnd`HistoryData :> {
              EvaluationNotebook[]}], 
          "19\[ThickSpace]\[ThickSpace]|\[ThickSpace]\[ThickSpace]Fechas y \
horas" :> NotebookLocate[{"EIWL2-19-dates-and-times.nb", ""}, 
            FrontEnd`HistoryData :> {
              EvaluationNotebook[]}], 
          "20\[ThickSpace]\[ThickSpace]|\[ThickSpace]\[ThickSpace]Opciones" :> 
          NotebookLocate[{"EIWL2-20-options.nb", ""}, FrontEnd`HistoryData :> {
              EvaluationNotebook[]}], 
          "21\[ThickSpace]\[ThickSpace]|\[ThickSpace]\[ThickSpace]Grafos y \
redes" :> NotebookLocate[{"EIWL2-21-graphs-and-networks.nb", ""}, 
            FrontEnd`HistoryData :> {
              EvaluationNotebook[]}], 
          "22\[ThickSpace]\[ThickSpace]|\[ThickSpace]\[ThickSpace]Aprendizaje \
autom\[AAcute]tico" :> 
          NotebookLocate[{"EIWL2-22-machine-learning.nb", ""}, 
            FrontEnd`HistoryData :> {
              EvaluationNotebook[]}], 
          "23\[ThickSpace]\[ThickSpace]|\[ThickSpace]\[ThickSpace]M\[AAcute]s \
sobre n\[UAcute]meros" :> 
          NotebookLocate[{"EIWL2-23-more-about-numbers.nb", ""}, 
            FrontEnd`HistoryData :> {
              EvaluationNotebook[]}], 
          "24\[ThickSpace]\[ThickSpace]|\[ThickSpace]\[ThickSpace]M\[AAcute]s \
formas de visualizaci\[OAcute]n" :> 
          NotebookLocate[{"EIWL2-24-more-forms-of-visualization.nb", ""}, 
            FrontEnd`HistoryData :> {
              EvaluationNotebook[]}], 
          "25\[ThickSpace]\[ThickSpace]|\[ThickSpace]\[ThickSpace]Maneras de \
aplicar funciones" :> 
          NotebookLocate[{"EIWL2-25-ways-to-apply-functions.nb", ""}, 
            FrontEnd`HistoryData :> {
              EvaluationNotebook[]}], 
          "26\[ThickSpace]\[ThickSpace]|\[ThickSpace]\[ThickSpace]Funciones \
puras an\[OAcute]nimas" :> 
          NotebookLocate[{"EIWL2-26-pure-anonymous-functions.nb", ""}, 
            FrontEnd`HistoryData :> {
              EvaluationNotebook[]}], 
          "27\[ThickSpace]\[ThickSpace]|\[ThickSpace]\[ThickSpace]Aplicaci\
\[OAcute]n repetida de funciones " :> 
          NotebookLocate[{"EIWL2-27-applying-functions-repeatedly.nb", ""}, 
            FrontEnd`HistoryData :> {
              EvaluationNotebook[]}], 
          "28\[ThickSpace]\[ThickSpace]|\[ThickSpace]\[ThickSpace]Pruebas y \
condicionales" :> 
          NotebookLocate[{"EIWL2-28-tests-and-conditionals.nb", ""}, 
            FrontEnd`HistoryData :> {
              EvaluationNotebook[]}], 
          "29\[ThickSpace]\[ThickSpace]|\[ThickSpace]\[ThickSpace]M\[AAcute]s \
sobre las funciones puras" :> 
          NotebookLocate[{"EIWL2-29-more-about-pure-functions.nb", ""}, 
            FrontEnd`HistoryData :> {
              EvaluationNotebook[]}], 
          "30\[ThickSpace]\[ThickSpace]|\[ThickSpace]\[ThickSpace]\
Reorganizaci\[OAcute]n de listas" :> 
          NotebookLocate[{"EIWL2-30-rearranging-lists.nb", ""}, 
            FrontEnd`HistoryData :> {
              EvaluationNotebook[]}], 
          "31\[ThickSpace]\[ThickSpace]|\[ThickSpace]\[ThickSpace]Partes de \
listas" :> NotebookLocate[{"EIWL2-31-parts-of-lists.nb", ""}, 
            FrontEnd`HistoryData :> {
              EvaluationNotebook[]}], 
          "32\[ThickSpace]\[ThickSpace]|\[ThickSpace]\[ThickSpace]Patrones" :> 
          NotebookLocate[{"EIWL2-32-patterns.nb", ""}, FrontEnd`HistoryData :> {
              EvaluationNotebook[]}], 
          "33\[ThickSpace]\[ThickSpace]|\[ThickSpace]\[ThickSpace]Expresiones \
y su estructura" :> 
          NotebookLocate[{"EIWL2-33-expressions-and-their-structure.nb", ""}, 
            FrontEnd`HistoryData :> {
              EvaluationNotebook[]}], 
          "34\[ThickSpace]\[ThickSpace]|\[ThickSpace]\[ThickSpace]\
Asociaciones" :> 
          NotebookLocate[{"EIWL2-34-associations.nb", ""}, 
            FrontEnd`HistoryData :> {
              EvaluationNotebook[]}], 
          "35\[ThickSpace]\[ThickSpace]|\[ThickSpace]\[ThickSpace]Comprensi\
\[OAcute]n del lenguaje natural" :> 
          NotebookLocate[{"EIWL2-35-natural-language-understanding.nb", ""}, 
            FrontEnd`HistoryData :> {
              EvaluationNotebook[]}], 
          "36\[ThickSpace]\[ThickSpace]|\[ThickSpace]\[ThickSpace]Construcci\
\[OAcute]n de sitios web y aplicaciones" :> 
          NotebookLocate[{"EIWL2-36-creating-websites-and-apps.nb", ""}, 
            FrontEnd`HistoryData :> {
              EvaluationNotebook[]}], 
          "37\[ThickSpace]\[ThickSpace]|\[ThickSpace]\[ThickSpace]Composici\
\[OAcute]n y visualizaci\[OAcute]n" :> 
          NotebookLocate[{"EIWL2-37-layout-and-display.nb", ""}, 
            FrontEnd`HistoryData :> {
              EvaluationNotebook[]}], 
          "38\[ThickSpace]\[ThickSpace]|\[ThickSpace]\[ThickSpace]Asignaci\
\[OAcute]n de nombres a cosas" :> 
          NotebookLocate[{"EIWL2-38-assigning-names-to-things.nb", ""}, 
            FrontEnd`HistoryData :> {
              EvaluationNotebook[]}], 
          "39\[ThickSpace]\[ThickSpace]|\[ThickSpace]\[ThickSpace]Valores \
inmediatos y diferidos" :> 
          NotebookLocate[{"EIWL2-39-immediate-and-delayed-values.nb", ""}, 
            FrontEnd`HistoryData :> {
              EvaluationNotebook[]}], 
          "40\[ThickSpace]\[ThickSpace]|\[ThickSpace]\[ThickSpace]Funciones \
definidas por el usuario" :> 
          NotebookLocate[{"EIWL2-40-defining-your-own-functions.nb", ""}, 
            FrontEnd`HistoryData :> {
              EvaluationNotebook[]}], 
          "41\[ThickSpace]\[ThickSpace]|\[ThickSpace]\[ThickSpace]M\[AAcute]s \
informaci\[OAcute]n sobre los patrones" :> 
          NotebookLocate[{"EIWL2-41-more-about-patterns.nb", ""}, 
            FrontEnd`HistoryData :> {
              EvaluationNotebook[]}], 
          "42\[ThickSpace]\[ThickSpace]|\[ThickSpace]\[ThickSpace]Cadenas de \
caracteres y plantillas " :> 
          NotebookLocate[{"EIWL2-42-string-patterns-and-templates.nb", ""}, 
            FrontEnd`HistoryData :> {
              EvaluationNotebook[]}], 
          "43\[ThickSpace]\[ThickSpace]|\[ThickSpace]\[ThickSpace]C\[OAcute]\
mo guardar cosas" :> 
          NotebookLocate[{"EIWL2-43-storing-things.nb", ""}, 
            FrontEnd`HistoryData :> {
              EvaluationNotebook[]}], 
          "44\[ThickSpace]\[ThickSpace]|\[ThickSpace]\[ThickSpace]Importar y \
exportar" :> 
          NotebookLocate[{"EIWL2-44-importing-and-exporting.nb", ""}, 
            FrontEnd`HistoryData :> {
              EvaluationNotebook[]}], 
          "45\[ThickSpace]\[ThickSpace]|\[ThickSpace]\[ThickSpace]Conjuntos \
de datos" :> 
          NotebookLocate[{"EIWL2-45-datasets.nb", ""}, FrontEnd`HistoryData :> {
              EvaluationNotebook[]}], 
          "46\[ThickSpace]\[ThickSpace]|\[ThickSpace]\[ThickSpace]C\[OAcute]\
mo escribir c\[OAcute]digo de buena calidad" :> 
          NotebookLocate[{"EIWL2-46-writing-good-code.nb", ""}, 
            FrontEnd`HistoryData :> {
              EvaluationNotebook[]}], 
          "47\[ThickSpace]\[ThickSpace]|\[ThickSpace]\[ThickSpace]Depuraci\
\[OAcute]n de c\[OAcute]digo" :> 
          NotebookLocate[{"EIWL2-47-debugging-your-code.nb", ""}, 
            FrontEnd`HistoryData :> {
              EvaluationNotebook[]}], "Lo que no se vio en el libro" :> 
          NotebookLocate[{"EIWL2-what-we-havent-discussed.nb", ""}, 
            FrontEnd`HistoryData :> {
              EvaluationNotebook[]}], "Ep\[IAcute]logo: ser un programador" :> 
          NotebookLocate[{"EIWL2-being-a-programmer.nb", ""}, 
            FrontEnd`HistoryData :> {
              EvaluationNotebook[]}], "Respuestas a los ejercicios" :> 
          NotebookLocate[{"EIWL2-answers-to-exercises.nb", ""}, 
            FrontEnd`HistoryData :> {
              EvaluationNotebook[]}], "\[CapitalIAcute]ndice" :> 
          NotebookLocate[{"EIWL2-book-index.nb", ""}, FrontEnd`HistoryData :> {
              EvaluationNotebook[]}]}, Appearance -> None]}}, 
      GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Center}}}, 
      GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Grid"]], 
   "Text", ShowCellBracket -> False, CellFrame -> {{0, 0}, {3, 0}}, 
   Selectable -> False, CellFrameColor -> 
   RGBColor[0.835294, 0.364706, 0.0196078], CellMargins -> {{0, 0}, {0, -1}}, 
   CellFrameMargins -> {{27, 0}, {1, 7}}, Background -> 
   RGBColor[0.952941, 0.509804, 0], CellTags -> "DockedCellLogoCell"], 
  Cell["SEGUNDA EDICI\[CapitalOAcute]N", "Text", FontFamily -> 
   "Source Sans Pro", CellFrame -> {{0, 0}, {3, 0}}, ShowCellBracket -> False,
    CellMargins -> {{0, 0}, {-1, -1}}, CellFrameMargins -> {{66, 0}, {2, 4}}, 
   CellFrameColor -> RGBColor[0.952941, 0.509804, 0], FontSize -> 10, 
   FontTracking -> "Extended", FontColor -> RGBColor[1, 0.929412, 0.721569], 
   Background -> RGBColor[0.862745, 0.309804, 0], CellTags -> 
   "DockedCellLogoCell"]},
PrintingStartingPageNumber->31,
PageHeaders->{{
   Cell[
    TextData[{
      StyleBox[
       CounterBox["Page"], "PageNumber"], 
      StyleBox[
      "    An Elementary Introduction to the Wolfram Language", "Header"]}], 
    "Header", CellMargins -> {{37, Inherited}, {Inherited, Inherited}}], None,
    None}, {None, None, 
   Cell[
    TextData[{
      StyleBox[
       CounterBox["Section"], "Header"], 
      StyleBox[" | Operations on Lists \[LongDash] wolfr.am/eiwl-", "Header"], 
      StyleBox[
       CounterBox["Section"], "Header"], 
      StyleBox["    ", "Header"], 
      StyleBox[
       CounterBox["Page"], "PageNumber"]}], "Header", 
    CellMargins -> {{Inherited, 17}, {Inherited, Inherited}}]}},
ShowCellBracket->Automatic,
ShowAutoSpellCheck->False,
ShowPredictiveInterface->False,
ShowSyntaxStyles->False,
AutoStyleOptions->{"HighlightMisspelledWords"->False},
FrontEndVersion->"11.3 for Mac OS X x86 (32-bit, 64-bit Kernel) (March 5, \
2018)",
StyleDefinitions->Notebook[{
   Cell[
    StyleData[StyleDefinitions -> "Default.nb"]], 
   Cell[
    CellGroupData[{
      Cell[
      "Style Environments", "Section", 
       CellChangeTimes -> {{3.64661165091824*^9, 3.646611654013329*^9}, 
         3.6485723794335403`*^9, 3.651347081728628*^9, 3.651347179462186*^9, 
         3.651347384135805*^9, 3.651348171662589*^9}], 
      Cell[
       StyleData[All, "Working"], CellInsertionPointCell -> 
       FEPrivate`FrontEndResource["FEExpressions", "CellInsertionMenu"], 
       CreateCellID -> True, $CellContext`GhostCellInEmptyNotebook -> False], 
      
      Cell[
       StyleData[All, "Printout"], 
       PrintingOptions -> {
        "PageSize" -> {504, 720}, "PrintRegistrationMarks" -> True}, 
       Magnification -> 0.6]}, Closed]], 
   Cell[
    CellGroupData[{
      Cell["Styles for Headers and Footers", "Section"], 
      Cell[
       StyleData["Header"], StyleMenuListing -> None, FontFamily -> "Verdana",
        FontSize -> 7, FontSlant -> "Plain", FontColor -> GrayLevel[0.6]], 
      Cell[
       StyleData["PageNumber"], CellMargins -> {{0, 0}, {4, 1}}, 
       StyleMenuListing -> None, FontFamily -> "Verdana", FontSize -> 7, 
       FontWeight -> "Bold", FontSlant -> "Plain", FontColor -> 
       GrayLevel[0]]}, Closed]], 
   Cell[
    CellGroupData[{
      Cell[
      "WPL Specific", "Section", 
       CellChangeTimes -> {{3.6556608433734913`*^9, 3.6556608489412746`*^9}}], 
      Cell[
       StyleData["Link"], FontFamily -> "Source Sans Pro", FontSize :> 
       If[CurrentValue[
           EvaluationCell[], "FontFamily"] === "Source Sans Pro", Inherited, 
         If[CurrentValue[
            EvaluationCell[], "FontFamily"] === "WolframCodeSans", Inherited, 
          Inherited 0.9]], FontColor -> GrayLevel[0]], 
      Cell[
       StyleData["CodeLink"], 
       ButtonBoxOptions -> {
        Appearance -> None, ButtonFunction :> (FEPrivate`FrontEndExecute[
           FrontEndToken["OpenHelpLink", {
             Part[#, 1], Null}]]& ), ButtonSource -> ButtonContents, 
         Evaluator -> None, Method -> "Preemptive"}]}, Closed]], 
   Cell[
    CellGroupData[{
      Cell[
      "Custom Styles", "Section", 
       CellChangeTimes -> {{3.646611660445352*^9, 3.646611669493331*^9}}], 
      Cell[
       StyleData["Notebook"], PageWidth -> 700, 
       PrintingOptions -> {
        "InnerOuterMargins" -> {35, 16}, "PaperOrientation" -> "Portrait", 
         "PaperSize" -> {504, 720}, 
         "PrintingMargins" -> {{20, 20}, {54, 54}}}, CellLabelAutoDelete -> 
       False, ShowSyntaxStyles -> True, 
       AutoStyleOptions -> {
        "FormattingErrorTooltips" -> False, "HighlightComments" -> False, 
         "HighlightEmphasizedSyntaxErrors" -> False, 
         "HighlightExcessArguments" -> False, "HighlightFormattingErrors" -> 
         False, "HighlightGlobalToLocalScopeConflicts" -> False, 
         "HighlightGraphicsCompatibilityProblems" -> False, 
         "HighlightLocalScopeConflicts" -> False, "HighlightMissingArguments" -> 
         False, "HighlightNoKernelPresent" -> False, 
         "HighlightOrderOfEvaluationConflicts" -> False, "HighlightStrings" -> 
         True, "HighlightSymbolContexts" -> False, "HighlightSymbolShadowing" -> 
         False, "HighlightSyntaxErrors" -> False, "HighlightUndefinedSymbols" -> 
         False, "HighlightUnknownOptions" -> False, 
         "HighlightUnwantedAssignments" -> False}, MenuSortingValue -> None, 
       GraphicsBoxOptions -> {ImageSize -> 240}, 
       Graphics3DBoxOptions -> {ImageSize -> 240}], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["Title"], CellMargins -> {{64, Inherited}, {50, 72}}, 
          MenuCommandKey -> None, FontFamily -> "Verdana", FontSize -> 42, 
          FontWeight -> "Bold", FontColor -> GrayLevel[0.4]], 
         Cell[
          StyleData["Title", "Printout"], 
          CellMargins -> {{64, Inherited}, {50, 72}}]}, Closed]], 
      Cell[
       StyleData["Chapter"], MenuCommandKey -> None], 
      Cell[
       StyleData["Subchapter"], MenuCommandKey -> None], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["Section"], CellFrame -> {{0, 0}, {0, 0}}, CellDingbat -> 
          Cell[
            TextData[
             CounterBox["Section"], 
             StyleBox[
             "|\[NegativeThinSpace]", FontColor -> 
              RGBColor[
               0.9019607843137255, 0.4117647058823529, 0.027450980392156862`],
               FontFamily -> "Courier", FontSize -> 36, FontWeight -> Plain]],
             "SectionNumber"], CellMargins -> {{96, Inherited}, {12, 44}}, 
          Evaluatable -> True, CellGroupingRules -> {"SectionGrouping", 60}, 
          PageBreakAbove -> True, ShowCellLabel -> False, 
          CellFrameLabelMargins -> {{2, Inherited}, {Inherited, Inherited}}, 
          CellChangeTimes -> {3.652728456208679*^9, 3.652728527108994*^9}, 
          CounterIncrements -> "Section", 
          CounterAssignments -> {{"Subsection", 0}, {"Subsubsection", 0}, {
            "Exercise", 0}}, FontFamily -> "Source Sans Pro Semibold", 
          FontSize -> 26, FontSlant -> "Plain", FontColor -> 
          RGBColor[
           0.9019607843137255, 0.4117647058823529, 0.027450980392156862`], 
          InterpretationBoxOptions -> {Editable -> True}], 
         Cell[
          StyleData["Section", "Printout"], 
          CellMargins -> {{96, Inherited}, {12, 2}}]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["SectionDoubleDigit"], CellFrame -> {{0, 0}, {0, 0}}, 
          CellDingbat -> Cell[
            TextData[
             CounterBox["Section"], 
             StyleBox[
             "|\[NegativeThinSpace]", FontColor -> 
              RGBColor[
               0.9019607843137255, 0.4117647058823529, 0.027450980392156862`],
               FontFamily -> "Courier", FontSize -> 36, FontWeight -> Plain]],
             "SectionNumber"], CellMargins -> {{112, Inherited}, {12, 44}}, 
          Evaluatable -> True, CellGroupingRules -> {"SectionGrouping", 60}, 
          PageBreakAbove -> True, ShowCellLabel -> False, 
          CellFrameLabelMargins -> {{2, Inherited}, {Inherited, Inherited}}, 
          CellChangeTimes -> {3.652728456208679*^9, 3.652728527108994*^9}, 
          CounterIncrements -> "Section", 
          CounterAssignments -> {{"Subsection", 0}, {"Subsubsection", 0}, {
            "Exercise", 0}}, FontFamily -> "Source Sans Pro Semibold", 
          FontSize -> 26, FontSlant -> "Plain", FontColor -> 
          RGBColor[
           0.9019607843137255, 0.4117647058823529, 0.027450980392156862`], 
          InterpretationBoxOptions -> {Editable -> True}], 
         Cell[
          StyleData["SectionDoubleDigit", "Printout"], 
          CellMargins -> {{112, Inherited}, {12, 2}}]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["SectionNumber"], CellBaseline -> Baseline, FontFamily -> 
          "Source Sans Pro Semibold", FontSize -> 26, FontColor -> 
          RGBColor[
           0.9019607843137255, 0.4117647058823529, 0.027450980392156862`]], 
         Cell[
          StyleData["SectionNumber", "Printout"]]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["SectionInline"], FontFamily -> 
          "Source Sans Pro Semibold", FontColor -> 
          RGBColor[
           0.9019607843137255, 0.4117647058823529, 0.027450980392156862`]], 
         Cell[
          StyleData["SectionInline", "Printout"]]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["SectionNoDingbat"], 
          CellMargins -> {{64, Inherited}, {12, 44}}, Evaluatable -> True, 
          CellGroupingRules -> {"SectionGrouping", 60}, PageBreakAbove -> 
          True, ShowCellLabel -> False, 
          CellFrameLabelMargins -> {{2, Inherited}, {Inherited, Inherited}}, 
          CellChangeTimes -> {3.652728456208679*^9, 3.652728527108994*^9}, 
          CounterIncrements -> "Section", 
          CounterAssignments -> {{"Subsection", 0}, {"Subsubsection", 0}, {
            "Exercise", 0}}, FontFamily -> "Source Sans Pro Semibold", 
          FontSize -> 26, FontSlant -> "Plain", FontColor -> 
          RGBColor[
           0.9019607843137255, 0.4117647058823529, 0.027450980392156862`], 
          InterpretationBoxOptions -> {Editable -> True}], 
         Cell[
          StyleData["SectionNoDingbat", "Printout"], 
          CellMargins -> {{64, Inherited}, {12, 2}}]}, Closed]], 
      Cell[
       StyleData["AnswerKeyNumberedSection"], 
       CellMargins -> {{64, Inherited}, {8, 28}}, Evaluatable -> True, 
       CellGroupingRules -> {"SectionGrouping", 60}, PageBreakAbove -> True, 
       ShowCellLabel -> False, 
       CellFrameLabelMargins -> {{2, Inherited}, {Inherited, Inherited}}, 
       CellChangeTimes -> {3.652728456208679*^9, 3.652728527108994*^9}, 
       CounterIncrements -> "Section", 
       CounterAssignments -> {{"Subsection", 0}, {"Subsubsection", 0}, {
         "Exercise", 0}}, FontFamily -> "Source Sans Pro Semibold", FontSize -> 
       18, FontSlant -> "Plain", FontColor -> 
       RGBColor[
        0.9019607843137255, 0.4117647058823529, 0.027450980392156862`], 
       InterpretationBoxOptions -> {Editable -> True}], 
      Cell[
       StyleData["AnswerKeySectionNumber"], CellBaseline -> Baseline, 
       FontFamily -> "Source Sans Pro Semibold", FontSize -> 18, FontColor -> 
       RGBColor[
        0.9019607843137255, 0.4117647058823529, 0.027450980392156862`]], 
      Cell[
       StyleData["IndexLinkGuide"], 
       CellMargins -> {{64, Inherited}, {48, 28}}, Evaluatable -> True, 
       CellGroupingRules -> {"SectionGrouping", 60}, PageBreakAbove -> True, 
       ShowCellLabel -> False, 
       CellFrameLabelMargins -> {{2, Inherited}, {Inherited, Inherited}}, 
       CellChangeTimes -> {3.652728456208679*^9, 3.652728527108994*^9}, 
       CounterIncrements -> "Section", 
       CounterAssignments -> {{"Subsection", 0}, {"Subsubsection", 0}, {
         "Exercise", 0}}, FontFamily -> "Source Sans Pro", FontSize -> 14, 
       FontSlant -> "Plain", FontColor -> 
       RGBColor[
        0.9019607843137255, 0.4117647058823529, 0.027450980392156862`], 
       InterpretationBoxOptions -> {Editable -> True}], 
      Cell[
       StyleData["Index"], MenuSortingValue -> 10000, FontFamily -> 
       "Source Sans Pro", FontSize -> 11], 
      Cell[
       StyleData["IndexSubentry"], MenuSortingValue -> 10000, FontFamily -> 
       "Source Sans Pro", FontSize -> 11], 
      Cell[
       StyleData["FunctionName"], MenuSortingValue -> 10000, FontFamily -> 
       "Source Sans Pro Semibold", FontWeight -> "Bold"], 
      Cell[
       StyleData["IndexColumn"], 
       CellMargins -> {{66, 0}, {Inherited, Inherited}}, TabSpacings -> {2.}, 
       MenuSortingValue -> 10000, FontFamily -> "Source Sans Pro", 
       GridBoxOptions -> {
        GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
         GridBoxItemSize -> {"Columns" -> {{25}}}, 
         GridBoxSpacings -> {"Columns" -> {{2}}}}], 
      Cell[
       StyleData["IndexSubsection"], 
       CellMargins -> {{64, Inherited}, {9, 28}}, 
       CellGroupingRules -> {"SectionGrouping", 40}, MenuSortingValue -> 
       10000, FontFamily -> "Source Sans Pro", FontSize -> 24], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["Subsection"], CellMargins -> {{64, Inherited}, {12, 32}},
           FontFamily -> "Source Sans Pro Semibold", FontSize -> 18, 
          FontColor -> 
          RGBColor[
           0.9019607843137255, 0.4117647058823529, 0.027450980392156862`]], 
         Cell[
          StyleData["Subsection", "Printout"], 
          CellMargins -> {{64, Inherited}, {12, 32}}]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["ResourcesSubsection"], 
          CellMargins -> {{64, Inherited}, {4, 16}}, FontFamily -> 
          "Source Sans Pro Semibold", FontSize -> 15, FontSlant -> "Plain", 
          FontColor -> GrayLevel[0]], 
         Cell[
          StyleData["ResourcesSubsection", "Printout"], 
          CellMargins -> {{64, Inherited}, {4, 16}}]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["Subsubsection"], 
          CellMargins -> {{64, Inherited}, {6, 12}}, FontFamily -> 
          "Source Sans Pro Semibold", FontSize -> 16, FontColor -> 
          RGBColor[
           0.9019607843137255, 0.4117647058823529, 0.027450980392156862`]], 
         Cell[
          StyleData["Subsubsection", "Printout"], 
          CellMargins -> {{64, Inherited}, {6, 12}}]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["VocabularySection"], PageWidth -> 700, 
          CellFrame -> {{0, 0}, {0, 3}}, 
          CellMargins -> {{64, Inherited}, {8, 24}}, 
          CellGroupingRules -> {"SectionGrouping", 60}, PageBreakBelow -> 
          False, CellFrameMargins -> {{8, 8}, {4, 6}}, CellFrameColor -> 
          RGBColor[0.901961, 0.411765, 0.027451], FontFamily -> 
          "Source Sans Pro", FontSize -> 18, FontSlant -> "Italic", FontColor -> 
          RGBColor[
           0.9019607843137255, 0.4117647058823529, 0.027450980392156862`], 
          GridBoxOptions -> {GridBoxAlignment -> {}}], 
         Cell[
          StyleData["VocabularySection", "Printout"], 
          CellMargins -> {{64, Inherited}, {8, 24}}]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["VocabularyTable", StyleDefinitions -> StyleData["Text"]],
           SpanMaxSize -> 1, FontFamily -> "Source Sans Pro Light", FontColor -> 
          GrayLevel[0.8], 
          GridBoxOptions -> {
           GridBoxAlignment -> {"Columns" -> {{Left}}}, 
            GridBoxDividers -> {"Columns" -> {{False}}, "Rows" -> {False, {
                 Directive[
                  Thickness[0.5], "VocabDivColor"]}, False}}, 
            GridBoxItemStyle -> {
             "Columns" -> {"VocabularyCode", Inherited, Inherited}, 
              "Rows" -> {{Automatic}}}, 
            GridBoxSpacings -> {
             "Columns" -> {{0, 1, 2, 1, 2}}, "Rows" -> {{1}}}}], 
         Cell[
          StyleData["VocabularyTable", "Printout"]]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData[
          "VocabularyTable3Column", StyleDefinitions -> StyleData["Text"]], 
          SpanMaxSize -> 1, FontFamily -> "Source Sans Pro Light", FontColor -> 
          GrayLevel[0.8], 
          GridBoxOptions -> {
           GridBoxAlignment -> {"Columns" -> {{Left}}}, 
            GridBoxDividers -> {"Columns" -> {{False}}, "Rows" -> {False, {
                 Directive[
                  Thickness[0.5], "VocabDivColor"]}, False}}, 
            GridBoxItemStyle -> {
             "Columns" -> {
               "VocabularyCode", Inherited, "VocabularyCode", Inherited, 
                Inherited}, "Rows" -> {{Automatic}}}, 
            GridBoxSpacings -> {
             "Columns" -> {{0, 1, 2, 1, 2}}, "Rows" -> {{1}}}}], 
         Cell[
          StyleData["VocabularyTable3Column", "Printout"]]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["VocabularyText"], FontFamily -> "Source Sans Pro", 
          FontSize -> 14, FontWeight -> "Plain", FontSlant -> "Plain", 
          FontColor -> GrayLevel[0.25]], 
         Cell[
          StyleData["VocabularyText", "Printout"], 
          CellMargins -> {{66, 10}, {7, 7}}]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["VocabularyCode", StyleDefinitions -> StyleData["Text"]], 
          Deletable -> False, FontFamily -> "Source Sans Pro", FontSize -> 14,
           FontWeight -> "Bold", FontColor -> GrayLevel[0.25], 
          GridBoxOptions -> {
           GridBoxAlignment -> {"Columns" -> {{Left}}}, 
            GridBoxDividers -> {
             "Columns" -> {{False}}, "ColumnsIndexed" -> {}, 
              "Rows" -> {True, {True}, True}, "RowsIndexed" -> {}}}], 
         Cell[
          StyleData["VocabularyCode", "Printout"], FontColor -> 
          GrayLevel[0.25]]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["VocabDivColor"], FontColor -> GrayLevel[0.8]], 
         Cell[
          StyleData["VocabDivColor", "Printout"]]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["ExerciseSection"], PageWidth -> 700, 
          CellFrame -> {{0, 0}, {0, 3}}, 
          CellMargins -> {{64, Inherited}, {8, 30}}, Evaluatable -> True, 
          CellGroupingRules -> {"SectionGrouping", 60}, PageBreakBelow -> 
          False, ShowCellLabel -> False, CellFrameMargins -> {{8, 8}, {4, 6}},
           CellFrameColor -> RGBColor[0.901961, 0.411765, 0.027451], 
          CounterAssignments -> {{"Subsection", 0}, {"Subsubsection", 0}, {
            "Exercise", 0}}, FontFamily -> "Source Sans Pro", FontSize -> 18, 
          FontSlant -> "Italic", FontColor -> 
          RGBColor[
           0.9019607843137255, 0.4117647058823529, 0.027450980392156862`], 
          GridBoxOptions -> {GridBoxAlignment -> {}}], 
         Cell[
          StyleData["ExerciseSection", "Printout"], 
          CellMargins -> {{64, Inherited}, {8, 30}}]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["Exercise"], PageWidth -> 700, CellDingbat -> Cell[
            TextData[{"  ", 
              CounterBox["Section"], ".", 
              CounterBox["Exercise"]}], "ExerciseNumber", FontColor -> 
            RGBColor[
             0.9019607843137255, 0.4117647058823529, 0.027450980392156862`]], 
          ShowGroupOpener -> True, CellMargins -> {{108, Inherited}, {4, 8}}, 
          CellGroupingRules -> {"SectionGrouping", 67}, CounterIncrements -> 
          "Exercise", MenuSortingValue -> 10020, MenuCommandKey -> "2", 
          FontFamily -> "Source Sans Pro", FontSize -> 14, FontWeight -> 
          "Plain", FontSlant -> "Plain", FontColor -> GrayLevel[0.25]], 
         Cell[
          StyleData["Exercise", "Printout"], ShowGroupOpener -> False, 
          CellMargins -> {{110, Inherited}, {4, 8}}]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["ExerciseNumber"], FontFamily -> "Source Sans Pro", 
          FontSize -> 14, FontWeight -> "Bold", FontColor -> GrayLevel[0.25]], 
         Cell[
          StyleData["ExerciseNumber", "Printout"]]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["ExerciseSubsection"], PageWidth -> 500, 
          CellFrame -> {{False, False}, {1, False}}, 
          CellMargins -> {{64, Inherited}, {8, 18}}, 
          CellGroupingRules -> {"SectionGrouping", 60}, CellFrameColor -> 
          RGBColor[0.65, 0.6, 0.6], FontFamily -> "Source Sans Pro", FontSize -> 
          18, FontSlant -> "Italic", FontColor -> RGBColor[0.65, 0.6, 0.6]], 
         Cell[
          StyleData["ExerciseSubsection", "Printout"], 
          CellFrame -> {{False, False}, {1, False}}, CellFrameColor -> 
          RGBColor[0.65, 0.6, 0.6]]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["ExerciseNote"], PageWidth -> 700, 
          CellMargins -> {{64, Inherited}, {4, 8}}, PageBreakBelow -> False, 
          MenuSortingValue -> 10050, FontFamily -> "Source Sans Pro", 
          FontSize -> 14, FontWeight -> "Plain", FontSlant -> "Plain", 
          FontColor -> GrayLevel[0.25], $CellContext`ReturnCreatesNewCell -> 
          True], 
         Cell[
          StyleData["ExerciseNote", "Printout"], 
          CellMargins -> {{64, Inherited}, {4, 8}}]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["QASection"], PageWidth -> 700, 
          CellFrame -> {{0, 0}, {0, 3}}, 
          CellMargins -> {{64, Inherited}, {8, 30}}, 
          CellGroupingRules -> {"SectionGrouping", 60}, PageBreakBelow -> 
          False, CellFrameMargins -> {{8, 8}, {4, 6}}, CellFrameColor -> 
          RGBColor[0.901961, 0.411765, 0.027451], 
          CounterAssignments -> {{"Subsection", 0}, {"Subsubsection", 0}, {
            "Question", 0}}, FontFamily -> "Source Sans Pro", FontSize -> 18, 
          FontSlant -> "Italic", FontColor -> 
          RGBColor[
           0.9019607843137255, 0.4117647058823529, 0.027450980392156862`], 
          GridBoxOptions -> {GridBoxAlignment -> {}}], 
         Cell[
          StyleData["QASection", "Printout"], 
          CellMargins -> {{64, Inherited}, {8, 30}}]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["Question"], PageWidth -> 700, 
          CellMargins -> {{64, Inherited}, {2, 12}}, PageBreakBelow -> False, 
          CounterIncrements -> "Question", MenuSortingValue -> 10030, 
          MenuCommandKey -> "3", FontFamily -> "Source Sans Pro", FontSize -> 
          14, FontWeight -> "Bold", FontSlant -> 
          "Plain", $CellContext`ReturnCreatesNewCell -> 
          True, $CellContext`DefaultReturnCreatedCellStyle -> "Answer"], 
         Cell[
          StyleData["Question", "Printout"], 
          CellMargins -> {{65, Inherited}, {2, 12}}]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["Answer"], PageWidth -> 700, 
          CellMargins -> {{66, 10}, {4, 1}}, LineSpacing -> {1.125, 1., 2.}, 
          MenuSortingValue -> 10032, FontFamily -> "Source Sans Pro", 
          FontSize -> 14, FontWeight -> "Plain", FontSlant -> "Plain", 
          FontColor -> GrayLevel[0.25], $CellContext`ReturnCreatesNewCell -> 
          True, $CellContext`DefaultReturnCreatedCellStyle -> "Question"], 
         Cell[
          StyleData["Answer", "Printout"], 
          CellMargins -> {{66, 10}, {4, 1}}]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["QuestionNumber"], FontFamily -> "Source Sans Pro", 
          FontSize -> 14, FontWeight -> "Bold", FontColor -> GrayLevel[0.25]], 
         Cell[
          StyleData["QuestionNumber", "Printout"]]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["TechNoteSection"], PageWidth -> 700, 
          CellFrame -> {{0, 0}, {0, 3}}, 
          CellMargins -> {{64, Inherited}, {8, 30}}, 
          CellGroupingRules -> {"SectionGrouping", 60}, PageBreakBelow -> 
          False, CellFrameMargins -> {{8, 8}, {4, 6}}, CellFrameColor -> 
          RGBColor[0.901961, 0.411765, 0.027451], FontFamily -> 
          "Source Sans Pro", FontSize -> 18, FontSlant -> "Italic", FontColor -> 
          RGBColor[
           0.9019607843137255, 0.4117647058823529, 0.027450980392156862`], 
          GridBoxOptions -> {GridBoxAlignment -> {}}], 
         Cell[
          StyleData["TechNoteSection", "Printout"], 
          CellMargins -> {{64, Inherited}, {8, 30}}]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["TechNote"], PageWidth -> 700, CellDingbat -> Cell[
            TextData[{"\[FilledSmallSquare]"}], FontSize -> 12, FontColor -> 
            GrayLevel[0.5]], CellMargins -> {{78, Inherited}, {4, 8}}, 
          CellChangeTimes -> {{3.651515120816633*^9, 3.651515125814807*^9}, 
            3.6515155174947033`*^9}, LineSpacing -> {1.25, 1., 2.}, 
          MenuSortingValue -> 10040, FontFamily -> "Source Sans Pro", 
          FontSize -> 14, FontWeight -> "Plain", FontSlant -> "Plain", 
          FontColor -> GrayLevel[0.25], $CellContext`ReturnCreatesNewCell -> 
          True], 
         Cell[
          StyleData["TechNote", "Printout"], 
          CellMargins -> {{82, Inherited}, {4, 8}}]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["MoreExploreSection"], PageWidth -> 700, 
          CellFrame -> {{0, 0}, {0, 3}}, 
          CellMargins -> {{64, Inherited}, {8, 30}}, 
          CellGroupingRules -> {"SectionGrouping", 60}, PageBreakBelow -> 
          False, CellFrameMargins -> {{8, 8}, {4, 6}}, CellFrameColor -> 
          RGBColor[0.901961, 0.411765, 0.027451], FontFamily -> 
          "Source Sans Pro", FontSize -> 18, FontSlant -> "Italic", FontColor -> 
          RGBColor[
           0.9019607843137255, 0.4117647058823529, 0.027450980392156862`], 
          GridBoxOptions -> {GridBoxAlignment -> {}}], 
         Cell[
          StyleData["MoreExploreSection", "Printout"], 
          CellMargins -> {{64, Inherited}, {8, 30}}]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["MoreExplore"], PageWidth -> 700, 
          CellMargins -> {{64, Inherited}, {4, 8}}, PageBreakBelow -> False, 
          MenuSortingValue -> 10050, FontFamily -> "Source Sans Pro", 
          FontSize -> 14, FontWeight -> "Plain", FontSlant -> "Plain", 
          FontColor -> GrayLevel[0], $CellContext`ReturnCreatesNewCell -> 
          True], 
         Cell[
          StyleData["MoreExplore", "Printout"], 
          CellMargins -> {{64, Inherited}, {4, 8}}]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["MoreExploreShortURL"], 
          CellMargins -> {{64, Inherited}, {4, 8}}, PageBreakBelow -> False, 
          FontFamily -> "Source Sans Pro Light", FontSize -> 14, FontSlant -> 
          "Plain", FontColor -> GrayLevel[0]], 
         Cell[
          StyleData["MoreExploreShortURL", "Printout"], 
          CellMargins -> {{64, Inherited}, {4, 8}}]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["Text"], CellMargins -> {{66, 10}, {4, 14}}, FontFamily -> 
          "Baskerville", FontSize -> 18, FontColor -> 
          GrayLevel[0], $CellContext`ReturnCreatesNewCell -> True], 
         Cell[
          StyleData["Text", "Printout"], CellMargins -> {{66, 10}, {7, 7}}]}, 
        Closed]], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["ResourcesText"], CellMargins -> {{66, 10}, {2, 0}}, 
          FontFamily -> "Source Sans Pro", FontSize -> 14, FontWeight -> 
          "Plain", FontSlant -> "Plain", FontColor -> 
          GrayLevel[0], $CellContext`ReturnCreatesNewCell -> True], 
         Cell[
          StyleData["ResourcesText", "Printout"], 
          CellMargins -> {{66, 10}, {2, 0}}]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["ResourcesLink"], CellMargins -> {{66, 10}, {2, 0}}, 
          FontFamily -> "Source Sans Pro", FontSize -> 14, FontWeight -> 
          "Plain", FontSlant -> "Italic", FontColor -> 
          GrayLevel[0], $CellContext`ReturnCreatesNewCell -> True], 
         Cell[
          StyleData["ResourcesLink", "Printout"], 
          CellMargins -> {{66, 10}, {2, 0}}]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["CodeCaption"], CellFrame -> {{0, 0}, {0, 0}}, 
          CellMargins -> {{66, 10}, {4, 12}}, PageBreakBelow -> False, 
          CellFrameColor -> GrayLevel[0.4], MenuSortingValue -> 10010, 
          MenuCommandKey -> "1", FontFamily -> "Source Sans Pro", FontSize -> 
          16, FontColor -> GrayLevel[0.25]], 
         Cell[
          StyleData["CodeCaption", "Printout"], 
          CellMargins -> {{66, 10}, {4, 12}}]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["Input"], CellMargins -> {{99, 10}, {3, 7}}, SpanMaxSize -> 
          1, FontSize -> 15], 
         Cell[
          StyleData["Input", "Printout"], CellMargins -> {{99, 10}, {3, 7}}]},
         Closed]], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["Output"], CellMargins -> {{99, 10}, {14, 7}}, FontSize -> 
          15], 
         Cell[
          StyleData["Output", "Printout"], 
          CellMargins -> {{99, 10}, {14, 7}}]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["InputOnly"], CellMargins -> {{99, 10}, {25, 10}}, 
          SpanMaxSize -> 1, MenuSortingValue -> 1500, FontSize -> 15], 
         Cell[
          StyleData["InputOnly", "Printout"], 
          CellMargins -> {{99, 10}, {15, 10}}]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["CellLabel"], 
          CellLabelMargins -> {{12, Inherited}, {Inherited, Inherited}}, 
          LanguageCategory -> None, StyleMenuListing -> None, FontFamily -> 
          "Helvetica Neue", FontSize -> 9, FontWeight -> "Plain", FontSlant -> 
          "Plain", FontColor -> GrayLevel[0.5]], 
         Cell[
          StyleData["CellLabel", "Printout"], FontSize -> 8, FontColor -> 
          GrayLevel[0.5]]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["Message"], Editable -> False, 
          CellMargins -> {{66, Inherited}, {Inherited, Inherited}}, 
          CellGroupingRules -> "OutputGrouping", TextClipboardType -> 
          "PlainText", PageBreakWithin -> False, GroupPageBreakWithin -> 
          False, GeneratedCell -> True, CellAutoOverwrite -> True, 
          ShowCellLabel -> False, DefaultFormatType -> 
          DefaultOutputFormatType, ContextMenu -> 
          FEPrivate`FrontEndResource["ContextMenus", "Output"], 
          ShowAutoStyles -> False, ShowSyntaxStyles -> False, 
          AutoStyleOptions -> {
           "StringStyle" -> None, "SyntaxErrorStyle" -> None}, 
          HyphenationOptions -> {"HyphenationCharacter" -> "\[Continuation]"},
           AutoItalicWords -> {}, AutoQuoteCharacters -> {}, 
          PasteAutoQuoteCharacters -> {}, LanguageCategory -> None, 
          FormatType -> InputForm, ShowStringCharacters -> False, 
          CounterIncrements -> "Message", MenuSortingValue -> 1600, 
          StyleMenuListing -> None, FontFamily :> 
          CurrentValue["PanelFontFamily"], FontSize -> 11, FontColor -> 
          RGBColor[0.5072, 0.16933, 0.15221], $CellContext`StripStyleOnPaste -> 
          True], 
         Cell[
          StyleData["Message", "Printout"], 
          CellMargins -> {{100, Inherited}, {Inherited, Inherited}}, 
          CellFrameLabels -> {{None, None}, {None, None}}, FontColor -> 
          GrayLevel[0]]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["ExerciseInput", StyleDefinitions -> StyleData["Input"]], 
          CellMargins -> {{88, 10}, {4, 7}}, ShowCellLabel -> False, 
          SpanMaxSize -> 1, FontSize -> 
          14, $CellContext`GeneratedCellStyles -> {
           "Output" -> "ExerciseOutput"}], 
         Cell[
          StyleData["ExerciseInput", "Printout"], 
          CellMargins -> {{88, 10}, {4, 7}}]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData[
          "ExerciseOutput", StyleDefinitions -> StyleData["Output"]], 
          CellMargins -> {{88, 10}, {10, 4}}, ShowCellLabel -> False, 
          FontSize -> 14], 
         Cell[
          StyleData["ExerciseOutput", "Printout"], 
          CellMargins -> {{88, 10}, {10, 4}}]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["Picture"], CellMargins -> {{66, 10}, {10, 10}}, 
          CellGroupingRules -> "GraphicsGrouping", StyleMenuListing -> None], 
         
         Cell[
          StyleData["Picture", "Printout"], 
          CellMargins -> {{66, 10}, {8, 8}}]}, Closed]], 
      Cell[
       StyleData["ExerciseSummaryCell"], PageWidth -> 700, CellFrame -> 0, 
       CellMargins -> {{64, Inherited}, {8, 10}}, 
       CellGroupingRules -> {"SectionGrouping", 64}, PageBreakBelow -> False, 
       ShowCellLabel -> False, CellFrameMargins -> 0, ShowStringCharacters -> 
       False, FontFamily -> "Source Sans Pro", FontSize -> 18, FontColor -> 
       RGBColor[1, 1, 1], 
       GridBoxOptions -> {GridBoxBackground -> {"Columns" -> {{
              RGBColor[0.990997, 0.539528, 0.155779], 
              RGBColor[0.989487, 0.434699, 0.0320439]}}, "Rows" -> {{None}}}, 
         GridBoxItemSize -> {"Columns" -> {
             Scaled[0.7], 
             Scaled[0.3]}, "Rows" -> {{Automatic}}}}], 
      Cell[
       StyleData["ExerciseSummaryHeading"], ShowStringCharacters -> False, 
       FontFamily -> "Source Sans Pro", FontSize -> 18, FontColor -> 
       RGBColor[1, 1, 1]], 
      Cell[
       StyleData["ExerciseSummarySubheading"], ShowStringCharacters -> False, 
       FontFamily -> "Source Sans Pro", FontSize -> 15, FontColor -> 
       RGBColor[1., 0.9294117647058824, 0.7215686274509804]], 
      Cell[
       StyleData["ExercisePreviewButtonText"], ShowStringCharacters -> False, 
       FontFamily -> "Source Sans Pro", FontSize -> 14, FontSlant -> "Plain", 
       FontColor -> RGBColor[0.6, 0.6, 0.6]], 
      Cell[
       StyleData["ExercisePreviewButtonTextHighlight"], ShowStringCharacters -> 
       False, FontFamily -> "Source Sans Pro", FontSize -> 14, FontSlant -> 
       "Plain", FontColor -> 
       RGBColor[
        0.9019607843137255, 0.4117647058823529, 0.027450980392156862`]]}, 
     Open]], 
   Cell[
    CellGroupData[{
      Cell[
      "Inline and special formatting", "Section", 
       CellChangeTimes -> {{3.646681732592888*^9, 3.646681749414035*^9}}], 
      Cell[
       StyleData["Graphics"], MenuSortingValue -> None], 
      Cell[
       StyleData["Graphics3D"], MenuSortingValue -> None], 
      Cell[
       StyleData["StandardForm"], 
       InputAutoReplacements -> {
        "->" -> "\[Rule]", ":>" -> "\[RuleDelayed]", "<=" -> "\[LessEqual]", 
         ">=" -> "\[GreaterEqual]", "!=" -> "\[NotEqual]", "==" -> "\[Equal]",
          "@>" -> "\\[InlinePart]", "<->" -> "\[UndirectedEdge]", ParentList},
        LineSpacing -> {1.25, 0, 2}, SingleLetterItalics -> False, 
       StyleMenuListing -> None, FontFamily -> "Source Sans Pro", 
       PrivateFontOptions -> {"OperatorSubstitution" -> True}], 
      Cell[
       StyleData["OutputForm"], PageWidth -> DirectedInfinity[1], 
       TextAlignment -> Left, LineSpacing -> {0.6, 1}, 
       AutoQuoteCharacters -> {}, PasteAutoQuoteCharacters -> {}, 
       StyleMenuListing -> None, FontFamily -> "Source Sans Pro", 
       PrivateFontOptions -> {"OperatorSubstitution" -> True}], 
      Cell[
       StyleData["InputForm"], PageWidth -> DirectedInfinity[1], 
       InputAutoReplacements -> {}, AllowInlineCells -> False, Hyphenation -> 
       False, AutoQuoteCharacters -> {}, PasteAutoQuoteCharacters -> {}, 
       AutoSpacing -> False, NumberMarks -> True, AutoNumberFormatting -> 
       False, StyleMenuListing -> None, FontFamily -> "Source Sans Pro", 
       PrivateFontOptions -> {"OperatorSubstitution" -> True}], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["DetailsLink"], FontFamily -> "Source Sans Pro", FontSize :> 
          If[CurrentValue[
              EvaluationCell[], "FontFamily"] === "Source Sans Pro", 
            Inherited, 
            If[CurrentValue[
               EvaluationCell[], "FontFamily"] === "WolframCodeSans", 
             Inherited, Inherited 0.9]], FontColor -> GrayLevel[0], 
          ButtonBoxOptions -> {
           ButtonFunction :> (
             Function[$CellContext`t, 
              NotebookFind[$CellContext`t, "Notes", All, CellStyle]; 
              NotebookFind[$CellContext`t, "NotesSection", All, CellStyle, 
                AutoScroll -> Top]][
              Documentation`HelpLookup[
               StringJoin["ref/", #]]]& ), ButtonSource -> ButtonContents, 
            Evaluator -> Automatic}], 
         Cell[
          StyleData["DetailsLink", "Printout"], FontFamily -> 
          "Source Sans Pro", FontSize :> If[CurrentValue[
              EvaluationCell[], "FontFamily"] === "Source Sans Pro", 
            Inherited, 
            If[CurrentValue[
               EvaluationCell[], "FontFamily"] === "WolframCodeSans", 
             Inherited, Inherited 0.88]], FontColor -> GrayLevel[0]]}, 
        Closed]], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["LinkAlt"], FontFamily -> "Source Sans Pro", FontSize :> 
          If[CurrentValue[
              EvaluationCell[], "FontFamily"] === "Source Sans Pro", 
            Inherited, 
            If[CurrentValue[
               EvaluationCell[], "FontFamily"] === "WolframCodeSans", 
             Inherited, Inherited 0.9]], FontColor -> GrayLevel[0]], 
         Cell[
          StyleData["LinkAlt", "Printout"], FontFamily -> "Source Sans Pro", 
          FontSize :> If[CurrentValue[
              EvaluationCell[], "FontFamily"] === "Source Sans Pro", 
            Inherited, 
            If[CurrentValue[
               EvaluationCell[], "FontFamily"] === "WolframCodeSans", 
             Inherited, Inherited 0.88]], FontColor -> GrayLevel[0]]}, 
        Closed]], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["Hyperlink"], MenuSortingValue -> None, FontColor -> 
          RGBColor[0.3, 0.35, 0.5]], 
         Cell[
          StyleData["Hyperlink", "Printout"]]}, Closed]], 
      Cell[
       StyleData[
       "IndexNavigationLink", StyleDefinitions -> StyleData["Hyperlink"]], 
       MenuSortingValue -> None, FontColor -> 
       RGBColor[
        0.9019607843137255, 0.4117647058823529, 0.027450980392156862`]], 
      Cell[
       StyleData["Crosslink"], 
       ButtonBoxOptions -> {ButtonFunction :> (FrontEndExecute[{
            
            NotebookLocate[#2, "OpenInNewWindow" -> 
             CurrentValue["HyperlinkModifierKey"]]}]& ), Evaluator -> None, 
         Method -> "Queued"}], 
      Cell[
       StyleData["VocabularyLink"], FontColor -> GrayLevel[0], 
       ButtonBoxOptions -> {ButtonFunction :> (FrontEndExecute[{
            
            NotebookLocate[#2, "OpenInNewWindow" -> 
             CurrentValue["HyperlinkModifierKey"]]}]& ), Evaluator -> None, 
         Method -> "Queued"}], 
      Cell[
       StyleData["InlineCode"], SpanMaxSize -> 1, FontColor -> GrayLevel[0]], 
      
      Cell[
       StyleData["InlineCodeText"], SpanMaxSize -> 1, FontFamily -> 
       "Source Sans Pro", FontSize -> 0.95 Inherited], 
      Cell[
       StyleData["NoLabel"], ShowCellLabel -> 
       False, $CellContext`GeneratedCellStyles -> {
        "Output" -> "ExerciseOutput"}], 
      Cell[
       StyleData["MenuName"], FontFamily -> "Verdana", FontWeight -> "Bold", 
       FontColor -> GrayLevel[0.286275]], 
      Cell[
       StyleData["KeyEvent"], CellFrame -> {{0.5, 0.5}, {0.5, 0.5}}, 
       CellFrameMargins -> {{2, 2}, {2, 2}}, CellFrameColor -> GrayLevel[0.7],
        FontFamily -> "Verdana", FontColor -> GrayLevel[0.4]], 
      Cell[
       StyleData["KeyEventDelimiter"], FontColor -> GrayLevel[0.5]], 
      Cell[
       CellGroupData[{
         Cell["Key Styles", "Subsubsection"], 
         Cell[
          StyleData["Key0"], 
          TemplateBoxOptions -> {DisplayFunction -> (FrameBox[
              TagBox[
               GridBox[{{
                  ItemBox[
                   
                   TemplateBox[{"\[ThickSpace]", #, "\[ThickSpace]"}, 
                    "RowDefault"], Background -> GrayLevel[1], StripOnInput -> 
                   False]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Center}}, "Rows" -> {{Baseline}}}, AutoDelete -> 
                False, GridBoxDividers -> {"Rows" -> {{None}}}, 
                GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{1.45}}},
                 GridBoxSpacings -> {"Columns" -> {{0}}}, 
                BaselinePosition -> {{1, 1}, Baseline}], "Grid"], 
              RoundingRadius -> 4, Background -> 
              GrayLevel[0.9333333333333333], 
              FrameMargins -> {{0, 0}, {-2, -2}}, FrameStyle -> {
                GrayLevel[0.8352941176470589], 
                AbsoluteThickness[1]}, BaselinePosition -> Baseline, 
              StripOnInput -> False]& )}], 
         Cell[
          StyleData["Key1"], 
          TemplateBoxOptions -> {DisplayFunction -> (FrameBox[
              TagBox[
               GridBox[{{
                  ItemBox[
                   
                   TemplateBox[{"\[ThickSpace]", #, "\[ThickSpace]"}, 
                    "RowDefault"], Background -> 
                   GrayLevel[0.9333333333333333], StripOnInput -> False], 
                  ItemBox[
                   
                   TemplateBox[{"\[ThickSpace]", #2, "\[ThickSpace]"}, 
                    "RowDefault"], Background -> GrayLevel[1], StripOnInput -> 
                   False]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Center}}, "Rows" -> {{Baseline}}}, AutoDelete -> 
                False, GridBoxDividers -> {
                 "ColumnsIndexed" -> {2 -> GrayLevel[0.8352941176470589]}, 
                  "Rows" -> {{None}}}, 
                GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{1.45}}},
                 GridBoxSpacings -> {"Columns" -> {{0}}}, 
                BaselinePosition -> {{1, 1}, Baseline}], "Grid"], 
              RoundingRadius -> 4, Background -> 
              GrayLevel[0.9333333333333333], 
              FrameMargins -> {{0, 0}, {-2, -2}}, FrameStyle -> {
                GrayLevel[0.8352941176470589], 
                AbsoluteThickness[1]}, BaselinePosition -> Baseline, 
              StripOnInput -> False]& )}], 
         Cell[
          StyleData["Key2"], 
          TemplateBoxOptions -> {DisplayFunction -> (FrameBox[
              TagBox[
               GridBox[{{
                  ItemBox[
                   
                   TemplateBox[{"\[ThickSpace]", #, "\[ThickSpace]"}, 
                    "RowDefault"], Background -> 
                   GrayLevel[0.9333333333333333], StripOnInput -> False], 
                  ItemBox[
                   
                   TemplateBox[{"\[ThickSpace]", #2, "\[ThickSpace]"}, 
                    "RowDefault"], Background -> 
                   GrayLevel[0.9333333333333333], StripOnInput -> False], 
                  ItemBox[
                   
                   TemplateBox[{"\[ThickSpace]", #3, "\[ThickSpace]"}, 
                    "RowDefault"], Background -> GrayLevel[1], StripOnInput -> 
                   False]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Center}}, "Rows" -> {{Baseline}}}, AutoDelete -> 
                False, 
                GridBoxDividers -> {
                 "ColumnsIndexed" -> {
                   2 -> GrayLevel[0.8352941176470589], 3 -> 
                    GrayLevel[0.8352941176470589]}, "Rows" -> {{None}}}, 
                GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{1.45}}},
                 GridBoxSpacings -> {"Columns" -> {{0}}}, 
                BaselinePosition -> {{1, 1}, Baseline}], "Grid"], 
              RoundingRadius -> 4, Background -> 
              GrayLevel[0.9333333333333333], 
              FrameMargins -> {{0, 0}, {-2, -2}}, FrameStyle -> {
                GrayLevel[0.8352941176470589], 
                AbsoluteThickness[1]}, BaselinePosition -> Baseline, 
              StripOnInput -> False]& )}], 
         Cell[
          StyleData["Key3"], 
          TemplateBoxOptions -> {DisplayFunction -> (FrameBox[
              TagBox[
               GridBox[{{
                  ItemBox[
                   
                   TemplateBox[{"\[ThickSpace]", #, "\[ThickSpace]"}, 
                    "RowDefault"], Background -> 
                   GrayLevel[0.9333333333333333], StripOnInput -> False], 
                  ItemBox[
                   
                   TemplateBox[{"\[ThickSpace]", #2, "\[ThickSpace]"}, 
                    "RowDefault"], Background -> 
                   GrayLevel[0.9333333333333333], StripOnInput -> False], 
                  ItemBox[
                   
                   TemplateBox[{"\[ThickSpace]", #3, "\[ThickSpace]"}, 
                    "RowDefault"], Background -> 
                   GrayLevel[0.9333333333333333], StripOnInput -> False], 
                  ItemBox[
                   
                   TemplateBox[{"\[ThickSpace]", #4, "\[ThickSpace]"}, 
                    "RowDefault"], Background -> GrayLevel[1], StripOnInput -> 
                   False]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Center}}, "Rows" -> {{Baseline}}}, AutoDelete -> 
                False, GridBoxDividers -> {
                 "ColumnsIndexed" -> {
                   2 -> GrayLevel[0.8352941176470589], 3 -> 
                    GrayLevel[0.8352941176470589], 4 -> 
                    GrayLevel[0.8352941176470589]}, "Rows" -> {{None}}}, 
                GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{1.45}}},
                 GridBoxSpacings -> {"Columns" -> {{0}}}, 
                BaselinePosition -> {{1, 1}, Baseline}], "Grid"], 
              RoundingRadius -> 4, Background -> 
              GrayLevel[0.9333333333333333], 
              FrameMargins -> {{0, 0}, {-2, -2}}, FrameStyle -> {
                GrayLevel[0.8352941176470589], 
                AbsoluteThickness[1]}, BaselinePosition -> Baseline, 
              StripOnInput -> False]& )}]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell["Entity styles", "Subsubsection"], 
         Cell[
          StyleData["Entity"], ShowStringCharacters -> False, 
          TemplateBoxOptions -> {DisplayFunction -> (TooltipBox[
              FrameBox[
               PaneSelectorBox[{True -> GridBox[{{
                    
                    StyleBox[#, FontWeight -> "Bold", FontFamily -> 
                    "Source Sans Pro", FontColor -> 
                    RGBColor[0.395437, 0.20595, 0.061158]], 
                    StyleBox[
                    RowBox[{"(", #4, ")"}], FontFamily -> "Source Sans Pro", 
                    FontWeight -> "Plain", FontColor -> GrayLevel[0.65], 
                    Selectable -> False]}}, 
                   GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                   GridBoxSpacings -> {"Columns" -> {{0.2}}, "Rows" -> {{0}}},
                    BaselinePosition -> {1, 1}], False -> 
                 PaneBox[#, 
                   BaseStyle -> {
                    FontColor -> RGBColor[0.395437, 0.20595, 0.061158]}, 
                   BaselinePosition -> Baseline]}, 
                Dynamic[
                 CurrentValue[Evaluatable]], ImageSize -> Automatic, 
                BaselinePosition -> Baseline, 
                BaseStyle -> {FontFamily -> "Helvetica"}], FrameStyle -> 
               RGBColor[1., 0.504768, 0.], Background -> 
               RGBColor[1., 0.980392, 0.921569], 
               FrameMargins -> {{5, 5}, {1.5, 1.5}}, 
               ImageMargins -> {{2, 2}, {2, 2}}, BaselinePosition -> Baseline,
                RoundingRadius -> 4], #3, 
              BaseStyle -> {
               FontWeight -> "Plain", ShowStringCharacters -> False, 
                LineIndent -> 0, 
                PrivateFontOptions -> {"OperatorSubstitution" -> False}}]& ), 
            Editable -> False, InterpretationFunction -> (#2& )}], 
         Cell[
          StyleData["EntityFrameless"], ShowStringCharacters -> False, 
          TemplateBoxOptions -> {DisplayFunction -> (TooltipBox[
              PaneSelectorBox[{True -> GridBox[{{
                    
                    StyleBox[#, FontWeight -> "Bold", FontFamily -> 
                    "Source Sans Pro", FontColor -> 
                    RGBColor[0.395437, 0.20595, 0.061158]], 
                    StyleBox[
                    RowBox[{"(", #4, ")"}], FontFamily -> "Source Sans Pro", 
                    FontWeight -> "Plain", FontColor -> GrayLevel[0.65], 
                    Selectable -> False]}}, 
                  GridBoxItemSize -> {
                   "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                  GridBoxSpacings -> {"Columns" -> {{0.2}}, "Rows" -> {{0}}}, 
                  BaselinePosition -> {1, 1}], False -> 
                PaneBox[#, 
                  BaseStyle -> {
                   FontColor -> RGBColor[0.395437, 0.20595, 0.061158]}, 
                  BaselinePosition -> Baseline]}, 
               Dynamic[
                CurrentValue[Evaluatable]], ImageSize -> Automatic, 
               BaselinePosition -> Baseline, 
               BaseStyle -> {FontFamily -> "Helvetica"}], #3, 
              BaseStyle -> {
               ShowStringCharacters -> False, LineIndent -> 0, 
                PrivateFontOptions -> {
                 FontWeight -> "Plain", "OperatorSubstitution" -> False}}]& ),
             Editable -> False, InterpretationFunction -> (#2& )}], 
         Cell[
          StyleData["EntityFramelessHot"], ShowStringCharacters -> False, 
          TemplateBoxOptions -> {
           DisplayFunction -> (PaneSelectorBox[{True -> GridBox[{{
                   
                   StyleBox[#, FontWeight -> "Bold", FontFamily -> 
                    "Source Sans Pro", FontColor -> GrayLevel[0]], 
                   StyleBox[
                    RowBox[{"(", #4, ")"}], FontWeight -> "Plain", FontFamily -> 
                    "Source Sans Pro", FontColor -> GrayLevel[0], Selectable -> 
                    False]}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {"Columns" -> {{0.2}}, "Rows" -> {{0}}}, 
                 BaselinePosition -> {1, 1}], False -> 
               PaneBox[#, BaseStyle -> {FontColor -> GrayLevel[0]}, 
                 BaselinePosition -> Baseline]}, 
              Dynamic[
               CurrentValue[Evaluatable]], ImageSize -> Automatic, 
              BaselinePosition -> Baseline, 
              BaseStyle -> {
               FontWeight -> "Plain", FontFamily -> "Helvetica", 
                ShowStringCharacters -> False, LineIndent -> 0, 
                PrivateFontOptions -> {"OperatorSubstitution" -> False}}]& ), 
            Editable -> False, InterpretationFunction -> (#2& )}], 
         Cell[
          StyleData["EntityClass"], ShowStringCharacters -> False, 
          TemplateBoxOptions -> {DisplayFunction -> (TooltipBox[
              FrameBox[
               PaneSelectorBox[{True -> GridBox[{{
                    PaneBox[
                    DynamicBox[
                    FEPrivate`ImportImage[
                    
                    FrontEnd`ToFileName[{"Typeset", "Entity"}, 
                    "EntityClass.png"]], ImageSizeCache -> {8., {2., 6.}}], 
                    BaselinePosition -> Bottom], 
                    
                    StyleBox[#, FontWeight -> "Bold", FontFamily -> 
                    "Source Sans Pro", FontColor -> 
                    RGBColor[0.395437, 0.20595, 0.061158]], 
                    StyleBox[
                    RowBox[{"(", #4, ")"}], FontWeight -> "Plain", FontFamily -> 
                    "Source Sans Pro", FontColor -> GrayLevel[0.65], 
                    Selectable -> False]}}, 
                   GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                   GridBoxSpacings -> {"Columns" -> {{0.2}}, "Rows" -> {{0}}},
                    BaselinePosition -> {1, 2}], False -> GridBox[{{
                    PaneBox[
                    DynamicBox[
                    FEPrivate`ImportImage[
                    
                    FrontEnd`ToFileName[{"Typeset", "Entity"}, 
                    "EntityClass.png"]], ImageSizeCache -> {8., {2., 6.}}], 
                    BaselinePosition -> Bottom], 
                    
                    StyleBox[#, FontColor -> 
                    RGBColor[0.395437, 0.20595, 0.061158]]}}, 
                   GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                   GridBoxSpacings -> {"Columns" -> {{0.2}}, "Rows" -> {{0}}},
                    BaselinePosition -> {1, 2}]}, 
                Dynamic[
                 CurrentValue[Evaluatable]], ImageSize -> Automatic, 
                BaselinePosition -> Baseline, 
                BaseStyle -> {FontFamily -> "Helvetica"}], FrameStyle -> 
               RGBColor[1., 0.504768, 0.], Background -> 
               RGBColor[1., 0.980392, 0.921569], 
               FrameMargins -> {{5, 5}, {1.5, 1.5}}, 
               ImageMargins -> {{2, 2}, {2, 2}}, BaselinePosition -> Baseline,
                RoundingRadius -> 4], #3, 
              BaseStyle -> {
               FontWeight -> "Plain", ShowStringCharacters -> False, 
                LineIndent -> 0, 
                PrivateFontOptions -> {"OperatorSubstitution" -> False}}]& ), 
            Editable -> False, InterpretationFunction -> (#2& )}], 
         Cell[
          StyleData["EntityClassFrameless"], ShowStringCharacters -> False, 
          TemplateBoxOptions -> {DisplayFunction -> (TooltipBox[
              PaneSelectorBox[{True -> GridBox[{{
                    PaneBox[
                    DynamicBox[
                    FEPrivate`ImportImage[
                    
                    FrontEnd`ToFileName[{"Typeset", "Entity"}, 
                    "EntityClass.png"]], ImageSizeCache -> {8., {2., 6.}}], 
                    BaselinePosition -> Bottom], 
                    
                    StyleBox[#, FontWeight -> "Bold", FontFamily -> 
                    "Source Sans Pro", FontColor -> 
                    RGBColor[0.395437, 0.20595, 0.061158]], 
                    StyleBox[
                    RowBox[{"(", #4, ")"}], FontWeight -> "Plain", FontFamily -> 
                    "Source Sans Pro", FontColor -> GrayLevel[0.65], 
                    Selectable -> False]}}, 
                  GridBoxItemSize -> {
                   "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                  GridBoxSpacings -> {"Columns" -> {{0.2}}, "Rows" -> {{0}}}, 
                  BaselinePosition -> {1, 2}], False -> GridBox[{{
                    PaneBox[
                    DynamicBox[
                    FEPrivate`ImportImage[
                    
                    FrontEnd`ToFileName[{"Typeset", "Entity"}, 
                    "EntityClass.png"]], ImageSizeCache -> {8., {2., 6.}}], 
                    BaselinePosition -> Bottom], 
                    
                    StyleBox[#, FontColor -> 
                    RGBColor[0.395437, 0.20595, 0.061158]]}}, 
                  GridBoxItemSize -> {
                   "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                  GridBoxSpacings -> {"Columns" -> {{0.2}}, "Rows" -> {{0}}}, 
                  BaselinePosition -> {1, 2}]}, 
               Dynamic[
                CurrentValue[Evaluatable]], ImageSize -> Automatic, 
               BaselinePosition -> Baseline, 
               BaseStyle -> {FontFamily -> "Helvetica"}], #3, 
              BaseStyle -> {
               FontWeight -> "Plain", ShowStringCharacters -> False, 
                LineIndent -> 0, 
                PrivateFontOptions -> {"OperatorSubstitution" -> False}}]& ), 
            Editable -> False, InterpretationFunction -> (#2& )}], 
         Cell[
          StyleData["EntityClassFramelessHot"], ShowStringCharacters -> False,
           TemplateBoxOptions -> {
           DisplayFunction -> (PaneSelectorBox[{True -> GridBox[{{
                   PaneBox[
                    DynamicBox[
                    FEPrivate`ImportImage[
                    
                    FrontEnd`ToFileName[{"Typeset", "Entity"}, 
                    "EntityClass.png"]], ImageSizeCache -> {8., {2., 6.}}], 
                    BaselinePosition -> Bottom], 
                   
                   StyleBox[#, FontWeight -> "Bold", FontFamily -> 
                    "Source Sans Pro", FontColor -> GrayLevel[0]], 
                   StyleBox[
                    RowBox[{"(", #4, ")"}], FontWeight -> "Plain", FontFamily -> 
                    "Source Sans Pro", FontColor -> GrayLevel[0], Selectable -> 
                    False]}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {"Columns" -> {{0.2}}, "Rows" -> {{0}}}, 
                 BaselinePosition -> {1, 2}], False -> GridBox[{{
                   PaneBox[
                    DynamicBox[
                    FEPrivate`ImportImage[
                    
                    FrontEnd`ToFileName[{"Typeset", "Entity"}, 
                    "EntityClass.png"]], ImageSizeCache -> {8., {2., 6.}}], 
                    BaselinePosition -> Bottom], 
                   StyleBox[#, FontColor -> GrayLevel[0]]}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {"Columns" -> {{0.2}}, "Rows" -> {{0}}}, 
                 BaselinePosition -> {1, 2}]}, 
              Dynamic[
               CurrentValue[Evaluatable]], ImageSize -> Automatic, 
              BaselinePosition -> Baseline, 
              BaseStyle -> {
               FontWeight -> "Plain", FontFamily -> "Helvetica", 
                ShowStringCharacters -> False, LineIndent -> 0, 
                PrivateFontOptions -> {"OperatorSubstitution" -> False}}]& ), 
            Editable -> False, InterpretationFunction -> (#2& )}], 
         Cell[
          StyleData["EntityProperty"], ShowStringCharacters -> False, 
          TemplateBoxOptions -> {DisplayFunction -> (TooltipBox[
              FrameBox[
               
               PaneBox[#, 
                BaseStyle -> {
                 FontSlant -> Italic, FontWeight -> Plain, FontFamily -> 
                  "Source Sans Pro", FontColor -> 
                  RGBColor[0.395437, 0.20595, 0.061158]}, BaselinePosition -> 
                Baseline], FrameStyle -> 
               RGBColor[0.94227, 0.703639, 0.033387], Background -> 
               RGBColor[1., 0.980392, 0.921569], 
               FrameMargins -> {{5, 5}, {1.5, 1.5}}, 
               ImageMargins -> {{2, 2}, {2, 2}}, BaselinePosition -> Baseline,
                RoundingRadius -> 4], #3, 
              BaseStyle -> {
               FontWeight -> "Plain", ShowStringCharacters -> False, 
                LineIndent -> 0, 
                PrivateFontOptions -> {"OperatorSubstitution" -> False}}]& ), 
            Editable -> False, InterpretationFunction -> (#2& )}], 
         Cell[
          StyleData["EntityPropertyClass"], ShowStringCharacters -> False, 
          TemplateBoxOptions -> {DisplayFunction -> (TooltipBox[
              FrameBox[
               PaneBox[
                GridBox[{{
                   PaneBox[
                    DynamicBox[
                    FEPrivate`ImportImage[
                    
                    FrontEnd`ToFileName[{"Typeset", "Entity"}, 
                    "EntityClass.png"]], ImageSizeCache -> {8., {2., 6.}}], 
                    BaselinePosition -> Bottom], #}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {"Columns" -> {{0.2}}, "Rows" -> {{0}}}, 
                 BaselinePosition -> {1, 2}], 
                BaseStyle -> {
                 FontSlant -> Italic, FontWeight -> Plain, FontFamily -> 
                  "Source Sans Pro", FontColor -> 
                  RGBColor[0.395437, 0.20595, 0.061158]}, BaselinePosition -> 
                Baseline], FrameStyle -> 
               RGBColor[0.94227, 0.703639, 0.033387], Background -> 
               RGBColor[1., 0.980392, 0.921569], 
               FrameMargins -> {{5, 5}, {1.5, 1.5}}, 
               ImageMargins -> {{2, 2}, {2, 2}}, BaselinePosition -> Baseline,
                RoundingRadius -> 4], #3, 
              BaseStyle -> {
               FontWeight -> "Plain", ShowStringCharacters -> False, 
                LineIndent -> 0, 
                PrivateFontOptions -> {"OperatorSubstitution" -> False}}]& ), 
            Editable -> False, InterpretationFunction -> (#2& )}], 
         Cell[
          StyleData["EntityValue"], ShowStringCharacters -> False, 
          TemplateBoxOptions -> {DisplayFunction -> (FrameBox[
              
              GridBox[{{#, #2}}, GridBoxAlignment -> {"Rows" -> {{Baseline}}},
                GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}}, 
               GridBoxSpacings -> {"Columns" -> {{0}}}, 
               BaselinePosition -> {1, 1}], Background -> 
              RGBColor[{0.9921568627450981, 0.9529411764705882, 
                0.8509803921568627}], BaselinePosition -> Baseline, 
              FrameMargins -> {{1, 1}, {1, 1}}, ImageMargins -> 2, FrameStyle -> 
              RGBColor[{0.9333333333333333, 0.8470588235294118, 
                0.5529411764705883}], RoundingRadius -> 5]& )}]}, Closed]]}, 
     Closed]]}, Visible -> False, FrontEndVersion -> 
  "11.3 for Mac OS X x86 (32-bit, 64-bit Kernel) (March 5, 2018)", 
  StyleDefinitions -> "StylesheetFormatting.nb"]
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{
 "p:15"->{
  Cell[668, 24, 364, 10, 70, "Section",ExpressionUUID->"24ca2c26-3962-4e76-aca0-36d4078cce68",
   CounterAssignments->{{"Section", 4}, {"Subsection", 0}, {"Subsubsection", 0}, {"Exercise", 0}, {"Question", 0}},
   CellTags->{"p:15", "i:1"}]},
 "i:1"->{
  Cell[668, 24, 364, 10, 70, "Section",ExpressionUUID->"24ca2c26-3962-4e76-aca0-36d4078cce68",
   CounterAssignments->{{"Section", 4}, {"Subsection", 0}, {"Subsubsection", 0}, {"Exercise", 0}, {"Question", 0}},
   CellTags->{"p:15", "i:1"}]},
 "i:2"->{
  Cell[1192, 43, 147, 4, 70, "CodeCaption",ExpressionUUID->"f6b51684-54a1-4278-99d9-a258626b7406",
   CellTags->"i:2"]},
 "i:3"->{
  Cell[4109, 160, 177, 8, 70, "CodeCaption",ExpressionUUID->"f842ac6e-49e1-4a01-8326-0253ab7411f1",
   CellTags->"i:3"]},
 "i:4"->{
  Cell[4700, 189, 197, 8, 70, "CodeCaption",ExpressionUUID->"0824cfaf-d116-417c-818b-d70ebb93053d",
   CellTags->"i:4"]},
 "i:5"->{
  Cell[5259, 216, 207, 8, 70, "CodeCaption",ExpressionUUID->"453a67ce-df8e-443b-970f-f30bb8509be1",
   CellTags->"i:5"]},
 "LastCellOfAPage"->{
  Cell[6093, 255, 148, 5, 70, "Output",ExpressionUUID->"25ed39d7-ed5b-4231-9f86-3aea591a6c04",
   Evaluatable->False,
   CellTags->"LastCellOfAPage"],
  Cell[11011, 474, 148, 5, 70, "Output",ExpressionUUID->"616a1a3c-71ff-4099-88eb-9bf7d32f5a3a",
   Evaluatable->False,
   CellTags->"LastCellOfAPage"],
  Cell[29277, 1079, 858, 28, 70, "Exercise",ExpressionUUID->"f9aa9855-7c4f-4471-b308-3cfbc3ee5efa",
   CellTags->"LastCellOfAPage"],
  Cell[347418, 8252, 308, 7, 70, "MoreExplore",ExpressionUUID->"61e7e0e5-6d8b-4d97-87fb-7ed405021458",
   CellTags->"LastCellOfAPage"]},
 "p:16"->{
  Cell[6256, 263, 235, 8, 70, "Text",ExpressionUUID->"129cd8bc-842d-480d-b42e-714c0e9ad4cb",
   CellTags->{"p:16", "i:6"}]},
 "i:6"->{
  Cell[6256, 263, 235, 8, 70, "Text",ExpressionUUID->"129cd8bc-842d-480d-b42e-714c0e9ad4cb",
   CellTags->{"p:16", "i:6"}]},
 "i:7"->{
  Cell[7080, 300, 465, 16, 70, "Text",ExpressionUUID->"6b5cf456-ce5d-4e93-90d5-c88a747a93fa",
   CellTags->"i:7"]},
 "i:8"->{
  Cell[9848, 425, 361, 12, 70, "Text",ExpressionUUID->"47569230-4511-4253-aea1-feed489927fa",
   CellTags->"i:8"]},
 "p:17"->{
  Cell[11174, 482, 259, 9, 70, "Text",ExpressionUUID->"8fd5e867-1d62-4429-8413-bf585d62fb8c",
   CellTags->{"p:17", "i:9"}]},
 "i:9"->{
  Cell[11174, 482, 259, 9, 70, "Text",ExpressionUUID->"8fd5e867-1d62-4429-8413-bf585d62fb8c",
   CellTags->{"p:17", "i:9"}]},
 "i:10"->{
  Cell[12652, 546, 205, 8, 70, "Text",ExpressionUUID->"04bc4df3-99db-4940-9cf8-bdfac2485812",
   CellTags->"i:10"]},
 "p:18"->{
  Cell[31498, 1152, 750, 21, 70, "Exercise",ExpressionUUID->"0b70cbf4-7a0b-4961-9bab-5efc70af6963",
   CellTags->"p:18"]},
 "i:11"->{
  Cell[345240, 8165, 159, 4, 70, "Question",ExpressionUUID->"48555be0-d09f-4022-9184-7c441f63aaa2",
   CellTags->"i:11"]},
 "i:12"->{
  Cell[345929, 8195, 753, 25, 70, "TechNote",ExpressionUUID->"606986c8-9591-4e1e-bf22-98037634d340",
   CellTags->"i:12"]},
 "i:13"->{
  Cell[346685, 8222, 576, 20, 70, "TechNote",ExpressionUUID->"62010f33-bed2-4cd5-aa7c-983ce3298a41",
   CellTags->"i:13"]}
 }
*)
(*CellTagsIndex
CellTagsIndex->{
 {"p:15", 438860, 10099},
 {"i:1", 439113, 10103},
 {"i:2", 439366, 10107},
 {"i:3", 439497, 10110},
 {"i:4", 439629, 10113},
 {"i:5", 439761, 10116},
 {"LastCellOfAPage", 439905, 10119},
 {"p:16", 440489, 10130},
 {"i:6", 440624, 10133},
 {"i:7", 440759, 10136},
 {"i:8", 440885, 10139},
 {"p:17", 441012, 10142},
 {"i:9", 441148, 10145},
 {"i:10", 441285, 10148},
 {"p:18", 441413, 10151},
 {"i:11", 441547, 10154},
 {"i:12", 441681, 10157},
 {"i:13", 441816, 10160}
 }
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[668, 24, 364, 10, 70, "Section",ExpressionUUID->"24ca2c26-3962-4e76-aca0-36d4078cce68",
 CounterAssignments->{{"Section", 4}, {"Subsection", 0}, {"Subsubsection", 0}, {"Exercise", 0}, {"Question", 0}},
 CellTags->{"p:15", "i:1"}],
Cell[1035, 36, 154, 5, 70, "Text",ExpressionUUID->"eb83c182-6dbb-4be5-aae6-58bf76ad785d"],
Cell[1192, 43, 147, 4, 70, "CodeCaption",ExpressionUUID->"f6b51684-54a1-4278-99d9-a258626b7406",
 CellTags->"i:2"],
Cell[CellGroupData[{
Cell[1364, 51, 149, 5, 70, "Input",ExpressionUUID->"c2c03104-c532-4249-a84c-8a7d8602d0a0"],
Cell[1516, 58, 175, 6, 70, "Output",ExpressionUUID->"51fca069-931c-445c-b1b4-e8a039beaf00",
 Evaluatable->False]
}, Open  ]],
Cell[CellGroupData[{
Cell[1728, 69, 205, 7, 70, "Input",ExpressionUUID->"2d9a837b-6668-4b1c-a6e1-464235e665ae"],
Cell[1936, 78, 172, 6, 70, "Output",ExpressionUUID->"7a1d07cf-25db-4847-9e17-041d05866f59",
 Evaluatable->False]
}, Open  ]],
Cell[2123, 87, 119, 3, 70, "CodeCaption",ExpressionUUID->"5271e991-7b9f-490d-9819-693df0e3f5d5"],
Cell[CellGroupData[{
Cell[2267, 94, 124, 4, 70, "Input",ExpressionUUID->"f3cc8a23-df6b-41a5-8f7e-df2ac7da158f"],
Cell[2394, 100, 257, 8, 70, "Output",ExpressionUUID->"284cff4a-5db7-438c-8a60-18561cd82f4c",
 Evaluatable->False]
}, Open  ]],
Cell[2666, 111, 120, 3, 70, "CodeCaption",ExpressionUUID->"30bf8c9d-5487-4f69-afdb-fe2df644fe49"],
Cell[CellGroupData[{
Cell[2811, 118, 160, 5, 70, "Input",ExpressionUUID->"52bd1714-a50e-47d8-8e6f-e680f908f6e5"],
Cell[2974, 125, 1120, 32, 70, "Output",ExpressionUUID->"22296208-c533-4edf-ae0e-d0b35de7875c",
 Evaluatable->False]
}, Open  ]],
Cell[4109, 160, 177, 8, 70, "CodeCaption",ExpressionUUID->"f842ac6e-49e1-4a01-8326-0253ab7411f1",
 CellTags->"i:3"],
Cell[CellGroupData[{
Cell[4311, 172, 179, 6, 70, "Input",ExpressionUUID->"6f512f53-8ec3-49bc-98a7-6308afc22c5a"],
Cell[4493, 180, 192, 6, 70, "Output",ExpressionUUID->"f8a8804c-b266-44fd-8c61-1fc079a921de",
 Evaluatable->False]
}, Open  ]],
Cell[4700, 189, 197, 8, 70, "CodeCaption",ExpressionUUID->"0824cfaf-d116-417c-818b-d70ebb93053d",
 CellTags->"i:4"],
Cell[CellGroupData[{
Cell[4922, 201, 202, 6, 70, "Input",ExpressionUUID->"91b514a9-4352-444f-8e7a-ae681476f03d"],
Cell[5127, 209, 117, 4, 70, "Output",ExpressionUUID->"cf4fa88a-ef3f-4ff2-a2d1-f64da400318f",
 Evaluatable->False]
}, Open  ]],
Cell[5259, 216, 207, 8, 70, "CodeCaption",ExpressionUUID->"453a67ce-df8e-443b-970f-f30bb8509be1",
 CellTags->"i:5"],
Cell[CellGroupData[{
Cell[5491, 228, 167, 5, 70, "Input",ExpressionUUID->"4e2a98c2-6e92-485a-81e7-49fbf314630c"],
Cell[5661, 235, 117, 4, 70, "Output",ExpressionUUID->"ba9f7b57-8fb5-4288-a7fd-1d999b925690",
 Evaluatable->False]
}, Open  ]],
Cell[5793, 242, 139, 3, 70, "CodeCaption",ExpressionUUID->"0aa229d3-1b6d-4ff6-b457-49b33e5e2dd8"],
Cell[CellGroupData[{
Cell[5957, 249, 133, 4, 70, "Input",ExpressionUUID->"0b8e25a7-e51a-481d-a5ff-289ea3ccd27d"],
Cell[6093, 255, 148, 5, 70, "Output",ExpressionUUID->"25ed39d7-ed5b-4231-9f86-3aea591a6c04",
 Evaluatable->False,
 CellTags->"LastCellOfAPage"]
}, Open  ]],
Cell[6256, 263, 235, 8, 70, "Text",ExpressionUUID->"129cd8bc-842d-480d-b42e-714c0e9ad4cb",
 CellTags->{"p:16", "i:6"}],
Cell[6494, 273, 199, 7, 70, "CodeCaption",ExpressionUUID->"c033b569-0a54-4195-bdee-6e5311de4edc"],
Cell[CellGroupData[{
Cell[6718, 284, 227, 7, 70, "Input",ExpressionUUID->"d670cb22-cebe-47a1-9cac-2bae61941989"],
Cell[6948, 293, 117, 4, 70, "Output",ExpressionUUID->"5d5b3711-0e06-48c8-9b0e-c7b4be834d9d",
 Evaluatable->False]
}, Open  ]],
Cell[7080, 300, 465, 16, 70, "Text",ExpressionUUID->"6b5cf456-ce5d-4e93-90d5-c88a747a93fa",
 CellTags->"i:7"],
Cell[7548, 318, 125, 3, 70, "CodeCaption",ExpressionUUID->"3a122df5-23ad-48b9-a248-7399cb040fcc"],
Cell[CellGroupData[{
Cell[7698, 325, 158, 5, 70, "Input",ExpressionUUID->"ec89825f-4824-40a3-9f69-58d10cbac562"],
Cell[7859, 332, 118, 4, 70, "Output",ExpressionUUID->"d94e6daa-0804-4cee-b81a-ef6020e91893",
 Evaluatable->False]
}, Open  ]],
Cell[7992, 339, 120, 3, 70, "CodeCaption",ExpressionUUID->"06e11754-bc5b-45dc-a552-a135d895e6a6"],
Cell[CellGroupData[{
Cell[8137, 346, 157, 5, 70, "Input",ExpressionUUID->"3aad5bbd-004a-4d67-bbe6-87e3ec99af26"],
Cell[8297, 353, 118, 4, 70, "Output",ExpressionUUID->"91b1ac08-3370-4493-99c9-7351bb521f82",
 Evaluatable->False]
}, Open  ]],
Cell[8430, 360, 122, 3, 70, "CodeCaption",ExpressionUUID->"8b908071-7ded-4563-aa54-cbf7f8d634a6"],
Cell[CellGroupData[{
Cell[8577, 367, 182, 6, 70, "Input",ExpressionUUID->"374a4d38-29a4-458f-be9d-dc09ee612b7c"],
Cell[8762, 375, 118, 4, 70, "Output",ExpressionUUID->"6b58d23f-de07-4ebd-8e2e-8b5444ed9eb5",
 Evaluatable->False]
}, Open  ]],
Cell[8895, 382, 220, 6, 70, "CodeCaption",ExpressionUUID->"e2ac88af-4c70-491e-b95c-0858c3d46e6e"],
Cell[CellGroupData[{
Cell[9140, 392, 225, 7, 70, "Input",ExpressionUUID->"7e5b828e-cc93-42d2-88b0-6e0b48a3bd6a"],
Cell[9368, 401, 118, 4, 70, "Output",ExpressionUUID->"45cb6bde-9f64-44dd-b414-b48e2dddcb39",
 Evaluatable->False]
}, Open  ]],
Cell[CellGroupData[{
Cell[9523, 410, 189, 6, 70, "Input",ExpressionUUID->"dd94cfdc-2c7a-41f7-a908-888216e57bd0"],
Cell[9715, 418, 118, 4, 70, "Output",ExpressionUUID->"e35cf453-ba04-4de4-b3bf-283329a95a75",
 Evaluatable->False]
}, Open  ]],
Cell[9848, 425, 361, 12, 70, "Text",ExpressionUUID->"47569230-4511-4253-aea1-feed489927fa",
 CellTags->"i:8"],
Cell[10212, 439, 162, 4, 70, "CodeCaption",ExpressionUUID->"d35e732d-223d-4534-88cc-80a8f39ab67a"],
Cell[CellGroupData[{
Cell[10399, 447, 112, 3, 70, "Input",ExpressionUUID->"0d3c1b48-7ec4-4bb8-bd87-65111cb8b63b"],
Cell[10514, 452, 183, 6, 70, "Output",ExpressionUUID->"d77d9020-f628-4e38-a81c-1cf46dc7a104",
 Evaluatable->False]
}, Open  ]],
Cell[10712, 461, 128, 3, 70, "CodeCaption",ExpressionUUID->"ca681bdf-8390-4665-8270-0ced31894ff1"],
Cell[CellGroupData[{
Cell[10865, 468, 143, 4, 70, "Input",ExpressionUUID->"39679c76-9ca6-402e-a811-e97353e01483"],
Cell[11011, 474, 148, 5, 70, "Output",ExpressionUUID->"616a1a3c-71ff-4099-88eb-9bf7d32f5a3a",
 Evaluatable->False,
 CellTags->"LastCellOfAPage"]
}, Open  ]],
Cell[11174, 482, 259, 9, 70, "Text",ExpressionUUID->"8fd5e867-1d62-4429-8413-bf585d62fb8c",
 CellTags->{"p:17", "i:9"}],
Cell[11436, 493, 128, 3, 70, "CodeCaption",ExpressionUUID->"cf3dd54f-3e8b-452e-afb3-17289bd5188f"],
Cell[CellGroupData[{
Cell[11589, 500, 234, 8, 70, "Input",ExpressionUUID->"f18aad86-addc-4827-b0a1-fa28007ad578"],
Cell[11826, 510, 179, 6, 70, "Output",ExpressionUUID->"8440b63a-0247-4dd2-8569-2f8445ee57b1",
 Evaluatable->False]
}, Open  ]],
Cell[12020, 519, 147, 4, 70, "CodeCaption",ExpressionUUID->"79016c27-d8d3-4fef-8675-57edaf17549a"],
Cell[CellGroupData[{
Cell[12192, 527, 192, 6, 70, "Input",ExpressionUUID->"501bd9eb-35a2-4bfd-95bc-abb99a1c4cb3"],
Cell[12387, 535, 250, 8, 70, "Output",ExpressionUUID->"61ff53dc-56ab-4f42-b122-ca1f0143d16d",
 Evaluatable->False]
}, Open  ]],
Cell[12652, 546, 205, 8, 70, "Text",ExpressionUUID->"04bc4df3-99db-4940-9cf8-bdfac2485812",
 CellTags->"i:10"],
Cell[CellGroupData[{
Cell[12882, 558, 234, 8, 70, "Input",ExpressionUUID->"985de2e8-25b9-4d9a-a80b-f80f8703b455"],
Cell[13119, 568, 179, 6, 70, "Output",ExpressionUUID->"7c86a39d-22b0-4120-a3d5-6bb4cb121304",
 Evaluatable->False]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[13347, 580, 102, 3, 70, "VocabularySection",ExpressionUUID->"2edae556-a487-4737-954b-4f10b4566e56"],
Cell[13452, 585, 2997, 96, 70, "VocabularyTable",ExpressionUUID->"de155f84-4ef2-460a-a109-07fe8374fb6a"]
}, Open  ]],
Cell[CellGroupData[{
Cell[16486, 686, 1722, 45, 70, "ExerciseSection",ExpressionUUID->"78c1913a-4470-4a40-a7cf-032c6895f1c9"],
Cell[CellGroupData[{
Cell[18233, 735, 1396, 44, 70, "ExerciseSummaryCell",ExpressionUUID->"92596955-3c48-4cd7-a6bc-f285e8273678"],
Cell[CellGroupData[{
Cell[19654, 783, 667, 19, 70, "Exercise",ExpressionUUID->"d452c7cc-5c3a-4916-bb18-3a427c025c64"],
Cell[20324, 804, 1286, 37, 70, "ExerciseOutput",ExpressionUUID->"bb08a734-bf3f-4075-9502-cc106495edcb"]
}, Closed]],
Cell[CellGroupData[{
Cell[21647, 846, 652, 19, 70, "Exercise",ExpressionUUID->"c1c46139-fe3d-412b-b3a3-2bf3a5dc2080"],
Cell[22302, 867, 941, 28, 70, "ExerciseOutput",ExpressionUUID->"b3abeb95-d43f-4ef6-89b2-b937980d17de"]
}, Closed]],
Cell[CellGroupData[{
Cell[23280, 900, 684, 20, 70, "Exercise",ExpressionUUID->"de968809-3e57-46c4-a6c1-b516f2f315e4"],
Cell[23967, 922, 3089, 75, 70, "ExerciseOutput",ExpressionUUID->"edf447aa-d5df-4969-9411-e77d9a709747"]
}, Closed]],
Cell[CellGroupData[{
Cell[27093, 1002, 923, 34, 70, "Exercise",ExpressionUUID->"4bfcb6ad-25d4-4710-b12b-5947a971b221"],
Cell[28019, 1038, 1221, 36, 70, "ExerciseOutput",ExpressionUUID->"1e66ce6d-f33d-43e4-b12f-b7c269058335"]
}, Closed]],
Cell[CellGroupData[{
Cell[29277, 1079, 858, 28, 70, "Exercise",ExpressionUUID->"f9aa9855-7c4f-4471-b308-3cfbc3ee5efa",
 CellTags->"LastCellOfAPage"],
Cell[30138, 1109, 1323, 38, 70, "ExerciseOutput",ExpressionUUID->"4b9c3a1f-c921-4930-b71f-e2da872c75c4"]
}, Closed]],
Cell[CellGroupData[{
Cell[31498, 1152, 750, 21, 70, "Exercise",ExpressionUUID->"0b70cbf4-7a0b-4961-9bab-5efc70af6963",
 CellTags->"p:18"],
Cell[32251, 1175, 1282, 37, 70, "ExerciseOutput",ExpressionUUID->"6d1809fa-cb8b-42a9-adc3-627172cd5c9e"]
}, Closed]],
Cell[CellGroupData[{
Cell[33570, 1217, 662, 19, 70, "Exercise",ExpressionUUID->"91bdbd4f-8925-4344-af24-3e107cc1d598"],
Cell[34235, 1238, 939, 28, 70, "ExerciseOutput",ExpressionUUID->"35f42872-a3b4-4bae-865a-84b6150c58e6"]
}, Closed]],
Cell[CellGroupData[{
Cell[35211, 1271, 649, 19, 70, "Exercise",ExpressionUUID->"c8db1832-ca93-4bb2-b66f-3d85fbf37846"],
Cell[35863, 1292, 937, 28, 70, "ExerciseOutput",ExpressionUUID->"b972c827-edf6-47ca-adbf-c8e8eaf6e63d"]
}, Closed]],
Cell[CellGroupData[{
Cell[36837, 1325, 657, 19, 70, "Exercise",ExpressionUUID->"83093f7b-5030-4ec4-af01-6e4647a031f5"],
Cell[37497, 1346, 1270, 37, 70, "ExerciseOutput",ExpressionUUID->"241fd585-8a91-4821-a312-27f22740149a"]
}, Closed]],
Cell[CellGroupData[{
Cell[38804, 1388, 657, 19, 70, "Exercise",ExpressionUUID->"a98b7654-7c3f-478d-b88b-9bfbf3dfd5b9"],
Cell[39464, 1409, 937, 28, 70, "ExerciseOutput",ExpressionUUID->"ca703bbd-9fbc-46ce-9fd0-292811083251"]
}, Closed]],
Cell[CellGroupData[{
Cell[40438, 1442, 694, 20, 70, "Exercise",ExpressionUUID->"9d8701cf-c8c1-4a7e-be85-0e2a9dc56ad8"],
Cell[41135, 1464, 939, 28, 70, "ExerciseOutput",ExpressionUUID->"8a92e4de-ce05-4a69-a469-91cbfdf696bd"]
}, Closed]],
Cell[CellGroupData[{
Cell[42111, 1497, 827, 28, 70, "Exercise",ExpressionUUID->"595f40b0-8a34-4fa6-b49f-cfb49196b8d9"],
Cell[42941, 1527, 937, 28, 70, "ExerciseOutput",ExpressionUUID->"74e6b28d-fa84-48d0-8255-97ca9e558dce"]
}, Closed]],
Cell[CellGroupData[{
Cell[43915, 1560, 716, 20, 70, "Exercise",ExpressionUUID->"12eb611b-3c97-4958-8aa1-81a0507c667a"],
Cell[44634, 1582, 3341, 82, 70, "ExerciseOutput",ExpressionUUID->"b3c0703b-0c63-4b07-bde2-9eab9146c773"]
}, Closed]],
Cell[CellGroupData[{
Cell[48012, 1669, 862, 30, 70, "Exercise",ExpressionUUID->"95f81953-2b21-4a6c-b926-bea232e7d5c0"],
Cell[48877, 1701, 1290, 37, 70, "ExerciseOutput",ExpressionUUID->"6de33fb9-a57c-4616-9cf3-ff748a873679"]
}, Closed]],
Cell[CellGroupData[{
Cell[50204, 1743, 664, 19, 70, "Exercise",ExpressionUUID->"ce760896-c5d9-4665-9efd-1dfc5eb52ccf"],
Cell[50871, 1764, 1284, 37, 70, "ExerciseOutput",ExpressionUUID->"b82e386b-8575-4268-9994-8fbbff442376"]
}, Closed]],
Cell[CellGroupData[{
Cell[52192, 1806, 776, 25, 70, "Exercise",ExpressionUUID->"3a688c03-8a7b-49ab-a88a-47e1fe5262ed"],
Cell[52971, 1833, 1286, 37, 70, "ExerciseOutput",ExpressionUUID->"7493ac79-4640-4f12-b6b9-b276e14bdf85"]
}, Closed]],
Cell[CellGroupData[{
Cell[54294, 1875, 658, 19, 70, "Exercise",ExpressionUUID->"58bd4b23-37b1-4b16-a51b-7086868af1b7"],
Cell[54955, 1896, 937, 28, 70, "ExerciseOutput",ExpressionUUID->"076bf0ff-f94b-4fc6-b940-586bc7b7993e"]
}, Closed]],
Cell[CellGroupData[{
Cell[55929, 1929, 661, 19, 70, "Exercise",ExpressionUUID->"88376246-0176-41f0-992c-76140d8e8c7a"],
Cell[56593, 1950, 937, 28, 70, "ExerciseOutput",ExpressionUUID->"64fe9d1e-8c08-46e7-8e35-dc2f7c05fc6c"]
}, Closed]],
Cell[CellGroupData[{
Cell[57567, 1983, 663, 19, 70, "Exercise",ExpressionUUID->"fecd165f-5aa5-41db-888b-3db053bd9b24"],
Cell[58233, 2004, 941, 28, 70, "ExerciseOutput",ExpressionUUID->"564be7d1-e3bf-4c6c-88ed-7013c2299c77"]
}, Closed]],
Cell[CellGroupData[{
Cell[59211, 2037, 700, 20, 70, "Exercise",ExpressionUUID->"5cfdea33-4891-448b-a2de-2696b7b2b170"],
Cell[59914, 2059, 62841, 1353, 70, "ExerciseOutput",ExpressionUUID->"01189c3a-60b9-44c2-99fc-23f415c46908"]
}, Closed]],
Cell[CellGroupData[{
Cell[122792, 3417, 724, 20, 70, "Exercise",ExpressionUUID->"e360cf8f-8a54-4ab8-a2ca-1046563ce1bf"],
Cell[123519, 3439, 220758, 4682, 70, "ExerciseOutput",ExpressionUUID->"537f1de1-e6eb-487c-9765-f4d8e7fd68a1"]
}, Closed]]
}, Closed]]
}, Open  ]],
Cell[CellGroupData[{
Cell[344338, 8128, 105, 3, 70, "QASection",ExpressionUUID->"ef1b0eb2-e8d9-4166-9aff-0ce498669285"],
Cell[344446, 8133, 141, 3, 70, "Question",ExpressionUUID->"b1880b16-051b-4d22-945e-703572e1e98a"],
Cell[344590, 8138, 647, 25, 70, "Answer",ExpressionUUID->"af834b0d-68fe-4049-a3ee-5ec02b28383b"],
Cell[345240, 8165, 159, 4, 70, "Question",ExpressionUUID->"48555be0-d09f-4022-9184-7c441f63aaa2",
 CellTags->"i:11"],
Cell[345402, 8171, 376, 14, 70, "Answer",ExpressionUUID->"eadb37fe-b7e3-490e-a170-0a1b09c2c812"]
}, Open  ]],
Cell[CellGroupData[{
Cell[345815, 8190, 111, 3, 70, "TechNoteSection",ExpressionUUID->"92a25d42-ee2e-42d7-ac7d-b18f40d27b79"],
Cell[345929, 8195, 753, 25, 70, "TechNote",ExpressionUUID->"606986c8-9591-4e1e-bf22-98037634d340",
 CellTags->"i:12"],
Cell[346685, 8222, 576, 20, 70, "TechNote",ExpressionUUID->"62010f33-bed2-4cd5-aa7c-983ce3298a41",
 CellTags->"i:13"]
}, Open  ]],
Cell[CellGroupData[{
Cell[347298, 8247, 117, 3, 70, "MoreExploreSection",ExpressionUUID->"5857bf16-99c1-4907-bf3f-be3b8db68ff7"],
Cell[347418, 8252, 308, 7, 70, "MoreExplore",ExpressionUUID->"61e7e0e5-6d8b-4d97-87fb-7ed405021458",
 CellTags->"LastCellOfAPage"]
}, Open  ]]
}
]
*)

(* End of internal cache information *)
(* NotebookSignature UQceqcG3xfrC1jYFqwZP@AdD *)
