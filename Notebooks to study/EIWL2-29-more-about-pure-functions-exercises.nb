(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 11.3' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    213150,       4366]
NotebookOptionsPosition[    148212,       3064]
NotebookOutlinePosition[    207439,       4273]
CellTagsIndexPosition[    207360,       4268]
WindowTitle->M\341s sobre las funciones puras: Una introducci\363n elemental \
a Wolfram Language
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[TextData[{
 "Use ",
 StyleBox["Prime",
  FontFamily->"Source Sans Pro"],
 " y ",
 StyleBox["Array",
  FontFamily->"Source Sans Pro"],
 " para generar la lista de los 100 primeros primos."
}], "Exercise",
 Editable->False,
 Selectable->False,
 Deletable->False,
 CellDingbat->Cell[
  "29.1", "ExerciseNumber", FontColor -> 
   RGBColor[0.9019607843137255, 0.4117647058823529, 0.027450980392156862`]],
 ShowCellBracket->False,
 CounterAssignments->{{"SectionNumber", 29}, {"ExerciseNumber", 1}, {
   "WebOnly", 0}}],

Cell[CellGroupData[{

Cell[BoxData[
 TagBox[
  ButtonBox[
   StyleBox[
    RowBox[{"EXPECTED", " ", "OUTPUT", " ", "\[RightGuillemet]"}],
    FontFamily->"Source Sans Pro",
    FontSize->12,
    FontColor->GrayLevel[0.6]],
   Appearance->None,
   ButtonFunction:>(SelectionMove[
      ButtonNotebook[], All, ButtonCell, AutoScroll -> False]; FrontEndExecute[
      FrontEndToken[
       ButtonNotebook[], "OpenCloseGroup"]]),
   Evaluator->Automatic,
   Method->"Preemptive"],
  MouseAppearanceTag["LinkHand"]]], "ExerciseExpectedResult",
 Editable->False,
 Deletable->False,
 ShowCellBracket->False],

Cell[BoxData[
 FrameBox[
  TagBox[GridBox[{
     {
      PaneBox[
       InterpretationBox[Cell[BoxData[
         GraphicsBox[
          TagBox[RasterBox[CompressedData["
1:eJztnb/L81h2x52kSZl/If+A67QuUxk2pHuaXTJe0kzMbCC4dTO4VBNcLLjy
NoYkDgE3MQuGISZgkmjZKIVYlAU3CmhAU6hQ4ejeK9v6ce7Vuffc93n9vHO+
sMuMH53vPT8kWZY9+vzpz/7mJ7M/HI1Gv/jj6v9+8tO/m3zzzU8Xf/En1b/8
5de/+Ouff/3VX/3513/71c+/+ubPfvZH1YvL6n//9gejkfjnG4vFYrFYLBaL
xWKxWCwWi8ViseyUHVaz8XgeFrdbfj0f9rvd/hylpogiPR/3u/3hHF31G5XX
KHwqSgrYKQnbSlJwQ6U8rjbIy9YyWeUQ56Z04dj8Gh5EEafYtCIQm8adlKN2
RgPrllmsmnc1Jw3NApszFItdVzNcVJ97sZa9qpRFl0uSPatDz7cbazPfViw6
Z3gPx60Lx2JnJNtykstEqXWvOrHIeg2H6uC6ulhMr3Sx+F5dw3N1MFQ75WMN
y33DWnm4Ho1Gs9X+v/9jNx4Jqf+f7yJw+/J6nDY2m65OmqMkD9QWtSYXqPYw
mIzaGgcX0C7eLdQGq3N2f63Yz1X4+GxsbC+2vGzmjSJGmzBDx3bqEiYnzer9
nItINblu3imFm5eF/Vlgc4ZisetqhovqMxRr0SulcyA8xqvzDb0uFGsx314s
Puf+Ho5fFzg6kDMSwdG2GbwVZwtsr3qx/4esV3OootaFYv8d2StwXXSviuNK
hE+m0mS+L+z3DQfll2A0CqqpxNu36uiXVxj5dlattgKvVsvrYTJexrIImfBE
08x8PRlNN2EVIaVbvyyL+s/hptqxp+C5t1Jy3C7nYs9fX54n1eNmtZiNDVG6
2GgzmwbyyC1jceJbHPGxdUEi5+uqWny2073b9WKL7VQcuqLJeVj1eLw8gYHg
LJA5Q7HYdTXDRfUZjkX3SiwT79R+Pl2rN1bsfPux+PkC62JzBvZw9Lr9WOyM
qrdNeZpZxCKtbLdayyswZK+gWGy94KGKXBeIRfeqH4vuVX6uyl0exYbZOVBn
fqt9w01FKE6qsh95dr/uz84r/dnyqey01G+WVhbraODD3lNlVJ0L3rbw5fFd
UdXL4NJ6Zymjje4yeDBWKq/yrBY2fgyAYzPxfjQ6GG6BdGPFofS4FI82VcVL
TbR5Fuac+7H4dRvVtYeL7jMQe0P1Sh7Rk7e38WjS+LSCWxeOlRqcrzZ2KGfz
Hm5etx+LnVF53Yt3SuioG+yVIfaG3Z+BQ9Vi34APc8wx2IxF78/5pTqpLk7y
6CvDSfdyGreuvcSFzTjonC8u4v3MdNzl6TU87apiRrOt5kL1Ij9Qvc1ns2Ww
jfSfZZSSXfWGM4vNWxWiRZ2Tm7x9gRhoP7bM0yQ+buSb1T62XVdNdvhtrhWb
rcfPneF6NLwlPdWaBT7nVqzduuBwkX3W7BjDvQrFoTE6JNfqIqR5CwizLhyL
65Vu3eGcdXs4Zl0gFjsj+dFyeoqiw2az2R6irPE1wVCvDLHY/Rk6VLHHYD/W
Zn9uxOL351SMdzw7Rsl5U4UvktJ6XVtl8XFeJVTfwqpVJnt5TBguGmX/paBr
P+USLyfj2WpzOGzFh4PR9Gy6dZFU5clPQ0Z5PanKHUxpHpnfq6B1S/mZcZcM
XYq3Yy9rcTDNV+tg+SaXfjNn3pmFRc7tWJt14eHi+gzHDvZKpbqQF0mbyWiy
fu57g+vqYjG9Mqw7PF/NHo6aERSLnJH6EkRMdrF8E7GTY9r8k/Gkqo/F7s/Q
oYo+qXZjbfbnVix+f0728/sSo+k2tl/XWuLqdzQ+Ns8W2flNXhIPf4dYpIdA
bLsfHER2Gre+YOrpeqh8tvFQeX6vVIXK/HpZik9/a5MBFIv8EN2LLcLDdrlY
VMfT5bgSN4gMRcOzwOXcjbVZFxou/mqkHzvUq3wjv+Kar4IgWMp/nK6PCW5d
U+xQr0yx2Pkqdfdw3Iy6sagZqRPjvbfxvHGqQZ5UwVhsvdChit034MMc16tu
LKpXhbgvMdqGaZnH28W0fbKymZGNyiwStsv7NX96Ft9sTALzD6oav+EIJ9qz
ZeO7KXm7eKW7pq3eTQ7Vu9BbOPiWUYbi/mTY6kERyYFaxpaNIlKxuvFjOLCu
PB4Xh+FbxlDOSkex7EabeG8WFjkb52hcVztcRJ91sYO9Kk7bdbBeB0Krqbxy
25wS3LpwLK5XhnUx8wX2cPSMBo4Ow4wKcQYbn+rN8+YH4cEZ6WOx+zN4qCKP
wU6s1TFoOEUYenUJxtWf7kVl4guG4GJ37DspFjfAxD3V4npUV9Lr4yW8XM7n
c5yVtzJaVHktD488DtXb23hxjK5ZmuxX0/rto7eZuOieLM/xNU0u8rJlfLgC
bvfaJ6Nx4/0C2KwQP6Y7ifedxfYUheG1EO80YRidtiKhzekSRtcSGfuDuOM9
Xe3iNLvGp8VEfJOYoteVEp9zW99r4GKj3XK22sfX5LQV93NWpxSMBWaR/gaZ
MzhH5LrgcJF9hncMbK+ef5Mfw8XlE3q+vdgSP19gXWTOwB7+v9gZgUcHckbV
RZt4fMfbOkrTi/zN3ibK0b0CYq1m1DlUrWbUirWcUWddZK9Scbt1tNqHWZ7H
J3GVvvruO/t9w1qPb//D9XTUlrjSKEI58+BRTlFdM789ftk2Dg6xculslien
xdNvsjmn4GZKYunmRXh/s+LSSS645I0bI3UuGTo2OW2ev36bzE/qXImLlX8Q
d3haOyEuNtqvHv+62F50seAskDmDsch1weEi+wzvGMhePfX4rRF2XTAWO18o
FpkzuIcj1wVjkTO6yZ8Ev7W3xPeqH2s1o86hajWjTqzVjDqx6F6Vp/XsseVs
LX53bb9vWEu2ZWWwEpey4+5th7LIK5WYzYpicDPkokihY1V2rbem91i337v3
yRm9LrQhIO+xSL3UfPt7OH5dINZi3yjFlsVApz9BLEovtT+LGw2iXk/rIqTu
5U5ma/Drpqv4UDfaDv1HB59lM47lWI7l2M8eC6k4b1ez2RL+aUGeGv9j/M+6
GcdyLMdy7GePZbFYLBaLxWKxWCwWi8VisVgsFovFYrFYLBaLxWKxWCwWi8Vi
sVgsFov1hapPJETTDPPLUYRekvo/ASPSSG9lejrstrv944lR93wcsaqgoTNr
FTT8FCXjaZKAIdQuSsmV2WG32+2Pyf1h8sSSdcl4hOd+igyJQxEOaXy5PDMh
GObN+qJGvGsPAUPqjl05RJeD2HEuDwoB6dDrGVIy1MX6gLH2iYRo8mOZyNDR
WG64OCQ3Go30dqsNVeC+fricM1YVNKSwVkFD/yXjyZs4Ci2p5Mtm9pzxaHIU
j3+jlKxLxi8813+GtKEoJctGgSRD+XT0pywBtThD4o59O6/fGrGLuCQeen1D
SoZgrCcYK0AkxNIMr+IBsqOd4MqU+0WVxlw8AtidRto0FA8rG832iqHsjFUF
DSmsVThDzyXjyZtYCi2h5GIzuXNIJW6gfoIcoWRNMr7huZ4zJA5F6FKfE2pQ
KcVQMv4m4jz8qJLWQ9iQ0EP1MH+FQS+vp5V8Lh8JcwwZkjKEYv3AWAEiIZZm
KB8te6cKypLvD8UVsqeRlvLpvvXjuSLBYp497kc4YVVNhqp4S9bqgKGnkm3p
qFYUWmu8bJln943zYGTLJNVmCCbzKeC5njKkDkVRoqaLRfUeJS8jSYaK8RdC
17ZuPTQY3px6GAuQ35uet2y9H5oNKVPWxFJgrH0iIZZmKGmeqzrF7NSmNTnQ
SAUA4nHMSjbEc10nWJXe0JG1asrQX8mWVFYk24uKl72pB8vbMUl1hppkPgE8
11eGxKGk4lpoHKR5OK0DSYYKRzV+m8/ni/WuFefWQ4OhUw/Lw7y69j4m0XGz
Xu8OjXQc90O9oWOG+lgfMNY+kRBJMyzirRzEcr1eqnsQ6/t2TjTSFvShs284
nlQ1hq6sVVOGHku2o7LiTqpEvOytxj1Lbs5dbsxZQzLe4bkeM6QMRbZOXaBW
HwYn6oKQYljEu+qKN9jt9/LYb37sdeuhwdBxx67ZB9PFUp5eppv6D86HnsbQ
NUNtLB3GqiESYumcWXwKqu2W69N53wScOdFI3/FKVciBtWoy9FqyDR3VgkLr
jpe9ijS6b9yuzFltMt7huV4zdByKImVX2wfrYCVPCLPF6pgU9CkryYsi4pFi
MnTcsScCoJ41UqIeenpDypQ1sSQYK0gkbG4wQAV95itO7/v6MsaNRiqu8B9r
xduZuMF4t3DCqsKGBNaqIUP/JSsN9x9BoSXiZRN5Rp21cfCuJZuS8Q3P9Z+h
ktVQyvSyDoK14rqu6pPqKWlF2065bNBS0vatA9ce6gwdeyjuDU7WKosy2SlD
yn4IGlIyBGO9wFgBIuE5RdIMy/Q0f1ueoiS+7OQnmf3jx2huNFJ1Y2e5D9NY
8MvU96HuWFXQ0ILziM3Qe8lo8iaOQksrOd4v1UehU6jwreH9N4dOJWtYt/7h
ub4zpAylkYD4+H+RDXQ3lBm+BYckTePzdiI/C+fkHvYN3XtY1PcG59tzlsXy
R3nzuCDth4AhZT8soFgXUC8ogEiIpBmW6Xl2/63XuIXBcqSR3h6/ipSflpQh
BasKGhJZq31D7yVjaZJoCi2h5N+vJ+2Xnu/djiWDyfiH5/rOkDKURgLVJ9C6
gQTDLDo2xjJdht1vCmx7CBtSeigLXD4c9/J3QcRDr29IzLAf6xPG2icSommG
ed5lGYLC0wyLPMsyn8hOyJDEW3yPDElUVlCfFjFpaQgk8wEMvQ+Fxt7N+6xX
SJ/PUP4gL8v7TXTfDwFDWobQGu9wpCi9Es2QDdmQDdnwoxo+9VI0QzZkQzZk
ww9qyGKxWCwWi8VisVgsFovFYrFYLBaLxWKxWCwWi8VisVgsFovFYrFYLBbr
JYTiDJJokmV2OQkQ4oO7en/ZEaCpS8avIQX+2Dck4inBDLFDya/nqpLd/hyl
zZfBdqF6CBn2uas3fA9xhhY9RGdI6SFYHaVkEshVM2Xh0Aa53tynTAO54gyJ
U75RQa5U4TiDRPhjJF8aK2Tr8pioV53hj5pk/BqS4I+QIQlPCZaMHEoWqs3q
7ea7SN8uVA9BQ4i7iu0h2hDbQ7QhpYdgdZSSSSBXzZSVWiBXypQpIFe0IWnK
NxrI1YtwnEES/FE+lGyiTg/iebw1LtAZ/qhLxrMhBUIKZ+gOfwQNsUOJBVJQ
bnbLxZOwR+qJo2C7UD2EDGHuKrKHeENkD9GGpB6C1RFKJoFcNVMWaoNcb4Qp
k0CuFobuU6aCXP1pkDNIhz8u1YhTcVYNHis5wR9NyXg3VBtYwh8HDO3hj6Ah
fij548mC2XnVfJ452C5EDwFDM3d1qIfWhkM9RBp66KG+OuuSoVhqhj2Qay23
KdNArnaGN6cp+wC5+tAwZ5AEfyyvh4l45us2voaryWiyer7VOiF1TMl4NnSE
P5rb5QB/BA0thyIlGbjPoxJsF7aHkKHKpcVdtcRTDhvKHFE9HDYk9xCsjlIy
EeTaNeyDXGu5TdkDyBVt6DRlHyBXL0JwBmmIz7zxQO3xsXFH2Y1TZkjGr6Ez
hNSQoRv8ETS0G8odQjfbPu+2EU+qfcNbj7tqhafEGN7wPUQYEnsIVkcpmQpy
bRuCINd6IacpewC5og2dpuwD5OpFKM6gO/zxtKzea1dxUabRYS7eNweulBAZ
apPxbnhzhJBqDV3hj6ChzVDkjcTqg8/g1QW2h5AhyF3F9hBtiO0hypDaQ011
7iX3Yh0z1INchShTVnIEuaINnabsA+TqRQjOYFOW8McsGI+m2/j+l4AOfzQk
49GQCCHVZEiBP4KGphefSs/iRv4k6PzUBmwXqoeQYZ+7atFDnKEUrocWhrVs
ewhWRymZCnJtG5pBrm5TpoJcLQwdp+wB5EoVjjNIokkW4s7xaHaM0zy/HlZV
p95CkPuJNYST8WxIg5DC7YIaSzFEDqW4HtXnxvXxopCocVaC7UL2EDQEuKto
gCbWEA3QxBu69zD9DVAderfBGtKm3GjRE+TqPmWZoTPIFW9ImTIN5OpDaM4g
iSZZxKvnq9Od/JEYBaAJJuPdkAJ/hNsFNZZiiBxKuO74iZ+/gu1C9hAy/B3I
XUX2EG+I7CHekNJDsDpCybAhJcNGi54gV8KUUwrIFW9ImHJ2o4Bc3180miQU
DQhriLSjGhLQiu+ToX/uKiFDWC8FcoVEo5pCIFdKye8CcoXEINdX0OuDC9mQ
DdmQDd/H0I9eH1zIhmzIhmz4PoYsFovFYrFYLBaLxWKxWCwWi8VisVgsFovF
YrFYLBaLxWKxWCwWi8VisT6K0DhCZ6SjgY3oRmAEDakERgrvFW1I4WySeK9F
elbBUeP5lGVaJbjd7R/PJrPoIWhIwbOiDUkl9wyJJeuScS65b0gfyq1NU/Vu
eMOfHABDGM/6nvBTv0LjCClIRx0b0ZnACBrSCIwE3ivakIQWpfBey+tx2thO
MdFut2TVwDHs4wJPsdQYuuNZ0YbEkvuGlJJ1yTiXDBoSh6LUpKl6N8SeHGBD
gKb63vBTv0LjCGlIR5iN6E5ghA0JBEYK7xVvSEGLUnivghE2XsZyTz+KM6l4
BNxVpDXaiVfFM9ZGs32J7iFoSMGz4g0pJcPJEErWJONeMmxIGopQl6bq2RB7
cgANQZrq54CfehQSR+gHOtlnI7oRGA2GuhfNhjTeq52hCrHkbHrhvUrDk3q4
einJFfVDzyJxGp81wT043mvTsP5XVzyrnaGUbckDhs4lg8lQSgYNnTPU0VT9
GdqilluGZprq+8FPP42MOEIP4E6QjUgDd4KwRRfOpgfeK9LQkbPpgfeap9fw
tBNXGLNttS9Xho8nABddlA+qh23D+4sE6BXW0LFkczKuJWuScS9ZW51bhlqa
qj9Du5NDx1BLU31n+Okn0CCOkA7uBNmIFHAnaOjK2STzXnGGzpxNMu81fzxg
XcIEW6yKTo24HnYM76+6n1Sxhq4lm5JxLlmXjHPJOkO3DA00VY+GNieHrqGO
pvre8FPvQuEIqdBJ8HMBhcAIGrpxNj3wXtGGN0fOJpn3Kh59nh4C4bpPvjdc
qWJ72DK846OIzGucoVPJJkNKyWAylJJBQ4cM/+G7f5QnJZim6tXQ5uQAlyzU
oanip/xywuEIm3ICd8JsRGdwp8bQjcBI5r3iDIlo0Yfsea+N7QQATrCBxFPP
70OMxfdhs/tddEwP+4b1hZYrnhVrSCjZkKFjyYZk3ErWG7pk+O3h13qaqnfD
WsaTA1gyQFN9X/ipZ2FxhBToZP071y4bkQLuBA3hF1GGP1B4r1jDH0hoUQrv
VZw/x4tjdM3SZC8RjNu4UPeylvswjcVyjW9sh3sIGlLwrFhDWslwMs4l/89/
gsm4l6wxpAylsf2TpurdEHly0JXcpalagIxfUXgcIRnp2GUjEgiMsCH8ItKQ
wHvFG1I4mxTea1F9hnp7/DZxHBzqS+iLfMuUCQaNz2HDPQQNKXhWvCGlZDgZ
QslgMpSS4eoIGTa2f9JUvRsiTw6QYQnSVF8XfkpUH0f4WkhH/4aeea+woXc8
K9YQjC6qIWeOJaNpsd4NSSX7zhCkqb6UIVYkQ/TJASwZoql+DPipd70+35AN
2ZAN2fAj6fX5hmzIhmzIhiwWi8VisVgsFovFYrFYLBaLxWKxWCwWi8VisVgs
FovFYrFYLBaLxWKxWE2h+YYEYKJQB89KQTrqYp05mzpDUskUmirakJJhP9Zi
KLWy6FKl83gwXxfPel8IgRZFG2JLBg2hZCiGlVk1kmq3TrJWp5xLJuFZ0YaW
rNJhQ+JQhEMbz/pxaapoviENmAjgWSlIRzCWwtmEk6ExIt1pqmhDUoZQLHYo
D50DYTyWewiEZ70h0aJ4Q2TJGkMgGYph/ZivsYqdHOtHCTqXTMKzog2tWaWD
GdKGotTEs35smiqab0gCJkJ41hsJ6QjFkjibgCGpZApNFW1IyVATixuKUiF5
HGKya/G0NxjPikOLog2xJYOGUDIUw2IzuTtLTMP9SXruJVPwrHhDK1YpwpA4
FKEO7/WD01SfMvINScBECM/a2IxAsdTEOnI224Z0RqQzTRVpSMlwIBYxFHnW
nby91VgWE54VhxbFGFqV3DEEkyEZlvnjE2wejAyr2GWoDJ3wrBaG+hdtDalD
MfBePy5NFcE3pAATQTzrc1tncCcQS+Nstg1JjEg6TRVhSMnQHDs8FAmAGx2S
a3WVIn1MeFYMsAlnaFFyzxBMxoOhCl2ODKvYGBLwrBaGuP0QZ0jsoYb3+rFp
qii+IQGYCONZlSjgzn4skbPZMaQwIsk0VZQhJUND7OBQFOZ1IS9kNwJoFpnx
rIMnBLwhsmTIEE6GbnirzxXjw7WxK7qULANd8axWhpj9EG9I6aGO9/rhaao3
DN/QGZj4vQbPKkShWGpi3TmbPUN3RqQHmirKkEKx1MYODUUy48RBFATBUv7j
dH38LeFK1coQUzJomGiSoRpeRVT3asqp5OT+Vwc8q7Xh0H5oZejYw7//1S/l
aRPmveKPlBcTlm/YlC0wUY9npYA7u7FkzqYpGcuSf0ejqWINCRm2bvG2YweH
Upy260AhNYPVVHxDO92cYj2edRAtam04VDJomAwm42CYyDPqbBN2A1xKTgh4
VgtD3H5onaGSVQ9/+c//AuJZPzRNFcs3pAAT4wLEs0pRkI7tWBpnE0yGUPL3
FJoq1rAgDQWOxQ2loVJ+jhOnFBDPikSL4g2RJYOGYDIUw7jmY85PocLehllJ
KFmzD3s2dGGVDmRI6WHjtTue9YPTVPF8QwIwUYV38axSFKRjN5aIFu0bkkom
0FTxhpQM4VjcUBoSZ+Dp/Tqtj2dFokXxhsiSQUMwGYJh1jhO6qHef6fhWDIF
z4o3tGeVDhhShvJUA8/6BdBUsXxDEjDxBuBZIb0WZ5NWMoWmijWkZIhuK55i
ScGzYg29U31fCxNMoqmiDSmsUsjQfw+ZpsqGbMiGbPiRDF9Urw9MZEM2ZEM2
ZLFYLBaLxWKxWCwWi8VisVgsFovFYrFYLBaLxWKxWCwWi8VisVgsFovFAjTM
NyQAEwE8KxXc2cOz3pN0BXdChhToZN+QUjKV9wpm2MOzEoeiS8Z5KKAhruTy
GjXruD+jE8Kz4qZsYUjJkIBntTAklVzX3To59DLMt7PJ5G15HoIAfsEa4hvS
gIkAnpUI7uzjWW80cGffkAKdBA0pJZN4r3CGAJ6VNBRNMu5DAQ3RJXdqUY93
7uNZ8VNGGpIypOFZkYbEkpVaJwcowzI6SBxC65TyIxKCb0gCJkJ41hsF3Anj
WQnQSdCQAp2kAGRhQwLvFTQEea+EDHXJOA8FNMSX/Hi43HOXA3mv6CkjDSkZ
EvGsWENKyUod+Kkuw2gzrferH50wfEMSMBHCsz5lD+404VndoJNm3qsDdJIM
kNVSLF15r+BQtLxX+wxNyTgNBTTEl5xWI1u3BmDivUqZp4w0pGRIxLPaGaoX
LUuWnhr4aT/DUPTiC39SHygc35AETITwrA85gDtNeFYn6KTe0BE6SQXI6sGd
jrzXvqGW9+qYoSkZp6GAhuiS88tU7XOz2TLYRuIzuJ73ipky1pCSYVP2eFYr
Q8eSb1r4KZSheKP5IM+U9ig835ACTATxrPX2buBOPZ7VEdypMXSFTpIAsgZw
pxvvVWMI816dMzQk40YCBQ2xANkyXk7Gs9XmcNjOJA7pnGl5ryhwJ9qQkOHz
jw54VitD15K18FMwQ7Ujrfb6j4BfoKz4hlTopFIDzyrkCO7U41kdwZ16w5sL
dNJk6FRyool1H4qB9+qaoTYZVxIoaGgHkBXKTmPx7ejvDbzXoSlbGTpnWJ8E
nfCs1oYOJX/7T7/SnBx0GRZr+VWX+evOL0sWfMNmmC10Uo9ndQN3Jno8qyN0
EjSkQCcJAFkDCdSN9woa/pcez0rJEE7GbSiD1RkBso3vVfKzAMheUhDPigZ3
Yg0JGUqQmSOe1cLQueRv//XXhpNDP8NC3GUdbc4YBP0XKSPfkAJMlGzEPp5V
yhHcCeJZKeBOwLAgQCc1GVJKBmMJFMsCxLNSMgSToQwFNESWLD8PLc/xNa3e
3yQurvrkC+BZ0eBOrCEtQwqeFWuI3rFBw8agnicHOEPxRiOQUj/ih/UP8A0J
wEQYzyrlDu7s41mJ4M6+IQU6CRoSS3bmvcKGEJ6VkiGYDGUooCGy5Dw5LZ7V
TTbn+pZxH8+KnDLekJAhCc+KNySWfK/oeXKAM/wRf/tvIRIwEcKzQrIAJhLw
rGhDGtLRe4bAEiSKJZKnijX0jmdFQ2q1ANnePgfxXm0QtxhDWoZI0QxJJSMV
ic88fFK10+sDE9mQDdnwcxgWZ/lTn94vY1lDen1gIhuyIRt+BsPisJrPlxvk
Ex9YLBaLxWKxWCwWi8VisV5E/w9uYe59
            "], {{0, 130}, {455, 0}}, {0, 
            255},
            ColorFunction->RGBColor],
           BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
           Selectable->False],
          DefaultBaseStyle->"ImageGraphics",
          ImageSize->Magnification[1],
          ImageSizeRaw->{455, 130},
          PlotRange->{{0, 455}, {0, 130}}]], "ExerciseOutput",
         ImageSize->{459, 130},
         ImageMargins->{{0, 0}, {0, 0}},
         ImageRegion->{{0, 1}, {0, 1}},
         Magnification->1],
        Apply[TextCell, 
         Cell[
          BoxData[
           GraphicsBox[
            TagBox[
             RasterBox[CompressedData["
1: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
Ex9YLBaLxWKxWCwWi8VisV5E/w9uYe59
              "], {{0, 130}, {455, 0}}, {0, 
              255}, ColorFunction -> RGBColor], 
             BoxForm`ImageTag[
             "Byte", ColorSpace -> "RGB", Interleaving -> True], Selectable -> 
             False], DefaultBaseStyle -> "ImageGraphics", ImageSize -> 
            Magnification[1], ImageSizeRaw -> {455, 130}, 
            PlotRange -> {{0, 455}, {0, 130}}]], "ExerciseOutput", 
          Magnification -> 1, CellFrameColor -> GrayLevel[0], Selectable -> 
          False, Copyable -> False, Editable -> False, ShowCellBracket -> 
          False, CellLabel -> "Out[]=", CellFrame -> False]]],
       FrameMargins->{{10, 0}, {10, 12}},
       ImageMargins->0,
       ImageSize->Full], 
      ButtonBox[
       PaneBox[
        StyleBox["\[Times]",
         FontFamily->"MathematicaMono",
         FontSize->18,
         FontWeight->"Bold",
         FontColor->GrayLevel[0.75]],
        Alignment->Right,
        FrameMargins->{{0, 6}, {0, 0}},
        ImageMargins->0],
       Appearance->None,
       ButtonFunction:>(SelectionMove[
          ButtonNotebook[], All, ButtonCell, AutoScroll -> False]; 
        NotebookFind[
          EvaluationNotebook[], "Exercise", Previous, CellStyle, WrapAround -> 
          False, AutoScroll -> False]; FrontEndExecute[
          FrontEndToken[
           ButtonNotebook[], "OpenCloseGroup"]])]}
    },
    GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {Top}},
    GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
   "Grid"],
  FrameMargins->0,
  FrameStyle->GrayLevel[0.7],
  StripOnInput->False]], "ExerciseOutput",
 Editable->False,
 Selectable->False,
 Deletable->False,
 CellFrame->{{1, 1}, {1, 1}},
 ShowCellBracket->False,
 CellFrameMargins->{{0, 0}, {0, 0}},
 CellFrameColor->GrayLevel[1],
 LineBreakWithin->Automatic]
}, Closed]],

Cell[CellGroupData[{

Cell[BoxData[
 StyleBox[
  DynamicBox[ToBoxes[
    $CellContext`SolutionResponseText["29.1"], StandardForm],
   ImageSizeCache->{140., {3., 9.}}], "SolutionResponseText"]], "Subsection",
 Editable->False,
 Selectable->False,
 Deletable->False,
 ShowCellBracket->False,
 CellMargins->{{24, 25}, {3, 0}},
 CellFrameMargins->{{8, 0}, {0, 0}},
 TextAlignment->Right,
 ShowStringCharacters->False,
 FontFamily->"Source Sans Pro",
 FontSize->12,
 FontWeight->"Plain",
 FontSlant->"Plain",
 Background->GrayLevel[1]],

Cell[BoxData[
 ButtonBox[
  PaneBox[
   StyleBox[
    RowBox[{"[", " ", 
     RowBox[{"Click", " ", "to", " ", "enter", " ", "code"}], " ", "]"}],
    Selectable->False,
    StripOnInput->False,
    FontFamily->"Source Sans Pro",
    FontSize->14,
    FontWeight->Plain,
    FontColor->GrayLevel[0.6]],
   ImageSize->Full],
  Appearance->None,
  ButtonFunction:>(SelectionMove[
     InputNotebook[], All, ButtonCell]; NotebookWrite[
     InputNotebook[], 
     Cell[
      BoxData[""], "Input"]]; SelectionMove[
     InputNotebook[], Before, CellContents]; Null),
  Evaluator->Automatic,
  Method->"Preemptive"]], "Input",
 CellFrameLabels->{{None, None}, {None, None}},
 ShowSyntaxStyles->False,
 ShowStringCharacters->False,
 CellTags->"FirstInputCell"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 PaneBox["\[ThickSpace]",
  ImageSize->Full]], "CodeSectionDividerCloud",
 Editable->False,
 Selectable->False,
 Deletable->False,
 CellMargins->{{0, 0}, {0, 35}},
 CellBracketOptions->{"OverlapContent"->True}],

Cell[TextData[{
 "Use ",
 StyleBox["Prime",
  FontFamily->"Source Sans Pro"],
 " y ",
 StyleBox["Array",
  FontFamily->"Source Sans Pro"],
 " para encontrar las diferencias sucesivas entre los 100 primeros primos."
}], "Exercise",
 Editable->False,
 Selectable->False,
 Deletable->False,
 CellDingbat->Cell[
  "29.2", "ExerciseNumber", FontColor -> 
   RGBColor[0.9019607843137255, 0.4117647058823529, 0.027450980392156862`]],
 ShowCellBracket->False,
 CounterAssignments->{{"SectionNumber", 29}, {"ExerciseNumber", 2}, {
   "WebOnly", 0}}],

Cell[CellGroupData[{

Cell[BoxData[
 TagBox[
  ButtonBox[
   StyleBox[
    RowBox[{"EXPECTED", " ", "OUTPUT", " ", "\[RightGuillemet]"}],
    FontFamily->"Source Sans Pro",
    FontSize->12,
    FontColor->GrayLevel[0.6]],
   Appearance->None,
   ButtonFunction:>(SelectionMove[
      ButtonNotebook[], All, ButtonCell, AutoScroll -> False]; FrontEndExecute[
      FrontEndToken[
       ButtonNotebook[], "OpenCloseGroup"]]),
   Evaluator->Automatic,
   Method->"Preemptive"],
  MouseAppearanceTag["LinkHand"]]], "ExerciseExpectedResult",
 Editable->False,
 Deletable->False,
 ShowCellBracket->False],

Cell[BoxData[
 FrameBox[
  TagBox[GridBox[{
     {
      PaneBox[
       InterpretationBox[Cell[BoxData[
         GraphicsBox[
          TagBox[RasterBox[CompressedData["
1:eJztna+TpEgWx2tvzcr7F+4fQK885Cki9mJdm924YePMXMXsRVyULYfE4VCo
UqVKYVAYDAZxCOIiyiAQGASiLjOhfnQ3Px5kAgn7PhEzMd398r18+TITyGL6
+5df//WT/qfdbvf7D+Svn375j/rt2y+Hv/+ZfPHz19//+dvXL//429d/f/nt
y7cff/2efPOv5M9/v9vt6L9vCIIgCIIgCIIgCIIgCIIgCNJFdjF0RdmHRfVl
HodhkpddLfKrfzmfTmc/SgWY3bsRBUGSFav0druVWeIRh+dLlAoICvIG7Nsi
mW5iQEQGBXu7hj7p3MWPekOufcm0bTVlGgdB1L0DAUOInYQNHS5T73JyTufw
2pnpkKHLQ2u32+nG+Vre4tNhxzD8rM0+C08Ks6n+3p8iHrMHvqlRY8NfnTdC
Hjm7F5ymxQQPCvEG7NsimQLNJB8QgUHB3grXUMlPVU1lnTt3b2erXjLtW01y
ZHH8vDvC3KuyqcMJK1eFco6byzV06PLA3O3MylfiOsc9TdMKWjfk2Hkjnbqy
po5OO9i46QPNKor4VGWlWQFP0EW8kSE3aV0OrCDZybAaVxs4KMgbsG+LZLqJ
AREZFOot94nV0aW9y3yze1Na+ZJp3WoC661qGnRuyLOvyoYOX126RZ9icsOc
0H/p58ab+kFDR1ML6Yb8kn1EoprtGzJxm91v2jPfINfzlmkDNKOZGeTiob69
KTvVbBteeb2V1zO7bvZd0WFBwd5AfVsk0w0MiNigUG95QLaQg8eWXhmqXRvy
upfMnY9bTcm2We1wUHda52jNvSqbOlye98Tcqswjuuvqbc+LQ0KwDVwxn4NS
0FnRuSE/CehF6HjlMwttek28JFdHIx3prqCM3tgjhuZF0cW2becSZf2HXx1B
4d6kzXQDAyI2KNhbSp0puhslvk3upQ5Ji+Hal0zNx60mpdusYqZ5qHXuWvOv
yqYO59bL5aCgB789Oy0kRBa7dJt/PYcBb8hlQq9ButNzJNJtVv30cKF9tFVy
wVmft+oQnvo5HN/oOZHqdj6TdAcFepM50w0MiNig8AFJ6F1XjebEHT1f9ZKp
eb/VsG22ujEmTwdq2LKDLrIqmzqcW+pzQ2bh1O5jFkgIg3ZZcV93X+CGnPn0
KvXm9FwTesxym57K7PaGaZpHrToTcpN1eatKf67vZmKyojQ7HBsU6E3qTNc/
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
            "], {{0, 
            64}, {475, 0}}, {0, 255},
            ColorFunction->RGBColor],
           BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
           Selectable->False],
          DefaultBaseStyle->"ImageGraphics",
          ImageSize->Magnification[1],
          ImageSizeRaw->{475, 64},
          PlotRange->{{0, 475}, {0, 64}}]], "ExerciseOutput",
         ImageSize->{479, 64},
         ImageMargins->{{0, 0}, {0, 0}},
         ImageRegion->{{0, 1}, {0, 1}},
         Magnification->1],
        Apply[TextCell, 
         Cell[
          BoxData[
           GraphicsBox[
            TagBox[
             RasterBox[CompressedData["
1:eJztna+TpEgWx2tvzcr7F+4fQK885Cki9mJdm924YePMXMXsRVyULYfE4VCo
UqVKYVAYDAZxCOIiyiAQGASiLjOhfnQ3Px5kAgn7PhEzMd398r18+TITyGL6
+5df//WT/qfdbvf7D+Svn375j/rt2y+Hv/+ZfPHz19//+dvXL//429d/f/nt
y7cff/2efPOv5M9/v9vt6L9vCIIgCIIgCIIgCIIgCIIgCNJFdjF0RdmHRfVl
HodhkpddLfKrfzmfTmc/SgWY3bsRBUGSFav0druVWeIRh+dLlAoICvIG7Nsi
mW5iQEQGBXu7hj7p3MWPekOufcm0bTVlGgdB1L0DAUOInYQNHS5T73JyTufw
2pnpkKHLQ2u32+nG+Vre4tNhxzD8rM0+C08Ks6n+3p8iHrMHvqlRY8NfnTdC
Hjm7F5ymxQQPCvEG7NsimQLNJB8QgUHB3grXUMlPVU1lnTt3b2erXjLtW01y
ZHH8vDvC3KuyqcMJK1eFco6byzV06PLA3O3MylfiOsc9TdMKWjfk2Hkjnbqy
po5OO9i46QPNKor4VGWlWQFP0EW8kSE3aV0OrCDZybAaVxs4KMgbsG+LZLqJ
AREZFOot94nV0aW9y3yze1Na+ZJp3WoC661qGnRuyLOvyoYOX126RZ9icsOc
0H/p58ab+kFDR1ML6Yb8kn1EoprtGzJxm91v2jPfINfzlmkDNKOZGeTiob69
KTvVbBteeb2V1zO7bvZd0WFBwd5AfVsk0w0MiNigUG95QLaQg8eWXhmqXRvy
upfMnY9bTcm2We1wUHda52jNvSqbOlye98Tcqswjuuvqbc+LQ0KwDVwxn4NS
0FnRuSE/CehF6HjlMwttek28JFdHIx3prqCM3tgjhuZF0cW2becSZf2HXx1B
4d6kzXQDAyI2KNhbSp0puhslvk3upQ5Ji+Hal0zNx60mpdusYqZ5qHXuWvOv
yqYO59bL5aCgB789Oy0kRBa7dJt/PYcBb8hlQq9ButNzJNJtVv30cKF9tFVy
wVmft+oQnvo5HN/oOZHqdj6TdAcFepM50w0MiNig8AFJ6F1XjebEHT1f9ZKp
eb/VsG22ujEmTwdq2LKDLrIqmzqcW+pzQ2bh1O5jFkgIg3ZZcV93X+CGnPn0
KvXm9FwTesxym57K7PaGaZpHrToTcpN1eatKf67vZmKyojQ7HBsU6E3qTNc/
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
              "], {{
              0, 64}, {475, 0}}, {0, 255}, ColorFunction -> RGBColor], 
             BoxForm`ImageTag[
             "Byte", ColorSpace -> "RGB", Interleaving -> True], Selectable -> 
             False], DefaultBaseStyle -> "ImageGraphics", ImageSize -> 
            Magnification[1], ImageSizeRaw -> {475, 64}, 
            PlotRange -> {{0, 475}, {0, 64}}]], "ExerciseOutput", 
          Magnification -> 1, CellFrameColor -> GrayLevel[0], Selectable -> 
          False, Copyable -> False, Editable -> False, ShowCellBracket -> 
          False, CellLabel -> "Out[]=", CellFrame -> False]]],
       FrameMargins->{{10, 0}, {10, 12}},
       ImageMargins->0,
       ImageSize->Full], 
      ButtonBox[
       PaneBox[
        StyleBox["\[Times]",
         FontFamily->"MathematicaMono",
         FontSize->18,
         FontWeight->"Bold",
         FontColor->GrayLevel[0.75]],
        Alignment->Right,
        FrameMargins->{{0, 6}, {0, 0}},
        ImageMargins->0],
       Appearance->None,
       ButtonFunction:>(SelectionMove[
          ButtonNotebook[], All, ButtonCell, AutoScroll -> False]; 
        NotebookFind[
          EvaluationNotebook[], "Exercise", Previous, CellStyle, WrapAround -> 
          False, AutoScroll -> False]; FrontEndExecute[
          FrontEndToken[
           ButtonNotebook[], "OpenCloseGroup"]])]}
    },
    GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {Top}},
    GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
   "Grid"],
  FrameMargins->0,
  FrameStyle->GrayLevel[0.7],
  StripOnInput->False]], "ExerciseOutput",
 Editable->False,
 Selectable->False,
 Deletable->False,
 CellFrame->{{1, 1}, {1, 1}},
 ShowCellBracket->False,
 CellFrameMargins->{{0, 0}, {0, 0}},
 CellFrameColor->GrayLevel[1],
 LineBreakWithin->Automatic]
}, Closed]],

Cell[CellGroupData[{

Cell[BoxData[
 StyleBox[
  DynamicBox[ToBoxes[
    $CellContext`SolutionResponseText["29.2"], StandardForm],
   ImageSizeCache->{140., {3., 9.}}], "SolutionResponseText"]], "Subsection",
 Editable->False,
 Selectable->False,
 Deletable->False,
 ShowCellBracket->False,
 CellMargins->{{24, 25}, {3, 0}},
 CellFrameMargins->{{8, 0}, {0, 0}},
 TextAlignment->Right,
 ShowStringCharacters->False,
 FontFamily->"Source Sans Pro",
 FontSize->12,
 FontWeight->"Plain",
 FontSlant->"Plain",
 Background->GrayLevel[1]],

Cell[BoxData[
 ButtonBox[
  PaneBox[
   StyleBox[
    RowBox[{"[", " ", 
     RowBox[{"Click", " ", "to", " ", "enter", " ", "code"}], " ", "]"}],
    Selectable->False,
    StripOnInput->False,
    FontFamily->"Source Sans Pro",
    FontSize->14,
    FontWeight->Plain,
    FontColor->GrayLevel[0.6]],
   ImageSize->Full],
  Appearance->None,
  ButtonFunction:>(SelectionMove[
     InputNotebook[], All, ButtonCell]; NotebookWrite[
     InputNotebook[], 
     Cell[
      BoxData[""], "Input"]]; SelectionMove[
     InputNotebook[], Before, CellContents]; Null),
  Evaluator->Automatic,
  Method->"Preemptive"]], "Input",
 CellFrameLabels->{{None, None}, {None, None}},
 ShowSyntaxStyles->False,
 ShowStringCharacters->False,
 CellTags->"FirstInputCell"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 PaneBox["\[ThickSpace]",
  ImageSize->Full]], "CodeSectionDividerCloud",
 Editable->False,
 Selectable->False,
 Deletable->False,
 CellMargins->{{0, 0}, {0, 35}},
 CellBracketOptions->{"OverlapContent"->True}],

Cell[TextData[{
 "Use ",
 StyleBox["Array",
  FontFamily->"Source Sans Pro"],
 " y ",
 StyleBox["Grid",
  FontFamily->"Source Sans Pro"],
 " para formar una tabla de sumar de 10 por 10."
}], "Exercise",
 Editable->False,
 Selectable->False,
 Deletable->False,
 CellDingbat->Cell[
  "29.3", "ExerciseNumber", FontColor -> 
   RGBColor[0.9019607843137255, 0.4117647058823529, 0.027450980392156862`]],
 ShowCellBracket->False,
 CounterAssignments->{{"SectionNumber", 29}, {"ExerciseNumber", 3}, {
   "WebOnly", 0}}],

Cell[CellGroupData[{

Cell[BoxData[
 TagBox[
  ButtonBox[
   StyleBox[
    RowBox[{"EXPECTED", " ", "OUTPUT", " ", "\[RightGuillemet]"}],
    FontFamily->"Source Sans Pro",
    FontSize->12,
    FontColor->GrayLevel[0.6]],
   Appearance->None,
   ButtonFunction:>(SelectionMove[
      ButtonNotebook[], All, ButtonCell, AutoScroll -> False]; FrontEndExecute[
      FrontEndToken[
       ButtonNotebook[], "OpenCloseGroup"]]),
   Evaluator->Automatic,
   Method->"Preemptive"],
  MouseAppearanceTag["LinkHand"]]], "ExerciseExpectedResult",
 Editable->False,
 Deletable->False,
 ShowCellBracket->False],

Cell[BoxData[
 FrameBox[
  TagBox[GridBox[{
     {
      PaneBox[
       InterpretationBox[Cell[BoxData[
         GraphicsBox[
          TagBox[RasterBox[CompressedData["
1:eJztnb+PpMgZhlt24tD/gv8BYqeEjpDOctbJnbx9cnJu3VmySMkIyciIiIiI
CCwSIhISEhICZAkHBAQ4ICAYUwU93dMNVV9Vz4121u8j7Wl3dvvdr35QFEw9
t3/44e/fnX5zOBx++d38n+++/6f588/f23/+/fyLv/z0y99+/OnLX//00z++
/Pjl5z/+8Nv5i/+af/xn/sF+/nLH0OZJHEVxXnX3v6XE2OVpHMVJXrVP5az0
VVE0/aj78amtyitVox3EsvomS1jTqk4zZuya8i2NbtRMW+bzgM0d/Uyj5oEv
UhYz97Lex+u5FcN0/cLUZUkURnHZKtX1kMM7vCzrYetP92VkHBjLf89RpVM7
mx+pdZNjudkk/5CI3GN5hpvrBgzeUsqKWWy2nxJUhbdBodY0KT3z8BbDK7TK
GVOXRZkWDzzHmpN2anjMweC9ZCeN0qfryF5a4eavs30NXBoX16S6tnLG+LwE
GfnWkNXhcf7jfE0cwhP7qN46O7WJaTg1n6a8S83Nv47IWEdLQyxfb1hnBt88
WEE5l8bRrqXnc83mI9BHrq+7rk3TuNZRBvPFaGleQUM+l+OkbMT63NsbVilt
yqZKxAZsiu151p6VpmyThs6ZLSl+0T8ENuxnp5jS5Y857JIMXPtk7HfR0F8W
5D53n5xpa07mPJfTunO95vFoHEzNhWimmxvjV0+u9POVGPMV4OlOuSZW8xpx
DDXvZfOdfJ6xdsbHdypN3RlbzNeh4V1mWzK3MahUg6p5qnnrTJvi8zxk/hJR
sWXwRL60b3NWpiqg3BZZKw7OM3vQoWvLLDqySyzUHuMyYAFJ04aW9q2TjSzf
VRzPp5PjhVWnOXWHYl7HrKyqkiAIwqTqn70Emmi+k51q/ZiOdY9xSqsmD+Yo
u9GK4mPtrrOkz8yHOSNnLG4+Nfg3y8tY+gpL1puclYEniGfs1MR8oule+/zv
8S87GeXmvy3DTth1E5jzVatbz1Q7pnFygyQJ2R3mYOVaFfGuY5xs58hyzPSp
x1N2x+R7lSci2HK2YoW1XshYh/yCdnzfWfb7vuo25W7GmtcZS5lvOzkv1IQ+
Z+vaUX9hfGUau8RjYbHOxT8E/Pnt7Hqe51jLTjZVeyjYoM+MN3t7lYL4jL20
pT4/Od/4/TekPZVsMrLb5SEsu2moQ9vS7WdGX2eeY9uOn+UxW3A/0Rrb5eyR
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
            "], {{0, 
            187}, {230, 0}}, {0, 255},
            ColorFunction->RGBColor],
           BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
           Selectable->False],
          DefaultBaseStyle->"ImageGraphics",
          ImageSize->Magnification[1],
          ImageSizeRaw->{230, 187},
          PlotRange->{{0, 230}, {0, 187}}]], "ExerciseOutput",
         ImageSize->{234, 187},
         ImageMargins->{{0, 0}, {0, 0}},
         ImageRegion->{{0, 1}, {0, 1}},
         Magnification->1],
        Apply[TextCell, 
         Cell[
          BoxData[
           GraphicsBox[
            TagBox[
             RasterBox[CompressedData["
1:eJztnb+PpMgZhlt24tD/gv8BYqeEjpDOctbJnbx9cnJu3VmySMkIyciIiIiI
CCwSIhISEhICZAkHBAQ4ICAYUwU93dMNVV9Vz4121u8j7Wl3dvvdr35QFEw9
t3/44e/fnX5zOBx++d38n+++/6f588/f23/+/fyLv/z0y99+/OnLX//00z++
/Pjl5z/+8Nv5i/+af/xn/sF+/nLH0OZJHEVxXnX3v6XE2OVpHMVJXrVP5az0
VVE0/aj78amtyitVox3EsvomS1jTqk4zZuya8i2NbtRMW+bzgM0d/Uyj5oEv
UhYz97Lex+u5FcN0/cLUZUkURnHZKtX1kMM7vCzrYetP92VkHBjLf89RpVM7
mx+pdZNjudkk/5CI3GN5hpvrBgzeUsqKWWy2nxJUhbdBodY0KT3z8BbDK7TK
GVOXRZkWDzzHmpN2anjMweC9ZCeN0qfryF5a4eavs30NXBoX16S6tnLG+LwE
GfnWkNXhcf7jfE0cwhP7qN46O7WJaTg1n6a8S83Nv47IWEdLQyxfb1hnBt88
WEE5l8bRrqXnc83mI9BHrq+7rk3TuNZRBvPFaGleQUM+l+OkbMT63NsbVilt
yqZKxAZsiu151p6VpmyThs6ZLSl+0T8ENuxnp5jS5Y857JIMXPtk7HfR0F8W
5D53n5xpa07mPJfTunO95vFoHEzNhWimmxvjV0+u9POVGPMV4OlOuSZW8xpx
DDXvZfOdfJ6xdsbHdypN3RlbzNeh4V1mWzK3MahUg6p5qnnrTJvi8zxk/hJR
sWXwRL60b3NWpiqg3BZZKw7OM3vQoWvLLDqySyzUHuMyYAFJ04aW9q2TjSzf
VRzPp5PjhVWnOXWHYl7HrKyqkiAIwqTqn70Emmi+k51q/ZiOdY9xSqsmD+Yo
u9GK4mPtrrOkz8yHOSNnLG4+Nfg3y8tY+gpL1puclYEniGfs1MR8oule+/zv
8S87GeXmvy3DTth1E5jzVatbz1Q7pnFygyQJ2R3mYOVaFfGuY5xs58hyzPSp
x1N2x+R7lSci2HK2YoW1XshYh/yCdnzfWfb7vuo25W7GmtcZS5lvOzkv1IQ+
Z+vaUX9hfGUau8RjYbHOxT8E/Pnt7Hqe51jLTjZVeyjYoM+MN3t7lYL4jL20
pT4/Od/4/TekPZVsMrLb5SEsu2moQ9vS7WdGX2eeY9uOn+UxW3A/0Rrb5eyR
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
              "], {{
              0, 187}, {230, 0}}, {0, 255}, ColorFunction -> RGBColor], 
             BoxForm`ImageTag[
             "Byte", ColorSpace -> "RGB", Interleaving -> True], Selectable -> 
             False], DefaultBaseStyle -> "ImageGraphics", ImageSize -> 
            Magnification[1], ImageSizeRaw -> {230, 187}, 
            PlotRange -> {{0, 230}, {0, 187}}]], "ExerciseOutput", 
          Magnification -> 1, CellFrameColor -> GrayLevel[0], Selectable -> 
          False, Copyable -> False, Editable -> False, ShowCellBracket -> 
          False, CellLabel -> "Out[]=", CellFrame -> False]]],
       FrameMargins->{{10, 0}, {10, 12}},
       ImageMargins->0,
       ImageSize->Full], 
      ButtonBox[
       PaneBox[
        StyleBox["\[Times]",
         FontFamily->"MathematicaMono",
         FontSize->18,
         FontWeight->"Bold",
         FontColor->GrayLevel[0.75]],
        Alignment->Right,
        FrameMargins->{{0, 6}, {0, 0}},
        ImageMargins->0],
       Appearance->None,
       ButtonFunction:>(SelectionMove[
          ButtonNotebook[], All, ButtonCell, AutoScroll -> False]; 
        NotebookFind[
          EvaluationNotebook[], "Exercise", Previous, CellStyle, WrapAround -> 
          False, AutoScroll -> False]; FrontEndExecute[
          FrontEndToken[
           ButtonNotebook[], "OpenCloseGroup"]])]}
    },
    GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {Top}},
    GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
   "Grid"],
  FrameMargins->0,
  FrameStyle->GrayLevel[0.7],
  StripOnInput->False]], "ExerciseOutput",
 Editable->False,
 Selectable->False,
 Deletable->False,
 CellFrame->{{1, 1}, {1, 1}},
 ShowCellBracket->False,
 CellFrameMargins->{{0, 0}, {0, 0}},
 CellFrameColor->GrayLevel[1],
 LineBreakWithin->Automatic]
}, Closed]],

Cell[CellGroupData[{

Cell[BoxData[
 StyleBox[
  DynamicBox[ToBoxes[
    $CellContext`SolutionResponseText["29.3"], StandardForm],
   ImageSizeCache->{140., {3., 9.}}], "SolutionResponseText"]], "Subsection",
 Editable->False,
 Selectable->False,
 Deletable->False,
 ShowCellBracket->False,
 CellMargins->{{24, 25}, {3, 0}},
 CellFrameMargins->{{8, 0}, {0, 0}},
 TextAlignment->Right,
 ShowStringCharacters->False,
 FontFamily->"Source Sans Pro",
 FontSize->12,
 FontWeight->"Plain",
 FontSlant->"Plain",
 Background->GrayLevel[1]],

Cell[BoxData[
 ButtonBox[
  PaneBox[
   StyleBox[
    RowBox[{"[", " ", 
     RowBox[{"Click", " ", "to", " ", "enter", " ", "code"}], " ", "]"}],
    Selectable->False,
    StripOnInput->False,
    FontFamily->"Source Sans Pro",
    FontSize->14,
    FontWeight->Plain,
    FontColor->GrayLevel[0.6]],
   ImageSize->Full],
  Appearance->None,
  ButtonFunction:>(SelectionMove[
     InputNotebook[], All, ButtonCell]; NotebookWrite[
     InputNotebook[], 
     Cell[
      BoxData[""], "Input"]]; SelectionMove[
     InputNotebook[], Before, CellContents]; Null),
  Evaluator->Automatic,
  Method->"Preemptive"]], "Input",
 CellFrameLabels->{{None, None}, {None, None}},
 ShowSyntaxStyles->False,
 ShowStringCharacters->False,
 CellTags->"FirstInputCell"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 PaneBox["\[ThickSpace]",
  ImageSize->Full]], "CodeSectionDividerCloud",
 Editable->False,
 Selectable->False,
 Deletable->False,
 CellMargins->{{0, 0}, {0, 35}},
 CellBracketOptions->{"OverlapContent"->True}],

Cell[TextData[{
 "Use ",
 StyleBox["FoldList",
  FontFamily->"Source Sans Pro"],
 ", ",
 StyleBox["Times",
  FontFamily->"Source Sans Pro"],
 " y ",
 StyleBox["Range",
  FontFamily->"Source Sans Pro"],
 " para multiplicar los n\[UAcute]meros hasta el 10 sucesivamente (formando \
los factoriales)."
}], "Exercise",
 Editable->False,
 Selectable->False,
 Deletable->False,
 CellDingbat->Cell[
  "29.4", "ExerciseNumber", FontColor -> 
   RGBColor[0.9019607843137255, 0.4117647058823529, 0.027450980392156862`]],
 ShowCellBracket->False,
 CounterAssignments->{{"SectionNumber", 29}, {"ExerciseNumber", 4}, {
   "WebOnly", 0}}],

Cell[CellGroupData[{

Cell[BoxData[
 TagBox[
  ButtonBox[
   StyleBox[
    RowBox[{"EXPECTED", " ", "OUTPUT", " ", "\[RightGuillemet]"}],
    FontFamily->"Source Sans Pro",
    FontSize->12,
    FontColor->GrayLevel[0.6]],
   Appearance->None,
   ButtonFunction:>(SelectionMove[
      ButtonNotebook[], All, ButtonCell, AutoScroll -> False]; FrontEndExecute[
      FrontEndToken[
       ButtonNotebook[], "OpenCloseGroup"]]),
   Evaluator->Automatic,
   Method->"Preemptive"],
  MouseAppearanceTag["LinkHand"]]], "ExerciseExpectedResult",
 Editable->False,
 Deletable->False,
 ShowCellBracket->False],

Cell[BoxData[
 FrameBox[
  TagBox[GridBox[{
     {
      PaneBox[
       InterpretationBox[Cell[BoxData[
         GraphicsBox[
          TagBox[RasterBox[CompressedData["
1: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
OeSQQy7yG+RrMIQ=
            "], {{0, 19}, {311, 0}}, {0, 255},
            ColorFunction->RGBColor],
           BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
           Selectable->False],
          DefaultBaseStyle->"ImageGraphics",
          ImageSize->Magnification[1],
          ImageSizeRaw->{311, 19},
          PlotRange->{{0, 311}, {0, 19}}]], "ExerciseOutput",
         ImageSize->{315, 19},
         ImageMargins->{{0, 0}, {0, 0}},
         ImageRegion->{{0, 1}, {0, 1}},
         Magnification->1],
        Apply[TextCell, 
         Cell[
          BoxData[
           GraphicsBox[
            TagBox[
             RasterBox[CompressedData["
1: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
OeSQQy7yG+RrMIQ=
              "], {{0, 19}, {311, 0}}, {0, 255}, 
              ColorFunction -> RGBColor], 
             BoxForm`ImageTag[
             "Byte", ColorSpace -> "RGB", Interleaving -> True], Selectable -> 
             False], DefaultBaseStyle -> "ImageGraphics", ImageSize -> 
            Magnification[1], ImageSizeRaw -> {311, 19}, 
            PlotRange -> {{0, 311}, {0, 19}}]], "ExerciseOutput", 
          Magnification -> 1, CellFrameColor -> GrayLevel[0], Selectable -> 
          False, Copyable -> False, Editable -> False, ShowCellBracket -> 
          False, CellLabel -> "Out[]=", CellFrame -> False]]],
       FrameMargins->{{10, 0}, {10, 12}},
       ImageMargins->0,
       ImageSize->Full], 
      ButtonBox[
       PaneBox[
        StyleBox["\[Times]",
         FontFamily->"MathematicaMono",
         FontSize->18,
         FontWeight->"Bold",
         FontColor->GrayLevel[0.75]],
        Alignment->Right,
        FrameMargins->{{0, 6}, {0, 0}},
        ImageMargins->0],
       Appearance->None,
       ButtonFunction:>(SelectionMove[
          ButtonNotebook[], All, ButtonCell, AutoScroll -> False]; 
        NotebookFind[
          EvaluationNotebook[], "Exercise", Previous, CellStyle, WrapAround -> 
          False, AutoScroll -> False]; FrontEndExecute[
          FrontEndToken[
           ButtonNotebook[], "OpenCloseGroup"]])]}
    },
    GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {Top}},
    GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
   "Grid"],
  FrameMargins->0,
  FrameStyle->GrayLevel[0.7],
  StripOnInput->False]], "ExerciseOutput",
 Editable->False,
 Selectable->False,
 Deletable->False,
 CellFrame->{{1, 1}, {1, 1}},
 ShowCellBracket->False,
 CellFrameMargins->{{0, 0}, {0, 0}},
 CellFrameColor->GrayLevel[1],
 LineBreakWithin->Automatic]
}, Closed]],

Cell[CellGroupData[{

Cell[BoxData[
 StyleBox[
  DynamicBox[ToBoxes[
    $CellContext`SolutionResponseText["29.4"], StandardForm],
   ImageSizeCache->{140., {3., 9.}}], "SolutionResponseText"]], "Subsection",
 Editable->False,
 Selectable->False,
 Deletable->False,
 ShowCellBracket->False,
 CellMargins->{{24, 25}, {3, 0}},
 CellFrameMargins->{{8, 0}, {0, 0}},
 TextAlignment->Right,
 ShowStringCharacters->False,
 FontFamily->"Source Sans Pro",
 FontSize->12,
 FontWeight->"Plain",
 FontSlant->"Plain",
 Background->GrayLevel[1]],

Cell[BoxData[
 ButtonBox[
  PaneBox[
   StyleBox[
    RowBox[{"[", " ", 
     RowBox[{"Click", " ", "to", " ", "enter", " ", "code"}], " ", "]"}],
    Selectable->False,
    StripOnInput->False,
    FontFamily->"Source Sans Pro",
    FontSize->14,
    FontWeight->Plain,
    FontColor->GrayLevel[0.6]],
   ImageSize->Full],
  Appearance->None,
  ButtonFunction:>(SelectionMove[
     InputNotebook[], All, ButtonCell]; NotebookWrite[
     InputNotebook[], 
     Cell[
      BoxData[""], "Input"]]; SelectionMove[
     InputNotebook[], Before, CellContents]; Null),
  Evaluator->Automatic,
  Method->"Preemptive"]], "Input",
 CellFrameLabels->{{None, None}, {None, None}},
 ShowSyntaxStyles->False,
 ShowStringCharacters->False,
 CellTags->"FirstInputCell"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 PaneBox["\[ThickSpace]",
  ImageSize->Full]], "CodeSectionDividerCloud",
 Editable->False,
 Selectable->False,
 Deletable->False,
 CellMargins->{{0, 0}, {0, 35}},
 CellBracketOptions->{"OverlapContent"->True}],

Cell[TextData[{
 "Use ",
 StyleBox["FoldList",
  FontFamily->"Source Sans Pro"],
 " y ",
 StyleBox["Array",
  FontFamily->"Source Sans Pro"],
 " para calcular los productos sucesivos de los 10 primeros primos."
}], "Exercise",
 Editable->False,
 Selectable->False,
 Deletable->False,
 CellDingbat->Cell[
  "29.5", "ExerciseNumber", FontColor -> 
   RGBColor[0.9019607843137255, 0.4117647058823529, 0.027450980392156862`]],
 ShowCellBracket->False,
 CounterAssignments->{{"SectionNumber", 29}, {"ExerciseNumber", 5}, {
   "WebOnly", 0}}],

Cell[CellGroupData[{

Cell[BoxData[
 TagBox[
  ButtonBox[
   StyleBox[
    RowBox[{"EXPECTED", " ", "OUTPUT", " ", "\[RightGuillemet]"}],
    FontFamily->"Source Sans Pro",
    FontSize->12,
    FontColor->GrayLevel[0.6]],
   Appearance->None,
   ButtonFunction:>(SelectionMove[
      ButtonNotebook[], All, ButtonCell, AutoScroll -> False]; FrontEndExecute[
      FrontEndToken[
       ButtonNotebook[], "OpenCloseGroup"]]),
   Evaluator->Automatic,
   Method->"Preemptive"],
  MouseAppearanceTag["LinkHand"]]], "ExerciseExpectedResult",
 Editable->False,
 Deletable->False,
 ShowCellBracket->False],

Cell[BoxData[
 FrameBox[
  TagBox[GridBox[{
     {
      PaneBox[
       InterpretationBox[Cell[BoxData[
         GraphicsBox[
          TagBox[RasterBox[CompressedData["
1:eJztW7/vpLgVJ0mTMlL+gvwD1GkpUyFdlG6aO91ySrMZ7UWKaOko6eiokCJR
UVHRUNHQEEVuUIQikYKCSDQuXMz52cAwYDNmmLvbPfGk/WrG8/z8Pu+Xnw37
h2/+9pX1a03Tvv8t/fPV1/8wPn362v7z7+iXv3z8/q/fffzw7Z8+/v3Ddx8+
/fGb39DB39N///yVpsHn20knnXTSSSeddNJJJ5100kknnXTSSSed9GVTl7iW
rl9LzL/2VVnWPdma0Td5EkdRnKN2WzTp6oxyxglqsZQJt3kKPDlqZjPbLInC
KC4b+US5JnTdsqz6h6HXBfZNyUBk1SOK11fZD7kuUvpbWtRPtHquAGlQeSdU
T3x74LxFyJz6ghokSoq6E2i8iiLSVdx+TT9nEwzuknAkSCjuJKJjad2RGaM4
cjitfSrUSiiZU1PmYLUcceltVT4SGvJYEdfzhO1QQV10/6lFRQKqFZNqx72w
ZTT19FxC7kPLMC5O3g6K9qWvaZrlxg25VZGtMXJzQfgNyMtIZzz87zVCMs4e
hdqMQiSwJGlScybNdDOmVu0a0zw9rsTOkmiC4yufrOd3Y74skBTBdTamBWV3
cJUXIBf+ZZpwCQq5VioK9J4+d4tR9C/AeYuQySIDj85k2kk9/3EdRRhxNw32
y1gkCwd3STgSdUVg3QFoRkpzSeojmU/FEESSOeGUqWuYTOlrjJdOgWlZr4pL
aKgFQ+5B5OpuPnzlEAayK3LcC1tG25Oea8gEJcFlpnxfeJrmcYR1GjpXgOYX
0rpXhXS2y9oUWkIpryvp+TrPYNYA0V3k+qKyR4tAYuhOxczD/GjQlGlSKL8R
jNbwyYqF3adEE5wGrm1RO5jFmH1HBKLAMj1mK1LBXDu9HVtlN+Q+p0ymD6mR
g01N2pkLtVJToPcNzQxKOpPR7SU4bxGy5iGxTadfZ4VvHUU4NCF8wU19Sb2k
OxldWjS4S8KRIMGBMTjo1uX0Z8ODz5LIkflUjEsoeZLgpA37xRv2GkJGfzQu
NaQVYWVcTxMWVxGvI4M+TaKNuzZpMtenH97ghQ2jqaenDDIKTE33hsalhLo3
azMRVceT1z26aDeegrvc5Wm7JtLEoJnwNwl1mcOkkZiWcMPnMxGAtYQ1c0MT
goKxCYFvxwXyX+mQdgnvZ7oXV9kHGbOGPOW7Cws2r5irNWmlqEBL+X0kiP09
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
pN3Z/Q==
            "], {{0, 19}, {424, 0}}, {0, 255},
            ColorFunction->RGBColor],
           BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
           Selectable->False],
          DefaultBaseStyle->"ImageGraphics",
          ImageSize->Magnification[1],
          ImageSizeRaw->{424, 19},
          PlotRange->{{0, 424}, {0, 19}}]], "ExerciseOutput",
         ImageSize->{428, 19},
         ImageMargins->{{0, 0}, {0, 0}},
         ImageRegion->{{0, 1}, {0, 1}},
         Magnification->1],
        Apply[TextCell, 
         Cell[
          BoxData[
           GraphicsBox[
            TagBox[
             RasterBox[CompressedData["
1:eJztW7/vpLgVJ0mTMlL+gvwD1GkpUyFdlG6aO91ySrMZ7UWKaOko6eiokCJR
UVHRUNHQEEVuUIQikYKCSDQuXMz52cAwYDNmmLvbPfGk/WrG8/z8Pu+Xnw37
h2/+9pX1a03Tvv8t/fPV1/8wPn362v7z7+iXv3z8/q/fffzw7Z8+/v3Ddx8+
/fGb39DB39N///yVpsHn20knnXTSSSeddNJJJ5100kknnXTSSSed9GVTl7iW
rl9LzL/2VVnWPdma0Td5EkdRnKN2WzTp6oxyxglqsZQJt3kKPDlqZjPbLInC
KC4b+US5JnTdsqz6h6HXBfZNyUBk1SOK11fZD7kuUvpbWtRPtHquAGlQeSdU
T3x74LxFyJz6ghokSoq6E2i8iiLSVdx+TT9nEwzuknAkSCjuJKJjad2RGaM4
cjitfSrUSiiZU1PmYLUcceltVT4SGvJYEdfzhO1QQV10/6lFRQKqFZNqx72w
ZTT19FxC7kPLMC5O3g6K9qWvaZrlxg25VZGtMXJzQfgNyMtIZzz87zVCMs4e
hdqMQiSwJGlScybNdDOmVu0a0zw9rsTOkmiC4yufrOd3Y74skBTBdTamBWV3
cJUXIBf+ZZpwCQq5VioK9J4+d4tR9C/AeYuQySIDj85k2kk9/3EdRRhxNw32
y1gkCwd3STgSdUVg3QFoRkpzSeojmU/FEESSOeGUqWuYTOlrjJdOgWlZr4pL
aKgFQ+5B5OpuPnzlEAayK3LcC1tG25Oea8gEJcFlpnxfeJrmcYR1GjpXgOYX
0rpXhXS2y9oUWkIpryvp+TrPYNYA0V3k+qKyR4tAYuhOxczD/GjQlGlSKL8R
jNbwyYqF3adEE5wGrm1RO5jFmH1HBKLAMj1mK1LBXDu9HVtlN+Q+p0ymD6mR
g01N2pkLtVJToPcNzQxKOpPR7SU4bxGy5iGxTadfZ4VvHUU4NCF8wU19Sb2k
OxldWjS4S8KRIMGBMTjo1uX0Z8ODz5LIkflUjEsoeZLgpA37xRv2GkJGfzQu
NaQVYWVcTxMWVxGvI4M+TaKNuzZpMtenH97ghQ2jqaenDDIKTE33hsalhLo3
azMRVceT1z26aDeegrvc5Wm7JtLEoJnwNwl1mcOkkZiWcMPnMxGAtYQ1c0MT
goKxCYFvxwXyX+mQdgnvZ7oXV9kHGbOGPOW7Cws2r5irNWmlqEBL+X0kiP09
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
pN3Z/Q==
              "], {{0, 19}, {424, 0}}, {0, 255}, ColorFunction -> 
              RGBColor], 
             BoxForm`ImageTag[
             "Byte", ColorSpace -> "RGB", Interleaving -> True], Selectable -> 
             False], DefaultBaseStyle -> "ImageGraphics", ImageSize -> 
            Magnification[1], ImageSizeRaw -> {424, 19}, 
            PlotRange -> {{0, 424}, {0, 19}}]], "ExerciseOutput", 
          Magnification -> 1, CellFrameColor -> GrayLevel[0], Selectable -> 
          False, Copyable -> False, Editable -> False, ShowCellBracket -> 
          False, CellLabel -> "Out[]=", CellFrame -> False]]],
       FrameMargins->{{10, 0}, {10, 12}},
       ImageMargins->0,
       ImageSize->Full], 
      ButtonBox[
       PaneBox[
        StyleBox["\[Times]",
         FontFamily->"MathematicaMono",
         FontSize->18,
         FontWeight->"Bold",
         FontColor->GrayLevel[0.75]],
        Alignment->Right,
        FrameMargins->{{0, 6}, {0, 0}},
        ImageMargins->0],
       Appearance->None,
       ButtonFunction:>(SelectionMove[
          ButtonNotebook[], All, ButtonCell, AutoScroll -> False]; 
        NotebookFind[
          EvaluationNotebook[], "Exercise", Previous, CellStyle, WrapAround -> 
          False, AutoScroll -> False]; FrontEndExecute[
          FrontEndToken[
           ButtonNotebook[], "OpenCloseGroup"]])]}
    },
    GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {Top}},
    GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
   "Grid"],
  FrameMargins->0,
  FrameStyle->GrayLevel[0.7],
  StripOnInput->False]], "ExerciseOutput",
 Editable->False,
 Selectable->False,
 Deletable->False,
 CellFrame->{{1, 1}, {1, 1}},
 ShowCellBracket->False,
 CellFrameMargins->{{0, 0}, {0, 0}},
 CellFrameColor->GrayLevel[1],
 LineBreakWithin->Automatic]
}, Closed]],

Cell[CellGroupData[{

Cell[BoxData[
 StyleBox[
  DynamicBox[ToBoxes[
    $CellContext`SolutionResponseText["29.5"], StandardForm],
   ImageSizeCache->{140., {3., 9.}}], "SolutionResponseText"]], "Subsection",
 Editable->False,
 Selectable->False,
 Deletable->False,
 ShowCellBracket->False,
 CellMargins->{{24, 25}, {3, 0}},
 CellFrameMargins->{{8, 0}, {0, 0}},
 TextAlignment->Right,
 ShowStringCharacters->False,
 FontFamily->"Source Sans Pro",
 FontSize->12,
 FontWeight->"Plain",
 FontSlant->"Plain",
 Background->GrayLevel[1]],

Cell[BoxData[
 ButtonBox[
  PaneBox[
   StyleBox[
    RowBox[{"[", " ", 
     RowBox[{"Click", " ", "to", " ", "enter", " ", "code"}], " ", "]"}],
    Selectable->False,
    StripOnInput->False,
    FontFamily->"Source Sans Pro",
    FontSize->14,
    FontWeight->Plain,
    FontColor->GrayLevel[0.6]],
   ImageSize->Full],
  Appearance->None,
  ButtonFunction:>(SelectionMove[
     InputNotebook[], All, ButtonCell]; NotebookWrite[
     InputNotebook[], 
     Cell[
      BoxData[""], "Input"]]; SelectionMove[
     InputNotebook[], Before, CellContents]; Null),
  Evaluator->Automatic,
  Method->"Preemptive"]], "Input",
 CellFrameLabels->{{None, None}, {None, None}},
 ShowSyntaxStyles->False,
 ShowStringCharacters->False,
 CellTags->"FirstInputCell"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 PaneBox["\[ThickSpace]",
  ImageSize->Full]], "CodeSectionDividerCloud",
 Editable->False,
 Selectable->False,
 Deletable->False,
 CellMargins->{{0, 0}, {0, 35}},
 CellBracketOptions->{"OverlapContent"->True}],

Cell[TextData[{
 "Use ",
 StyleBox["FoldList",
  FontFamily->"Source Sans Pro"],
 " para aplicar ",
 StyleBox["ImageAdd",
  FontFamily->"Source Sans Pro"],
 " sucesivamente a los pol\[IAcute]gonos regulares de 3 a 8 lados, con \
opacidad 0.2."
}], "Exercise",
 Editable->False,
 Selectable->False,
 Deletable->False,
 CellDingbat->Cell[
  "29.6", "ExerciseNumber", FontColor -> 
   RGBColor[0.9019607843137255, 0.4117647058823529, 0.027450980392156862`]],
 ShowCellBracket->False,
 CounterAssignments->{{"SectionNumber", 29}, {"ExerciseNumber", 6}, {
   "WebOnly", 0}}],

Cell[CellGroupData[{

Cell[BoxData[
 TagBox[
  ButtonBox[
   StyleBox[
    RowBox[{"EXPECTED", " ", "OUTPUT", " ", "\[RightGuillemet]"}],
    FontFamily->"Source Sans Pro",
    FontSize->12,
    FontColor->GrayLevel[0.6]],
   Appearance->None,
   ButtonFunction:>(SelectionMove[
      ButtonNotebook[], All, ButtonCell, AutoScroll -> False]; FrontEndExecute[
      FrontEndToken[
       ButtonNotebook[], "OpenCloseGroup"]]),
   Evaluator->Automatic,
   Method->"Preemptive"],
  MouseAppearanceTag["LinkHand"]]], "ExerciseExpectedResult",
 Editable->False,
 Deletable->False,
 ShowCellBracket->False],

Cell[BoxData[
 FrameBox[
  TagBox[GridBox[{
     {
      PaneBox[
       InterpretationBox[Cell[BoxData[
         GraphicsBox[
          TagBox[RasterBox[CompressedData["
1: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
X5ehC8sOLltt5eRFAbeEj+3cuVOS9+BWoaMoMjMz5buFg4q7JT3mFZN9R5Z2
kIR46CiKiIgIwW1H51Zs27bNzqsfZ3PLR48e5eTkyNmX5QKXbeyjKBRwS/hY
dHS0fG4ZWWyY8fHxsoaXirkltztlVFSUyGhcwF5DAgxz2rRpgsPLyJJ35XYK
Mp3NLS9cuCBfN5YbXLza+smI3G4JB9uyZYt8OTg34uAtslYTKeOWVE65adMm
MSElAQfz8/OTLwfn3NLT09PRaiJLKCu3uj7Lqdzy/v37qh9vKgZcPG5BbRXl
Qla3RM9PS0tDqiVrYMkNN5iMrt2SVtCvWLFC/ORCew25u7vLGlgSMORJkyaJ
f4VHr34wt5pl5U7llmfOnJGpAysGbkFtFeVCVrfERCNH1ZAtEE3BbfRy3oGp
8lw5pUOLGe0A25GjasgWQ4cODQ4OlsQwwZo1a0yPLHcet/zzzz/l6LrKgxtR
W0tZkM8tYZW7d++Wo2rIFvCZtWvXyuT88rklhBJZTmkGZo2goCA5qoZsAVse
M2aMVBkEHfGZkJBwsGQecRK3PH78uBxdV3lwI2prKQvyuSU+c9WqVYoFlhy7
du2S48mPHG6ZnZ2NT8acIric0ipwG19fX8UCS46AgAAxr3vMbgHzbGxsbEZG
BjqSMOUf5N+4cuHClXx9LMq7evWq5J1WRXA7aisqPTK5JVUNSTJwHB1lMlUT
Se6W9Dx/69atcBgJn+tS1ZDCPukmRTWRJZhBVqxYgdnk/PnzDqqbv2VapzLE
tAwJW00mHj58SFOnYcDtGO8oCpncEiEB4iUFXu5Ygi+Ni4uTPLyU1i2Liopu
3rxJG8hLq1JYWNiIESMUeLlj1TCnTp0qVXhJ0A6ZWVlZDm0Ldi83CjbZaXxU
Rk5u3g0d7O+NriVtd9UCxnt+IpNbUg2MhKOGP/TUKy0tTbMnD2LgX7lyBQGw
tFElIeYgCfFu6eHhMX/+fGkfViNe3bx585kzZ/766y+eCp9e1Rsx5RVJWkt+
MAZ1tCScP7gp3Jra6kqJ5G5JZTBy+AB/8NUbN26U6o4ICd3y9u3b+EDJa6vo
IImhQ4eqElgSMOqJEydK2/QIL+GW6KKnTp3iuVQkZ2HzMi4L8yVpLfnBfUnb
V7UDbk1tdaVEcrekgyRUtEoCdl3qAmSHkNAt7969C83T09OldUt81OjRo9UK
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
bEl7WsLE5FYebolPJsNEHjF37twvvvjijTfeMHy9li3oaAkPDw+owVml5E+M
9Y7ZmKVhC6OgrRcx1zhVJo4UmJLB0NBQeqKomFuCrKws5OOfffYZghz0XrUH
kKI89thjtWvXRhN4e3tjvlZsniLDXLx48ejRo429EKBUkFWFh4fDLckq5agD
0TuWYxYWsXXr1jFjxiAn6tSpk/O4Je60adOmAwcOHDp0KNwSHeagCQq4Jfon
lO/fvz9C+tdff13t0aMoTz31VL169RBbBgUFwS2VUZ5mQxhmVFTUlClTPvjg
AycM6YnKlSv37NkTbslZpRzK6x3LTDw1NXXZsmXotAjLe/fu7TzJODKR1q1b
Y46YMGECLQxX0i1J+ejoaCjfsWPHd99916lGLtLwJk2ajBgxIjIyUknlDxWz
ceNGX1/fHj16vPrqq05S42pK+fLlP/roI1rtu3//fvmeGOsdywhn06ZN9K6Q
dshxnmScinI9PT1pv3RkZykpKYq9E+eURyo0fvx4yO4MC3k46tSp880339CB
caooP336dDR9q1atnK1GHZPyO++807dvX6qxlFV5vWM2zyYlJWG0UgURslHM
9c6zlgfT64ABA5CR0QpQKk1Hh1EmwjFVfsGCBd9+++3bb7+t9khSCKThiOq5
vZdVUR7fS0dwuri4OM9JPQikq1atijE+duxY9DqIIKvyese050CcmJgYblNH
dF30HyTjxjiIxz6Uhvv4+FBdLqdAYmKi3NXptpTv0KGDITcBtqR27dqYl9VV
nr56xowZ3bt3N95O9baoWLFikyZNRo4cGRYWRlOGrMrrHdOek5CQwHVX0i0i
IsLX19cZknHcINLwgIAA6jPctpYrV67MzMyUe8zaUh4pkuFrWipVqtS5c2ct
KE91hkguWrRo4STzVM2aNQcPHkyvwhVQXu9wq5X3798fHR3NhTfcVuqzZ882
3WjakMAqMcN6e3t///33pq5FxMfHy7H+rlTlg4KCEF6+8MILBo5zypcv/8EH
HyCk14jyuAYoP3r06Bo1aqitjexA/Pbt24eGhprOU7Iqr3e4edb0vAkzhg8f
rrafyQsVpXP7DplCq8XT0tIwuGSKcOwo7+XlZeDay3LlylWvXr1t27aaUp4i
zB49ehj76SUVuM6aNWvx4sWKKa93aF1Damoqd06uGRTkGHvvdNzasGHDLLsN
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

            "], {{0, 295}, {442, 0}}, {0, 255},
            ColorFunction->RGBColor],
           BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
           Selectable->False],
          DefaultBaseStyle->"ImageGraphics",
          ImageSize->Magnification[1],
          ImageSizeRaw->{442, 295},
          PlotRange->{{0, 442}, {0, 295}}]], "ExerciseOutput",
         ImageSize->{446, 295},
         ImageMargins->{{0, 0}, {0, 0}},
         ImageRegion->{{0, 1}, {0, 1}},
         Magnification->1],
        Apply[TextCell, 
         Cell[
          BoxData[
           GraphicsBox[
            TagBox[
             RasterBox[CompressedData["
1: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
X5ehC8sOLltt5eRFAbeEj+3cuVOS9+BWoaMoMjMz5buFg4q7JT3mFZN9R5Z2
kIR46CiKiIgIwW1H51Zs27bNzqsfZ3PLR48e5eTkyNmX5QKXbeyjKBRwS/hY
dHS0fG4ZWWyY8fHxsoaXirkltztlVFSUyGhcwF5DAgxz2rRpgsPLyJJ35XYK
Mp3NLS9cuCBfN5YbXLza+smI3G4JB9uyZYt8OTg34uAtslYTKeOWVE65adMm
MSElAQfz8/OTLwfn3NLT09PRaiJLKCu3uj7Lqdzy/v37qh9vKgZcPG5BbRXl
Qla3RM9PS0tDqiVrYMkNN5iMrt2SVtCvWLFC/ORCew25u7vLGlgSMORJkyaJ
f4VHr34wt5pl5U7llmfOnJGpAysGbkFtFeVCVrfERCNH1ZAtEE3BbfRy3oGp
8lw5pUOLGe0A25GjasgWQ4cODQ4OlsQwwZo1a0yPLHcet/zzzz/l6LrKgxtR
W0tZkM8tYZW7d++Wo2rIFvCZtWvXyuT88rklhBJZTmkGZo2goCA5qoZsAVse
M2aMVBkEHfGZkJBwsGQecRK3PH78uBxdV3lwI2prKQvyuSU+c9WqVYoFlhy7
du2S48mPHG6ZnZ2NT8acIric0ipwG19fX8UCS46AgAAxr3vMbgHzbGxsbEZG
BjqSMOUf5N+4cuHClXx9LMq7evWq5J1WRXA7aisqPTK5JVUNSTJwHB1lMlUT
Se6W9Dx/69atcBgJn+tS1ZDCPukmRTWRJZhBVqxYgdnk/PnzDqqbv2VapzLE
tAwJW00mHj58SFOnYcDtGO8oCpncEiEB4iUFXu5Ygi+Ni4uTPLyU1i2Liopu
3rxJG8hLq1JYWNiIESMUeLlj1TCnTp0qVXhJ0A6ZWVlZDm0Ldi83CjbZaXxU
Rk5u3g0d7O+NriVtd9UCxnt+IpNbUg2MhKOGP/TUKy0tTbMnD2LgX7lyBQGw
tFElIeYgCfFu6eHhMX/+fGkfViNe3bx585kzZ/766y+eCp9e1Rsx5RVJWkt+
MAZ1tCScP7gp3Jra6kqJ5G5JZTBy+AB/8NUbN26U6o4ICd3y9u3b+EDJa6vo
IImhQ4eqElgSMOqJEydK2/QIL+GW6KKnTp3iuVQkZ2HzMi4L8yVpLfnBfUnb
V7UDbk1tdaVEcrekgyRUtEoCdl3qAmSHkNAt7969C83T09OldUt81OjRo9UK
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
bEl7WsLE5FYebolPJsNEHjF37twvvvjijTfeMHy9li3oaAkPDw+owVml5E+M
9Y7ZmKVhC6OgrRcx1zhVJo4UmJLB0NBQeqKomFuCrKws5OOfffYZghz0XrUH
kKI89thjtWvXRhN4e3tjvlZsniLDXLx48ejRo429EKBUkFWFh4fDLckq5agD
0TuWYxYWsXXr1jFjxiAn6tSpk/O4Je60adOmAwcOHDp0KNwSHeagCQq4Jfon
lO/fvz9C+tdff13t0aMoTz31VL169RBbBgUFwS2VUZ5mQxhmVFTUlClTPvjg
AycM6YnKlSv37NkTbslZpRzK6x3LTDw1NXXZsmXotAjLe/fu7TzJODKR1q1b
Y46YMGECLQxX0i1J+ejoaCjfsWPHd99916lGLtLwJk2ajBgxIjIyUknlDxWz
ceNGX1/fHj16vPrqq05S42pK+fLlP/roI1rtu3//fvmeGOsdywhn06ZN9K6Q
dshxnmScinI9PT1pv3RkZykpKYq9E+eURyo0fvx4yO4MC3k46tSp880339CB
caooP336dDR9q1atnK1GHZPyO++807dvX6qxlFV5vWM2zyYlJWG0UgURslHM
9c6zlgfT64ABA5CR0QpQKk1Hh1EmwjFVfsGCBd9+++3bb7+t9khSCKThiOq5
vZdVUR7fS0dwuri4OM9JPQikq1atijE+duxY9DqIIKvyese050CcmJgYblNH
dF30HyTjxjiIxz6Uhvv4+FBdLqdAYmKi3NXptpTv0KGDITcBtqR27dqYl9VV
nr56xowZ3bt3N95O9baoWLFikyZNRo4cGRYWRlOGrMrrHdOek5CQwHVX0i0i
IsLX19cZknHcINLwgIAA6jPctpYrV67MzMyUe8zaUh4pkuFrWipVqtS5c2ct
KE91hkguWrRo4STzVM2aNQcPHkyvwhVQXu9wq5X3798fHR3NhTfcVuqzZ882
3WjakMAqMcN6e3t///33pq5FxMfHy7H+rlTlg4KCEF6+8MILBo5zypcv/8EH
HyCk14jyuAYoP3r06Bo1aqitjexA/Pbt24eGhprOU7Iqr3e4edb0vAkzhg8f
rrafyQsVpXP7DplCq8XT0tIwuGSKcOwo7+XlZeDay3LlylWvXr1t27aaUp4i
zB49ehj76SUVuM6aNWvx4sWKKa93aF1Damoqd06uGRTkGHvvdNzasGHDLLsN
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

              "], {{0, 295}, {442, 0}}, {0, 255}, ColorFunction -> RGBColor], 
             
             BoxForm`ImageTag[
             "Byte", ColorSpace -> "RGB", Interleaving -> True], Selectable -> 
             False], DefaultBaseStyle -> "ImageGraphics", ImageSize -> 
            Magnification[1], ImageSizeRaw -> {442, 295}, 
            PlotRange -> {{0, 442}, {0, 295}}]], "ExerciseOutput", 
          Magnification -> 1, CellFrameColor -> GrayLevel[0], Selectable -> 
          False, Copyable -> False, Editable -> False, ShowCellBracket -> 
          False, CellLabel -> "Out[]=", CellFrame -> False]]],
       FrameMargins->{{10, 0}, {10, 12}},
       ImageMargins->0,
       ImageSize->Full], 
      ButtonBox[
       PaneBox[
        StyleBox["\[Times]",
         FontFamily->"MathematicaMono",
         FontSize->18,
         FontWeight->"Bold",
         FontColor->GrayLevel[0.75]],
        Alignment->Right,
        FrameMargins->{{0, 6}, {0, 0}},
        ImageMargins->0],
       Appearance->None,
       ButtonFunction:>(SelectionMove[
          ButtonNotebook[], All, ButtonCell, AutoScroll -> False]; 
        NotebookFind[
          EvaluationNotebook[], "Exercise", Previous, CellStyle, WrapAround -> 
          False, AutoScroll -> False]; FrontEndExecute[
          FrontEndToken[
           ButtonNotebook[], "OpenCloseGroup"]])]}
    },
    GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {Top}},
    GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
   "Grid"],
  FrameMargins->0,
  FrameStyle->GrayLevel[0.7],
  StripOnInput->False]], "ExerciseOutput",
 Editable->False,
 Selectable->False,
 Deletable->False,
 CellFrame->{{1, 1}, {1, 1}},
 ShowCellBracket->False,
 CellFrameMargins->{{0, 0}, {0, 0}},
 CellFrameColor->GrayLevel[1],
 LineBreakWithin->Automatic]
}, Closed]],

Cell[CellGroupData[{

Cell[BoxData[
 StyleBox[
  DynamicBox[ToBoxes[
    $CellContext`SolutionResponseText["29.6"], StandardForm],
   ImageSizeCache->{140., {3., 9.}}], "SolutionResponseText"]], "Subsection",
 Editable->False,
 Selectable->False,
 Deletable->False,
 ShowCellBracket->False,
 CellMargins->{{24, 25}, {3, 0}},
 CellFrameMargins->{{8, 0}, {0, 0}},
 TextAlignment->Right,
 ShowStringCharacters->False,
 FontFamily->"Source Sans Pro",
 FontSize->12,
 FontWeight->"Plain",
 FontSlant->"Plain",
 Background->GrayLevel[1]],

Cell[BoxData[
 ButtonBox[
  PaneBox[
   StyleBox[
    RowBox[{"[", " ", 
     RowBox[{"Click", " ", "to", " ", "enter", " ", "code"}], " ", "]"}],
    Selectable->False,
    StripOnInput->False,
    FontFamily->"Source Sans Pro",
    FontSize->14,
    FontWeight->Plain,
    FontColor->GrayLevel[0.6]],
   ImageSize->Full],
  Appearance->None,
  ButtonFunction:>(SelectionMove[
     InputNotebook[], All, ButtonCell]; NotebookWrite[
     InputNotebook[], 
     Cell[
      BoxData[""], "Input"]]; SelectionMove[
     InputNotebook[], Before, CellContents]; Null),
  Evaluator->Automatic,
  Method->"Preemptive"]], "Input",
 CellFrameLabels->{{None, None}, {None, None}},
 ShowSyntaxStyles->False,
 ShowStringCharacters->False,
 CellTags->"FirstInputCell"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 PaneBox["\[ThickSpace]",
  ImageSize->Full]], "CodeSectionDividerCloud",
 Editable->False,
 Selectable->False,
 Deletable->False,
 CellMargins->{{0, 0}, {0, 35}},
 CellBracketOptions->{"OverlapContent"->True}],

Cell[TextData[{
 "Use ",
 StyleBox["Array",
  FontFamily->"Source Sans Pro"],
 " para formar una rejilla de 10 por 10, donde los elementos en la diagonal \
principal y abajo de ella sean 1, y el resto sean 0."
}], "Exercise",
 Editable->False,
 Selectable->False,
 Deletable->False,
 CellDingbat->Cell[
  "+29.1", "ExerciseNumber", FontColor -> 
   RGBColor[0.9019607843137255, 0.4117647058823529, 0.027450980392156862`]],
 ShowCellBracket->False,
 CounterAssignments->{{"SectionNumber", 29}, {"ExerciseNumber", 1}, {
   "WebOnly", 1}}],

Cell[CellGroupData[{

Cell[BoxData[
 TagBox[
  ButtonBox[
   StyleBox[
    RowBox[{"EXPECTED", " ", "OUTPUT", " ", "\[RightGuillemet]"}],
    FontFamily->"Source Sans Pro",
    FontSize->12,
    FontColor->GrayLevel[0.6]],
   Appearance->None,
   ButtonFunction:>(SelectionMove[
      ButtonNotebook[], All, ButtonCell, AutoScroll -> False]; FrontEndExecute[
      FrontEndToken[
       ButtonNotebook[], "OpenCloseGroup"]]),
   Evaluator->Automatic,
   Method->"Preemptive"],
  MouseAppearanceTag["LinkHand"]]], "ExerciseExpectedResult",
 Editable->False,
 Deletable->False,
 ShowCellBracket->False],

Cell[BoxData[
 FrameBox[
  TagBox[GridBox[{
     {
      PaneBox[
       InterpretationBox[Cell[BoxData[
         GraphicsBox[
          TagBox[RasterBox[CompressedData["
1:eJztmq9v20AcR62NDO5f2D8QPGo4VKnTWEmrJdVIV7WTptKxwbKwjAQFDQ1M
IUUlJiYhASElBQUhAQHdue2mDUzxXZy7j79+L0pkR35J5IudH/deHX3cHzzL
suz8hbvZP/ycn50dXrx96VbenZx/OD7pv39z8ql/3D97ffTc3fnTXb+5a7V8
/8RyXpaL5fq+NotiOhlPpsUCRVyZTy6yB75e39V8kGJ4UAm96uZgVKAoK4vp
+MvpnrtnWNQb3+V1nmV7w0q/vqwWyxWKuDJzA3xZb3xX5dC9Gaa3Dys3P7JK
XKJIK6sirz2+88nAncsfH+Z+PR/UeGqUxIrP+Bbu2O8N/5ijPMuHJYq04nv8
9i5/b7o4dW+aTSJKYmVdVp+/5YYzwCOrmTvP964e1dtp9cVsk4iSTlm5X77l
1citXoyvZmV5s/F72sO5PRuMF7eLUbV0uvnnGUoqZVXsZf+w8XPcsZxN8qfN
8+/zWkc9iqbyX9bLO3fx+McLRVUBAAAAAAAAMIJ3n0PS0xYloM8h6WmR4t3n
kPS0T/HocwKU9IFKxxWf+f0AJX2g0nFlx+ObPlDpuBLh+G1d02JJ8elzApS2
NS2WFP8+h6SnRUpAn0PSY0hpEtlApeMKAAAAAAAAgBFi9DkkPYb7HJKeVEqM
Poekx3SfE6Ckb1osKTue3w9Q0jctlhS98U3ftFhS9MY3fdNiSdlxnxOgtC2D
kVWi9DkkPamUOH0OSY+qkhjZpsWSAgAAAAAAAGAE0T6HpMdwn0PS04gi2ueQ
9JjucwKU9BmMrKI3vx+gpM9gZBW9wQpQ0mcwsoreYAUo6TMYWUWvzwlQ2lbO
xFFU+xySnkYU2T6HpKcLfU4AshmMrAIAAAAAAABgBNHYhqSHPmdLpV2xTYAi
GtuQ9NDnbK2kL2fiKHqT9XGU9OVMHEVvz8dR0pczcRS9PR9HSV/OxFH0Yps4
SttimwBFNbYh6WlEkY1tSHroc5pCtpyhzwEAAAAAAADwQLSckVXocwwr9DmW
lfSxTYAiV87IKuljmwBFb+ZdVkkf2wQoertRVkkf2wQoertRVkkf2wQoeuWM
rEKfY1yhz7GtCMc29DmNIRvb0OcAAAAAAABAdxHNYCwp9DmGFfocywp9jmmF
Pse2Qp9jW6HPsa3Q59hW6HOMK/Q5thX6nC5AnwMAAAAAAACwW0Sblo4r9DmG
Ffocywp9jmmFPse2Qp9jW6HPsa3Q59hW6HOMK/Q5thX6nC5AnwMAAAAAAADg
gWiggrJ90iMbqKD4KvQ5lhX6HNMKfY5thT7HtkKfY1uhz7Gt0OcYV+hzbCv0
OV2APgcAAAAAAAC6i2htgrK9IluboDSiiNYmKE0qcrUJSpOK3mw1SpNKu14t
iq/SrleL4qvo1SYoDSmqtQlKI4psbYISQQEAAAAAgL/4BStkDZ0=
            "], {{0, 
            187}, {160, 0}}, {0, 255},
            ColorFunction->RGBColor],
           BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
           Selectable->False],
          DefaultBaseStyle->"ImageGraphics",
          ImageSize->Magnification[1],
          ImageSizeRaw->{160, 187},
          PlotRange->{{0, 160}, {0, 187}}]], "ExerciseOutput",
         ImageSize->{164, 187},
         ImageMargins->{{0, 0}, {0, 0}},
         ImageRegion->{{0, 1}, {0, 1}},
         Magnification->1],
        Apply[TextCell, 
         Cell[
          BoxData[
           GraphicsBox[
            TagBox[
             RasterBox[CompressedData["
1:eJztmq9v20AcR62NDO5f2D8QPGo4VKnTWEmrJdVIV7WTptKxwbKwjAQFDQ1M
IUUlJiYhASElBQUhAQHdue2mDUzxXZy7j79+L0pkR35J5IudH/deHX3cHzzL
suz8hbvZP/ycn50dXrx96VbenZx/OD7pv39z8ql/3D97ffTc3fnTXb+5a7V8
/8RyXpaL5fq+NotiOhlPpsUCRVyZTy6yB75e39V8kGJ4UAm96uZgVKAoK4vp
+MvpnrtnWNQb3+V1nmV7w0q/vqwWyxWKuDJzA3xZb3xX5dC9Gaa3Dys3P7JK
XKJIK6sirz2+88nAncsfH+Z+PR/UeGqUxIrP+Bbu2O8N/5ijPMuHJYq04nv8
9i5/b7o4dW+aTSJKYmVdVp+/5YYzwCOrmTvP964e1dtp9cVsk4iSTlm5X77l
1citXoyvZmV5s/F72sO5PRuMF7eLUbV0uvnnGUoqZVXsZf+w8XPcsZxN8qfN
8+/zWkc9iqbyX9bLO3fx+McLRVUBAAAAAAAAMIJ3n0PS0xYloM8h6WmR4t3n
kPS0T/HocwKU9IFKxxWf+f0AJX2g0nFlx+ObPlDpuBLh+G1d02JJ8elzApS2
NS2WFP8+h6SnRUpAn0PSY0hpEtlApeMKAAAAAAAAgBFi9DkkPYb7HJKeVEqM
Poekx3SfE6Ckb1osKTue3w9Q0jctlhS98U3ftFhS9MY3fdNiSdlxnxOgtC2D
kVWi9DkkPamUOH0OSY+qkhjZpsWSAgAAAAAAAGAE0T6HpMdwn0PS04gi2ueQ
9JjucwKU9BmMrKI3vx+gpM9gZBW9wQpQ0mcwsoreYAUo6TMYWUWvzwlQ2lbO
xFFU+xySnkYU2T6HpKcLfU4AshmMrAIAAAAAAABgBNHYhqSHPmdLpV2xTYAi
GtuQ9NDnbK2kL2fiKHqT9XGU9OVMHEVvz8dR0pczcRS9PR9HSV/OxFH0Yps4
SttimwBFNbYh6WlEkY1tSHroc5pCtpyhzwEAAAAAAADwQLSckVXocwwr9DmW
lfSxTYAiV87IKuljmwBFb+ZdVkkf2wQoertRVkkf2wQoertRVkkf2wQoeuWM
rEKfY1yhz7GtCMc29DmNIRvb0OcAAAAAAABAdxHNYCwp9DmGFfocywp9jmmF
Pse2Qp9jW6HPsa3Q59hW6HOMK/Q5thX6nC5AnwMAAAAAAACwW0Sblo4r9DmG
Ffocywp9jmmFPse2Qp9jW6HPsa3Q59hW6HOMK/Q5thX6nC5AnwMAAAAAAADg
gWiggrJ90iMbqKD4KvQ5lhX6HNMKfY5thT7HtkKfY1uhz7Gt0OcYV+hzbCv0
OV2APgcAAAAAAAC6i2htgrK9IluboDSiiNYmKE0qcrUJSpOK3mw1SpNKu14t
iq/SrleL4qvo1SYoDSmqtQlKI4psbYISQQEAAAAAgL/4BStkDZ0=
              "], {{0, 
              187}, {160, 0}}, {0, 255}, ColorFunction -> RGBColor], 
             BoxForm`ImageTag[
             "Byte", ColorSpace -> "RGB", Interleaving -> True], Selectable -> 
             False], DefaultBaseStyle -> "ImageGraphics", ImageSize -> 
            Magnification[1], ImageSizeRaw -> {160, 187}, 
            PlotRange -> {{0, 160}, {0, 187}}]], "ExerciseOutput", 
          Magnification -> 1, CellFrameColor -> GrayLevel[0], Selectable -> 
          False, Copyable -> False, Editable -> False, ShowCellBracket -> 
          False, CellLabel -> "Out[]=", CellFrame -> False]]],
       FrameMargins->{{10, 0}, {10, 12}},
       ImageMargins->0,
       ImageSize->Full], 
      ButtonBox[
       PaneBox[
        StyleBox["\[Times]",
         FontFamily->"MathematicaMono",
         FontSize->18,
         FontWeight->"Bold",
         FontColor->GrayLevel[0.75]],
        Alignment->Right,
        FrameMargins->{{0, 6}, {0, 0}},
        ImageMargins->0],
       Appearance->None,
       ButtonFunction:>(SelectionMove[
          ButtonNotebook[], All, ButtonCell, AutoScroll -> False]; 
        NotebookFind[
          EvaluationNotebook[], "Exercise", Previous, CellStyle, WrapAround -> 
          False, AutoScroll -> False]; FrontEndExecute[
          FrontEndToken[
           ButtonNotebook[], "OpenCloseGroup"]])]}
    },
    GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {Top}},
    GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
   "Grid"],
  FrameMargins->0,
  FrameStyle->GrayLevel[0.7],
  StripOnInput->False]], "ExerciseOutput",
 Editable->False,
 Selectable->False,
 Deletable->False,
 CellFrame->{{1, 1}, {1, 1}},
 ShowCellBracket->False,
 CellFrameMargins->{{0, 0}, {0, 0}},
 CellFrameColor->GrayLevel[1],
 LineBreakWithin->Automatic]
}, Closed]],

Cell[CellGroupData[{

Cell[BoxData[
 StyleBox[
  DynamicBox[ToBoxes[
    $CellContext`SolutionResponseText["x29.1"], StandardForm],
   ImageSizeCache->{145., {3., 9.}}], "SolutionResponseText"]], "Subsection",
 Editable->False,
 Selectable->False,
 Deletable->False,
 ShowCellBracket->False,
 CellMargins->{{24, 25}, {3, 0}},
 CellFrameMargins->{{8, 0}, {0, 0}},
 TextAlignment->Right,
 ShowStringCharacters->False,
 FontFamily->"Source Sans Pro",
 FontSize->12,
 FontWeight->"Plain",
 FontSlant->"Plain",
 Background->GrayLevel[1]],

Cell[BoxData[
 ButtonBox[
  PaneBox[
   StyleBox[
    RowBox[{"[", " ", 
     RowBox[{"Click", " ", "to", " ", "enter", " ", "code"}], " ", "]"}],
    Selectable->False,
    StripOnInput->False,
    FontFamily->"Source Sans Pro",
    FontSize->14,
    FontWeight->Plain,
    FontColor->GrayLevel[0.6]],
   ImageSize->Full],
  Appearance->None,
  ButtonFunction:>(SelectionMove[
     InputNotebook[], All, ButtonCell]; NotebookWrite[
     InputNotebook[], 
     Cell[
      BoxData[""], "Input"]]; SelectionMove[
     InputNotebook[], Before, CellContents]; Null),
  Evaluator->Automatic,
  Method->"Preemptive"]], "Input",
 CellFrameLabels->{{None, None}, {None, None}},
 ShowSyntaxStyles->False,
 ShowStringCharacters->False,
 CellTags->"FirstInputCell"]
}, Open  ]]
}, Open  ]],

Cell[BoxData[
 PaneBox["\[ThickSpace]",
  ImageSize->Full]], "CodeSectionDividerCloud",
 Editable->False,
 Selectable->False,
 Deletable->False,
 CellMargins->{{0, 0}, {0, 35}},
 CellBracketOptions->{"OverlapContent"->True}]
},
WindowSize->{808, 911},
WindowMargins->{{554, Automatic}, {Automatic, 62}},
WindowTitle->"M\[AAcute]s sobre las funciones puras: Una introducci\[OAcute]n \
elemental a Wolfram Language",
DockedCells->{
  Cell[
   BoxData[
    DynamicModuleBox[{}, 
     TagBox[
      GridBox[{{
         TagBox[
          ButtonBox[
           PaneBox[
            GraphicsBox[
             TagBox[
              RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFAEiEGSIPafvQ3/iQM/qxmAiEjFmOohXKwIouDvuQXEGw4xENM6POaT5Hiq
qP97c+uvfvWfDVy/59j/ahX5Pdfx3/sHuNSDFE/UBpI/G3l+TTP9vS7p7+nZ
QBG4FjT1QJOBin+vCAcpaxcHWgEU/HOk7/ciHzzqgSYD2b/XJQO5UPFueezq
J+sDFf/qVQY64PeSgN8b0n5NMfz34DAu9T+beIFm/upV+jXF4PcC9z87K4C6
fk3SwaUeGBq/18QDDQQ5e2f5rw6pP0f7gd4BCmJVD3QG0HygBxHO61UG6sIV
nhAtwNAAOgCEgOEPMxmXevyAEvV4EidaQiU+P0IAAEIjNUM=
               "], {{0, 
               20}, {16, 0}}, {0, 255}, ColorFunction -> RGBColor], 
              BoxForm`ImageTag[
              "Byte", ColorSpace -> ColorProfileData[CompressedData["
1:eJydlndcFNcWx+/MbC+0XZYiZem9twVEehOQXkVh2V1gKQsuuxTFhogKRBQR
EWwgQQEDRkORWBHFQkCw14AEASUGo9hQyax8PokvL++9vPz+uJ/vnHvOnXvP
OXc+o5GQEZIIAwCyCOgQws5xFQrZeaEy6EO4IIufJOBxfQUiXhJPyEqAUKMP
BR0AxcefL8iAUa90gUgY4u3GjIqOYeL7AQyIAAcsAGBzsjIDQr3CJN6+nu7M
LNQJ/Ite3wKSBcF1E58gJhP8f5LlZApFAEBBKFtxeVkclAtRTssRZUrs0yjT
E1IlDGMkLEQ3iLKihJPm2fizzzy7SJibLuCiLNlzJjedK+EelDdni3koI/4o
F2XzeTko30BZO02czkf5rSQ2ncfOAgAjyY62iMdJRtlckihhWIg7ygsBIFCS
vuCEL1jEyxVJDuWekZkn5Ccli5j6HAOmhb09i+nDy0njiUQmQWxOKlvIZbpn
pGeyBXkAzJ/5s+QkuWWiSba1sLe1NbE0tfgiUf918m9KUtt5ehn8uWYQo+8P
21/5ZdQBwJpBc7PtD1vCbgA6NgKgeO8Pm/YBAKTRurUPfHEehqRfkkWiTAcz
s5ycHFM+j2MqSejv+p8Of0NfvM9Ustzv6WF68BLZ4jQRU5I3TkZahljIzMpk
c3hMkz838T8O/Ot9GIfwEnlCngCNiEC7jC9IQsst4PJF/AwBky/4T0X8h2F/
0nxfo6LVfwL0OFMgM0AHyM99AEMjAyR2HzoD/V43f2IEkNy8SPXx+b7/LOjf
V4XLJAP6Gfkc5x4SxuSIhdnzc5JrCbCABKQBHSgBNaAF9IEJsAR2wBG4AE+w
GASCMBANlgMOSAbpQAhyQD5YD4pACdgGdoJqsB/Ug0bQAo6BDnASnAMXwVVw
DdwE98EwGAPPwDR4DWYhCMJDVIgGKUHqkA5kBFlCLGgR5An5QyFQNBQPJUEC
SAzlQxugEqgcqoZqoUboW+gEdA66DA1Cd6ERaBL6FXoPIzAFpsOqsC5sBrNg
V9gPDoOXwUnwCnglXAhvhavgOvgI3A6fg6/CN+Fh+Bk8gwCEjDAQDcQEYSHu
SCASgyQiQmQNUoxUInVIC9KF9CLXkWFkCnmHwWFoGCbGBOOI8cGEYziYFZg1
mFJMNeYwph3Tg7mOGcFMYz5hqVgVrBHWAeuLjcImYXOwRdhKbAO2DXsBexM7
hn2Nw+EYOD2cHc4HF41Lwa3CleL24lpxZ3GDuFHcDB6PV8Ib4Z3wgXg2XoQv
wu/GH8GfwQ/hx/BvCWSCOsGS4EWIIQgIBYRKQhPhNGGIME6YJcoQdYgOxEAi
l5hHLCPWE7uIA8Qx4ixJlqRHciKFkVJI60lVpBbSBdID0ksymaxJticHk/nk
deQq8lHyJfII+R1FjmJIcafEUsSUrZRDlLOUu5SXVCpVl+pCjaGKqFupjdTz
1EfUt1I0KVMpXymu1FqpGql2qSGp59JEaR1pV+nl0iulK6WPSw9IT8kQZXRl
3GXYMmtkamROyNyWmZGlyVrIBsqmy5bKNslelp2Qw8vpynnKceUK5Q7KnZcb
pSE0LZo7jUPbQKunXaCN0XF0PbovPYVeQv+G3k+flpeTt5aPkM+Vr5E/JT/M
QBi6DF9GGqOMcYxxi/FeQVXBVYGnsEWhRWFI4Y3iAkUXRZ5isWKr4k3F90pM
JU+lVKXtSh1KD5UxyobKwco5yvuULyhPLaAvcFzAWVC84NiCeyqwiqFKiMoq
lYMqfSozqmqq3qqZqrtVz6tOqTHUXNRS1CrUTqtNqtPUF6nz1SvUz6g/Zcoz
XZlpzCpmD3NaQ0XDR0OsUavRrzGrqacZrlmg2ar5UIukxdJK1KrQ6taa1lbX
DtDO127WvqdD1GHpJOvs0unVeaOrpxupu0m3Q3dCT1HPV2+lXrPeA32qvrP+
Cv06/RsGOAOWQarBXoNrhrChjWGyYY3hgBFsZGvEN9prNGiMNbY3FhjXGd82
oZi4mmSbNJuMmDJM/U0LTDtMn5tpm8WYbTfrNftkbmOeZl5vft9CzmKxRYFF
l8WvloaWHMsayxtWVCsvq7VWnVYvrI2sedb7rO/Y0GwCbDbZdNt8tLWzFdq2
2E7aadvF2+2xu82is4JYpaxL9lh7N/u19ift3znYOogcjjn84mjimOrY5Dix
UG8hb2H9wlEnTSe2U63T8CLmovhFBxYNO2s4s53rnB+7aLlwXRpcxl0NXFNc
j7g+dzN3E7q1ub1xd3Bf7X7WA/Hw9ij26PeU8wz3rPZ85KXpleTV7DXtbeO9
yvusD9bHz2e7z21fVV+Ob6Pv9GK7xasX9/hR/EL9qv0e+xv6C/27AuCAxQE7
Ah4s0VkiWNIRCAJ9A3cEPgzSC1oR9H0wLjgouCb4SYhFSH5IbygtNC60KfR1
mFtYWdj9cP1wcXh3hHREbERjxJtIj8jyyOEos6jVUVejlaP50Z0x+JiImIaY
maWeS3cuHYu1iS2KvbVMb1nussvLlZenLT8VJx3Hjjsej42PjG+K/8AOZNex
ZxJ8E/YkTHPcObs4z7gu3AruJM+JV84bT3RKLE+cSHJK2pE0meycXJk8xXfn
V/NfpPik7E95kxqYeih1Li0yrTWdkB6ffkIgJ0gV9GSoZeRmDGYaZRZlDq9w
WLFzxbTQT9iQBWUty+oU0dGfqT6xvnijeCR7UXZN9tuciJzjubK5gty+PMO8
LXnjK71Wfr0Ks4qzqjtfI399/shq19W1a6A1CWu612qtLVw7ts573eH1pPWp
638oMC8oL3i1IXJDV6Fq4brC0Y3eG5uLpIqERbc3OW7avxmzmb+5f4vVlt1b
PhVzi6+UmJdUlnwo5ZRe+criq6qv5rYmbu0vsy3btw23TbDt1nbn7YfLZctX
lo/uCNjRXsGsKK54tTNu5+VK68r9u0i7xLuGq/yrOndr7962+0N1cvXNGrea
1j0qe7bsebOXu3don8u+lv2q+0v2vz/AP3Cn1ru2vU63rvIg7mD2wSf1EfW9
X7O+bmxQbihp+HhIcGj4cMjhnka7xsYmlaayZrhZ3Dx5JPbItW88vulsMWmp
bWW0lhwFR8VHn34b/+2tY37Huo+zjrd8p/PdnjZaW3E71J7XPt2R3DHcGd05
eGLxie4ux662702/P3RS42TNKflTZadJpwtPz51ZeWbmbObZqXNJ50a747rv
n486f6MnuKf/gt+FSxe9Lp7vde09c8np0snLDpdPXGFd6bhqe7W9z6av7Qeb
H9r6bfvbB+wGOq/ZX+saXDh4esh56Nx1j+sXb/jeuHpzyc3BW+G37tyOvT18
h3tn4m7a3Rf3su/N3l/3APug+KHMw8pHKo/qfjT4sXXYdvjUiMdI3+PQx/dH
OaPPfsr66cNY4RPqk8px9fHGCcuJk5Nek9eeLn069izz2exU0c+yP+95rv/8
u19cfumbjpoeeyF8Mfdr6Uull4deWb/qngmaefQ6/fXsm+K3Sm8Pv2O9630f
+X58NucD/kPVR4OPXZ/8Pj2YS5+b+w0AsgC3
                 "], "RGB", "XYZ"], 
               Interleaving -> True], Selectable -> False], DefaultBaseStyle -> 
             "ImageGraphics", ImageSizeRaw -> {16, 20}, 
             PlotRange -> {{0, 16}, {0, 20}}], Alignment -> {Center, Center}, 
            ImageMargins -> {{15, 10}, {4, 0}}], Appearance -> None, 
           ButtonFunction :> NotebookLocate[{
              URL[
               StringJoin[
               ElementaryIntroToWLWeb`Private`baseUrl$71626, "index", 
                ElementaryIntroToWLWeb`Private`langext$71626, ".html"]], 
              None}], Evaluator -> Automatic, Method -> "Preemptive"], 
          MouseAppearanceTag["LinkHand"]], 
         ItemBox[
          TagBox[
           GridBox[{{
              TagBox[
               ButtonBox[
                StyleBox[
                 StringJoin["STEPHEN WOLFRAM\[NonBreakingSpace]", 
                  ElementaryIntroToWLWeb`Private`translation[
                  "Elementary Introduction to the Wolfram Language", 
                   ElementaryIntroToWLWeb`Private`language$71626]], 
                 "DockedCellAuthorName"], Appearance -> None, ButtonFunction :> 
                NotebookLocate[{
                   URL[
                    StringJoin[
                    ElementaryIntroToWLWeb`Private`baseUrl$71626, "index", 
                    ElementaryIntroToWLWeb`Private`langext$71626, ".html"]], 
                   None}], Evaluator -> Automatic, Method -> "Preemptive"], 
               MouseAppearanceTag["LinkHand"]]}, {
              TagBox[
               ButtonBox[
                TemplateBox[{
                  StyleBox["Exercises ", "DockedCellSectionTitle"], 
                  StyleBox["|", "DockedCellSectionTitleDivider"], 
                  StyleBox[
                  " 29  M\[AAcute]s sobre las funciones puras", 
                   "DockedCellSectionTitle"]}, "RowDefault"], Appearance -> 
                None, ButtonFunction :> NotebookLocate[{
                   URL[
                   "http://www.wolfram.com/language/elementary-introduction/\
29-more-about-pure-functions.html"], None}], Evaluator -> Automatic, Method -> 
                "Preemptive"], 
               MouseAppearanceTag["LinkHand"]]}}, DefaultBaseStyle -> 
            "Column", GridBoxAlignment -> {"Columns" -> {{Left}}}, 
            GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{0}}}], 
           "Column"], Alignment -> Left, ItemSize -> 30]}}, AutoDelete -> 
       False, GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{0}}}, 
       GridBoxAlignment -> {"Columns" -> {Left}, "Rows" -> {Center}}, 
       GridBoxItemSize -> {
        "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Grid"], 
     DynamicModuleValues :> {}, 
     Initialization :> (
      Clear[$CellContext`SolutionResponseText]; \
$CellContext`SolutionResponseText[
         Pattern[ElementaryIntroToWLWeb`Private`a, 
          BlankNullSequence[]]] := " "; 
      Map[($CellContext`SolutionResponseText[#] := " ")& , {
        "+29.1", "29.1", "29.2", "29.3", "29.4", "29.5", "29.6"}]; 
      Clear[$CellContext`SolutionResponseDetails]; \
$CellContext`SolutionResponseDetails[
         Pattern[ElementaryIntroToWLWeb`Private`str, 
          Blank[String]], True] := 
       Style[ElementaryIntroToWLWeb`Private`str, 
         "SolutionTrue"]; $CellContext`SolutionResponseDetails[
         Pattern[ElementaryIntroToWLWeb`Private`str, 
          Blank[String]], False] := 
       Style[ElementaryIntroToWLWeb`Private`str, 
         "SolutionFalse"]; $CellContext`SolutionResponseDetails[
         Pattern[ElementaryIntroToWLWeb`Private`str, 
          Blank[String]]] := 
       ElementaryIntroToWLWeb`Private`str; \
$CellContext`SolutionResponseDetails[
         Missing[
          BlankSequence[]]] := " "; $CellContext`SolutionResponseDetails[
         BlankNullSequence[]] := " "; 
      Clear[$CellContext`GetUserSolutions]; $CellContext`GetUserSolutions[] := 
       Flatten[
         Cases[
          Options[
           EvaluationNotebook[], TaggingRules], ("EIWLExercises" -> 
           Pattern[ElementaryIntroToWLWeb`Private`ex, 
             Blank[]]) :> ElementaryIntroToWLWeb`Private`ex, Infinity]]; 
      Clear[$CellContext`GetUserSolutionsTotal]; \
$CellContext`GetUserSolutionsTotal[] := Length[
         Union[
          Flatten[
           Cases[
            Cases[
             Options[
              EvaluationNotebook[], TaggingRules], ("EIWLExercises" -> 
              Pattern[ElementaryIntroToWLWeb`Private`ex, 
                Blank[]]) :> ElementaryIntroToWLWeb`Private`ex, Infinity], (
             "ExercisesTotal" -> Pattern[ElementaryIntroToWLWeb`Private`t, 
               Blank[]]) :> ElementaryIntroToWLWeb`Private`t, Infinity]]]]; 
      Clear[$CellContext`GetUserSolutionsTried]; \
$CellContext`GetUserSolutionsTried[] := Length[
         Union[
          Flatten[
           Cases[
            Cases[
             Options[
              EvaluationNotebook[], TaggingRules], ("EIWLExercises" -> 
              Pattern[ElementaryIntroToWLWeb`Private`ex, 
                Blank[]]) :> ElementaryIntroToWLWeb`Private`ex, Infinity], (
             "ExercisesTried" -> Pattern[ElementaryIntroToWLWeb`Private`t, 
               Blank[]]) :> ElementaryIntroToWLWeb`Private`t, Infinity]]]]; 
      Clear[$CellContext`GetUserSolutionsCorrect]; \
$CellContext`GetUserSolutionsCorrect[] := Length[
         Union[
          Flatten[
           Cases[
            Cases[
             Options[
              EvaluationNotebook[], TaggingRules], ("EIWLExercises" -> 
              Pattern[ElementaryIntroToWLWeb`Private`ex, 
                Blank[]]) :> ElementaryIntroToWLWeb`Private`ex, Infinity], (
             "ExercisesCorrect" -> Pattern[ElementaryIntroToWLWeb`Private`t, 
               Blank[]]) :> ElementaryIntroToWLWeb`Private`t, 
            Infinity]]]]; $CellContext`EIWLExerciseSolutionsTotal = \
$CellContext`GetUserSolutionsTotal[]; $CellContext`EIWLExerciseSolutionsTried = \
$CellContext`GetUserSolutionsTried[]; \
$CellContext`EIWLExerciseSolutionsCorrect = \
$CellContext`GetUserSolutionsCorrect[]; 
      Clear[$CellContext`SetUserSolutionsTried]; \
$CellContext`SetUserSolutionsTried[
         Pattern[ElementaryIntroToWLWeb`Private`value, 
          Blank[]]] := 
       Module[{ElementaryIntroToWLWeb`Private`data, 
          ElementaryIntroToWLWeb`Private`tr}, 
         ElementaryIntroToWLWeb`Private`data = Flatten[
            Cases[
             Options[
              EvaluationNotebook[], TaggingRules], ("EIWLExercises" -> 
              Pattern[ElementaryIntroToWLWeb`Private`ex, 
                Blank[]]) :> ElementaryIntroToWLWeb`Private`ex, Infinity]]; 
         ElementaryIntroToWLWeb`Private`tr = ReplaceAll[TaggingRules, 
            Options[
             EvaluationNotebook[], TaggingRules]]; 
         ElementaryIntroToWLWeb`Private`tr = 
          DeleteCases[
           ElementaryIntroToWLWeb`Private`tr, "EIWLExercises" -> Blank[], 
            Infinity]; 
         AppendTo[
          ElementaryIntroToWLWeb`Private`tr, 
           "EIWLExercises" -> {
            "ExercisesTotal" -> 
             ReplaceAll[
              "ExercisesTotal", ElementaryIntroToWLWeb`Private`data], 
             "ExercisesTried" -> Append[
               Flatten[
                Cases[
                ElementaryIntroToWLWeb`Private`data, ("ExercisesTried" -> 
                  Pattern[ElementaryIntroToWLWeb`Private`t, 
                    Blank[]]) :> ElementaryIntroToWLWeb`Private`t, Infinity]],
                ElementaryIntroToWLWeb`Private`value], "ExercisesCorrect" -> 
             ReplaceAll[
              "ExercisesCorrect", ElementaryIntroToWLWeb`Private`data]}]; 
         SetOptions[
           EvaluationNotebook[], TaggingRules -> 
           ElementaryIntroToWLWeb`Private`tr]; \
$CellContext`EIWLExerciseSolutionsTried = \
$CellContext`GetUserSolutionsTried[]; Null]; 
      Clear[$CellContext`SetUserSolutionsCorrect]; \
$CellContext`SetUserSolutionsCorrect[
         Pattern[ElementaryIntroToWLWeb`Private`value, 
          Blank[]]] := 
       Module[{ElementaryIntroToWLWeb`Private`data, 
          ElementaryIntroToWLWeb`Private`tr}, 
         ElementaryIntroToWLWeb`Private`data = Flatten[
            Cases[
             Options[
              EvaluationNotebook[], TaggingRules], ("EIWLExercises" -> 
              Pattern[ElementaryIntroToWLWeb`Private`ex, 
                Blank[]]) :> ElementaryIntroToWLWeb`Private`ex, Infinity]]; 
         ElementaryIntroToWLWeb`Private`tr = ReplaceAll[TaggingRules, 
            Options[
             EvaluationNotebook[], TaggingRules]]; 
         ElementaryIntroToWLWeb`Private`tr = 
          DeleteCases[
           ElementaryIntroToWLWeb`Private`tr, "EIWLExercises" -> Blank[], 
            Infinity]; 
         AppendTo[
          ElementaryIntroToWLWeb`Private`tr, 
           "EIWLExercises" -> {
            "ExercisesTotal" -> 
             ReplaceAll[
              "ExercisesTotal", ElementaryIntroToWLWeb`Private`data], 
             "ExercisesTried" -> 
             ReplaceAll[
              "ExercisesTried", ElementaryIntroToWLWeb`Private`data], 
             "ExercisesCorrect" -> Append[
               Flatten[
                Cases[
                ElementaryIntroToWLWeb`Private`data, ("ExercisesCorrect" -> 
                  Pattern[ElementaryIntroToWLWeb`Private`t, 
                    Blank[]]) :> ElementaryIntroToWLWeb`Private`t, Infinity]],
                ElementaryIntroToWLWeb`Private`value]}]; SetOptions[
           EvaluationNotebook[], TaggingRules -> 
           ElementaryIntroToWLWeb`Private`tr]; \
$CellContext`EIWLExerciseSolutionsCorrect = \
$CellContext`GetUserSolutionsCorrect[]; Null]; 
      Clear[ElementaryIntroToWLWeb`Private`GetCurrentTallyCell]; \
$CellContext`GetCurrentTallyCell[] := Module[{}, 
         With[{
          ElementaryIntroToWLWeb`Private`solutionsTried = \
$CellContext`GetUserSolutionsTried[], 
           ElementaryIntroToWLWeb`Private`solutionsTotal = \
$CellContext`GetUserSolutionsTotal[], 
           ElementaryIntroToWLWeb`Private`solutionsCorrect = \
$CellContext`GetUserSolutionsCorrect[]}, 
          Cell[
           BoxData[
            PaneBox[
             TemplateBox[{
               StyleBox[
               "COMPLETED\[ThickSpace]\[ThickSpace]", 
                "DockedCellCompletedExerciseText"], 
               StyleBox[
               ElementaryIntroToWLWeb`Private`solutionsTried, 
                "DockedCellCompletedExerciseText"], 
               StyleBox["/", "DockedCellSolutionDivider"], 
               StyleBox[
               ElementaryIntroToWLWeb`Private`solutionsTotal, 
                "DockedCellCompletedExerciseText"], 
               StyleBox[
               "\[ThinSpace]|\[ThinSpace]", "DockedCellSolutionDivider"], 
               StyleBox[
               ElementaryIntroToWLWeb`Private`solutionsCorrect, 
                "DockedCellCorrectExerciseText"], 
               StyleBox[
               "\[ThickSpace]\[ThickSpace]CORRECT", 
                "DockedCellCorrectExerciseText"]}, "RowDefault"], Alignment -> 
             Right, ImageSize -> Full]], "Output", TextAlignment -> Right, 
           CellFrame -> 1, CellMargins -> {{0, 0}, {10, 0}}, 
           CellFrameMargins -> {{14, 24}, {4, 7}}, CellFrameColor -> 
           RGBColor[1, 0.956862, 0.878431], MenuSortingValue -> 10000, 
           Background -> RGBColor[1, 0.956862, 0.878431], CellTags -> 
           "SolutionTallyCell"]]])]], "Output", CellMargins -> 0, 
   CellFrameMargins -> {{0, 24}, {3, 6}}, Background -> 
   RGBColor[0.97647, 0.482352, 0], CellFrame -> 1, CellFrameColor -> 
   RGBColor[0.97647, 0.482352, 0]], 
  Cell["SECOND EDITION", "Text", FontFamily -> "Source Sans Pro", 
   CellFrame -> {{0, 0}, {3, 0}}, ShowCellBracket -> False, 
   CellMargins -> {{0, 0}, {-1, -1}}, CellFrameMargins -> {{44, 0}, {2, 4}}, 
   CellFrameColor -> RGBColor[0.952941, 0.509804, 0], FontSize -> 10, 
   FontTracking -> "Extended", FontColor -> RGBColor[1, 0.929412, 0.721569], 
   Background -> RGBColor[0.862745, 0.309804, 0], CellTags -> 
   "DockedCellLogoCell"]},
TaggingRules->{
 "EIWLExercises" -> {
   "ExercisesTotal" -> {
     "+29.1", "29.1", "29.2", "29.3", "29.4", "29.5", "29.6"}, 
    "ExercisesTried" -> {}, "ExercisesCorrect" -> {}}},
ShowAutoSpellCheck->False,
AutoStyleOptions->{"HighlightMisspelledWords"->False},
FrontEndVersion->"11.3 for Mac OS X x86 (32-bit, 64-bit Kernel) (March 5, \
2018)",
StyleDefinitions->Notebook[{
   Cell[
    StyleData[StyleDefinitions -> "Default.nb"]], 
   Cell[
    CellGroupData[{
      Cell[
      "Style Environments", "Section", 
       CellChangeTimes -> {{3.64661165091824*^9, 3.646611654013329*^9}, 
         3.6485723794335403`*^9, 3.651347081728628*^9, 3.651347179462186*^9, 
         3.651347384135805*^9, 3.651348171662589*^9, {3.662385415502224*^9, 
         3.662385415587447*^9}, {3.662385986094821*^9, 
         3.662385986340312*^9}, {3.662386515144682*^9, 
         3.662386515438078*^9}, {3.662386561676188*^9, 
         3.662386561889332*^9}, {3.668356126688795*^9, 
         3.6683561270120687`*^9}, {3.670169943059537*^9, 
         3.670169943254141*^9}}], 
      Cell[
       StyleData[All, "Working"]], 
      Cell[
       StyleData[All, "Printout"], 
       PrintingOptions -> {
        "PageSize" -> {504, 720}, "PrintRegistrationMarks" -> True}, 
       Magnification -> 0.6]}, Closed]], 
   Cell[
    CellGroupData[{
      Cell[
      "Custom Styles", "Section", 
       CellChangeTimes -> {{3.646611660445352*^9, 3.646611669493331*^9}}], 
      Cell[
       StyleData["Notebook"], CreateCellID -> True, CellContext -> Notebook, 
       CellLabelAutoDelete -> False, DefaultNewCellStyle -> "Input", 
       ShowSyntaxStyles -> True, MenuSortingValue -> None], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["Title"], CellMargins -> {{64, Inherited}, {50, 72}}, 
          MenuCommandKey -> None, FontFamily -> "Verdana", FontSize -> 42, 
          FontWeight -> "Bold", FontColor -> GrayLevel[0.4]], 
         Cell[
          StyleData["Title", "Printout"], 
          CellMargins -> {{64, Inherited}, {50, 72}}]}, Closed]], 
      Cell[
       StyleData["Chapter"], MenuCommandKey -> None], 
      Cell[
       StyleData["Subchapter"], MenuCommandKey -> None], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["Section"], CellFrame -> {{0, 0}, {0, 0}}, CellDingbat -> 
          Cell[
            TextData[
             CounterBox["Section"], 
             StyleBox[
             "|\[NegativeThinSpace]", FontColor -> 
              RGBColor[
               0.9019607843137255, 0.4117647058823529, 0.027450980392156862`],
               FontFamily -> "Courier", FontSize -> 36, FontWeight -> Plain]],
             "SectionNumber"], CellMargins -> {{96, Inherited}, {12, 64}}, 
          Evaluatable -> True, CellGroupingRules -> {"SectionGrouping", 60}, 
          PageBreakAbove -> True, ShowCellLabel -> False, 
          CellFrameLabelMargins -> {{2, Inherited}, {Inherited, Inherited}}, 
          CellChangeTimes -> {3.652728456208679*^9, 3.652728527108994*^9}, 
          CounterIncrements -> "Section", 
          CounterAssignments -> {{"Subsection", 0}, {"Subsubsection", 0}, {
            "Exercise", 0}}, FontFamily -> "Source Sans Pro Semibold", 
          FontSize -> 26, FontSlant -> "Plain", FontColor -> 
          RGBColor[
           0.9019607843137255, 0.4117647058823529, 0.027450980392156862`], 
          InterpretationBoxOptions -> {Editable -> True}], 
         Cell[
          StyleData["Section", "Printout"], 
          CellMargins -> {{96, Inherited}, {12, 2}}]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["SectionDoubleDigit"], CellFrame -> {{0, 0}, {0, 0}}, 
          CellDingbat -> Cell[
            TextData[
             CounterBox["Section"], 
             StyleBox[
             "|\[NegativeThinSpace]", FontColor -> 
              RGBColor[
               0.9019607843137255, 0.4117647058823529, 0.027450980392156862`],
               FontFamily -> "Courier", FontSize -> 36, FontWeight -> Plain]],
             "SectionNumber"], CellMargins -> {{112, Inherited}, {12, 64}}, 
          Evaluatable -> True, CellGroupingRules -> {"SectionGrouping", 60}, 
          PageBreakAbove -> True, ShowCellLabel -> False, 
          CellFrameLabelMargins -> {{2, Inherited}, {Inherited, Inherited}}, 
          CellChangeTimes -> {3.652728456208679*^9, 3.652728527108994*^9}, 
          CounterIncrements -> "Section", 
          CounterAssignments -> {{"Subsection", 0}, {"Subsubsection", 0}, {
            "Exercise", 0}}, FontFamily -> "Source Sans Pro Semibold", 
          FontSize -> 26, FontSlant -> "Plain", FontColor -> 
          RGBColor[
           0.9019607843137255, 0.4117647058823529, 0.027450980392156862`], 
          InterpretationBoxOptions -> {Editable -> True}], 
         Cell[
          StyleData["SectionDoubleDigit", "Printout"], 
          CellMargins -> {{112, Inherited}, {12, 2}}]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["SectionNumber"], CellBaseline -> Baseline, FontFamily -> 
          "Source Sans Pro Semibold", FontSize -> 26, FontColor -> 
          RGBColor[
           0.9019607843137255, 0.4117647058823529, 0.027450980392156862`]], 
         Cell[
          StyleData["SectionNumber", "Printout"]]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["SectionInline"], FontFamily -> 
          "Source Sans Pro Semibold", FontColor -> 
          RGBColor[
           0.9019607843137255, 0.4117647058823529, 0.027450980392156862`]], 
         Cell[
          StyleData["SectionInline", "Printout"]]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["SectionNoDingbat"], 
          CellMargins -> {{64, Inherited}, {12, 64}}, Evaluatable -> True, 
          CellGroupingRules -> {"SectionGrouping", 60}, PageBreakAbove -> 
          True, ShowCellLabel -> False, 
          CellFrameLabelMargins -> {{2, Inherited}, {Inherited, Inherited}}, 
          CellChangeTimes -> {3.652728456208679*^9, 3.652728527108994*^9}, 
          CounterIncrements -> "Section", 
          CounterAssignments -> {{"Subsection", 0}, {"Subsubsection", 0}, {
            "Exercise", 0}}, FontFamily -> "Source Sans Pro Semibold", 
          FontSize -> 26, FontSlant -> "Plain", FontColor -> 
          RGBColor[
           0.9019607843137255, 0.4117647058823529, 0.027450980392156862`], 
          InterpretationBoxOptions -> {Editable -> True}], 
         Cell[
          StyleData["SectionNoDingbat", "Printout"], 
          CellMargins -> {{64, Inherited}, {12, 2}}]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["Exercise"], CellDingbat -> Cell[
            TextData[{"  ", 
              CounterBox["Section"], ".", 
              CounterBox["Exercise"]}], "ExerciseNumber", FontColor -> 
            RGBColor[
             0.9019607843137255, 0.4117647058823529, 0.027450980392156862`]], 
          ShowGroupOpener -> True, CellMargins -> {{90, 40}, {4, 18}}, 
          CellGroupingRules -> "InputGrouping", CounterIncrements -> 
          "Exercise", MenuSortingValue -> 10020, MenuCommandKey -> "2", 
          FontFamily -> "Source Sans Pro", FontSize -> 16, FontWeight -> 
          "Plain", FontSlant -> "Plain", FontColor -> GrayLevel[0.25]], 
         Cell[
          StyleData["Exercise", "Printout"], ShowGroupOpener -> False, 
          CellMargins -> {{110, Inherited}, {4, 8}}]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["ExerciseNumber"], FontFamily -> "Source Sans Pro", 
          FontSize -> 16, FontWeight -> "Bold", FontColor -> GrayLevel[0.25]], 
         Cell[
          StyleData["ExerciseNumber", "Printout"]]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["ExerciseInput", StyleDefinitions -> StyleData["Input"]], 
          CellMargins -> {{70, 30}, {4, 7}}, ShowCellLabel -> False, 
          CellFrameLabels -> {{None, None}, {None, None}}, SpanMaxSize -> 1, 
          FontSize -> 
          14, $CellContext`GeneratedCellStyles -> {
           "Output" -> "ExerciseOutput"}], 
         Cell[
          StyleData["ExerciseInput", "Printout"], 
          CellMargins -> {{88, 10}, {4, 7}}]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData[
          "ExerciseOutput", StyleDefinitions -> StyleData["Output"]], 
          CellMargins -> {{90, 40}, {0, 6}}, CellGroupingRules -> 
          "OutputGrouping", ShowCellLabel -> False, FontSize -> 14], 
         Cell[
          StyleData["ExerciseOutput", "Printout"], 
          CellMargins -> {{88, 10}, {10, 4}}]}, Closed]], 
      Cell[
       StyleData["ExerciseExpectedResult"], ShowCellBracket -> False, 
       ShowGroupOpener -> False, CellMargins -> {{90, 40}, {3, 9}}, 
       CellGroupingRules -> "InputGrouping", CounterIncrements -> "Exercise", 
       MenuSortingValue -> 10000, FontFamily -> "Source Sans Pro", FontSize -> 
       12, FontWeight -> "Plain", FontSlant -> "Plain"], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["Picture"], CellMargins -> {{66, 10}, {10, 10}}, 
          CellGroupingRules -> "GraphicsGrouping", StyleMenuListing -> None], 
         
         Cell[
          StyleData["Picture", "Printout"], 
          CellMargins -> {{66, 10}, {8, 8}}]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["Tentative"], 
          CellBracketOptions -> {
           "Color" -> RGBColor[
             0.30000000000000016`, 0.6000000000000003, 0.7000000000000003], 
            "Thickness" -> 5}, Evaluatable -> False, CellFrameMargins -> 4, 
          StyleMenuListing -> None, Background -> 
          RGBColor[0.8500000000000003, 0.9500000000000003, 1]], 
         Cell[
          StyleData["Tentative", "Printout"], 
          CellElementSpacings -> {"CellMinHeight" -> 0.1}, CellOpen -> False, 
          CellFrameMargins -> 0, FontSize -> 0.1, Magnification -> 0.01]}, 
        Closed]], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["WebOnly"], 
          CellBracketOptions -> {
           "Color" -> RGBColor[0.91, 0.92, 0.9], "Thickness" -> 5}, 
          CellFrameMargins -> 4, StyleMenuListing -> None, Background -> 
          RGBColor[0.91, 0.92, 0.86]], 
         Cell[
          StyleData["WebOnly", "Printout"], 
          CellElementSpacings -> {"CellMinHeight" -> 0.1}, CellOpen -> False, 
          CellFrameMargins -> 0, FontSize -> 0.1, Magnification -> 0.01]}, 
        Closed]], 
      Cell[
       StyleData["Lockdown"], 
       CellBracketOptions -> {
        "Color" -> RGBColor[0.8, 0.5, 0.4], "Thickness" -> 3}, Evaluatable -> 
       False, StyleMenuListing -> None], 
      Cell[
       StyleData["InlineCode"], SpanMaxSize -> 0, FontColor -> GrayLevel[0]], 
      
      Cell[
       StyleData["ExpectedOutputNote"], Selectable -> False, FontFamily -> 
       "Source Sans Pro", FontColor -> GrayLevel[0.3]], 
      Cell[
       StyleData["EIWLTextLink"], LineBreakWithin -> False, 
       TemplateBoxOptions -> {DisplayFunction :> (TagBox[
           
           ButtonBox[#, Appearance -> None, ButtonData -> #2, 
            BaseStyle -> {
             "Hyperlink", FontWeight -> Bold, FontSize -> 16, FontFamily -> 
              "Source Sans Pro"}], 
           MouseAppearanceTag["LinkHand"]]& )}, 
       ButtonBoxOptions -> {Appearance -> None, BaseStyle -> "Link"}], 
      Cell[
       StyleData["CheckAnswerDividerCloud"], ShowCellBracket -> False, 
       CellMargins -> {{40, 40}, {3, 6}}, 
       CellBracketOptions -> {"OverlapContent" -> True}, 
       CellGroupingRules -> {"SectionGrouping", 40}, 
       CellFrameMargins -> {{20, 20}, {2, 2}}, TextAlignment -> Right], 
      Cell[
       StyleData["CodeSectionDividerCloud"], Editable -> False, Selectable -> 
       False, ShowCellBracket -> False, CellMargins -> {{0, 0}, {0, 35}}, 
       CellBracketOptions -> {"OverlapContent" -> True}, 
       CellElementSpacings -> {"CellMinHeight" -> 6}, 
       CellGroupingRules -> {"SectionGrouping", -5}, 
       CellFrameMargins -> {{20, 20}, {2, 2}}, DefaultNewCellStyle -> "Input",
        FontSize -> 6, Background -> GrayLevel[0.95]], 
      Cell[
       StyleData["InlineCode"], SpanMaxSize -> 0, FontColor -> GrayLevel[0]], 
      
      Cell[
       StyleData["InlineCodeText"], SpanMaxSize -> 0, FontFamily -> 
       "Source Sans Pro"], 
      Cell[
       StyleData["Input"], CellMargins -> {{92, 20}, {5, 8}}, 
       CellFrameLabels -> {{None, 
          DynamicModuleBox[{$CellContext`EIWLExerciseCheck = 
            Automatic, $CellContext`buttonLabel = " CHECK MY SOLUTION "}, 
           DynamicBox[
            ToBoxes[
             If[
              TrueQ[$CellContext`EIWLExerciseCheck == Automatic], 
              MouseAppearance[
               Tooltip[
                Button[
                 Framed[
                  Panel[
                   
                   Style[$CellContext`buttonLabel, FontFamily -> 
                    "Source Sans Pro", FontSize -> 10, FontColor -> 
                    RGBColor[0.953948, 0.305638, 0.0285344]], Appearance -> 
                   None, Background -> GrayLevel[1], 
                   FrameMargins -> {{2, 2}, {0, 0}}, ImageMargins -> 0], 
                  FrameStyle -> {
                    Thickness[Tiny], 
                    RGBColor[0.953948, 0.305638, 0.0285344]}, RoundingRadius -> 
                  3], 
                 
                 Block[{$CellContext`usersCell, $CellContext`solutionResult, \
$CellContext`exerciseNumber, $CellContext`exerciseSwitchResult}, \
$CellContext`exerciseNumber = StringJoin[
                    If[
                    TrueQ[CurrentValue[{"CounterValue", "WebOnly"}] == 1], 
                    "x", ""], 
                    ToString[
                    CurrentValue[{"CounterValue", "SectionNumber"}]], ".", 
                    ToString[
                    
                    CurrentValue[{
                    "CounterValue", 
                    "ExerciseNumber"}]]]; $CellContext`buttonLabel = 
                   Row[{" CHECKING ", 
                    ProgressIndicator[Appearance -> "Percolate"]}]; 
                  SelectionMove[
                    ButtonNotebook[], All, ButtonCell, AutoScroll -> 
                    False]; $CellContext`usersCell = NotebookRead[
                    InputNotebook[]]; If[
                    TrueQ[Length[
                    Flatten[{$CellContext`usersCell}]] == 
                    1], $CellContext`solutionResult = ToExpression[
                    URLFetch[
                    "https://www.wolframcloud.com/objects/user-9b23d046-b2a9-\
4a5c-8723-08465cce25ed/EIWLGradingAPI", "Method" -> "POST", 
                    "Parameters" -> {
                    "exNum" -> $CellContext`exerciseNumber, "answer" -> 
                    ToString[$CellContext`usersCell, InputForm, 
                    CharacterEncoding -> "ASCII"], "user" -> 
                    ToString[$WolframID], "referer" -> "eiwl-nb", "uuid" -> 
                    ToString[$WolframUUID]}]]; \
$CellContext`SolutionResponseText[$CellContext`exerciseNumber] = \
$CellContext`SolutionResponseDetails[
                    $CellContext`solutionResult["Text"], 
                    $CellContext`solutionResult[
                    "CorrectQ"]]; $CellContext`exerciseSwitchResult = Switch[
                    $CellContext`solutionResult["CorrectQ"], 
                    True, $CellContext`EIWLExerciseCheck = 
                    True; $CellContext`SetUserSolutionsCorrect[$CellContext`\
exerciseNumber]; \
$CellContext`SetUserSolutionsTried[$CellContext`exerciseNumber]; Null, 
                    
                    Blank[], $CellContext`EIWLExerciseCheck = 
                    False; $CellContext`SetUserSolutionsTried[$CellContext`\
exerciseNumber]], 
                    CloudSystem`CreateCloudDialog[
                    StyleBox[
                    "Select a cell to be checked.", Selectable -> False], 
                    WindowTitle -> " "]]], Appearance -> None, Evaluator -> 
                 Automatic, Method -> "Queued"], 
                "Click to check your solution.", TooltipDelay -> 0.15], 
               "LinkHand"], 
              If[
               TrueQ[$CellContext`EIWLExerciseCheck], 
               MouseAppearance[
                Button[
                 Framed[
                  Row[{
                    Panel[
                    Style[
                    ToExpression[
                    "\!\(\* GraphicsBox[ TagBox[RasterBox[CompressedData[\" \
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBLECOU2VJahIzkCECxFJADGKrbtYa \
RUMUpZzMcNnnQRWjMk5lf/vzDWggtYwCkgNiFDBAsPqCPFcBjcLURYkH0fRS \
HlZwE6gV7EATfvz98f3Pd6rEIBClncpMPZlJFaNGEd0QANRpOvM= \"], {{0, 20}, { 26, \
0}}, {0, 255}, ColorFunction->RGBColor], BoxForm`ImageTag[ \"Byte\", \
Interleaving -> True, Magnification -> 1], Selectable->False], \
BaseStyle->\"ImageGraphics\", ImageSize->Magnification[1], ImageSizeRaw->{26, \
20}, PlotRange->{{0, 26}, {0, 20}}]\)"], Selectable -> False], Background -> 
                    RGBColor[0.146944, 0.70164, 0.16466], 
                    FrameMargins -> {{5, 5}, {0, 0}}, ImageMargins -> 0, 
                    Appearance -> None], 
                    Panel[
                    Style[
                    " CORRECT ", FontSize -> 10, FontColor -> 
                    RGBColor[0.146944, 0.70164, 0.16466], FontFamily -> 
                    "Source Sans Pro"], Background -> White, 
                    FrameMargins -> {{5, 5}, {0, 0}}, Appearance -> None]}], 
                  FrameStyle -> {
                    Thickness[Tiny], 
                    RGBColor[0.146944, 0.70164, 0.16466]}, FrameMargins -> 0, 
                  RoundingRadius -> 3], $CellContext`buttonLabel = 
                  " CHECK MY SOLUTION "; $CellContext`EIWLExerciseCheck = 
                  Automatic, Appearance -> None], "LinkHand"], 
               MouseAppearance[
                Button[
                 Framed[
                  Row[{
                    Panel[
                    Style[
                    ToExpression[
                    "\!\(\* GraphicsBox[ TagBox[RasterBox[CompressedData[\" \
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBLECOU2VJahIzkCECxGJADGK/YtAZ \
RTRCb1W8PnhlYooDBYFSxJgAVPnvy7cPfrkogn65IEFsJmM3BKIeZggal1RD \
yNOOMOT7DyAiTzvlJlDoCwpDkvLYpDxFjSLyEAAHORZk \"], {{0, 20}, {22, 0}}, { 0, \
255}, ColorFunction->RGBColor], BoxForm`ImageTag[ \"Byte\", Interleaving -> \
True, Magnification -> 1], Selectable->False], BaseStyle->\"ImageGraphics\", \
ImageSize->Magnification[1], ImageSizeRaw->{22, 20}, PlotRange->{{0, 22}, {0, \
20}}]\)"], Selectable -> False], Background -> 
                    RGBColor[0.918257, 0, 0.172488], 
                    FrameMargins -> {{5, 5}, {0, 0}}, ImageMargins -> 0, 
                    Appearance -> None], 
                    Panel[
                    Style[
                    " TRY AGAIN ", FontSize -> 10, FontColor -> 
                    RGBColor[0.918257, 0, 0.172488], FontFamily -> 
                    "Source Sans Pro"], Background -> White, 
                    FrameMargins -> {{5, 5}, {0, 0}}, Appearance -> None]}], 
                  FrameStyle -> {
                    Thickness[Tiny], 
                    RGBColor[0.918257, 0, 0.172488]}, FrameMargins -> 0, 
                  RoundingRadius -> 3], $CellContext`buttonLabel = 
                  " CHECK MY SOLUTION "; $CellContext`EIWLExerciseCheck = 
                  Automatic, Appearance -> None], "LinkHand"]]], 
             StandardForm], ImageSizeCache -> {109., {9., 16.}}], 
           DynamicModuleValues :> {}]}, {None, None}}, 
       CellChangeTimes -> {{3.6688095471029243`*^9, 3.66880959932793*^9}}, 
       MenuSortingValue -> 10000, FontSize -> 15], 
      Cell[
       StyleData["Output"], Deletable -> True, ShowCellBracket -> True, 
       CellMargins -> {{92, 50}, {10, 5}}, 
       CellBracketOptions -> {"OverlapContent" -> True}, CellEditDuplicate -> 
       True, GeneratedCell -> True, CellAutoOverwrite -> True, 
       LinebreakAdjustments -> {1, 2., 12., 1.25, 1.}, MenuSortingValue -> 
       None, FontSize -> 15], 
      Cell[
       StyleData["Message"], 
       CellMargins -> {{92, Inherited}, {Inherited, Inherited}}], 
      Cell[
       StyleData["EmptyCell"], Editable -> False, Selectable -> False, 
       CellMargins -> {{0, 0}, {-2, 0}}, 
       CellElementSpacings -> {"CellMinHeight" -> 1}, MenuSortingValue -> 
       10000, FontSize -> 1], 
      Cell[
       StyleData["CellLabel"], MenuSortingValue -> 10000, FontColor -> 
       GrayLevel[0.6]], 
      Cell[
       StyleData["Link"], LineBreakWithin -> False, 
       TemplateBoxOptions -> {DisplayFunction :> (TagBox[
           
           ButtonBox[#, Appearance -> None, ButtonData -> #2, 
            BaseStyle -> {
             "Hyperlink", FontSize -> 15, FontFamily -> "Source Sans Pro"}], 
           MouseAppearanceTag["LinkHand"]]& )}, 
       ButtonBoxOptions -> {Appearance -> None, BaseStyle -> "Link"}], 
      Cell[
       StyleData["ExpectedOutputText"], FontFamily -> "Arial", FontSize -> 13,
        FontColor -> RGBColor[0.8579079880979629, 0.4263828488593881, 0.]], 
      Cell[
       StyleData["CodeSectionDividerCloud"], Selectable -> False, 
       ShowCellBracket -> False, CellMargins -> {{0, 0}, {0, 35}}, 
       CellBracketOptions -> {"OverlapContent" -> True}, 
       CellElementSpacings -> {"CellMinHeight" -> 6}, 
       CellGroupingRules -> {"SectionGrouping", -5}, 
       CellFrameMargins -> {{20, 20}, {2, 2}}, DefaultNewCellStyle -> 
       "EmptyCell", FontSize -> 6, Background -> GrayLevel[0.95]], 
      Cell[
       StyleData["DockedCellAuthorName"], MenuSortingValue -> 10000, 
       FontFamily -> "Source Sans Pro", FontSize -> 12, FontColor -> 
       RGBColor[1, 0.929411, 0.721568]], 
      Cell[
       StyleData["DockedCellSectionTitle"], MenuSortingValue -> 10000, 
       FontFamily -> "Source Sans Pro", FontSize -> 18, FontColor -> 
       GrayLevel[1]], 
      Cell[
       StyleData["DockedCellSecondCell"], CellFrame -> 1, 
       CellMargins -> {{0, 0}, {0, 0}}, 
       CellFrameMargins -> {{10, 10}, {10, 10}}, CellFrameColor -> 
       RGBColor[1, 0.956862, 0.878431], MenuSortingValue -> 10000, Background -> 
       RGBColor[1, 0.956862, 0.878431]], 
      Cell[
       StyleData["CompletedExerciseHeader"], MenuSortingValue -> 10000, 
       FontFamily -> "Source Sans Pro", FontSize -> 14, FontColor -> 
       GrayLevel[0.5]], 
      Cell[
       StyleData["DockedCellShareButton"], MenuSortingValue -> 10000, 
       FontFamily -> "Source Sans Pro", FontSize -> 13, FontColor -> 
       GrayLevel[1]], 
      Cell[
       StyleData["DockedCellLinksSections"], MenuSortingValue -> 10000, 
       FontFamily -> "Source Sans Pro", FontSize -> 14, FontWeight -> "Plain",
        FontSlant -> "Plain", FontColor -> RGBColor[0.97647, 0.482352, 0]], 
      Cell[
       StyleData["DockedCellLinksDivider"], MenuSortingValue -> 10000, 
       FontFamily -> "Courier", FontSize -> 18, FontWeight -> "Plain", 
       FontSlant -> "Plain", FontColor -> RGBColor[0.97647, 0.482352, 0]], 
      Cell[
       StyleData["DockedCellSectionTitleDivider"], MenuSortingValue -> 10000, 
       FontFamily -> "Courier", FontSize -> 24, FontWeight -> "Plain", 
       FontSlant -> "Plain", FontColor -> GrayLevel[1]], 
      Cell[
       StyleData["SolutionTrue"], MenuSortingValue -> 10000, FontFamily -> 
       "Source Sans Pro", FontSize -> 12, FontWeight -> "Plain", FontSlant -> 
       "Plain", FontColor -> RGBColor[0.12, 0.7, 0.22]], 
      Cell[
       StyleData["SolutionFalse"], MenuSortingValue -> 10000, FontFamily -> 
       "Source Sans Pro", FontSize -> 12, FontWeight -> "Plain", FontSlant -> 
       "Plain", FontColor -> RGBColor[0.94, 0.08, 0.2]], 
      Cell[
       StyleData["SolutionResponseText"], ShowStringCharacters -> False, 
       FontFamily -> "Source Sans Pro", FontSize -> 12, FontWeight -> "Plain",
        FontSlant -> "Plain", FontColor -> GrayLevel[1]], 
      Cell[
       StyleData["SolutionResponse"], ShowCellBracket -> False, 
       CellMargins -> {{24, 25}, {6, 0}}, 
       CellFrameMargins -> {{8, 0}, {0, 12}}, TextAlignment -> Right, 
       ShowStringCharacters -> False, FontFamily -> "Source Sans Pro", 
       FontSize -> 12, FontWeight -> "Plain", FontSlant -> "Plain", 
       Background -> GrayLevel[1]], 
      Cell[
       StyleData["DockedCellCompletedExerciseText"], MenuSortingValue -> 
       10000, FontFamily -> "Source Sans Pro", FontSize -> 12, FontWeight -> 
       "Plain", FontSlant -> "Plain", FontColor -> GrayLevel[0.4]], 
      Cell[
       StyleData["DockedCellSolutionDivider"], MenuSortingValue -> 10000, 
       FontFamily -> "Courier", FontSize -> 16, FontWeight -> "Plain", 
       FontSlant -> "Plain", FontColor -> GrayLevel[0.6]], 
      Cell[
       StyleData["DockedCellCorrectExerciseText"], MenuSortingValue -> 10000, 
       FontFamily -> "Source Sans Pro", FontSize -> 12, FontWeight -> "Plain",
        FontSlant -> "Plain", FontColor -> RGBColor[0.12, 0.7, 0.22]], 
      Cell[
       CellGroupData[{
         Cell[
         "EIWL Cloud Link styles", "Subsubsection", 
          CellChangeTimes -> {{3.663512229965006*^9, 3.66351224118613*^9}}], 
         Cell[
          StyleData["EIWLTextLink"], LineBreakWithin -> False, 
          TemplateBoxOptions -> {DisplayFunction :> (TagBox[
              
              ButtonBox[#, Appearance -> None, ButtonData -> #2, 
               BaseStyle -> {
                "Hyperlink", FontSize -> 16, FontFamily -> 
                 "Source Sans Pro"}], 
              MouseAppearanceTag["LinkHand"]]& )}, 
          ButtonBoxOptions -> {Appearance -> None, BaseStyle -> "Link"}], 
         Cell[
          StyleData["EIWLTextLinkAnswer"], LineBreakWithin -> False, 
          TemplateBoxOptions -> {DisplayFunction :> (TagBox[
              
              ButtonBox[#, Appearance -> None, ButtonData -> #2, 
               BaseStyle -> {
                "Hyperlink", FontSize -> 13, FontColor -> GrayLevel[0.25], 
                 FontFamily -> "Source Sans Pro"}], 
              MouseAppearanceTag["LinkHand"]]& )}, 
          ButtonBoxOptions -> {Appearance -> None, BaseStyle -> "Link"}], 
         Cell[
          StyleData["EIWLTextLinkCodeCaption"], LineBreakWithin -> False, 
          TemplateBoxOptions -> {DisplayFunction :> (TagBox[
              
              ButtonBox[#, Appearance -> None, ButtonData -> #2, 
               BaseStyle -> {
                "Hyperlink", FontSize -> 14, FontColor -> GrayLevel[0.6], 
                 FontFamily -> "Source Sans Pro"}], 
              MouseAppearanceTag["LinkHand"]]& )}, 
          ButtonBoxOptions -> {Appearance -> None, BaseStyle -> "Link"}], 
         Cell[
          StyleData["EIWLTextLinkExercise"], LineBreakWithin -> False, 
          TemplateBoxOptions -> {DisplayFunction :> (TagBox[
              
              ButtonBox[#, Appearance -> None, ButtonData -> #2, 
               BaseStyle -> {
                "Hyperlink", FontSize -> 13, FontColor -> GrayLevel[0.25], 
                 FontFamily -> "Source Sans Pro"}], 
              MouseAppearanceTag["LinkHand"]]& )}, 
          ButtonBoxOptions -> {Appearance -> None, BaseStyle -> "Link"}], 
         Cell[
          StyleData["EIWLTextLinkExerciseNote"], LineBreakWithin -> False, 
          TemplateBoxOptions -> {DisplayFunction :> (TagBox[
              
              ButtonBox[#, Appearance -> None, ButtonData -> #2, 
               BaseStyle -> {
                "Hyperlink", FontSize -> 13, FontColor -> GrayLevel[0.25], 
                 FontFamily -> "Source Sans Pro"}], 
              MouseAppearanceTag["LinkHand"]]& )}, 
          ButtonBoxOptions -> {Appearance -> None, BaseStyle -> "Link"}], 
         Cell[
          StyleData["EIWLTextLinkInlineCode"], LineBreakWithin -> False, 
          TemplateBoxOptions -> {DisplayFunction :> (TagBox[
              
              ButtonBox[#, Appearance -> None, ButtonData -> #2, 
               BaseStyle -> {
                "Hyperlink", FontSize -> 13, FontColor -> GrayLevel[0], 
                 FontFamily -> "Source Sans Pro"}], 
              MouseAppearanceTag["LinkHand"]]& )}, 
          ButtonBoxOptions -> {Appearance -> None, BaseStyle -> "Link"}], 
         Cell[
          StyleData["EIWLTextLinkMoreExplore"], LineBreakWithin -> False, 
          TemplateBoxOptions -> {DisplayFunction :> (TagBox[
              
              ButtonBox[#, Appearance -> None, ButtonData -> #2, 
               BaseStyle -> {
                "Hyperlink", FontSize -> 13, FontFamily -> 
                 "Source Sans Pro"}], 
              MouseAppearanceTag["LinkHand"]]& )}, 
          ButtonBoxOptions -> {Appearance -> None, BaseStyle -> "Link"}], 
         Cell[
          StyleData["EIWLTextLinkQuestion"], LineBreakWithin -> False, 
          TemplateBoxOptions -> {DisplayFunction :> (TagBox[
              
              ButtonBox[#, Appearance -> None, ButtonData -> #2, 
               BaseStyle -> {
                "Hyperlink", FontSize -> 13, FontWeight -> Bold, FontFamily -> 
                 "Source Sans Pro"}], 
              MouseAppearanceTag["LinkHand"]]& )}, 
          ButtonBoxOptions -> {Appearance -> None, BaseStyle -> "Link"}], 
         Cell[
          StyleData["EIWLTextLinkTechNote"], LineBreakWithin -> False, 
          TemplateBoxOptions -> {DisplayFunction :> (TagBox[
              
              ButtonBox[#, Appearance -> None, ButtonData -> #2, 
               BaseStyle -> {
                "Hyperlink", FontSize -> 13, FontColor -> GrayLevel[0.25], 
                 FontFamily -> "Source Sans Pro"}], 
              MouseAppearanceTag["LinkHand"]]& )}, 
          ButtonBoxOptions -> {Appearance -> None, BaseStyle -> "Link"}], 
         Cell[
          StyleData["EIWLTextLinkText"], LineBreakWithin -> False, 
          TemplateBoxOptions -> {DisplayFunction :> (TagBox[
              
              ButtonBox[#, Appearance -> None, ButtonData -> #2, 
               BaseStyle -> {
                "Hyperlink", FontSize -> 17, FontFamily -> 
                 "Source Sans Pro"}], 
              MouseAppearanceTag["LinkHand"]]& )}, 
          ButtonBoxOptions -> {Appearance -> None, BaseStyle -> "Link"}], 
         Cell[
          StyleData["EIWLTextLinkInlineCodeLink"], LineBreakWithin -> False, 
          TemplateBoxOptions -> {DisplayFunction :> (TagBox[
              
              ButtonBox[#, Appearance -> None, ButtonData -> #2, 
               BaseStyle -> {
                "Hyperlink", FontSize -> 17, FontFamily -> 
                 "Source Sans Pro"}], 
              MouseAppearanceTag["LinkHand"]]& )}, 
          ButtonBoxOptions -> {Appearance -> None, BaseStyle -> "Link"}], 
         Cell[
          StyleData["EIWLTextLinkVocabularyTable"], LineBreakWithin -> False, 
          TemplateBoxOptions -> {DisplayFunction :> (TagBox[
              
              ButtonBox[#, Appearance -> None, ButtonData -> #2, 
               BaseStyle -> {
                "Hyperlink", FontSize -> 13, FontFamily -> 
                 "Source Sans Pro"}], 
              MouseAppearanceTag["LinkHand"]]& )}, 
          ButtonBoxOptions -> {Appearance -> None, BaseStyle -> "Link"}]}, 
        Closed]], 
      Cell[
       CellGroupData[{
         Cell[
         "EIWL Cloud Link", "Subsubsection", 
          CellChangeTimes -> {{3.664234597774767*^9, 3.664234605661516*^9}}], 
         
         Cell[
          StyleData["CodeLinkAnswer"], LineBreakWithin -> False, 
          TemplateBoxOptions -> {DisplayFunction :> (TagBox[
              
              ButtonBox[#, Appearance -> None, ButtonData -> #2, 
               BaseStyle -> {
                "Hyperlink", FontSize -> 13, FontColor -> GrayLevel[0.25], 
                 FontFamily -> "Source Sans Pro"}], 
              MouseAppearanceTag["LinkHand"]]& )}, 
          ButtonBoxOptions -> {Appearance -> None, BaseStyle -> "Link"}], 
         Cell[
          StyleData["CodeLinkCodeCaption"], LineBreakWithin -> False, 
          TemplateBoxOptions -> {DisplayFunction :> (TagBox[
              
              ButtonBox[#, Appearance -> None, ButtonData -> #2, 
               BaseStyle -> {
                "Hyperlink", FontSize -> 14, FontColor -> GrayLevel[0.6], 
                 FontFamily -> "Source Sans Pro"}], 
              MouseAppearanceTag["LinkHand"]]& )}, 
          ButtonBoxOptions -> {Appearance -> None, BaseStyle -> "Link"}], 
         Cell[
          StyleData["CodeLinkExercise"], LineBreakWithin -> False, 
          TemplateBoxOptions -> {DisplayFunction :> (TagBox[
              
              ButtonBox[#, Appearance -> None, ButtonData -> #2, 
               BaseStyle -> {
                "Hyperlink", FontSize -> 13, FontColor -> GrayLevel[0.25], 
                 FontFamily -> "Source Sans Pro"}], 
              MouseAppearanceTag["LinkHand"]]& )}, 
          ButtonBoxOptions -> {Appearance -> None, BaseStyle -> "Link"}], 
         Cell[
          StyleData["CodeLinkQuestion"], LineBreakWithin -> False, 
          TemplateBoxOptions -> {DisplayFunction :> (TagBox[
              
              ButtonBox[#, Appearance -> None, ButtonData -> #2, 
               BaseStyle -> {
                "Hyperlink", FontSize -> 13, FontWeight -> Bold, FontFamily -> 
                 "Source Sans Pro"}], 
              MouseAppearanceTag["LinkHand"]]& )}, 
          ButtonBoxOptions -> {Appearance -> None, BaseStyle -> "Link"}], 
         Cell[
          StyleData["CodeLinkTechNote"], LineBreakWithin -> False, 
          TemplateBoxOptions -> {DisplayFunction :> (TagBox[
              
              ButtonBox[#, Appearance -> None, ButtonData -> #2, 
               BaseStyle -> {
                "Hyperlink", FontSize -> 14, FontColor -> GrayLevel[0.25], 
                 FontFamily -> "Source Sans Pro"}], 
              MouseAppearanceTag["LinkHand"]]& )}, 
          ButtonBoxOptions -> {Appearance -> None, BaseStyle -> "Link"}], 
         Cell[
          StyleData["CodeLinkText"], LineBreakWithin -> False, 
          TemplateBoxOptions -> {DisplayFunction :> (TagBox[
              
              ButtonBox[#, Appearance -> None, ButtonData -> #2, 
               BaseStyle -> {
                "Hyperlink", FontSize -> 17, FontFamily -> 
                 "Source Sans Pro"}], 
              MouseAppearanceTag["LinkHand"]]& )}, 
          ButtonBoxOptions -> {Appearance -> None, BaseStyle -> "Link"}], 
         Cell[
          StyleData["CodeLinkVocabularyTable"], LineBreakWithin -> False, 
          TemplateBoxOptions -> {DisplayFunction :> (TagBox[
              ButtonBox[#, Appearance -> None, ButtonData -> #2, 
               BaseStyle -> {
                "Hyperlink", FontSize -> 14, FontFamily -> 
                 "Source Sans Pro"}], 
              MouseAppearanceTag["LinkHand"]]& )}, 
          ButtonBoxOptions -> {Appearance -> None, BaseStyle -> "Link"}], 
         Cell[
          StyleData["CodeLinkVocabularyTable3Column"], LineBreakWithin -> 
          False, TemplateBoxOptions -> {DisplayFunction :> (TagBox[
              
              ButtonBox[#, Appearance -> None, ButtonData -> #2, 
               BaseStyle -> {
                "Hyperlink", FontSize -> 14, FontFamily -> 
                 "Source Sans Pro"}], 
              MouseAppearanceTag["LinkHand"]]& )}, 
          ButtonBoxOptions -> {Appearance -> None, BaseStyle -> "Link"}], 
         Cell[
          StyleData["LinkAnswer"], LineBreakWithin -> False, 
          TemplateBoxOptions -> {DisplayFunction :> (TagBox[
              
              ButtonBox[#, Appearance -> None, ButtonData -> #2, 
               BaseStyle -> {
                "Hyperlink", FontSize -> 13, FontColor -> GrayLevel[0.25], 
                 FontFamily -> "Source Sans Pro"}], 
              MouseAppearanceTag["LinkHand"]]& )}, 
          ButtonBoxOptions -> {Appearance -> None, BaseStyle -> "Link"}], 
         Cell[
          StyleData["LinkCodeCaption"], LineBreakWithin -> False, 
          TemplateBoxOptions -> {DisplayFunction :> (TagBox[
              
              ButtonBox[#, Appearance -> None, ButtonData -> #2, 
               BaseStyle -> {
                "Hyperlink", FontSize -> 14, FontColor -> GrayLevel[0.6], 
                 FontFamily -> "Source Sans Pro"}], 
              MouseAppearanceTag["LinkHand"]]& )}, 
          ButtonBoxOptions -> {Appearance -> None, BaseStyle -> "Link"}], 
         Cell[
          StyleData["LinkExercise"], LineBreakWithin -> False, 
          TemplateBoxOptions -> {DisplayFunction :> (TagBox[
              
              ButtonBox[#, Appearance -> None, ButtonData -> #2, 
               BaseStyle -> {
                "Hyperlink", FontSize -> 13, FontColor -> GrayLevel[0.25], 
                 FontFamily -> "Source Sans Pro"}], 
              MouseAppearanceTag["LinkHand"]]& )}, 
          ButtonBoxOptions -> {Appearance -> None, BaseStyle -> "Link"}], 
         Cell[
          StyleData["LinkExerciseNote"], LineBreakWithin -> False, 
          TemplateBoxOptions -> {DisplayFunction :> (TagBox[
              
              ButtonBox[#, Appearance -> None, ButtonData -> #2, 
               BaseStyle -> {
                "Hyperlink", FontSize -> 13, FontColor -> GrayLevel[0.25], 
                 FontFamily -> "Source Sans Pro"}], 
              MouseAppearanceTag["LinkHand"]]& )}, 
          ButtonBoxOptions -> {Appearance -> None, BaseStyle -> "Link"}], 
         Cell[
          StyleData["LinkIndex"], LineBreakWithin -> False, 
          TemplateBoxOptions -> {DisplayFunction :> (TagBox[
              
              ButtonBox[#, Appearance -> None, ButtonData -> #2, 
               BaseStyle -> {
                "Hyperlink", FontSize -> 13, FontColor -> GrayLevel[0.25], 
                 FontFamily -> "Source Sans Pro"}], 
              MouseAppearanceTag["LinkHand"]]& )}, 
          ButtonBoxOptions -> {Appearance -> None, BaseStyle -> "Link"}], 
         Cell[
          StyleData["LinkIndexSubentry"], LineBreakWithin -> False, 
          TemplateBoxOptions -> {DisplayFunction :> (TagBox[
              
              ButtonBox[#, Appearance -> None, ButtonData -> #2, 
               BaseStyle -> {
                "Hyperlink", FontSize -> 13, FontColor -> GrayLevel[0.25], 
                 FontFamily -> "Source Sans Pro"}], 
              MouseAppearanceTag["LinkHand"]]& )}, 
          ButtonBoxOptions -> {Appearance -> None, BaseStyle -> "Link"}], 
         Cell[
          StyleData["LinkMoreExplore"], LineBreakWithin -> False, 
          TemplateBoxOptions -> {DisplayFunction :> (TagBox[
              
              ButtonBox[#, Appearance -> None, ButtonData -> #2, 
               BaseStyle -> {
                "Hyperlink", FontSize -> 13, FontFamily -> 
                 "Source Sans Pro"}], 
              MouseAppearanceTag["LinkHand"]]& )}, 
          ButtonBoxOptions -> {Appearance -> None, BaseStyle -> "Link"}], 
         Cell[
          StyleData["LinkQuestion"], LineBreakWithin -> False, 
          TemplateBoxOptions -> {DisplayFunction :> (TagBox[
              
              ButtonBox[#, Appearance -> None, ButtonData -> #2, 
               BaseStyle -> {
                "Hyperlink", FontSize -> 14, FontWeight -> Bold, FontColor -> 
                 GrayLevel[0], FontFamily -> "Source Sans Pro"}], 
              MouseAppearanceTag["LinkHand"]]& )}, 
          ButtonBoxOptions -> {Appearance -> None, BaseStyle -> "Link"}], 
         Cell[
          StyleData["LinkTechNote"], LineBreakWithin -> False, 
          TemplateBoxOptions -> {DisplayFunction :> (TagBox[
              
              ButtonBox[#, Appearance -> None, ButtonData -> #2, 
               BaseStyle -> {
                "Hyperlink", FontSize -> 13, FontColor -> GrayLevel[0.25], 
                 FontFamily -> "Source Sans Pro"}], 
              MouseAppearanceTag["LinkHand"]]& )}, 
          ButtonBoxOptions -> {Appearance -> None, BaseStyle -> "Link"}], 
         Cell[
          StyleData["LinkText"], LineBreakWithin -> False, 
          TemplateBoxOptions -> {DisplayFunction :> (TagBox[
              
              ButtonBox[#, Appearance -> None, ButtonData -> #2, 
               BaseStyle -> {
                "Hyperlink", FontSize -> 16, FontFamily -> 
                 "Source Sans Pro"}], 
              MouseAppearanceTag["LinkHand"]]& )}, 
          ButtonBoxOptions -> {Appearance -> None, BaseStyle -> "Link"}], 
         Cell[
          StyleData["LinkVocabularyTable"], LineBreakWithin -> False, 
          TemplateBoxOptions -> {DisplayFunction :> (TagBox[
              
              ButtonBox[#, Appearance -> None, ButtonData -> #2, 
               BaseStyle -> {
                "Hyperlink", FontSize -> 13, FontFamily -> 
                 "Source Sans Pro"}], 
              MouseAppearanceTag["LinkHand"]]& )}, 
          ButtonBoxOptions -> {Appearance -> None, BaseStyle -> "Link"}]}, 
        Closed]]}, Open]]}, Visible -> False, FrontEndVersion -> 
  "11.3 for Mac OS X x86 (32-bit, 64-bit Kernel) (March 5, 2018)", 
  StyleDefinitions -> "Default.nb"]
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{
 "FirstInputCell"->{
  Cell[26057, 505, 755, 25, 70, "Input",ExpressionUUID->"fec66d8c-553c-4a70-8030-31f878834de0",
   CellTags->"FirstInputCell"],
  Cell[39730, 817, 755, 25, 70, "Input",ExpressionUUID->"e5c5571e-353c-4ac5-9742-f1b8b1ef8252",
   CellTags->"FirstInputCell"],
  Cell[54858, 1154, 755, 25, 70, "Input",ExpressionUUID->"1dfaca56-8486-491a-bfbc-181afe4074ad",
   CellTags->"FirstInputCell"],
  Cell[65972, 1428, 755, 25, 70, "Input",ExpressionUUID->"383e471b-edc3-4d3f-85c9-01dc7b5f68a9",
   CellTags->"FirstInputCell"],
  Cell[78202, 1718, 755, 25, 70, "Input",ExpressionUUID->"5d315b26-f15e-4ddc-875e-1c201dacb269",
   CellTags->"FirstInputCell"],
  Cell[138889, 2803, 755, 25, 70, "Input",ExpressionUUID->"07ee62ec-d08f-4004-8dff-47bfac04c343",
   CellTags->"FirstInputCell"],
  Cell[147202, 3026, 755, 25, 70, "Input",ExpressionUUID->"838bc5b2-878d-406d-9a13-6299e74b7601",
   CellTags->"FirstInputCell"]}
 }
*)
(*CellTagsIndex
CellTagsIndex->{
 {"FirstInputCell", 206433, 4250}
 }
*)
(*NotebookFileOutline
Notebook[{
Cell[656, 22, 518, 17, 70, "Exercise",ExpressionUUID->"796072f3-63e6-4a7e-8da8-fbe861089499",
 CounterAssignments->{{"SectionNumber", 29}, {"ExerciseNumber", 1}, {"WebOnly", 0}}],
Cell[CellGroupData[{
Cell[1199, 43, 578, 18, 70, "ExerciseExpectedResult",ExpressionUUID->"c4f95d04-5fe6-4b2e-a1d9-64389e192e25"],
Cell[1780, 63, 23728, 418, 70, "ExerciseOutput",ExpressionUUID->"7e75c525-9171-48b2-a5df-31461ca22842"]
}, Closed]],
Cell[CellGroupData[{
Cell[25545, 486, 509, 17, 70, "Subsection",ExpressionUUID->"2575bbed-7f82-46b2-ae56-81704fbaa6bd"],
Cell[26057, 505, 755, 25, 70, "Input",ExpressionUUID->"fec66d8c-553c-4a70-8030-31f878834de0",
 CellTags->"FirstInputCell"]
}, Open  ]],
Cell[CellGroupData[{
Cell[26849, 535, 224, 7, 70, "CodeSectionDividerCloud",ExpressionUUID->"05e83693-429d-4859-85e5-739af2bc042d"],
Cell[27076, 544, 540, 17, 70, "Exercise",ExpressionUUID->"e09ed015-ac61-4045-825c-cc6a6677f1bf",
 CounterAssignments->{{"SectionNumber", 29}, {"ExerciseNumber", 2}, {"WebOnly", 0}}],
Cell[CellGroupData[{
Cell[27641, 565, 578, 18, 70, "ExerciseExpectedResult",ExpressionUUID->"ef0540a8-af66-4720-a563-3c6313a8d7a2"],
Cell[28222, 585, 10959, 208, 70, "ExerciseOutput",ExpressionUUID->"8be82012-5785-4e39-bed0-9c50599025c1"]
}, Closed]],
Cell[CellGroupData[{
Cell[39218, 798, 509, 17, 70, "Subsection",ExpressionUUID->"81ccabeb-23a3-40e4-8a0f-a53bdb76b14c"],
Cell[39730, 817, 755, 25, 70, "Input",ExpressionUUID->"e5c5571e-353c-4ac5-9742-f1b8b1ef8252",
 CellTags->"FirstInputCell"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[40534, 848, 224, 7, 70, "CodeSectionDividerCloud",ExpressionUUID->"b010dc43-1b34-4730-95d2-cad1ce2ef01b"],
Cell[40761, 857, 512, 17, 70, "Exercise",ExpressionUUID->"63142a3c-469c-45d7-8d7d-b89967e483a0",
 CounterAssignments->{{"SectionNumber", 29}, {"ExerciseNumber", 3}, {"WebOnly", 0}}],
Cell[CellGroupData[{
Cell[41298, 878, 578, 18, 70, "ExerciseExpectedResult",ExpressionUUID->"4bd5c146-4eba-47e9-a609-53a6a0a922bb"],
Cell[41879, 898, 12430, 232, 70, "ExerciseOutput",ExpressionUUID->"fab6908c-9449-48af-8bd1-528f91870724"]
}, Closed]],
Cell[CellGroupData[{
Cell[54346, 1135, 509, 17, 70, "Subsection",ExpressionUUID->"bb8b17c2-019e-4f0d-8928-9961c5111213"],
Cell[54858, 1154, 755, 25, 70, "Input",ExpressionUUID->"1dfaca56-8486-491a-bfbc-181afe4074ad",
 CellTags->"FirstInputCell"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[55662, 1185, 224, 7, 70, "CodeSectionDividerCloud",ExpressionUUID->"b2d1f9da-a8a9-4859-ba46-4bae6a1e6af0"],
Cell[55889, 1194, 624, 21, 70, "Exercise",ExpressionUUID->"879851d5-db31-496f-bfd3-6314bc6695a0",
 CounterAssignments->{{"SectionNumber", 29}, {"ExerciseNumber", 4}, {"WebOnly", 0}}],
Cell[CellGroupData[{
Cell[56538, 1219, 578, 18, 70, "ExerciseExpectedResult",ExpressionUUID->"3c61d1e4-18f5-4048-aed7-17fa6d36c650"],
Cell[57119, 1239, 8304, 165, 70, "ExerciseOutput",ExpressionUUID->"675b1e6b-fa40-472f-981c-b657ffe183cc"]
}, Closed]],
Cell[CellGroupData[{
Cell[65460, 1409, 509, 17, 70, "Subsection",ExpressionUUID->"f4a37c40-8f13-4f69-bad5-b10e1f1e4620"],
Cell[65972, 1428, 755, 25, 70, "Input",ExpressionUUID->"383e471b-edc3-4d3f-85c9-01dc7b5f68a9",
 CellTags->"FirstInputCell"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[66776, 1459, 224, 7, 70, "CodeSectionDividerCloud",ExpressionUUID->"5f84250b-148b-4b14-a8c7-6427fe26d98a"],
Cell[67003, 1468, 536, 17, 70, "Exercise",ExpressionUUID->"8272c67d-6f64-4650-84cd-43fa075865ac",
 CounterAssignments->{{"SectionNumber", 29}, {"ExerciseNumber", 5}, {"WebOnly", 0}}],
Cell[CellGroupData[{
Cell[67564, 1489, 578, 18, 70, "ExerciseExpectedResult",ExpressionUUID->"8f1a4a8b-62cc-48f8-9eea-37464d4da90f"],
Cell[68145, 1509, 9508, 185, 70, "ExerciseOutput",ExpressionUUID->"0d2fa633-90a6-4a11-b06c-369ba95bc77d"]
}, Closed]],
Cell[CellGroupData[{
Cell[77690, 1699, 509, 17, 70, "Subsection",ExpressionUUID->"6d9bebfd-944f-4371-ae89-227315557d19"],
Cell[78202, 1718, 755, 25, 70, "Input",ExpressionUUID->"5d315b26-f15e-4ddc-875e-1c201dacb269",
 CellTags->"FirstInputCell"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[79006, 1749, 224, 7, 70, "CodeSectionDividerCloud",ExpressionUUID->"811238f5-e7d4-4507-bf10-3781891aa62e"],
Cell[79233, 1758, 569, 18, 70, "Exercise",ExpressionUUID->"18b63fd7-0bd8-421c-9e21-4473ff0792b3",
 CounterAssignments->{{"SectionNumber", 29}, {"ExerciseNumber", 6}, {"WebOnly", 0}}],
Cell[CellGroupData[{
Cell[79827, 1780, 578, 18, 70, "ExerciseExpectedResult",ExpressionUUID->"1e4c6e6a-1fa1-4725-a790-b9761f8c03c8"],
Cell[80408, 1800, 57932, 979, 70, "ExerciseOutput",ExpressionUUID->"fd077123-687a-4d8f-b223-75211d793208"]
}, Closed]],
Cell[CellGroupData[{
Cell[138377, 2784, 509, 17, 70, "Subsection",ExpressionUUID->"c77e2ace-0dc1-4fba-a183-1a5468061703"],
Cell[138889, 2803, 755, 25, 70, "Input",ExpressionUUID->"07ee62ec-d08f-4004-8dff-47bfac04c343",
 CellTags->"FirstInputCell"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[139693, 2834, 224, 7, 70, "CodeSectionDividerCloud",ExpressionUUID->"7626b874-aa55-490c-8cbd-1edebd4579d5"],
Cell[139920, 2843, 536, 15, 70, "Exercise",ExpressionUUID->"6bf19eec-7c95-4917-a3dd-cc04e4664ed4",
 CounterAssignments->{{"SectionNumber", 29}, {"ExerciseNumber", 1}, {"WebOnly", 1}}],
Cell[CellGroupData[{
Cell[140481, 2862, 578, 18, 70, "ExerciseExpectedResult",ExpressionUUID->"a999ef64-7800-4a7e-b6cf-1f97294b1254"],
Cell[141062, 2882, 5590, 120, 70, "ExerciseOutput",ExpressionUUID->"675e7a99-fb99-4791-8563-cef210433f5e"]
}, Closed]],
Cell[CellGroupData[{
Cell[146689, 3007, 510, 17, 70, "Subsection",ExpressionUUID->"c5607fd6-84c8-44bf-9dbf-b29258ab1ccb"],
Cell[147202, 3026, 755, 25, 70, "Input",ExpressionUUID->"838bc5b2-878d-406d-9a13-6299e74b7601",
 CellTags->"FirstInputCell"]
}, Open  ]]
}, Open  ]],
Cell[147984, 3055, 224, 7, 70, "CodeSectionDividerCloud",ExpressionUUID->"e8045016-8c79-4e45-923d-165be0021da2"]
}
]
*)

(* End of internal cache information *)
(* NotebookSignature eSWsXf0Mq1@6KiIJcepR7N#0 *)
