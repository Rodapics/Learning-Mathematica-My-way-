(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 11.3' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    515696,      13148]
NotebookOptionsPosition[    390054,      10647]
NotebookOutlinePosition[    489236,      12681]
CellTagsIndexPosition[    488116,      12636]
WindowTitle->Reorganizaci\363n de listas: Una introducci\363n elemental a \
Wolfram Language
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell[BoxData[
 InterpretationBox[Cell["Reorganizaci\[OAcute]n de listas", "SectionInline"],
  $Line = 0; Null]], "SectionDoubleDigit",
 Editable->False,
 Deletable->False,
 ShowCellBracket->False,
 CounterAssignments->{{"Section", 29}, {"Subsection", 0}, {
   "Subsubsection", 0}, {"Exercise", 0}},
 CellTags->"p:177"],

Cell["\<\
Muchas veces se quiere reorganizar una lista que se haya generado en alg\
\[UAcute]n proceso, antes de poder utilizarla en otro. Por ejemplo, puede \
tenerse una lista de pares que se necesite convertir a un par de listas, o \
viceversa.\
\>", "Text",
 Editable->False,
 Deletable->False,
 ShowCellBracket->False],

Cell["\<\
Transponga una lista de pares para convertirla en un par de listas:\
\>", "CodeCaption",
 Editable->False,
 Deletable->False,
 ShowCellBracket->False,
 CellTags->"i:1"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Transpose", "[", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"1", ",", "2"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"3", ",", "4"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"5", ",", "6"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"7", ",", "8"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"9", ",", "10"}], "}"}]}], "}"}], "]"}]], "Input",
 Deletable->False,
 CellLabel->"In[1]:="],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", "3", ",", "5", ",", "7", ",", "9"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "4", ",", "6", ",", "8", ",", "10"}], "}"}]}], 
  "}"}]], "Output",
 Editable->False,
 CellEditDuplicate->False,
 Evaluatable->False,
 CellLabel->"Out[1]="]
}, Open  ]],

Cell["\<\
Transponga de nuevo el par de listas para obtener una lista de pares:\
\>", "CodeCaption",
 Editable->False,
 Deletable->False,
 ShowCellBracket->False],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Transpose", "[", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"1", ",", "3", ",", "5", ",", "7", ",", "9"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"2", ",", "4", ",", "6", ",", "8", ",", "10"}], "}"}]}], "}"}], 
  "]"}]], "Input",
 Deletable->False,
 CellLabel->"In[2]:="],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5", ",", "6"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"7", ",", "8"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"9", ",", "10"}], "}"}]}], "}"}]], "Output",
 Editable->False,
 CellEditDuplicate->False,
 Evaluatable->False,
 CellLabel->"Out[2]="]
}, Open  ]],

Cell[TextData[{
 ButtonBox["Thread",
  BaseStyle->"Link"],
 " es una operaci\[OAcute]n estrechamente relacionada con la anterior, que \
sirve, entre otras, para generar una entrada para ",
 ButtonBox["Graph",
  BaseStyle->"Link"],
 "."
}], "Text",
 Editable->False,
 Deletable->False,
 ShowCellBracket->False,
 CellTags->"i:2"],

Cell[TextData[{
 "\[OpenCurlyDoubleQuote]Enhebrar\[CloseCurlyDoubleQuote] ",
 Cell[BoxData[
  ButtonBox["\[Rule]",
   BaseStyle->"Link",
   ButtonData->"Rule"]], "InlineCode"],
 " a trav\[EAcute]s de los elementos de dos listas:"
}], "CodeCaption",
 Editable->False,
 Deletable->False,
 ShowCellBracket->False],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Thread", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", "3", ",", "5", ",", "7", ",", "9"}], "}"}], "\[Rule]", 
   RowBox[{"{", 
    RowBox[{"2", ",", "4", ",", "6", ",", "8", ",", "10"}], "}"}]}], 
  "]"}]], "Input",
 Deletable->False,
 CellLabel->"In[3]:="],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"1", "\[Rule]", "2"}], ",", 
   RowBox[{"3", "\[Rule]", "4"}], ",", 
   RowBox[{"5", "\[Rule]", "6"}], ",", 
   RowBox[{"7", "\[Rule]", "8"}], ",", 
   RowBox[{"9", "\[Rule]", "10"}]}], "}"}]], "Output",
 Editable->False,
 CellEditDuplicate->False,
 Evaluatable->False,
 CellLabel->"Out[3]="]
}, Open  ]],

Cell[TextData[{
 ButtonBox["Partition",
  BaseStyle->"Link"],
 " toma una lista y la particiona en bloques de un tama\[NTilde]o \
especificado."
}], "Text",
 Editable->False,
 Deletable->False,
 ShowCellBracket->False,
 CellTags->"i:3"],

Cell["\<\
Particione una lista con 12 elementos en bloques de tama\[NTilde]o 3:\
\>", "CodeCaption",
 Editable->False,
 Deletable->False,
 ShowCellBracket->False],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Partition", "[", 
  RowBox[{
   RowBox[{"Range", "[", "12", "]"}], ",", "3"}], "]"}]], "Input",
 Deletable->False,
 CellLabel->"In[4]:="],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", "2", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4", ",", "5", ",", "6"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"7", ",", "8", ",", "9"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"10", ",", "11", ",", "12"}], "}"}]}], "}"}]], "Output",
 Editable->False,
 CellEditDuplicate->False,
 Evaluatable->False,
 CellLabel->"Out[4]="]
}, Open  ]],

Cell["\<\
Particione una lista de caracteres y mostrarlos en una rejilla:\
\>", "CodeCaption",
 Editable->False,
 Deletable->False,
 ShowCellBracket->False,
 CellTags->"i:4"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Grid", "[", 
  RowBox[{
   RowBox[{"Partition", "[", 
    RowBox[{
     RowBox[{
     "Characters", "[", 
      "\"\<An array of text made in the Wolfram Language\>\"", "]"}], ",", 
     "9"}], "]"}], ",", 
   RowBox[{"Frame", "\[Rule]", "All"}]}], "]"}]], "Input",
 Deletable->False,
 CellLabel->"In[5]:="],

Cell[BoxData[
 TagBox[GridBox[{
    {"\<\"A\"\>", "\<\"n\"\>", "\<\" \"\>", "\<\"a\"\>", "\<\"r\"\>", \
"\<\"r\"\>", "\<\"a\"\>", "\<\"y\"\>", "\<\" \"\>"},
    {"\<\"o\"\>", "\<\"f\"\>", "\<\" \"\>", "\<\"t\"\>", "\<\"e\"\>", \
"\<\"x\"\>", "\<\"t\"\>", "\<\" \"\>", "\<\"m\"\>"},
    {"\<\"a\"\>", "\<\"d\"\>", "\<\"e\"\>", "\<\" \"\>", "\<\"i\"\>", \
"\<\"n\"\>", "\<\" \"\>", "\<\"t\"\>", "\<\"h\"\>"},
    {"\<\"e\"\>", "\<\" \"\>", "\<\"W\"\>", "\<\"o\"\>", "\<\"l\"\>", \
"\<\"f\"\>", "\<\"r\"\>", "\<\"a\"\>", "\<\"m\"\>"},
    {"\<\" \"\>", "\<\"L\"\>", "\<\"a\"\>", "\<\"n\"\>", "\<\"g\"\>", \
"\<\"u\"\>", "\<\"a\"\>", "\<\"g\"\>", "\<\"e\"\>"}
   },
   AutoDelete->False,
   GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",
 Editable->False,
 CellEditDuplicate->False,
 Evaluatable->False,
 CellLabel->"Out[5]="]
}, Open  ]],

Cell[TextData[{
 "Si no se especifica lo contrario, ",
 ButtonBox["Partition",
  BaseStyle->"Link"],
 " descompone una lista en bloques que no se traslapen. Sin embargo, puede \
pedirse que la lista se descomponga en bloques que permitan un traslape \
mediante un desplazamiento especificado en la lista. "
}], "Text",
 Editable->False,
 Deletable->False,
 ShowCellBracket->False],

Cell["\<\
Particione una lista en bloques de tama\[NTilde]o 3, con un desplazamiento de \
1:\
\>", "CodeCaption",
 Editable->False,
 Deletable->False,
 ShowCellBracket->False,
 CellTags->"i:5"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Partition", "[", 
  RowBox[{
   RowBox[{"Range", "[", "10", "]"}], ",", "3", ",", "1"}], "]"}]], "Input",
 Deletable->False,
 CellLabel->"In[6]:="],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", "2", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "3", ",", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", "4", ",", "5"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4", ",", "5", ",", "6"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5", ",", "6", ",", "7"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"6", ",", "7", ",", "8"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"7", ",", "8", ",", "9"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"8", ",", "9", ",", "10"}], "}"}]}], "}"}]], "Output",
 Editable->False,
 CellEditDuplicate->False,
 Evaluatable->False,
 CellTags->"LastCellOfAPage",
 CellLabel->"Out[6]="]
}, Open  ]],

Cell["\<\
Particione una lista de caracteres en bloques con un desplazamiento de 1:\
\>", "CodeCaption",
 Editable->False,
 Deletable->False,
 ShowCellBracket->False,
 CellTags->"p:178"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Grid", "[", 
  RowBox[{
   RowBox[{"Partition", "[", 
    RowBox[{
     RowBox[{"Characters", "[", "\"\<Wolfram Language\>\"", "]"}], ",", "12", 
     ",", "1"}], "]"}], ",", 
   RowBox[{"Frame", "\[Rule]", "All"}]}], "]"}]], "Input",
 Deletable->False,
 CellLabel->"In[7]:="],

Cell[BoxData[
 TagBox[GridBox[{
    {"\<\"W\"\>", "\<\"o\"\>", "\<\"l\"\>", "\<\"f\"\>", "\<\"r\"\>", \
"\<\"a\"\>", "\<\"m\"\>", "\<\" \"\>", "\<\"L\"\>", "\<\"a\"\>", "\<\"n\"\>", \
"\<\"g\"\>"},
    {"\<\"o\"\>", "\<\"l\"\>", "\<\"f\"\>", "\<\"r\"\>", "\<\"a\"\>", \
"\<\"m\"\>", "\<\" \"\>", "\<\"L\"\>", "\<\"a\"\>", "\<\"n\"\>", "\<\"g\"\>", \
"\<\"u\"\>"},
    {"\<\"l\"\>", "\<\"f\"\>", "\<\"r\"\>", "\<\"a\"\>", "\<\"m\"\>", "\<\" \
\"\>", "\<\"L\"\>", "\<\"a\"\>", "\<\"n\"\>", "\<\"g\"\>", "\<\"u\"\>", \
"\<\"a\"\>"},
    {"\<\"f\"\>", "\<\"r\"\>", "\<\"a\"\>", "\<\"m\"\>", "\<\" \"\>", \
"\<\"L\"\>", "\<\"a\"\>", "\<\"n\"\>", "\<\"g\"\>", "\<\"u\"\>", "\<\"a\"\>", \
"\<\"g\"\>"},
    {"\<\"r\"\>", "\<\"a\"\>", "\<\"m\"\>", "\<\" \"\>", "\<\"L\"\>", \
"\<\"a\"\>", "\<\"n\"\>", "\<\"g\"\>", "\<\"u\"\>", "\<\"a\"\>", "\<\"g\"\>", \
"\<\"e\"\>"}
   },
   AutoDelete->False,
   GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",
 Editable->False,
 CellEditDuplicate->False,
 Evaluatable->False,
 CellLabel->"Out[7]="]
}, Open  ]],

Cell["En vez de lo anterior, use un desplazamiento de 2:", "CodeCaption",
 Editable->False,
 Deletable->False,
 ShowCellBracket->False],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Grid", "[", 
  RowBox[{
   RowBox[{"Partition", "[", 
    RowBox[{
     RowBox[{"Characters", "[", "\"\<Wolfram Language\>\"", "]"}], ",", "12", 
     ",", "2"}], "]"}], ",", 
   RowBox[{"Frame", "\[Rule]", "All"}]}], "]"}]], "Input",
 Deletable->False,
 CellLabel->"In[8]:="],

Cell[BoxData[
 TagBox[GridBox[{
    {"\<\"W\"\>", "\<\"o\"\>", "\<\"l\"\>", "\<\"f\"\>", "\<\"r\"\>", \
"\<\"a\"\>", "\<\"m\"\>", "\<\" \"\>", "\<\"L\"\>", "\<\"a\"\>", "\<\"n\"\>", \
"\<\"g\"\>"},
    {"\<\"l\"\>", "\<\"f\"\>", "\<\"r\"\>", "\<\"a\"\>", "\<\"m\"\>", "\<\" \
\"\>", "\<\"L\"\>", "\<\"a\"\>", "\<\"n\"\>", "\<\"g\"\>", "\<\"u\"\>", \
"\<\"a\"\>"},
    {"\<\"r\"\>", "\<\"a\"\>", "\<\"m\"\>", "\<\" \"\>", "\<\"L\"\>", \
"\<\"a\"\>", "\<\"n\"\>", "\<\"g\"\>", "\<\"u\"\>", "\<\"a\"\>", "\<\"g\"\>", \
"\<\"e\"\>"}
   },
   AutoDelete->False,
   GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",
 Editable->False,
 CellEditDuplicate->False,
 Evaluatable->False,
 CellLabel->"Out[8]="]
}, Open  ]],

Cell[TextData[{
 ButtonBox["Partition",
  BaseStyle->"Link"],
 " toma una lista y la descompone en sublistas. ",
 ButtonBox["Flatten",
  BaseStyle->"Link"],
 " \[OpenCurlyDoubleQuote]aplana\[CloseCurlyDoubleQuote] las sublistas."
}], "Text",
 Editable->False,
 Deletable->False,
 ShowCellBracket->False,
 CellTags->"i:6"],

Cell["\<\
Forme una lista de las listas de los d\[IAcute]gitos de enteros consecutivos:\
\
\>", "CodeCaption",
 Editable->False,
 Deletable->False,
 ShowCellBracket->False],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"IntegerDigits", "/@", 
  RowBox[{"Range", "[", "20", "]"}]}]], "Input",
 Deletable->False,
 CellLabel->"In[9]:="],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", "1", "}"}], ",", 
   RowBox[{"{", "2", "}"}], ",", 
   RowBox[{"{", "3", "}"}], ",", 
   RowBox[{"{", "4", "}"}], ",", 
   RowBox[{"{", "5", "}"}], ",", 
   RowBox[{"{", "6", "}"}], ",", 
   RowBox[{"{", "7", "}"}], ",", 
   RowBox[{"{", "8", "}"}], ",", 
   RowBox[{"{", "9", "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "5"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "6"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "7"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "8"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "9"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "0"}], "}"}]}], "}"}]], "Output",
 Editable->False,
 CellEditDuplicate->False,
 Evaluatable->False,
 CellLabel->"Out[9]="]
}, Open  ]],

Cell["Obtenga la versi\[OAcute]n aplanada:", "CodeCaption",
 Editable->False,
 Deletable->False,
 ShowCellBracket->False],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Flatten", "[", 
  RowBox[{"IntegerDigits", "/@", 
   RowBox[{"Range", "[", "20", "]"}]}], "]"}]], "Input",
 Deletable->False,
 CellLabel->"In[10]:="],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "1", ",", "2", ",", "3", ",", "4", ",", "5", ",", "6", ",", "7", ",", "8", 
   ",", "9", ",", "1", ",", "0", ",", "1", ",", "1", ",", "1", ",", "2", ",", 
   "1", ",", "3", ",", "1", ",", "4", ",", "1", ",", "5", ",", "1", ",", "6", 
   ",", "1", ",", "7", ",", "1", ",", "8", ",", "1", ",", "9", ",", "2", ",", 
   "0"}], "}"}]], "Output",
 Editable->False,
 CellEditDuplicate->False,
 Evaluatable->False,
 CellLabel->"Out[10]="]
}, Open  ]],

Cell["Produzca un gr\[AAcute]fico con la secuencia de d\[IAcute]gitos:", \
"CodeCaption",
 Editable->False,
 Deletable->False,
 ShowCellBracket->False],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListLinePlot", "[", 
  RowBox[{"Flatten", "[", 
   RowBox[{"IntegerDigits", "/@", 
    RowBox[{"Range", "[", "20", "]"}]}], "]"}], "]"}]], "Input",
 Deletable->False,
 CellLabel->"In[11]:="],

Cell[BoxData[
 GraphicsBox[{{}, {{}, {}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.019444444444444445`],
      AbsoluteThickness[1.6], LineBox[CompressedData["
1:eJxdkEsKwlAQBAdXLrNw4UIwCSIiQdQk/jU5g0cQXHt1j6Bi9+LVwKMomgfT
Uzxe9+cgIqbf9+N/3l3K6FMOwQwcgWNwAuZgCc76dJ+599EskC/hFXzl/+Ia
+Ubuflvktdx9G+St3P13yPdy3+OA/Cj3fU7Iz3Lf64L8Ki/Fm+i+nT0+01kj
RA==
      "]]}}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->180,
  Method->{},
  PlotRange->{{0., 31.}, {0, 9.}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 Editable->False,
 CellEditDuplicate->False,
 Evaluatable->False,
 CellLabel->"Out[11]="]
}, Open  ]],

Cell[TextData[{
 "Normalmente, ",
 ButtonBox["Flatten",
  BaseStyle->"Link"],
 " aplana en todos los niveles de una lista. Sin embargo, muchas veces se \
querr\[IAcute]a aplanar, por ejemplo, solo un nivel de la lista. Aqu\[IAcute] \
se forma una tabla de 4\[Times]4, donde cada elemento es, a su vez, una lista."
}], "Text",
 Editable->False,
 Deletable->False,
 ShowCellBracket->False],

Cell["Forme una lista de listas de listas:", "CodeCaption",
 Editable->False,
 Deletable->False,
 ShowCellBracket->False],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Table", "[", 
  RowBox[{
   RowBox[{"IntegerDigits", "[", 
    RowBox[{"i", "^", "j"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"i", ",", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"j", ",", "4"}], "}"}]}], "]"}]], "Input",
 Deletable->False,
 CellLabel->"In[12]:="],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", "1", "}"}], ",", 
     RowBox[{"{", "1", "}"}], ",", 
     RowBox[{"{", "1", "}"}], ",", 
     RowBox[{"{", "1", "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", "2", "}"}], ",", 
     RowBox[{"{", "4", "}"}], ",", 
     RowBox[{"{", "8", "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "6"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", "3", "}"}], ",", 
     RowBox[{"{", "9", "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"2", ",", "7"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"8", ",", "1"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", "4", "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "6"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"6", ",", "4"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"2", ",", "5", ",", "6"}], "}"}]}], "}"}]}], "}"}]], "Output",
 Editable->False,
 CellEditDuplicate->False,
 Evaluatable->False,
 CellTags->"LastCellOfAPage",
 CellLabel->"Out[12]="]
}, Open  ]],

Cell["Aplane todo el resultado:", "CodeCaption",
 Editable->False,
 Deletable->False,
 ShowCellBracket->False,
 CellTags->"p:179"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Flatten", "[", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"IntegerDigits", "[", 
     RowBox[{"i", "^", "j"}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", "4"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"j", ",", "4"}], "}"}]}], "]"}], "]"}]], "Input",
 Deletable->False,
 CellLabel->"In[13]:="],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "1", ",", "1", ",", "1", ",", "1", ",", "2", ",", "4", ",", "8", ",", "1", 
   ",", "6", ",", "3", ",", "9", ",", "2", ",", "7", ",", "8", ",", "1", ",", 
   "4", ",", "1", ",", "6", ",", "6", ",", "4", ",", "2", ",", "5", ",", 
   "6"}], "}"}]], "Output",
 Editable->False,
 CellEditDuplicate->False,
 Evaluatable->False,
 CellLabel->"Out[13]="]
}, Open  ]],

Cell["Aplane solo un nivel de la lista:", "CodeCaption",
 Editable->False,
 Deletable->False,
 ShowCellBracket->False],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Flatten", "[", 
  RowBox[{
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"IntegerDigits", "[", 
      RowBox[{"i", "^", "j"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "4"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"j", ",", "4"}], "}"}]}], "]"}], ",", "1"}], "]"}]], "Input",
 Deletable->False,
 CellLabel->"In[14]:="],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", "1", "}"}], ",", 
   RowBox[{"{", "1", "}"}], ",", 
   RowBox[{"{", "1", "}"}], ",", 
   RowBox[{"{", "1", "}"}], ",", 
   RowBox[{"{", "2", "}"}], ",", 
   RowBox[{"{", "4", "}"}], ",", 
   RowBox[{"{", "8", "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "6"}], "}"}], ",", 
   RowBox[{"{", "3", "}"}], ",", 
   RowBox[{"{", "9", "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "7"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"8", ",", "1"}], "}"}], ",", 
   RowBox[{"{", "4", "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "6"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"6", ",", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "5", ",", "6"}], "}"}]}], "}"}]], "Output",
 Editable->False,
 CellEditDuplicate->False,
 Evaluatable->False,
 CellLabel->"Out[14]="]
}, Open  ]],

Cell[TextData[{
 ButtonBox["ArrayFlatten",
  BaseStyle->"Link"],
 " es una generalizaci\[OAcute]n de ",
 ButtonBox["Flatten",
  BaseStyle->"Link"],
 ", que toma arreglos de arreglos y los aplana para hacer arreglos \
individuales."
}], "Text",
 Editable->False,
 Deletable->False,
 ShowCellBracket->False,
 CellTags->"i:7"],

Cell["\<\
Aqu\[IAcute] se genera una estructura con anidaci\[OAcute]n profunda que \
resulta dif\[IAcute]cil de comprender:\
\>", "CodeCaption",
 Editable->False,
 Deletable->False,
 ShowCellBracket->False],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"NestList", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"#", ",", "0"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"#", ",", "#"}], "}"}]}], "}"}], "&"}], ",", 
   RowBox[{"{", 
    RowBox[{"{", "1", "}"}], "}"}], ",", "2"}], "]"}]], "Input",
 Deletable->False,
 CellLabel->"In[15]:="],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"{", "1", "}"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"{", "1", "}"}], "}"}], ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"{", "1", "}"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"{", "1", "}"}], "}"}]}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"{", "1", "}"}], "}"}], ",", "0"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"{", "1", "}"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"{", "1", "}"}], "}"}]}], "}"}]}], "}"}], ",", "0"}], 
      "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"{", "1", "}"}], "}"}], ",", "0"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"{", "1", "}"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"{", "1", "}"}], "}"}]}], "}"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"{", "1", "}"}], "}"}], ",", "0"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"{", "1", "}"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"{", "1", "}"}], "}"}]}], "}"}]}], "}"}]}], "}"}]}], 
    "}"}]}], "}"}]], "Output",
 Editable->False,
 CellEditDuplicate->False,
 Evaluatable->False,
 CellLabel->"Out[15]="]
}, Open  ]],

Cell[TextData[{
 ButtonBox["ArrayFlatten",
  BaseStyle->"Link"],
 " la convierte en una estructura un poco m\[AAcute]s f\[AAcute]cil de \
entender:"
}], "CodeCaption",
 Editable->False,
 Deletable->False,
 ShowCellBracket->False,
 CellTags->"i:8"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"NestList", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"ArrayFlatten", "[", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"#", ",", "0"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"#", ",", "#"}], "}"}]}], "}"}], "]"}], "&"}], ",", 
   RowBox[{"{", 
    RowBox[{"{", "1", "}"}], "}"}], ",", "2"}], "]"}]], "Input",
 Deletable->False,
 CellLabel->"In[16]:="],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"{", "1", "}"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "1"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", "0", ",", "0", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "1", ",", "0", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "0", ",", "1", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "1", ",", "1", ",", "1"}], "}"}]}], "}"}]}], 
  "}"}]], "Output",
 Editable->False,
 CellEditDuplicate->False,
 Evaluatable->False,
 CellLabel->"Out[16]="]
}, Open  ]],

Cell[TextData[{
 "Con ",
 ButtonBox["ArrayPlot",
  BaseStyle->"Link"],
 ", es considerablemente m\[AAcute]s sencillo darse cuenta de lo que est\
\[AAcute] sucediendo:"
}], "CodeCaption",
 Editable->False,
 Deletable->False,
 ShowCellBracket->False],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ArrayPlot", "/@", 
  RowBox[{"NestList", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"ArrayFlatten", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"#", ",", "0"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"#", ",", "#"}], "}"}]}], "}"}], "]"}], "&"}], ",", 
    RowBox[{"{", 
     RowBox[{"{", "1", "}"}], "}"}], ",", "4"}], "]"}]}]], "Input",
 Deletable->False,
 CellLabel->"In[17]:="],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   GraphicsBox[RasterBox[{{0}}, {{0, 0}, {1, 1}}, {0, 1}],
    Frame->Automatic,
    FrameLabel->{None, None},
    FrameTicks->{{None, None}, {None, None}},
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]],
    ImageSize->{89.81640625, Automatic},
    Method->{
     "DefaultBoundaryStyle" -> Automatic, "DefaultPlotStyle" -> Automatic}], 
   ",", 
   GraphicsBox[RasterBox[{{0, 0}, {0, 1}}, {{0, 0}, {2, 2}}, {0, 1}],
    Frame->Automatic,
    FrameLabel->{None, None},
    FrameTicks->{{None, None}, {None, None}},
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]],
    ImageSize->{90.47265625, Automatic},
    Method->{
     "DefaultBoundaryStyle" -> Automatic, "DefaultPlotStyle" -> Automatic}], 
   ",", 
   GraphicsBox[
    RasterBox[{{0, 0, 0, 0}, {0, 1, 0, 1}, {0, 0, 1, 1}, {0, 1, 1, 1}}, {{0, 
     0}, {4, 4}}, {0, 1}],
    Frame->Automatic,
    FrameLabel->{None, None},
    FrameTicks->{{None, None}, {None, None}},
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]],
    ImageSize->{90.2109375, Automatic},
    Method->{
     "DefaultBoundaryStyle" -> Automatic, "DefaultPlotStyle" -> Automatic}], 
   ",", 
   GraphicsBox[
    RasterBox[{{0, 0, 0, 0, 0, 0, 0, 0}, {0, 1, 0, 1, 0, 1, 0, 1}, {0, 0, 1, 
     1, 0, 0, 1, 1}, {0, 1, 1, 1, 0, 1, 1, 1}, {0, 0, 0, 0, 1, 1, 1, 1}, {0, 
     1, 0, 1, 1, 1, 1, 1}, {0, 0, 1, 1, 1, 1, 1, 1}, {0, 1, 1, 1, 1, 1, 1, 
     1}}, {{0, 0}, {8, 8}}, {0, 1}],
    Frame->Automatic,
    FrameLabel->{None, None},
    FrameTicks->{{None, None}, {None, None}},
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]],
    ImageSize->{90.0859375, Automatic},
    Method->{
     "DefaultBoundaryStyle" -> Automatic, "DefaultPlotStyle" -> Automatic}], 
   ",", 
   GraphicsBox[
    RasterBox[{{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 1, 0, 1, 
     0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1}, {0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1,
      0, 0, 1, 1}, {0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1}, {0, 0, 0,
      0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1}, {0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 
     0, 1, 1, 1, 1, 1}, {0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1}, {0, 
     1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1}, {0, 0, 0, 0, 0, 0, 0, 0, 1,
      1, 1, 1, 1, 1, 1, 1}, {0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 
     1}, {0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1}, {0, 1, 1, 1, 0, 1, 
     1, 1, 1, 1, 1, 1, 1, 1, 1, 1}, {0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
      1, 1}, {0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1}, {0, 0, 1, 1, 1,
      1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1}, {0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
     1, 1, 1, 1}}, {{0, 0}, {16, 16}}, {0, 1}],
    Frame->Automatic,
    FrameLabel->{None, None},
    FrameTicks->{{None, None}, {None, None}},
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]],
    ImageSize->{90.43359375, Automatic},
    Method->{
     "DefaultBoundaryStyle" -> Automatic, "DefaultPlotStyle" -> Automatic}]}],
   "}"}]], "Output",
 Editable->False,
 CellEditDuplicate->False,
 Evaluatable->False,
 CellLabel->"Out[17]="]
}, Open  ]],

Cell[TextData[{
 "Genere un ",
 StyleBox["patr\[OAcute]n de Sierpinski fractal",
  FontSlant->"Italic"],
 " con 8 niveles de anidaci\[OAcute]n:"
}], "CodeCaption",
 Editable->False,
 Deletable->False,
 ShowCellBracket->False,
 CellTags->"i:9"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ArrayPlot", "[", 
  RowBox[{"Nest", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"ArrayFlatten", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"#", ",", "0"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"#", ",", "#"}], "}"}]}], "}"}], "]"}], "&"}], ",", 
    RowBox[{"{", 
     RowBox[{"{", "1", "}"}], "}"}], ",", "8"}], "]"}], "]"}]], "Input",
 Deletable->False,
 CellLabel->"In[18]:="],

Cell[BoxData[
 GraphicsBox[RasterBox[CompressedData["
1:eJzlmVFuGzEMRKXepFfqEXKB3v+v3daLZqfxTmhGIjl8hiAQBDOODIIY8Pvb
zx9v38Zv5uN0Zzb/jNn7zObnaIHO959XaHz/vfres/l9jsGu8ePTNh7/eqFl
POe712gYj/ev0TC+vEbD+Br2i2fzGJjd8vBplx/X0y4Pp13+0RMf9UaL/ONV
PuqNFvlxvdvl4W6XfzIX2+SfzMU2+SdzsU1+Pu+NFvmb3miRv32dBvn7tH7+
Pq2fJ5Dy+vXkI18/7o98PTny9ePqj/GWr3+80rNbvn7c3/L15Javhzn52bkp
Uw9z8rNzU6Ye5uRn56ZM/bz2ymfnpkw99IqldyTq4bUsvSNRP+5j+XoSy9cb
/bJcPXza1Y/raVcPp1290S/L1T9e7ZXekagf17tdPdzt6l+cmzL1L85NmfoX
56ZM/Xy9dyTqHb0jUe96PYF6X3n9el95/XonTvl4feenvP7wnfL6zlNef1z9
s/Uur/94xVfv8vrDd5fXd97l9WGOWuPy+jBHrXF5fZij1ri8/rz2kjUurw+9
ZI3L68NrWuPy+sMXl9d3xuX1iZ/+ar+dTh8+1nx5/XE91nx5fTjWfHl94qe/
2m+n03+86rPe+mq/nU5/XG9rvrw+3NZ8eX0yV1fN3TT6ZK6umrtp9MlcXTV3
0+jP+95aNXfT6JPeWtl7KfTJ667svRT65M+vff0E+s58eX3CYvl4ffKR1x/3
R16fHHl98Ner/XY6ffDXq/12Ov1xf8vrk1teH+bsrrmbRh/m7K65m0Yf5uyu
uZtGf157bdfcTaMPvbaz91Low2vv7L0U+uM+ltcnsbz+Zr+dTn+z306nv9lv
p9OH005/s99Op7/Zb6fT3+y30+nD3U4/aO6m0Q+au2n0g+ZuGv0Z13sp9AN7
L4V+6Osn0I+Vj9ePlY/XDyb43//Pf+/+RMP276tPNOi/d59ozh6MuqNh+/fV
dzRs/776jmYE39HgHN4dR8P276vjaNj+fXUcDc7h3XE02Iu742iwF3fH0bD9
++o4Gvw6u+NomB9fnY+G+fHV+WiYH1+dj2bA2Z2Phvnx1flomB9fnY+G+fHV
+WgG3Lvz0bC5vDofDZvLq/PRsLm8Oh8Nm8ur89Gw3lydj4b15up8NOzXWZ2P
hn291flo0J9b/bq3Phrvft5bHw36c6tf99ZHg/7c6te99dGgP7f6dW99NN79
fPb9PsO7n/fWR4P+3OrXvfXR4Jy2zm1vfTTe/Xz2/T7Du5/Pvt9n4Jy2zm1v
fTTYq9be9dZH493PZ9/vM7z7+ez7fQZ+XevX99ZH4/Xr1fw+4vXr1fw+4vXr
1fw+4vXr1fw+4vXr1fw+4vXr1fw+4vXr1fw+4vXr1fw+4p3bVef+iXduV537
J965XXXun3jndtW5f+Lt3cq9f+Dt3cq9f+D99Wr/+v7eLf7v0/09I/r7e2H7
++r7fQbb31ff7zPQv1tPddC/W+/qsP199f0+g+3vq+/3GejfrXd1cI5b4+qw
/X31/T6D7e+r7/cZOMetcXWwl61xddj+vvp+n8H299X3+wz8d6xxdZifV/P7
CPPzan4fYX5eze8jzM+r+X2E+Xk1v48wP6/m9xHm59X8PsL8vJrfR9hcV537
J2yuq879EzbXVef+CZvrqnP/hPW2cu8fsN5W7v0D9utq//q8t8X/fbr/j/5+
q1Hf7zPU9/sM9Pfqfh9R3+8z1Pf7DPX9PgP9vbrfR9T3+wz1/T5Dfb/PUN/v
M9T3+wz1/T5Dfb/PUN/vM7r5faSb30e6+X2km99Huvl9pJvfR7r5faSb30e6
zv2TrnP/pOvcP+k690869/5B594/6P3r9+79g18pFOgK
   "], {{0, 0}, {256, 256}}, {0, 
   1}],
  Frame->Automatic,
  FrameLabel->{None, None},
  FrameTicks->{{None, None}, {None, None}},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->{174.97265625, Automatic},
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultPlotStyle" -> 
    Automatic}]], "Output",
 Editable->False,
 CellEditDuplicate->False,
 Evaluatable->False,
 CellTags->"LastCellOfAPage",
 CellLabel->"Out[18]="]
}, Open  ]],

Cell[TextData[{
 "Hay muchas otras maneras de reorganizar listas. Por ejemplo, ",
 ButtonBox["Split",
  BaseStyle->"Link"],
 " subdivide una lista en secuencias de elementos id\[EAcute]nticos."
}], "Text",
 Editable->False,
 Deletable->False,
 ShowCellBracket->False,
 CellTags->{"p:180", "i:10"}],

Cell["\<\
Subdivida una lista en secuencias de elementos id\[EAcute]nticos consecutivos:\
\>", "CodeCaption",
 Editable->False,
 Deletable->False,
 ShowCellBracket->False],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Split", "[", 
  RowBox[{"{", 
   RowBox[{
   "1", ",", "1", ",", "1", ",", "2", ",", "2", ",", "1", ",", "1", ",", "3", 
    ",", "1", ",", "1", ",", "1", ",", "2"}], "}"}], "]"}]], "Input",
 Deletable->False,
 CellLabel->"In[19]:="],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", "1", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "1"}], "}"}], ",", 
   RowBox[{"{", "3", "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "1", ",", "1"}], "}"}], ",", 
   RowBox[{"{", "2", "}"}]}], "}"}]], "Output",
 Editable->False,
 CellEditDuplicate->False,
 Evaluatable->False,
 CellLabel->"Out[19]="]
}, Open  ]],

Cell[TextData[{
 ButtonBox["Gather",
  BaseStyle->"Link"],
 ", por otro lado, agrupa los elementos que sean id\[EAcute]nticos, \
dondequiera que \[EAcute]stos aparezcan."
}], "Text",
 Editable->False,
 Deletable->False,
 ShowCellBracket->False,
 CellTags->"i:11"],

Cell["Agrupe en listas los elementos id\[EAcute]nticos:", "CodeCaption",
 Editable->False,
 Deletable->False,
 ShowCellBracket->False],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Gather", "[", 
  RowBox[{"{", 
   RowBox[{
   "1", ",", "1", ",", "1", ",", "2", ",", "2", ",", "1", ",", "1", ",", "3", 
    ",", "1", ",", "1", ",", "1", ",", "2"}], "}"}], "]"}]], "Input",
 Deletable->False,
 CellLabel->"In[20]:="],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
    "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", 
     "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "2", ",", "2"}], "}"}], ",", 
   RowBox[{"{", "3", "}"}]}], "}"}]], "Output",
 Editable->False,
 CellEditDuplicate->False,
 Evaluatable->False,
 CellLabel->"Out[20]="]
}, Open  ]],

Cell[TextData[{
 ButtonBox["GatherBy",
  BaseStyle->"Link"],
 " agrupa los elementos seg\[UAcute]n el resultado de aplicar una funci\
\[OAcute]n a cada uno. Ahora, se usa ",
 ButtonBox["LetterQ",
  BaseStyle->"Link"],
 ", de modo tal que agrupa por separado los caracteres que son letras y los \
que no lo son."
}], "Text",
 Editable->False,
 Deletable->False,
 ShowCellBracket->False,
 CellTags->"i:12"],

Cell["Agrupe los caracteres seg\[UAcute]n sean letras o no lo sean:", \
"CodeCaption",
 Editable->False,
 Deletable->False,
 ShowCellBracket->False],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"GatherBy", "[", 
  RowBox[{
   RowBox[{
   "Characters", "[", "\"\<It's true that 2+2 is equal to 4!\>\"", "]"}], ",",
    "LetterQ"}], "]"}]], "Input",
 Deletable->False,
 CellLabel->"In[21]:="],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"\<\"I\"\>", ",", "\<\"t\"\>", ",", "\<\"s\"\>", ",", "\<\"t\"\>",
      ",", "\<\"r\"\>", ",", "\<\"u\"\>", ",", "\<\"e\"\>", ",", "\<\"t\"\>", 
     ",", "\<\"h\"\>", ",", "\<\"a\"\>", ",", "\<\"t\"\>", ",", "\<\"i\"\>", 
     ",", "\<\"s\"\>", ",", "\<\"e\"\>", ",", "\<\"q\"\>", ",", "\<\"u\"\>", 
     ",", "\<\"a\"\>", ",", "\<\"l\"\>", ",", "\<\"t\"\>", ",", "\<\"o\"\>"}],
     "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"'\"\>", ",", "\<\" \"\>", ",", "\<\" \"\>", ",", "\<\" \"\>",
      ",", "\<\"2\"\>", ",", "\<\"+\"\>", ",", "\<\"2\"\>", ",", "\<\" \"\>", 
     ",", "\<\" \"\>", ",", "\<\" \"\>", ",", "\<\" \"\>", ",", "\<\"4\"\>", 
     ",", "\<\"!\"\>"}], "}"}]}], "}"}]], "Output",
 Editable->False,
 CellEditDuplicate->False,
 Evaluatable->False,
 CellLabel->"Out[21]="]
}, Open  ]],

Cell[TextData[{
 ButtonBox["SortBy",
  BaseStyle->"Link"],
 " ordena seg\[UAcute]n el resultado de aplicar una funci\[OAcute]n."
}], "Text",
 Editable->False,
 Deletable->False,
 ShowCellBracket->False,
 CellTags->"i:13"],

Cell[TextData[{
 ButtonBox["Sort",
  BaseStyle->"Link"],
 " normalmente ordena las listas cortas antes de las m\[AAcute]s largas:"
}], "CodeCaption",
 Editable->False,
 Deletable->False,
 ShowCellBracket->False,
 CellTags->"i:14"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Sort", "[", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"IntegerDigits", "[", 
     RowBox[{"2", "^", "n"}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"n", ",", "10"}], "}"}]}], "]"}], "]"}]], "Input",
 Deletable->False,
 CellLabel->"In[22]:="],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", "2", "}"}], ",", 
   RowBox[{"{", "4", "}"}], ",", 
   RowBox[{"{", "8", "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "6"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"6", ",", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "2", ",", "8"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "5", ",", "6"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5", ",", "1", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "0", ",", "2", ",", "4"}], "}"}]}], "}"}]], "Output",
 Editable->False,
 CellEditDuplicate->False,
 Evaluatable->False,
 CellLabel->"Out[22]="]
}, Open  ]],

Cell[TextData[{
 "Ahora se le pide a ",
 ButtonBox["SortBy",
  BaseStyle->"Link"],
 " que haga el ordenamiento de acuerdo al primer elemento de cada lista:"
}], "CodeCaption",
 Editable->False,
 Deletable->False,
 ShowCellBracket->False],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"SortBy", "[", 
  RowBox[{
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"IntegerDigits", "[", 
      RowBox[{"2", "^", "n"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"n", ",", "10"}], "}"}]}], "]"}], ",", "First"}], 
  "]"}]], "Input",
 Deletable->False,
 CellLabel->"In[23]:="],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", "6"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "2", ",", "8"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "0", ",", "2", ",", "4"}], "}"}], ",", 
   RowBox[{"{", "2", "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "5", ",", "6"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", "2"}], "}"}], ",", 
   RowBox[{"{", "4", "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5", ",", "1", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"6", ",", "4"}], "}"}], ",", 
   RowBox[{"{", "8", "}"}]}], "}"}]], "Output",
 Editable->False,
 CellEditDuplicate->False,
 Evaluatable->False,
 CellLabel->"Out[23]="]
}, Open  ]],

Cell[TextData[{
 ButtonBox["Sort",
  BaseStyle->"Link"],
 " ordena una lista. ",
 ButtonBox["Union",
  BaseStyle->"Link"],
 ", adem\[AAcute]s, elimina los elementos repetidos."
}], "Text",
 Editable->False,
 Deletable->False,
 ShowCellBracket->False,
 CellTags->"i:15"],

Cell["\<\
Encuentre en una lista todos los elementos que sean distintos: \
\>", "CodeCaption",
 Editable->False,
 Deletable->False,
 ShowCellBracket->False],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Union", "[", 
  RowBox[{"{", 
   RowBox[{
   "1", ",", "9", ",", "5", ",", "3", ",", "1", ",", "4", ",", "3", ",", "1", 
    ",", "3", ",", "3", ",", "5", ",", "3", ",", "9"}], "}"}], "]"}]], "Input",\

 Deletable->False,
 CellLabel->"In[24]:="],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1", ",", "3", ",", "4", ",", "5", ",", "9"}], "}"}]], "Output",
 Editable->False,
 CellEditDuplicate->False,
 Evaluatable->False,
 CellLabel->"Out[24]="]
}, Open  ]],

Cell[TextData[{
 "Se puede usar ",
 ButtonBox["Union",
  BaseStyle->"Link"],
 " para encontrar la \[OpenCurlyDoubleQuote]uni\[OAcute]n\
\[CloseCurlyDoubleQuote] de los elementos que aparezcan en cualesquiera de \
varias listas."
}], "Text",
 Editable->False,
 Deletable->False,
 ShowCellBracket->False],

Cell["\<\
Obtenga la lista de todos los elementos que aparezcan en cualquiera de las \
listas:\
\>", "CodeCaption",
 Editable->False,
 Deletable->False,
 ShowCellBracket->False],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Union", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"2", ",", "1", ",", "3", ",", "7", ",", "9"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4", ",", "5", ",", "1", ",", "2", ",", "3", ",", "3"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", "1", ",", "2", ",", "8", ",", "5"}], "}"}]}], 
  "]"}]], "Input",
 Deletable->False,
 CellLabel->"In[25]:="],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "1", ",", "2", ",", "3", ",", "4", ",", "5", ",", "7", ",", "8", ",", "9"}],
   "}"}]], "Output",
 Editable->False,
 CellEditDuplicate->False,
 Evaluatable->False,
 CellTags->"LastCellOfAPage",
 CellLabel->"Out[25]="]
}, Open  ]],

Cell["Encuentre los elementos que sean comunes a todas las listas:", \
"CodeCaption",
 Editable->False,
 Deletable->False,
 ShowCellBracket->False,
 CellTags->{"p:181", "i:16"}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Intersection", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"2", ",", "1", ",", "3", ",", "7", ",", "9"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4", ",", "5", ",", "1", ",", "2", ",", "3", ",", "3"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", "1", ",", "2", ",", "8"}], "}"}]}], "]"}]], "Input",
 Deletable->False,
 CellLabel->"In[26]:="],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1", ",", "2", ",", "3"}], "}"}]], "Output",
 Editable->False,
 CellEditDuplicate->False,
 Evaluatable->False,
 CellLabel->"Out[26]="]
}, Open  ]],

Cell["\<\
Encuentre los elementos que est\[EAcute]n en la primera de las listas, pero \
no en la segunda: \
\>", "CodeCaption",
 Editable->False,
 Deletable->False,
 ShowCellBracket->False,
 CellTags->"i:17"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Complement", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"4", ",", "5", ",", "1", ",", "2", ",", "3", ",", "3"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", "1", ",", "2", ",", "8"}], "}"}]}], "]"}]], "Input",
 Deletable->False,
 CellLabel->"In[27]:="],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"4", ",", "5"}], "}"}]], "Output",
 Editable->False,
 CellEditDuplicate->False,
 Evaluatable->False,
 CellLabel->"Out[27]="]
}, Open  ]],

Cell["\<\
Encuentre las letras que aparezcan en cualquiera de los alfabetos ingl\
\[EAcute]s, sueco o turco:\
\>", "CodeCaption",
 Editable->False,
 Deletable->False,
 ShowCellBracket->False,
 CellTags->"i:18"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Union", "[", 
  RowBox[{
   RowBox[{"Alphabet", "[", "\"\<English\>\"", "]"}], ",", 
   RowBox[{"Alphabet", "[", "\"\<Swedish\>\"", "]"}], ",", 
   RowBox[{"Alphabet", "[", "\"\<Turkish\>\"", "]"}]}], "]"}]], "Input",
 Deletable->False,
 CellLabel->"In[28]:="],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"\:011f\"\>", ",", "\<\"\:015f\"\>", ",", "\<\"a\"\>", 
   ",", "\<\"\[ARing]\"\>", ",", "\<\"\[ADoubleDot]\"\>", ",", "\<\"b\"\>", 
   ",", "\<\"c\"\>", ",", "\<\"\[CCedilla]\"\>", ",", "\<\"d\"\>", 
   ",", "\<\"e\"\>", ",", "\<\"f\"\>", ",", "\<\"g\"\>", ",", "\<\"h\"\>", 
   ",", "\<\"i\"\>", ",", "\<\"\[DotlessI]\"\>", ",", "\<\"j\"\>", 
   ",", "\<\"k\"\>", ",", "\<\"l\"\>", ",", "\<\"m\"\>", ",", "\<\"n\"\>", 
   ",", "\<\"o\"\>", ",", "\<\"\[ODoubleDot]\"\>", ",", "\<\"p\"\>", 
   ",", "\<\"q\"\>", ",", "\<\"r\"\>", ",", "\<\"s\"\>", ",", "\<\"t\"\>", 
   ",", "\<\"u\"\>", ",", "\<\"\[UDoubleDot]\"\>", ",", "\<\"v\"\>", 
   ",", "\<\"w\"\>", ",", "\<\"x\"\>", ",", "\<\"y\"\>", ",", "\<\"z\"\>"}], 
  "}"}]], "Output",
 Editable->False,
 CellEditDuplicate->False,
 Evaluatable->False,
 CellLabel->"Out[28]="]
}, Open  ]],

Cell["Las letras que aparecen en el sueco, pero no en el ingl\[EAcute]s:", \
"CodeCaption",
 Editable->False,
 Deletable->False,
 ShowCellBracket->False],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Complement", "[", 
  RowBox[{
   RowBox[{"Alphabet", "[", "\"\<Swedish\>\"", "]"}], ",", 
   RowBox[{"Alphabet", "[", "\"\<English\>\"", "]"}]}], "]"}]], "Input",
 Deletable->False,
 CellLabel->"In[29]:="],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"\[ARing]\"\>", ",", "\<\"\[ADoubleDot]\"\>", 
   ",", "\<\"\[ODoubleDot]\"\>"}], "}"}]], "Output",
 Editable->False,
 CellEditDuplicate->False,
 Evaluatable->False,
 CellLabel->"Out[29]="]
}, Open  ]],

Cell[TextData[{
 "Otra de las muchas funciones que se pueden aplicar a las listas es ",
 ButtonBox["Riffle",
  BaseStyle->"Link"],
 ", que intercala cosas entre los elementos sucesivos de una lista. "
}], "Text",
 Editable->False,
 Deletable->False,
 ShowCellBracket->False,
 CellTags->"i:19"],

Cell[TextData[{
 "Intercale ",
 Cell[BoxData["x"], "InlineCode"],
 " entre los elementos de una lista:"
}], "CodeCaption",
 Editable->False,
 Deletable->False,
 ShowCellBracket->False],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Riffle", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", "2", ",", "3", ",", "4", ",", "5"}], "}"}], ",", "x"}], 
  "]"}]], "Input",
 Deletable->False,
 CellLabel->"In[30]:="],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "1", ",", "x", ",", "2", ",", "x", ",", "3", ",", "x", ",", "4", ",", "x", 
   ",", "5"}], "}"}]], "Output",
 Editable->False,
 CellEditDuplicate->False,
 Evaluatable->False,
 CellLabel->"Out[30]="]
}, Open  ]],

Cell[TextData[{
 "Intercale ",
 Cell[BoxData["--"], "InlineCode"],
 " entre una lista de caracteres:"
}], "CodeCaption",
 Editable->False,
 Deletable->False,
 ShowCellBracket->False],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Riffle", "[", 
  RowBox[{
   RowBox[{"Characters", "[", "\"\<WOLFRAM\>\"", "]"}], ",", "\"\<--\>\""}], 
  "]"}]], "Input",
 Deletable->False,
 CellLabel->"In[31]:="],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"W\"\>", ",", "\<\"--\"\>", ",", "\<\"O\"\>", ",", "\<\"--\"\>",
    ",", "\<\"L\"\>", ",", "\<\"--\"\>", ",", "\<\"F\"\>", ",", "\<\"--\"\>", 
   ",", "\<\"R\"\>", ",", "\<\"--\"\>", ",", "\<\"A\"\>", ",", "\<\"--\"\>", 
   ",", "\<\"M\"\>"}], "}"}]], "Output",
 Editable->False,
 CellEditDuplicate->False,
 Evaluatable->False,
 CellLabel->"Out[31]="]
}, Open  ]],

Cell["Junte todo lo anterior en una sola lista de caracteres:", "CodeCaption",
 Editable->False,
 Deletable->False,
 ShowCellBracket->False],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"StringJoin", "[", 
  RowBox[{"Riffle", "[", 
   RowBox[{
    RowBox[{"Characters", "[", "\"\<WOLFRAM\>\"", "]"}], ",", "\"\<--\>\""}], 
   "]"}], "]"}]], "Input",
 Deletable->False,
 CellLabel->"In[32]:="],

Cell[BoxData["\<\"W--O--L--F--R--A--M\"\>"], "Output",
 Editable->False,
 CellEditDuplicate->False,
 Evaluatable->False,
 CellLabel->"Out[32]="]
}, Open  ]],

Cell[TextData[{
 "Las funciones tales como ",
 ButtonBox["Partition",
  BaseStyle->"Link"],
 " sirven para tomar una lista y descomponerla en sublistas. En vez de eso, a \
veces se parte de una colecci\[OAcute]n de elementos para formar listas con \
ellos."
}], "Text",
 Editable->False,
 Deletable->False,
 ShowCellBracket->False,
 CellTags->"LastCellOfAPage"],

Cell[TextData[{
 ButtonBox["Permutations",
  BaseStyle->"Link"],
 " obtiene todos los ordenamientos posibles, o ",
 StyleBox["permutaciones",
  FontSlant->"Italic"],
 ", de una lista."
}], "Text",
 Editable->False,
 Deletable->False,
 ShowCellBracket->False,
 CellTags->{"p:182", "i:20"}],

Cell["\<\
Genere una lista de los 3!=3\[Times]2\[Times]1=6 ordenamientos posibles de 3 \
elementos:\
\>", "CodeCaption",
 Editable->False,
 Deletable->False,
 ShowCellBracket->False],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Permutations", "[", 
  RowBox[{"{", 
   RowBox[{"Red", ",", "Green", ",", "Blue"}], "}"}], "]"}]], "Input",
 Deletable->False,
 CellLabel->"In[33]:="],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {RGBColor[1, 0, 0], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         Frame->True,
         FrameStyle->RGBColor[0.6666666666666666, 0., 0.],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 
            1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification])}],
         PlotRangePadding->None],
        "RGBColor[1, 0, 0]"],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 0, 0]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
             Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      RGBColor[1, 0, 0],
      Editable->False,
      Selectable->False], ",", 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {RGBColor[0, 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         Frame->True,
         FrameStyle->RGBColor[0., 0.6666666666666666, 0.],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 
            1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification])}],
         PlotRangePadding->None],
        "RGBColor[0, 1, 0]"],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 1, 0]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
             Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      RGBColor[0, 1, 0],
      Editable->False,
      Selectable->False], ",", 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {RGBColor[0, 0, 1], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         Frame->True,
         FrameStyle->RGBColor[0., 0., 0.6666666666666666],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 
            1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification])}],
         PlotRangePadding->None],
        "RGBColor[0, 0, 1]"],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 0, 1]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
             Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      RGBColor[0, 0, 1],
      Editable->False,
      Selectable->False]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {RGBColor[1, 0, 0], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         Frame->True,
         FrameStyle->RGBColor[0.6666666666666666, 0., 0.],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 
            1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification])}],
         PlotRangePadding->None],
        "RGBColor[1, 0, 0]"],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 0, 0]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
             Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      RGBColor[1, 0, 0],
      Editable->False,
      Selectable->False], ",", 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {RGBColor[0, 0, 1], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         Frame->True,
         FrameStyle->RGBColor[0., 0., 0.6666666666666666],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 
            1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification])}],
         PlotRangePadding->None],
        "RGBColor[0, 0, 1]"],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 0, 1]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
             Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      RGBColor[0, 0, 1],
      Editable->False,
      Selectable->False], ",", 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {RGBColor[0, 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         Frame->True,
         FrameStyle->RGBColor[0., 0.6666666666666666, 0.],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 
            1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification])}],
         PlotRangePadding->None],
        "RGBColor[0, 1, 0]"],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 1, 0]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
             Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      RGBColor[0, 1, 0],
      Editable->False,
      Selectable->False]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {RGBColor[0, 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         Frame->True,
         FrameStyle->RGBColor[0., 0.6666666666666666, 0.],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 
            1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification])}],
         PlotRangePadding->None],
        "RGBColor[0, 1, 0]"],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 1, 0]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
             Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      RGBColor[0, 1, 0],
      Editable->False,
      Selectable->False], ",", 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {RGBColor[1, 0, 0], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         Frame->True,
         FrameStyle->RGBColor[0.6666666666666666, 0., 0.],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 
            1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification])}],
         PlotRangePadding->None],
        "RGBColor[1, 0, 0]"],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 0, 0]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
             Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      RGBColor[1, 0, 0],
      Editable->False,
      Selectable->False], ",", 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {RGBColor[0, 0, 1], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         Frame->True,
         FrameStyle->RGBColor[0., 0., 0.6666666666666666],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 
            1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification])}],
         PlotRangePadding->None],
        "RGBColor[0, 0, 1]"],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 0, 1]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
             Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      RGBColor[0, 0, 1],
      Editable->False,
      Selectable->False]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {RGBColor[0, 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         Frame->True,
         FrameStyle->RGBColor[0., 0.6666666666666666, 0.],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 
            1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification])}],
         PlotRangePadding->None],
        "RGBColor[0, 1, 0]"],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 1, 0]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
             Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      RGBColor[0, 1, 0],
      Editable->False,
      Selectable->False], ",", 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {RGBColor[0, 0, 1], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         Frame->True,
         FrameStyle->RGBColor[0., 0., 0.6666666666666666],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 
            1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification])}],
         PlotRangePadding->None],
        "RGBColor[0, 0, 1]"],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 0, 1]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
             Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      RGBColor[0, 0, 1],
      Editable->False,
      Selectable->False], ",", 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {RGBColor[1, 0, 0], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         Frame->True,
         FrameStyle->RGBColor[0.6666666666666666, 0., 0.],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 
            1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification])}],
         PlotRangePadding->None],
        "RGBColor[1, 0, 0]"],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 0, 0]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
             Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      RGBColor[1, 0, 0],
      Editable->False,
      Selectable->False]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {RGBColor[0, 0, 1], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         Frame->True,
         FrameStyle->RGBColor[0., 0., 0.6666666666666666],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 
            1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification])}],
         PlotRangePadding->None],
        "RGBColor[0, 0, 1]"],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 0, 1]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
             Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      RGBColor[0, 0, 1],
      Editable->False,
      Selectable->False], ",", 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {RGBColor[1, 0, 0], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         Frame->True,
         FrameStyle->RGBColor[0.6666666666666666, 0., 0.],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 
            1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification])}],
         PlotRangePadding->None],
        "RGBColor[1, 0, 0]"],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 0, 0]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
             Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      RGBColor[1, 0, 0],
      Editable->False,
      Selectable->False], ",", 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {RGBColor[0, 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         Frame->True,
         FrameStyle->RGBColor[0., 0.6666666666666666, 0.],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 
            1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification])}],
         PlotRangePadding->None],
        "RGBColor[0, 1, 0]"],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 1, 0]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
             Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      RGBColor[0, 1, 0],
      Editable->False,
      Selectable->False]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {RGBColor[0, 0, 1], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         Frame->True,
         FrameStyle->RGBColor[0., 0., 0.6666666666666666],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 
            1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification])}],
         PlotRangePadding->None],
        "RGBColor[0, 0, 1]"],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 0, 1]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
             Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      RGBColor[0, 0, 1],
      Editable->False,
      Selectable->False], ",", 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {RGBColor[0, 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         Frame->True,
         FrameStyle->RGBColor[0., 0.6666666666666666, 0.],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 
            1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification])}],
         PlotRangePadding->None],
        "RGBColor[0, 1, 0]"],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 1, 0]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
             Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      RGBColor[0, 1, 0],
      Editable->False,
      Selectable->False], ",", 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {RGBColor[1, 0, 0], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         Frame->True,
         FrameStyle->RGBColor[0.6666666666666666, 0., 0.],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 
            1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification])}],
         PlotRangePadding->None],
        "RGBColor[1, 0, 0]"],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 0, 0]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
             Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      RGBColor[1, 0, 0],
      Editable->False,
      Selectable->False]}], "}"}]}], "}"}]], "Output",
 Editable->False,
 CellEditDuplicate->False,
 Evaluatable->False,
 GraphicsBoxOptions->{BaselinePosition->Scaled[0.1]},
 CellLabel->"Out[33]="]
}, Open  ]],

Cell[TextData[{
 "Genere todos los ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SuperscriptBox["2", "3"], "=", "8"}], TraditionalForm]]],
 " subconjuntos que se pueden formar con los elementos de una lista de 3:"
}], "CodeCaption",
 Editable->False,
 Deletable->False,
 ShowCellBracket->False,
 CellTags->"i:21"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Subsets", "[", 
  RowBox[{"{", 
   RowBox[{"Red", ",", "Green", ",", "Blue"}], "}"}], "]"}]], "Input",
 Deletable->False,
 CellLabel->"In[34]:="],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", "}"}], ",", 
   RowBox[{"{", 
    InterpretationBox[
     ButtonBox[
      TooltipBox[
       GraphicsBox[{
         {GrayLevel[0], RectangleBox[{0, 0}]}, 
         {GrayLevel[0], RectangleBox[{1, -1}]}, 
         {RGBColor[1, 0, 0], RectangleBox[{0, -1}, {2, 1}]}},
        AspectRatio->1,
        Frame->True,
        FrameStyle->RGBColor[0.6666666666666666, 0., 0.],
        FrameTicks->None,
        ImageSize->
         Dynamic[{
          Automatic, 
           1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
            Magnification])}],
        PlotRangePadding->None],
       "RGBColor[1, 0, 0]"],
      Appearance->None,
      BaseStyle->{},
      BaselinePosition->Baseline,
      ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
        If[
         Not[
          AbsoluteCurrentValue["Deployed"]], 
         SelectionMove[Typeset`box$, All, Expression]; 
         FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
         FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 0, 0]; 
         FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
         MathLink`CallFrontEnd[
           FrontEnd`AttachCell[Typeset`box$, 
            FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
            Left, Top}, 
            "ClosingActions" -> {
             "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
      DefaultBaseStyle->{},
      Evaluator->Automatic,
      Method->"Preemptive"],
     RGBColor[1, 0, 0],
     Editable->False,
     Selectable->False], "}"}], ",", 
   RowBox[{"{", 
    InterpretationBox[
     ButtonBox[
      TooltipBox[
       GraphicsBox[{
         {GrayLevel[0], RectangleBox[{0, 0}]}, 
         {GrayLevel[0], RectangleBox[{1, -1}]}, 
         {RGBColor[0, 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
        AspectRatio->1,
        Frame->True,
        FrameStyle->RGBColor[0., 0.6666666666666666, 0.],
        FrameTicks->None,
        ImageSize->
         Dynamic[{
          Automatic, 
           1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
            Magnification])}],
        PlotRangePadding->None],
       "RGBColor[0, 1, 0]"],
      Appearance->None,
      BaseStyle->{},
      BaselinePosition->Baseline,
      ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
        If[
         Not[
          AbsoluteCurrentValue["Deployed"]], 
         SelectionMove[Typeset`box$, All, Expression]; 
         FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
         FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 1, 0]; 
         FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
         MathLink`CallFrontEnd[
           FrontEnd`AttachCell[Typeset`box$, 
            FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
            Left, Top}, 
            "ClosingActions" -> {
             "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
      DefaultBaseStyle->{},
      Evaluator->Automatic,
      Method->"Preemptive"],
     RGBColor[0, 1, 0],
     Editable->False,
     Selectable->False], "}"}], ",", 
   RowBox[{"{", 
    InterpretationBox[
     ButtonBox[
      TooltipBox[
       GraphicsBox[{
         {GrayLevel[0], RectangleBox[{0, 0}]}, 
         {GrayLevel[0], RectangleBox[{1, -1}]}, 
         {RGBColor[0, 0, 1], RectangleBox[{0, -1}, {2, 1}]}},
        AspectRatio->1,
        Frame->True,
        FrameStyle->RGBColor[0., 0., 0.6666666666666666],
        FrameTicks->None,
        ImageSize->
         Dynamic[{
          Automatic, 
           1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
            Magnification])}],
        PlotRangePadding->None],
       "RGBColor[0, 0, 1]"],
      Appearance->None,
      BaseStyle->{},
      BaselinePosition->Baseline,
      ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
        If[
         Not[
          AbsoluteCurrentValue["Deployed"]], 
         SelectionMove[Typeset`box$, All, Expression]; 
         FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
         FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 0, 1]; 
         FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
         MathLink`CallFrontEnd[
           FrontEnd`AttachCell[Typeset`box$, 
            FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
            Left, Top}, 
            "ClosingActions" -> {
             "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
      DefaultBaseStyle->{},
      Evaluator->Automatic,
      Method->"Preemptive"],
     RGBColor[0, 0, 1],
     Editable->False,
     Selectable->False], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {RGBColor[1, 0, 0], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         Frame->True,
         FrameStyle->RGBColor[0.6666666666666666, 0., 0.],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 
            1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification])}],
         PlotRangePadding->None],
        "RGBColor[1, 0, 0]"],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 0, 0]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
             Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      RGBColor[1, 0, 0],
      Editable->False,
      Selectable->False], ",", 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {RGBColor[0, 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         Frame->True,
         FrameStyle->RGBColor[0., 0.6666666666666666, 0.],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 
            1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification])}],
         PlotRangePadding->None],
        "RGBColor[0, 1, 0]"],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 1, 0]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
             Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      RGBColor[0, 1, 0],
      Editable->False,
      Selectable->False]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {RGBColor[1, 0, 0], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         Frame->True,
         FrameStyle->RGBColor[0.6666666666666666, 0., 0.],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 
            1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification])}],
         PlotRangePadding->None],
        "RGBColor[1, 0, 0]"],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 0, 0]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
             Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      RGBColor[1, 0, 0],
      Editable->False,
      Selectable->False], ",", 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {RGBColor[0, 0, 1], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         Frame->True,
         FrameStyle->RGBColor[0., 0., 0.6666666666666666],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 
            1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification])}],
         PlotRangePadding->None],
        "RGBColor[0, 0, 1]"],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 0, 1]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
             Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      RGBColor[0, 0, 1],
      Editable->False,
      Selectable->False]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {RGBColor[0, 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         Frame->True,
         FrameStyle->RGBColor[0., 0.6666666666666666, 0.],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 
            1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification])}],
         PlotRangePadding->None],
        "RGBColor[0, 1, 0]"],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 1, 0]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
             Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      RGBColor[0, 1, 0],
      Editable->False,
      Selectable->False], ",", 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {RGBColor[0, 0, 1], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         Frame->True,
         FrameStyle->RGBColor[0., 0., 0.6666666666666666],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 
            1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification])}],
         PlotRangePadding->None],
        "RGBColor[0, 0, 1]"],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 0, 1]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
             Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      RGBColor[0, 0, 1],
      Editable->False,
      Selectable->False]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {RGBColor[1, 0, 0], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         Frame->True,
         FrameStyle->RGBColor[0.6666666666666666, 0., 0.],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 
            1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification])}],
         PlotRangePadding->None],
        "RGBColor[1, 0, 0]"],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 0, 0]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
             Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      RGBColor[1, 0, 0],
      Editable->False,
      Selectable->False], ",", 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {RGBColor[0, 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         Frame->True,
         FrameStyle->RGBColor[0., 0.6666666666666666, 0.],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 
            1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification])}],
         PlotRangePadding->None],
        "RGBColor[0, 1, 0]"],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 1, 0]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
             Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      RGBColor[0, 1, 0],
      Editable->False,
      Selectable->False], ",", 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {RGBColor[0, 0, 1], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         Frame->True,
         FrameStyle->RGBColor[0., 0., 0.6666666666666666],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 
            1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification])}],
         PlotRangePadding->None],
        "RGBColor[0, 0, 1]"],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 0, 1]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
             Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      RGBColor[0, 0, 1],
      Editable->False,
      Selectable->False]}], "}"}]}], "}"}]], "Output",
 Editable->False,
 CellEditDuplicate->False,
 Evaluatable->False,
 GraphicsBoxOptions->{BaselinePosition->Scaled[0.1]},
 CellLabel->"Out[34]="]
}, Open  ]],

Cell[TextData[{
 ButtonBox["Tuples",
  BaseStyle->"Link"],
 " toma una lista de elementos y genera todas las combinaciones posibles de \
un n\[UAcute]mero dado de dichos elementos."
}], "Text",
 Editable->False,
 Deletable->False,
 ShowCellBracket->False,
 CellTags->"i:22"],

Cell["\<\
Genere una lista de todas las ternas posibles de rojo y verde:\
\>", "CodeCaption",
 Editable->False,
 Deletable->False,
 ShowCellBracket->False],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Tuples", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"Red", ",", "Green"}], "}"}], ",", "3"}], "]"}]], "Input",
 Deletable->False,
 CellLabel->"In[35]:="],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {RGBColor[1, 0, 0], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         Frame->True,
         FrameStyle->RGBColor[0.6666666666666666, 0., 0.],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 
            1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification])}],
         PlotRangePadding->None],
        "RGBColor[1, 0, 0]"],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 0, 0]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
             Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      RGBColor[1, 0, 0],
      Editable->False,
      Selectable->False], ",", 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {RGBColor[1, 0, 0], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         Frame->True,
         FrameStyle->RGBColor[0.6666666666666666, 0., 0.],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 
            1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification])}],
         PlotRangePadding->None],
        "RGBColor[1, 0, 0]"],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 0, 0]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
             Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      RGBColor[1, 0, 0],
      Editable->False,
      Selectable->False], ",", 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {RGBColor[1, 0, 0], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         Frame->True,
         FrameStyle->RGBColor[0.6666666666666666, 0., 0.],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 
            1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification])}],
         PlotRangePadding->None],
        "RGBColor[1, 0, 0]"],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 0, 0]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
             Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      RGBColor[1, 0, 0],
      Editable->False,
      Selectable->False]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {RGBColor[1, 0, 0], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         Frame->True,
         FrameStyle->RGBColor[0.6666666666666666, 0., 0.],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 
            1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification])}],
         PlotRangePadding->None],
        "RGBColor[1, 0, 0]"],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 0, 0]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
             Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      RGBColor[1, 0, 0],
      Editable->False,
      Selectable->False], ",", 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {RGBColor[1, 0, 0], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         Frame->True,
         FrameStyle->RGBColor[0.6666666666666666, 0., 0.],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 
            1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification])}],
         PlotRangePadding->None],
        "RGBColor[1, 0, 0]"],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 0, 0]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
             Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      RGBColor[1, 0, 0],
      Editable->False,
      Selectable->False], ",", 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {RGBColor[0, 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         Frame->True,
         FrameStyle->RGBColor[0., 0.6666666666666666, 0.],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 
            1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification])}],
         PlotRangePadding->None],
        "RGBColor[0, 1, 0]"],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 1, 0]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
             Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      RGBColor[0, 1, 0],
      Editable->False,
      Selectable->False]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {RGBColor[1, 0, 0], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         Frame->True,
         FrameStyle->RGBColor[0.6666666666666666, 0., 0.],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 
            1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification])}],
         PlotRangePadding->None],
        "RGBColor[1, 0, 0]"],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 0, 0]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
             Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      RGBColor[1, 0, 0],
      Editable->False,
      Selectable->False], ",", 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {RGBColor[0, 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         Frame->True,
         FrameStyle->RGBColor[0., 0.6666666666666666, 0.],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 
            1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification])}],
         PlotRangePadding->None],
        "RGBColor[0, 1, 0]"],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 1, 0]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
             Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      RGBColor[0, 1, 0],
      Editable->False,
      Selectable->False], ",", 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {RGBColor[1, 0, 0], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         Frame->True,
         FrameStyle->RGBColor[0.6666666666666666, 0., 0.],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 
            1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification])}],
         PlotRangePadding->None],
        "RGBColor[1, 0, 0]"],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 0, 0]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
             Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      RGBColor[1, 0, 0],
      Editable->False,
      Selectable->False]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {RGBColor[1, 0, 0], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         Frame->True,
         FrameStyle->RGBColor[0.6666666666666666, 0., 0.],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 
            1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification])}],
         PlotRangePadding->None],
        "RGBColor[1, 0, 0]"],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 0, 0]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
             Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      RGBColor[1, 0, 0],
      Editable->False,
      Selectable->False], ",", 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {RGBColor[0, 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         Frame->True,
         FrameStyle->RGBColor[0., 0.6666666666666666, 0.],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 
            1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification])}],
         PlotRangePadding->None],
        "RGBColor[0, 1, 0]"],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 1, 0]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
             Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      RGBColor[0, 1, 0],
      Editable->False,
      Selectable->False], ",", 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {RGBColor[0, 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         Frame->True,
         FrameStyle->RGBColor[0., 0.6666666666666666, 0.],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 
            1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification])}],
         PlotRangePadding->None],
        "RGBColor[0, 1, 0]"],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 1, 0]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
             Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      RGBColor[0, 1, 0],
      Editable->False,
      Selectable->False]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {RGBColor[0, 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         Frame->True,
         FrameStyle->RGBColor[0., 0.6666666666666666, 0.],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 
            1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification])}],
         PlotRangePadding->None],
        "RGBColor[0, 1, 0]"],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 1, 0]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
             Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      RGBColor[0, 1, 0],
      Editable->False,
      Selectable->False], ",", 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {RGBColor[1, 0, 0], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         Frame->True,
         FrameStyle->RGBColor[0.6666666666666666, 0., 0.],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 
            1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification])}],
         PlotRangePadding->None],
        "RGBColor[1, 0, 0]"],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 0, 0]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
             Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      RGBColor[1, 0, 0],
      Editable->False,
      Selectable->False], ",", 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {RGBColor[1, 0, 0], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         Frame->True,
         FrameStyle->RGBColor[0.6666666666666666, 0., 0.],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 
            1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification])}],
         PlotRangePadding->None],
        "RGBColor[1, 0, 0]"],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 0, 0]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
             Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      RGBColor[1, 0, 0],
      Editable->False,
      Selectable->False]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {RGBColor[0, 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         Frame->True,
         FrameStyle->RGBColor[0., 0.6666666666666666, 0.],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 
            1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification])}],
         PlotRangePadding->None],
        "RGBColor[0, 1, 0]"],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 1, 0]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
             Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      RGBColor[0, 1, 0],
      Editable->False,
      Selectable->False], ",", 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {RGBColor[1, 0, 0], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         Frame->True,
         FrameStyle->RGBColor[0.6666666666666666, 0., 0.],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 
            1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification])}],
         PlotRangePadding->None],
        "RGBColor[1, 0, 0]"],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 0, 0]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
             Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      RGBColor[1, 0, 0],
      Editable->False,
      Selectable->False], ",", 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {RGBColor[0, 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         Frame->True,
         FrameStyle->RGBColor[0., 0.6666666666666666, 0.],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 
            1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification])}],
         PlotRangePadding->None],
        "RGBColor[0, 1, 0]"],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 1, 0]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
             Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      RGBColor[0, 1, 0],
      Editable->False,
      Selectable->False]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {RGBColor[0, 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         Frame->True,
         FrameStyle->RGBColor[0., 0.6666666666666666, 0.],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 
            1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification])}],
         PlotRangePadding->None],
        "RGBColor[0, 1, 0]"],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 1, 0]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
             Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      RGBColor[0, 1, 0],
      Editable->False,
      Selectable->False], ",", 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {RGBColor[0, 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         Frame->True,
         FrameStyle->RGBColor[0., 0.6666666666666666, 0.],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 
            1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification])}],
         PlotRangePadding->None],
        "RGBColor[0, 1, 0]"],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 1, 0]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
             Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      RGBColor[0, 1, 0],
      Editable->False,
      Selectable->False], ",", 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {RGBColor[1, 0, 0], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         Frame->True,
         FrameStyle->RGBColor[0.6666666666666666, 0., 0.],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 
            1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification])}],
         PlotRangePadding->None],
        "RGBColor[1, 0, 0]"],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 0, 0]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
             Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      RGBColor[1, 0, 0],
      Editable->False,
      Selectable->False]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {RGBColor[0, 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         Frame->True,
         FrameStyle->RGBColor[0., 0.6666666666666666, 0.],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 
            1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification])}],
         PlotRangePadding->None],
        "RGBColor[0, 1, 0]"],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 1, 0]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
             Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      RGBColor[0, 1, 0],
      Editable->False,
      Selectable->False], ",", 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {RGBColor[0, 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         Frame->True,
         FrameStyle->RGBColor[0., 0.6666666666666666, 0.],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 
            1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification])}],
         PlotRangePadding->None],
        "RGBColor[0, 1, 0]"],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 1, 0]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
             Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      RGBColor[0, 1, 0],
      Editable->False,
      Selectable->False], ",", 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {RGBColor[0, 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         Frame->True,
         FrameStyle->RGBColor[0., 0.6666666666666666, 0.],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 
            1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification])}],
         PlotRangePadding->None],
        "RGBColor[0, 1, 0]"],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 1, 0]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
             Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      RGBColor[0, 1, 0],
      Editable->False,
      Selectable->False]}], "}"}]}], "}"}]], "Output",
 Editable->False,
 CellEditDuplicate->False,
 Evaluatable->False,
 GraphicsBoxOptions->{BaselinePosition->Scaled[0.1]},
 CellLabel->"Out[35]="]
}, Open  ]],

Cell[TextData[{
 ButtonBox["RandomChoice",
  BaseStyle->"Link"],
 " sirve para hacer una elecci\[OAcute]n aleatoria a partir de los elementos \
de una lista."
}], "Text",
 Editable->False,
 Deletable->False,
 ShowCellBracket->False,
 CellTags->"i:23"],

Cell["\<\
Haga una elecci\[OAcute]n aleatoria a partir de los elementos de una lista:\
\>", "CodeCaption",
 Editable->False,
 Deletable->False,
 ShowCellBracket->False],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"RandomChoice", "[", 
  RowBox[{"{", 
   RowBox[{"Red", ",", "Green", ",", "Blue"}], "}"}], "]"}]], "Input",
 Deletable->False,
 CellLabel->"In[36]:="],

Cell[BoxData[
 InterpretationBox[
  ButtonBox[
   TooltipBox[
    GraphicsBox[{
      {GrayLevel[0], RectangleBox[{0, 0}]}, 
      {GrayLevel[0], RectangleBox[{1, -1}]}, 
      {RGBColor[0, 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
     AspectRatio->1,
     Frame->True,
     FrameStyle->RGBColor[0., 0.6666666666666666, 0.],
     FrameTicks->None,
     ImageSize->
      Dynamic[{Automatic, 
        1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
         Magnification])}],
     PlotRangePadding->None],
    "RGBColor[0, 1, 0]"],
   Appearance->None,
   BaseStyle->{},
   BaselinePosition->Baseline,
   ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
     If[
      Not[
       AbsoluteCurrentValue["Deployed"]], 
      SelectionMove[Typeset`box$, All, Expression]; 
      FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
      FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 1, 0]; 
      FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
      MathLink`CallFrontEnd[
        FrontEnd`AttachCell[Typeset`box$, 
         FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
         Left, Top}, 
         "ClosingActions" -> {
          "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
   DefaultBaseStyle->{},
   Evaluator->Automatic,
   Method->"Preemptive"],
  RGBColor[0, 1, 0],
  Editable->False,
  Selectable->False]], "Output",
 Editable->False,
 CellEditDuplicate->False,
 Evaluatable->False,
 GraphicsBoxOptions->{BaselinePosition->Scaled[0.1]},
 CellLabel->"Out[36]="]
}, Open  ]],

Cell["Haga una lista de 20 elecciones aleatorias:", "CodeCaption",
 Editable->False,
 Deletable->False,
 ShowCellBracket->False],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"RandomChoice", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"Red", ",", "Green", ",", "Blue"}], "}"}], ",", "20"}], 
  "]"}]], "Input",
 Deletable->False,
 CellLabel->"In[37]:="],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[0, 0, 1], RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       Frame->True,
       FrameStyle->RGBColor[0., 0., 0.6666666666666666],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 
          1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification])}],
       PlotRangePadding->None],
      "RGBColor[0, 0, 1]"],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 0, 1]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[0, 0, 1],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[0, 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       Frame->True,
       FrameStyle->RGBColor[0., 0.6666666666666666, 0.],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 
          1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification])}],
       PlotRangePadding->None],
      "RGBColor[0, 1, 0]"],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 1, 0]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[0, 1, 0],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[1, 0, 0], RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       Frame->True,
       FrameStyle->RGBColor[0.6666666666666666, 0., 0.],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 
          1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification])}],
       PlotRangePadding->None],
      "RGBColor[1, 0, 0]"],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 0, 0]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[1, 0, 0],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[0, 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       Frame->True,
       FrameStyle->RGBColor[0., 0.6666666666666666, 0.],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 
          1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification])}],
       PlotRangePadding->None],
      "RGBColor[0, 1, 0]"],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 1, 0]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[0, 1, 0],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[0, 0, 1], RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       Frame->True,
       FrameStyle->RGBColor[0., 0., 0.6666666666666666],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 
          1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification])}],
       PlotRangePadding->None],
      "RGBColor[0, 0, 1]"],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 0, 1]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[0, 0, 1],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[1, 0, 0], RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       Frame->True,
       FrameStyle->RGBColor[0.6666666666666666, 0., 0.],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 
          1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification])}],
       PlotRangePadding->None],
      "RGBColor[1, 0, 0]"],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 0, 0]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[1, 0, 0],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[0, 0, 1], RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       Frame->True,
       FrameStyle->RGBColor[0., 0., 0.6666666666666666],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 
          1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification])}],
       PlotRangePadding->None],
      "RGBColor[0, 0, 1]"],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 0, 1]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[0, 0, 1],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[0, 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       Frame->True,
       FrameStyle->RGBColor[0., 0.6666666666666666, 0.],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 
          1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification])}],
       PlotRangePadding->None],
      "RGBColor[0, 1, 0]"],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 1, 0]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[0, 1, 0],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[0, 0, 1], RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       Frame->True,
       FrameStyle->RGBColor[0., 0., 0.6666666666666666],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 
          1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification])}],
       PlotRangePadding->None],
      "RGBColor[0, 0, 1]"],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 0, 1]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[0, 0, 1],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[0, 0, 1], RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       Frame->True,
       FrameStyle->RGBColor[0., 0., 0.6666666666666666],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 
          1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification])}],
       PlotRangePadding->None],
      "RGBColor[0, 0, 1]"],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 0, 1]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[0, 0, 1],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[0, 0, 1], RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       Frame->True,
       FrameStyle->RGBColor[0., 0., 0.6666666666666666],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 
          1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification])}],
       PlotRangePadding->None],
      "RGBColor[0, 0, 1]"],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 0, 1]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[0, 0, 1],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[0, 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       Frame->True,
       FrameStyle->RGBColor[0., 0.6666666666666666, 0.],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 
          1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification])}],
       PlotRangePadding->None],
      "RGBColor[0, 1, 0]"],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 1, 0]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[0, 1, 0],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[0, 0, 1], RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       Frame->True,
       FrameStyle->RGBColor[0., 0., 0.6666666666666666],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 
          1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification])}],
       PlotRangePadding->None],
      "RGBColor[0, 0, 1]"],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 0, 1]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[0, 0, 1],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[0, 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       Frame->True,
       FrameStyle->RGBColor[0., 0.6666666666666666, 0.],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 
          1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification])}],
       PlotRangePadding->None],
      "RGBColor[0, 1, 0]"],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 1, 0]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[0, 1, 0],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[1, 0, 0], RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       Frame->True,
       FrameStyle->RGBColor[0.6666666666666666, 0., 0.],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 
          1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification])}],
       PlotRangePadding->None],
      "RGBColor[1, 0, 0]"],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 0, 0]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[1, 0, 0],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[1, 0, 0], RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       Frame->True,
       FrameStyle->RGBColor[0.6666666666666666, 0., 0.],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 
          1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification])}],
       PlotRangePadding->None],
      "RGBColor[1, 0, 0]"],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 0, 0]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[1, 0, 0],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[0, 0, 1], RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       Frame->True,
       FrameStyle->RGBColor[0., 0., 0.6666666666666666],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 
          1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification])}],
       PlotRangePadding->None],
      "RGBColor[0, 0, 1]"],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 0, 1]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[0, 0, 1],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[0, 0, 1], RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       Frame->True,
       FrameStyle->RGBColor[0., 0., 0.6666666666666666],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 
          1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification])}],
       PlotRangePadding->None],
      "RGBColor[0, 0, 1]"],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 0, 1]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[0, 0, 1],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[0, 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       Frame->True,
       FrameStyle->RGBColor[0., 0.6666666666666666, 0.],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 
          1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification])}],
       PlotRangePadding->None],
      "RGBColor[0, 1, 0]"],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 1, 0]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[0, 1, 0],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[0, 0, 1], RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       Frame->True,
       FrameStyle->RGBColor[0., 0., 0.6666666666666666],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 
          1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification])}],
       PlotRangePadding->None],
      "RGBColor[0, 0, 1]"],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 0, 1]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[0, 0, 1],
    Editable->False,
    Selectable->False]}], "}"}]], "Output",
 Editable->False,
 CellEditDuplicate->False,
 Evaluatable->False,
 GraphicsBoxOptions->{BaselinePosition->Scaled[0.1]},
 CellLabel->"Out[37]="]
}, Open  ]],

Cell["Haga 5 listas de 3 elecciones aleatorias:", "CodeCaption",
 Editable->False,
 Deletable->False,
 ShowCellBracket->False],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"RandomChoice", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"Red", ",", "Green", ",", "Blue"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5", ",", "3"}], "}"}]}], "]"}]], "Input",
 Deletable->False,
 CellLabel->"In[38]:="],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {RGBColor[0, 0, 1], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         Frame->True,
         FrameStyle->RGBColor[0., 0., 0.6666666666666666],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 
            1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification])}],
         PlotRangePadding->None],
        "RGBColor[0, 0, 1]"],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 0, 1]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
             Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      RGBColor[0, 0, 1],
      Editable->False,
      Selectable->False], ",", 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {RGBColor[0, 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         Frame->True,
         FrameStyle->RGBColor[0., 0.6666666666666666, 0.],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 
            1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification])}],
         PlotRangePadding->None],
        "RGBColor[0, 1, 0]"],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 1, 0]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
             Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      RGBColor[0, 1, 0],
      Editable->False,
      Selectable->False], ",", 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {RGBColor[0, 0, 1], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         Frame->True,
         FrameStyle->RGBColor[0., 0., 0.6666666666666666],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 
            1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification])}],
         PlotRangePadding->None],
        "RGBColor[0, 0, 1]"],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 0, 1]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
             Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      RGBColor[0, 0, 1],
      Editable->False,
      Selectable->False]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {RGBColor[0, 0, 1], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         Frame->True,
         FrameStyle->RGBColor[0., 0., 0.6666666666666666],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 
            1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification])}],
         PlotRangePadding->None],
        "RGBColor[0, 0, 1]"],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 0, 1]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
             Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      RGBColor[0, 0, 1],
      Editable->False,
      Selectable->False], ",", 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {RGBColor[1, 0, 0], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         Frame->True,
         FrameStyle->RGBColor[0.6666666666666666, 0., 0.],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 
            1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification])}],
         PlotRangePadding->None],
        "RGBColor[1, 0, 0]"],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 0, 0]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
             Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      RGBColor[1, 0, 0],
      Editable->False,
      Selectable->False], ",", 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {RGBColor[1, 0, 0], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         Frame->True,
         FrameStyle->RGBColor[0.6666666666666666, 0., 0.],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 
            1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification])}],
         PlotRangePadding->None],
        "RGBColor[1, 0, 0]"],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 0, 0]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
             Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      RGBColor[1, 0, 0],
      Editable->False,
      Selectable->False]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {RGBColor[1, 0, 0], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         Frame->True,
         FrameStyle->RGBColor[0.6666666666666666, 0., 0.],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 
            1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification])}],
         PlotRangePadding->None],
        "RGBColor[1, 0, 0]"],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 0, 0]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
             Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      RGBColor[1, 0, 0],
      Editable->False,
      Selectable->False], ",", 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {RGBColor[1, 0, 0], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         Frame->True,
         FrameStyle->RGBColor[0.6666666666666666, 0., 0.],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 
            1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification])}],
         PlotRangePadding->None],
        "RGBColor[1, 0, 0]"],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 0, 0]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
             Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      RGBColor[1, 0, 0],
      Editable->False,
      Selectable->False], ",", 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {RGBColor[1, 0, 0], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         Frame->True,
         FrameStyle->RGBColor[0.6666666666666666, 0., 0.],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 
            1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification])}],
         PlotRangePadding->None],
        "RGBColor[1, 0, 0]"],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 0, 0]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
             Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      RGBColor[1, 0, 0],
      Editable->False,
      Selectable->False]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {RGBColor[0, 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         Frame->True,
         FrameStyle->RGBColor[0., 0.6666666666666666, 0.],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 
            1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification])}],
         PlotRangePadding->None],
        "RGBColor[0, 1, 0]"],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 1, 0]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
             Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      RGBColor[0, 1, 0],
      Editable->False,
      Selectable->False], ",", 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {RGBColor[1, 0, 0], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         Frame->True,
         FrameStyle->RGBColor[0.6666666666666666, 0., 0.],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 
            1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification])}],
         PlotRangePadding->None],
        "RGBColor[1, 0, 0]"],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 0, 0]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
             Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      RGBColor[1, 0, 0],
      Editable->False,
      Selectable->False], ",", 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {RGBColor[0, 0, 1], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         Frame->True,
         FrameStyle->RGBColor[0., 0., 0.6666666666666666],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 
            1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification])}],
         PlotRangePadding->None],
        "RGBColor[0, 0, 1]"],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 0, 1]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
             Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      RGBColor[0, 0, 1],
      Editable->False,
      Selectable->False]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {RGBColor[0, 0, 1], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         Frame->True,
         FrameStyle->RGBColor[0., 0., 0.6666666666666666],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 
            1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification])}],
         PlotRangePadding->None],
        "RGBColor[0, 0, 1]"],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 0, 1]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
             Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      RGBColor[0, 0, 1],
      Editable->False,
      Selectable->False], ",", 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {RGBColor[1, 0, 0], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         Frame->True,
         FrameStyle->RGBColor[0.6666666666666666, 0., 0.],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 
            1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification])}],
         PlotRangePadding->None],
        "RGBColor[1, 0, 0]"],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 0, 0]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
             Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      RGBColor[1, 0, 0],
      Editable->False,
      Selectable->False], ",", 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {RGBColor[1, 0, 0], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         Frame->True,
         FrameStyle->RGBColor[0.6666666666666666, 0., 0.],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 
            1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification])}],
         PlotRangePadding->None],
        "RGBColor[1, 0, 0]"],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 0, 0]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
             Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      RGBColor[1, 0, 0],
      Editable->False,
      Selectable->False]}], "}"}]}], "}"}]], "Output",
 Editable->False,
 CellEditDuplicate->False,
 Evaluatable->False,
 GraphicsBoxOptions->{BaselinePosition->Scaled[0.1]},
 CellLabel->"Out[38]="]
}, Open  ]],

Cell[TextData[{
 ButtonBox["RandomSample",
  BaseStyle->"Link"],
 " obtiene una muestra aleatoria de elementos de una lista, sin seleccionar m\
\[AAcute]s de una vez ning\[UAcute]n elemento."
}], "Text",
 Editable->False,
 Deletable->False,
 ShowCellBracket->False,
 CellTags->"i:24"],

Cell["\<\
Elija 20 elementos en el tramo de 1 a 100, sin que aparezca ning\[UAcute]n \
elemento repetido:\
\>", "CodeCaption",
 Editable->False,
 Deletable->False,
 ShowCellBracket->False],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"RandomSample", "[", 
  RowBox[{
   RowBox[{"Range", "[", "100", "]"}], ",", "20"}], "]"}]], "Input",
 Deletable->False,
 CellLabel->"In[39]:="],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "82", ",", "3", ",", "93", ",", "92", ",", "39", ",", "45", ",", "63", ",", 
   "32", ",", "79", ",", "75", ",", "34", ",", "1", ",", "11", ",", "59", ",",
    "98", ",", "67", ",", "38", ",", "44", ",", "28", ",", "76"}], 
  "}"}]], "Output",
 Editable->False,
 CellEditDuplicate->False,
 Evaluatable->False,
 CellLabel->"Out[39]="]
}, Open  ]],

Cell["\<\
Si no se indica cu\[AAcute]ntos elementos se han de elegir, se obtiene un \
ordenamiento aleatorio de la lista completa:\
\>", "CodeCaption",
 Editable->False,
 Deletable->False,
 ShowCellBracket->False],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"RandomSample", "[", 
  RowBox[{"Range", "[", "10", "]"}], "]"}]], "Input",
 Deletable->False,
 CellLabel->"In[40]:="],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "2", ",", "5", ",", "1", ",", "7", ",", "4", ",", "6", ",", "3", ",", "8", 
   ",", "9", ",", "10"}], "}"}]], "Output",
 Editable->False,
 CellEditDuplicate->False,
 Evaluatable->False,
 CellTags->"LastCellOfAPage",
 CellLabel->"Out[40]="]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Vocabulario", "VocabularySection",
 Editable->False,
 Deletable->False,
 ShowCellBracket->False,
 CellTags->"p:183"],

Cell[BoxData[GridBox[{
   {
    RowBox[{
     ButtonBox["Transpose",
      BaseStyle->"CodeLink"], "[", 
     StyleBox["lista", "CodeVariableLrg"], "]"}], " ", Cell[
    "transpone las listas interior y exterior", "VocabularyText"]},
   {
    RowBox[{
     ButtonBox["Thread",
      BaseStyle->"CodeLink"], "[", 
     RowBox[{
      SubscriptBox[
       StyleBox["lista", "CodeVariableLrg"], "1"], "\[Rule]", 
      SubscriptBox[
       StyleBox["lista", "CodeVariableLrg"], "2"]}], "]"}], " ", Cell[
    "enhebra a trav\[EAcute]s de elementos de listas ", "VocabularyText"]},
   {
    RowBox[{
     ButtonBox["Partition",
      BaseStyle->"CodeLink"], "[", 
     RowBox[{
      StyleBox["lista", "CodeVariableLrg"], ",", 
      StyleBox["n", "CodeVariableLrg"]}], "]"}], " ", Cell[TextData[{
     "particiona en bloques de tama\[NTilde]o ",
     Cell[BoxData[
      StyleBox["n", "CodeVariable"]], "InlineCode"],
     " "
    }], "VocabularyText"]},
   {
    RowBox[{
     ButtonBox["Flatten",
      BaseStyle->"CodeLink"], "[", 
     StyleBox["lista", "CodeVariableLrg"], "]"}], " ", Cell[
    "aplana todas las sublistas ", "VocabularyText"]},
   {
    RowBox[{
     ButtonBox["Flatten",
      BaseStyle->"CodeLink"], "[", 
     RowBox[{
      StyleBox["lista", "CodeVariableLrg"], ",", 
      StyleBox["k", "CodeVariableLrg"]}], "]"}], " ", Cell[TextData[{
     "aplana ",
     Cell[BoxData[
      StyleBox["k", "CodeVariable"]], "InlineCode"],
     " niveles de las sublistas "
    }], "VocabularyText"]},
   {
    RowBox[{
     ButtonBox["ArrayFlatten",
      BaseStyle->"CodeLink"], "[", 
     StyleBox["lista", "CodeVariableLrg"], "]"}], " ", Cell[
    "aplana arreglos de arreglos ", "VocabularyText"]},
   {
    RowBox[{
     ButtonBox["Split",
      BaseStyle->"CodeLink"], "[", 
     StyleBox["lista", "CodeVariableLrg"], "]"}], " ", Cell[
    "separa en secuencias de elementos id\[EAcute]nticos ", "VocabularyText"]},
   {
    RowBox[{
     ButtonBox["Gather",
      BaseStyle->"CodeLink"], "[", 
     StyleBox["lista", "CodeVariableLrg"], "]"}], " ", Cell[
    "agrupa en listas los elementos id\[EAcute]nticos ", "VocabularyText"]},
   {
    RowBox[{
     ButtonBox["GatherBy",
      BaseStyle->"CodeLink"], "[", 
     RowBox[{
      StyleBox["lista", "CodeVariableLrg"], ",", 
      StyleBox["f", "CodeVariableLrg"]}], "]"}], " ", Cell[TextData[{
     "agrupa de acuerdo con el resultado de aplicar ",
     Cell[BoxData[
      StyleBox[
       RowBox[{"f", " "}], "CodeVariable"]], "InlineCode"]
    }], "VocabularyText"]},
   {
    RowBox[{
     ButtonBox["SortBy",
      BaseStyle->"CodeLink"], "[", 
     RowBox[{
      StyleBox["lista", "CodeVariableLrg"], ",", 
      StyleBox["f", "CodeVariableLrg"]}], "]"}], " ", Cell[TextData[{
     "ordena de acuerdo con el resultado de aplicar ",
     Cell[BoxData[
      StyleBox[
       RowBox[{"f", " "}], "CodeVariable"]], "InlineCode"],
     " "
    }], "VocabularyText"]},
   {
    RowBox[{
     ButtonBox["Riffle",
      BaseStyle->"CodeLink"], "[", 
     RowBox[{
      StyleBox["lista", "CodeVariableLrg"], ",", 
      StyleBox["x", "CodeVariableLrg"]}], "]"}], " ", Cell[TextData[{
     "intercala ",
     Cell[BoxData[
      StyleBox["x", "CodeVariable"]], "InlineCode"],
     " entre los elementos de ",
     Cell[BoxData[
      StyleBox["lista", "CodeVariableLrg"]], "InlineCode"],
     " "
    }], "VocabularyText"]},
   {
    RowBox[{
     ButtonBox["Union",
      BaseStyle->"CodeLink"], "[", 
     StyleBox["lista", "CodeVariableLrg"], "]"}], " ", Cell[TextData[{
     "los elementos diferentes en ",
     Cell[BoxData[
      StyleBox["lista", "CodeVariableLrg"]], "InlineCode"]
    }], "VocabularyText"]},
   {
    RowBox[{
     ButtonBox["Union",
      BaseStyle->"CodeLink"], "[", 
     RowBox[{
      SubscriptBox[
       StyleBox["lista", "CodeVariableLrg"], "1"], ",", 
      SubscriptBox[
       StyleBox["lista", "CodeVariableLrg"], "2"], ",", " ", 
      StyleBox["...", "GrayPointSix"]}], "]"}], " ", Cell[
    "los elementos que aparecen en cualquiera de las listas", 
     "VocabularyText"]},
   {
    RowBox[{
     ButtonBox["Intersection",
      BaseStyle->"CodeLink"], "[", 
     RowBox[{
      SubscriptBox[
       StyleBox["lista", "CodeVariableLrg"], "1"], ",", 
      SubscriptBox[
       StyleBox["lista", "CodeVariableLrg"], "2"], ",", " ", 
      StyleBox["...", "GrayPointSix"]}], "]"}], " ", Cell[
    "los elementos que aparecen en todas las listas", "VocabularyText"]},
   {
    RowBox[{
     ButtonBox["Complement",
      BaseStyle->"CodeLink"], "[", 
     RowBox[{
      SubscriptBox[
       StyleBox["lista", "CodeVariableLrg"], "1"], ",", 
      SubscriptBox[
       StyleBox["lista", "CodeVariableLrg"], "2"]}], "]"}], " ", Cell[
    TextData[{
     "los elementos que aparecen en ",
     Cell[BoxData[
      FormBox[
       SubscriptBox[
        StyleBox["lista", "CodeVariableLrg"], "1"], TraditionalForm]]],
     " pero no en ",
     Cell[BoxData[
      FormBox[
       SubscriptBox[
        StyleBox["lista", "CodeVariableLrg"], "2"], TraditionalForm]]]
    }], "VocabularyText"]},
   {
    RowBox[{
     ButtonBox["Permutations",
      BaseStyle->"CodeLink"], "[", 
     StyleBox["lista", "CodeVariableLrg"], "]"}], " ", Cell[
    "todas las permutaciones (ordenamientos) posibles ", "VocabularyText"]},
   {
    RowBox[{
     ButtonBox["Subsets",
      BaseStyle->"CodeLink"], "[", 
     StyleBox["lista", "CodeVariableLrg"], "]"}], " ", Cell[
    "todos los subconjuntos posibles ", "VocabularyText"]},
   {
    RowBox[{
     ButtonBox["Tuples",
      BaseStyle->"CodeLink"], "[", 
     RowBox[{
      StyleBox["lista", "CodeVariableLrg"], ",", 
      StyleBox["n", "CodeVariableLrg"]}], "]"}], " ", Cell[TextData[{
     "todas las combinaciones posibles de ",
     Cell[BoxData[
      StyleBox["n", "CodeVariable"]], "InlineCode"],
     " elementos "
    }], "VocabularyText"]},
   {
    RowBox[{
     ButtonBox["RandomChoice",
      BaseStyle->"CodeLink"], "[", 
     StyleBox["lista", "CodeVariableLrg"], "]"}], " ", Cell[TextData[{
     "elige aleatoriamente dentro de una ",
     Cell[BoxData[
      StyleBox["lista", "CodeVariableLrg"]], "InlineCode"],
     " "
    }], "VocabularyText"]},
   {
    RowBox[{
     ButtonBox["RandomChoice",
      BaseStyle->"CodeLink"], "[", 
     RowBox[{
      StyleBox["lista", "CodeVariableLrg"], ",", 
      StyleBox["n", "CodeVariableLrg"]}], "]"}], " ", Cell[TextData[{
     Cell[BoxData[
      StyleBox["n", "CodeVariable"]], "InlineCode"],
     " elecciones aleatorias "
    }], "VocabularyText"]},
   {
    RowBox[{
     ButtonBox["RandomSample",
      BaseStyle->"CodeLink"], "[", 
     RowBox[{
      StyleBox["lista", "CodeVariableLrg"], ",", 
      StyleBox["n", "CodeVariableLrg"]}], "]"}], " ", Cell[TextData[{
     Cell[BoxData[
      StyleBox["n", "CodeVariable"]], "InlineCode"],
     " muestras aleatorias sin repeticiones "
    }], "VocabularyText"]},
   {
    RowBox[{
     ButtonBox["RandomSample",
      BaseStyle->"CodeLink"], "[", 
     StyleBox["lista", "CodeVariableLrg"], "]"}], " ", Cell[
    "ordenamiento aleatorio de una lista ", "VocabularyText"]}
  }]], "VocabularyTable",
 Editable->False,
 Deletable->False,
 ShowCellBracket->False,
 GridBoxOptions->{GridBoxDividers->{"Columns" -> {{False}}}},
 CellTags->"LastCellOfAPage"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 DynamicModuleBox[{$CellContext`open$$ = False}, 
  TagBox[GridBox[{
     {
      StyleBox["\<\"Exercises\"\>",
       StripOnInput->False,
       FontSlant->"Italic"], 
      PaneBox[
       TagBox[
        ButtonBox[
         DynamicBox[ToBoxes[
           If[$CellContext`open$$, 
            Row[{
              Style["-", "ExercisePreviewButtonTextHighlight"], 
              Style[" Preview Exercises", "ExercisePreviewButtonText"]}], 
            Row[{
              Style["+", "ExercisePreviewButtonTextHighlight"], 
              Style[" Preview Exercises", "ExercisePreviewButtonText"]}]], 
           StandardForm],
          ImageSizeCache->{115., {1., 10.}}],
         Appearance->None,
         ButtonFunction:>(
          If[$CellContext`open$$, $CellContext`open$$ = 
            False, $CellContext`open$$ = True]; NotebookFind[
            EvaluationNotebook[], "ExerciseSummaryCell", Next, CellStyle, 
            WrapAround -> True, AutoScroll -> False]; FrontEndTokenExecute[
            EvaluationNotebook[], "ExpandSelection"]; FrontEndExecute[
            FrontEndToken[
             EvaluationNotebook[], "OpenCloseGroup"]]),
         Evaluator->Automatic,
         Method->"Preemptive"],
        MouseAppearanceTag["LinkHand"]],
       Alignment->Right,
       ImageSize->Full]}
    },
    AutoDelete->False,
    GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
    GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
   "Grid"],
  DynamicModuleValues:>{}]], "ExerciseSection",
 Editable->False,
 ShowCellBracket->False,
 GeneratedCell->True,
 CellAutoOverwrite->True,
 CellChangeTimes->{3.669991951589675*^9},
 ShowStringCharacters->False],

Cell[CellGroupData[{

Cell[BoxData[
 TagBox[GridBox[{
    {
     TagBox[GridBox[{
        {
         PaneBox[
          
          StyleBox["\<\"21 Exercises Available\"\>", "ExerciseSummaryHeading",
           
           StripOnInput->False],
          ImageMargins->{{20, 0}, {0, 10}}]},
        {
         PaneBox[
          StyleBox["\<\"with 13 extras\"\>", "ExerciseSummarySubheading",
           StripOnInput->False],
          ImageMargins->{{20, 0}, {10, 0}}]}
       },
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
       
       GridBoxSpacings->{"Columns" -> {{Automatic}}, "Rows" -> {{0}}}],
      "Column"], 
     PaneBox[
      ButtonBox[
       StyleBox["\<\"Get Started \[RightGuillemet]\"\>", 
        "ExerciseSummaryHeading",
        StripOnInput->False],
       Appearance->None,
       ButtonFunction:>
        NotebookLocate[{"EIWL2-30-rearranging-lists-exercises.nb", ""}],
       Evaluator->Automatic,
       Method->"Preemptive"],
      FrameMargins->{{10, 0}, {10, 10}},
      ImageSize->Full]}
   },
   AutoDelete->False,
   GridBoxAlignment->{"Columns" -> {{Left}}},
   GridBoxItemSize->{"Columns" -> {
       Scaled[0.7], 
       Scaled[0.3]}, "Rows" -> {{Automatic}}}],
  "Grid"]], "ExerciseSummaryCell",
 Editable->False,
 Deletable->False,
 ShowCellBracket->False],

Cell[CellGroupData[{

Cell[TextData[{
 "Use ",
 ButtonBox["Thread",
  BaseStyle->"Link"],
 " para formar una lista de reglas que liguen cada letra del alfabeto ingl\
\[EAcute]s con su posici\[OAcute]n en el alfabeto.",
 StyleBox[ButtonBox["\[NonBreakingSpace]\[RightGuillemet]",
  Appearance->None,
  Evaluator->Automatic,
  Method->"Preemptive",
  ButtonFunction:>(SelectionMove[
     ButtonNotebook[], All, ButtonCell, AutoScroll -> False]; 
   FrontEndExecute[
     FrontEndToken[
      ButtonNotebook[], "OpenCloseGroup"]])],
  FontColor->RGBColor[1, 0.501961, 0]]
}], "Exercise",
 Editable->False,
 Selectable->False,
 Deletable->False,
 CellDingbat->Cell[
  "30.1", "ExerciseNumber", FontColor -> 
   RGBColor[0.9019607843137255, 0.4117647058823529, 0.027450980392156862`]],
 ShowCellBracket->False],

Cell[BoxData[
 PaneBox[GridBox[{
    {" ", 
     StyleBox[
      RowBox[{"Expected", " ", 
       RowBox[{"output", ":"}]}],
      Editable->False,
      Selectable->False,
      StripOnInput->False,
      FontColor->RGBColor[0.45, 0.45, 0.45]], " "},
    {" ", 
     InterpretationBox[Cell[BoxData[
       RowBox[{"{", 
        RowBox[{
         RowBox[{"\<\"a\"\>", "\[Rule]", "1"}], ",", 
         RowBox[{"\<\"b\"\>", "\[Rule]", "2"}], ",", 
         RowBox[{"\<\"c\"\>", "\[Rule]", "3"}], ",", 
         RowBox[{"\<\"d\"\>", "\[Rule]", "4"}], ",", 
         RowBox[{"\<\"e\"\>", "\[Rule]", "5"}], ",", 
         RowBox[{"\<\"f\"\>", "\[Rule]", "6"}], ",", 
         RowBox[{"\<\"g\"\>", "\[Rule]", "7"}], ",", 
         RowBox[{"\<\"h\"\>", "\[Rule]", "8"}], ",", 
         RowBox[{"\<\"i\"\>", "\[Rule]", "9"}], ",", 
         RowBox[{"\<\"j\"\>", "\[Rule]", "10"}], ",", 
         RowBox[{"\<\"k\"\>", "\[Rule]", "11"}], ",", 
         RowBox[{"\<\"l\"\>", "\[Rule]", "12"}], ",", 
         RowBox[{"\<\"m\"\>", "\[Rule]", "13"}], ",", 
         RowBox[{"\<\"n\"\>", "\[Rule]", "14"}], ",", 
         RowBox[{"\<\"o\"\>", "\[Rule]", "15"}], ",", 
         RowBox[{"\<\"p\"\>", "\[Rule]", "16"}], ",", 
         RowBox[{"\<\"q\"\>", "\[Rule]", "17"}], ",", 
         RowBox[{"\<\"r\"\>", "\[Rule]", "18"}], ",", 
         RowBox[{"\<\"s\"\>", "\[Rule]", "19"}], ",", 
         RowBox[{"\<\"t\"\>", "\[Rule]", "20"}], ",", 
         RowBox[{"\<\"u\"\>", "\[Rule]", "21"}], ",", 
         RowBox[{"\<\"v\"\>", "\[Rule]", "22"}], ",", 
         RowBox[{"\<\"w\"\>", "\[Rule]", "23"}], ",", 
         RowBox[{"\<\"x\"\>", "\[Rule]", "24"}], ",", 
         RowBox[{"\<\"y\"\>", "\[Rule]", "25"}], ",", 
         RowBox[{"\<\"z\"\>", "\[Rule]", "26"}]}], "}"}]], "ExerciseOutput"],
      Apply[TextCell, 
       Cell[
        BoxData[
         RowBox[{"{", 
           RowBox[{
             RowBox[{"\"a\"", "\[Rule]", "1"}], ",", 
             RowBox[{"\"b\"", "\[Rule]", "2"}], ",", 
             RowBox[{"\"c\"", "\[Rule]", "3"}], ",", 
             RowBox[{"\"d\"", "\[Rule]", "4"}], ",", 
             RowBox[{"\"e\"", "\[Rule]", "5"}], ",", 
             RowBox[{"\"f\"", "\[Rule]", "6"}], ",", 
             RowBox[{"\"g\"", "\[Rule]", "7"}], ",", 
             RowBox[{"\"h\"", "\[Rule]", "8"}], ",", 
             RowBox[{"\"i\"", "\[Rule]", "9"}], ",", 
             RowBox[{"\"j\"", "\[Rule]", "10"}], ",", 
             RowBox[{"\"k\"", "\[Rule]", "11"}], ",", 
             RowBox[{"\"l\"", "\[Rule]", "12"}], ",", 
             RowBox[{"\"m\"", "\[Rule]", "13"}], ",", 
             RowBox[{"\"n\"", "\[Rule]", "14"}], ",", 
             RowBox[{"\"o\"", "\[Rule]", "15"}], ",", 
             RowBox[{"\"p\"", "\[Rule]", "16"}], ",", 
             RowBox[{"\"q\"", "\[Rule]", "17"}], ",", 
             RowBox[{"\"r\"", "\[Rule]", "18"}], ",", 
             RowBox[{"\"s\"", "\[Rule]", "19"}], ",", 
             RowBox[{"\"t\"", "\[Rule]", "20"}], ",", 
             RowBox[{"\"u\"", "\[Rule]", "21"}], ",", 
             RowBox[{"\"v\"", "\[Rule]", "22"}], ",", 
             RowBox[{"\"w\"", "\[Rule]", "23"}], ",", 
             RowBox[{"\"x\"", "\[Rule]", "24"}], ",", 
             RowBox[{"\"y\"", "\[Rule]", "25"}], ",", 
             RowBox[{"\"z\"", "\[Rule]", "26"}]}], "}"}]], "ExerciseOutput", 
        Selectable -> False, Copyable -> False, Editable -> False, 
        ShowCellBracket -> False]]], " "}
   },
   GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Center}}},
   GridBoxBackground->{"Columns" -> {{
        RGBColor[1, 1, 1]}}},
   GridBoxSpacings->{"Columns" -> {{Automatic}}, "Rows" -> {{1}}}],
  FrameMargins->0]], "ExerciseOutput",
 Editable->False,
 Selectable->False,
 Deletable->False,
 CellFrame->{{1, 1}, {1, 1}},
 ShowCellBracket->False,
 CellFrameColor->RGBColor[0.85, 0.85, 0.85],
 LineBreakWithin->Automatic]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 "Haga una rejilla de 4\[Times]6 con las 24 primeras letras del alfabeto ingl\
\[EAcute]s.",
 StyleBox[ButtonBox["\[NonBreakingSpace]\[RightGuillemet]",
  Appearance->None,
  Evaluator->Automatic,
  Method->"Preemptive",
  ButtonFunction:>(SelectionMove[
     ButtonNotebook[], All, ButtonCell, AutoScroll -> False]; 
   FrontEndExecute[
     FrontEndToken[
      ButtonNotebook[], "OpenCloseGroup"]])],
  FontColor->RGBColor[1, 0.501961, 0]]
}], "Exercise",
 Editable->False,
 Selectable->False,
 Deletable->False,
 CellDingbat->Cell[
  "30.2", "ExerciseNumber", FontColor -> 
   RGBColor[0.9019607843137255, 0.4117647058823529, 0.027450980392156862`]],
 ShowCellBracket->False],

Cell[BoxData[
 PaneBox[GridBox[{
    {" ", 
     StyleBox[
      RowBox[{"Expected", " ", 
       RowBox[{"output", ":"}]}],
      Editable->False,
      Selectable->False,
      StripOnInput->False,
      FontColor->RGBColor[0.45, 0.45, 0.45]], " "},
    {" ", 
     InterpretationBox[Cell[BoxData[
       TagBox[GridBox[{
          {"\<\"a\"\>", "\<\"b\"\>", "\<\"c\"\>", "\<\"d\"\>", "\<\"e\"\>", "\
\<\"f\"\>"},
          {"\<\"g\"\>", "\<\"h\"\>", "\<\"i\"\>", "\<\"j\"\>", "\<\"k\"\>", "\
\<\"l\"\>"},
          {"\<\"m\"\>", "\<\"n\"\>", "\<\"o\"\>", "\<\"p\"\>", "\<\"q\"\>", "\
\<\"r\"\>"},
          {"\<\"s\"\>", "\<\"t\"\>", "\<\"u\"\>", "\<\"v\"\>", "\<\"w\"\>", "\
\<\"x\"\>"}
         },
         AutoDelete->False,
         GridBoxItemSize->{
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
        "Grid"]], "ExerciseOutput"],
      Apply[TextCell, 
       Cell[
        BoxData[
         TagBox[
          
          GridBox[{{"\"a\"", "\"b\"", "\"c\"", "\"d\"", "\"e\"", "\"f\""}, {
            "\"g\"", "\"h\"", "\"i\"", "\"j\"", "\"k\"", "\"l\""}, {
            "\"m\"", "\"n\"", "\"o\"", "\"p\"", "\"q\"", "\"r\""}, {
            "\"s\"", "\"t\"", "\"u\"", "\"v\"", "\"w\"", "\"x\""}}, 
           AutoDelete -> False, 
           GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Grid"]], 
        "ExerciseOutput", Selectable -> False, Copyable -> False, Editable -> 
        False, ShowCellBracket -> False]]], " "}
   },
   GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Center}}},
   GridBoxBackground->{"Columns" -> {{
        RGBColor[1, 1, 1]}}},
   GridBoxSpacings->{"Columns" -> {{Automatic}}, "Rows" -> {{1}}}],
  FrameMargins->0]], "ExerciseOutput",
 Editable->False,
 Selectable->False,
 Deletable->False,
 CellFrame->{{1, 1}, {1, 1}},
 ShowCellBracket->False,
 CellFrameColor->RGBColor[0.85, 0.85, 0.85],
 LineBreakWithin->Automatic]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 "Forme una rejilla con los d\[IAcute]gitos en 2^1000, con 50 d\[IAcute]gitos \
en cada rengl\[OAcute]n y con un marco en todos los casos.",
 StyleBox[ButtonBox["\[NonBreakingSpace]\[RightGuillemet]",
  Appearance->None,
  Evaluator->Automatic,
  Method->"Preemptive",
  ButtonFunction:>(SelectionMove[
     ButtonNotebook[], All, ButtonCell, AutoScroll -> False]; 
   FrontEndExecute[
     FrontEndToken[
      ButtonNotebook[], "OpenCloseGroup"]])],
  FontColor->RGBColor[1, 0.501961, 0]]
}], "Exercise",
 Editable->False,
 Selectable->False,
 Deletable->False,
 CellDingbat->Cell[
  "30.3", "ExerciseNumber", FontColor -> 
   RGBColor[0.9019607843137255, 0.4117647058823529, 0.027450980392156862`]],
 ShowCellBracket->False],

Cell[BoxData[
 PaneBox[GridBox[{
    {" ", 
     StyleBox[
      RowBox[{"Expected", " ", 
       RowBox[{"output", ":"}]}],
      Editable->False,
      Selectable->False,
      StripOnInput->False,
      FontColor->RGBColor[0.45, 0.45, 0.45]], " "},
    {" ", 
     InterpretationBox[Cell[BoxData[
       TagBox[GridBox[{
          {"1", "0", "7", "1", "5", "0", "8", "6", "0", "7", "1", "8", "6", 
           "2", "6", "7", "3", "2", "0", "9", "4", "8", "4", "2", "5", "0", 
           "4", "9", "0", "6", "0", "0", "0", "1", "8", "1", "0", "5", "6", 
           "1", "4", "0", "4", "8", "1", "1", "7", "0", "5", "5"},
          {"3", "3", "6", "0", "7", "4", "4", "3", "7", "5", "0", "3", "8", 
           "8", "3", "7", "0", "3", "5", "1", "0", "5", "1", "1", "2", "4", 
           "9", "3", "6", "1", "2", "2", "4", "9", "3", "1", "9", "8", "3", 
           "7", "8", "8", "1", "5", "6", "9", "5", "8", "5", "8"},
          {"1", "2", "7", "5", "9", "4", "6", "7", "2", "9", "1", "7", "5", 
           "5", "3", "1", "4", "6", "8", "2", "5", "1", "8", "7", "1", "4", 
           "5", "2", "8", "5", "6", "9", "2", "3", "1", "4", "0", "4", "3", 
           "5", "9", "8", "4", "5", "7", "7", "5", "7", "4", "6"},
          {"9", "8", "5", "7", "4", "8", "0", "3", "9", "3", "4", "5", "6", 
           "7", "7", "7", "4", "8", "2", "4", "2", "3", "0", "9", "8", "5", 
           "4", "2", "1", "0", "7", "4", "6", "0", "5", "0", "6", "2", "3", 
           "7", "1", "1", "4", "1", "8", "7", "7", "9", "5", "4"},
          {"1", "8", "2", "1", "5", "3", "0", "4", "6", "4", "7", "4", "9", 
           "8", "3", "5", "8", "1", "9", "4", "1", "2", "6", "7", "3", "9", 
           "8", "7", "6", "7", "5", "5", "9", "1", "6", "5", "5", "4", "3", 
           "9", "4", "6", "0", "7", "7", "0", "6", "2", "9", "1"},
          {"4", "5", "7", "1", "1", "9", "6", "4", "7", "7", "6", "8", "6", 
           "5", "4", "2", "1", "6", "7", "6", "6", "0", "4", "2", "9", "8", 
           "3", "1", "6", "5", "2", "6", "2", "4", "3", "8", "6", "8", "3", 
           "7", "2", "0", "5", "6", "6", "8", "0", "6", "9", "3"}
         },
         AutoDelete->False,
         GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
         GridBoxItemSize->{
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
        "Grid"]], "ExerciseOutput"],
      Apply[TextCell, 
       Cell[
        BoxData[
         TagBox[
          
          GridBox[{{
            "1", "0", "7", "1", "5", "0", "8", "6", "0", "7", "1", "8", "6", 
             "2", "6", "7", "3", "2", "0", "9", "4", "8", "4", "2", "5", "0", 
             "4", "9", "0", "6", "0", "0", "0", "1", "8", "1", "0", "5", "6", 
             "1", "4", "0", "4", "8", "1", "1", "7", "0", "5", "5"}, {
            "3", "3", "6", "0", "7", "4", "4", "3", "7", "5", "0", "3", "8", 
             "8", "3", "7", "0", "3", "5", "1", "0", "5", "1", "1", "2", "4", 
             "9", "3", "6", "1", "2", "2", "4", "9", "3", "1", "9", "8", "3", 
             "7", "8", "8", "1", "5", "6", "9", "5", "8", "5", "8"}, {
            "1", "2", "7", "5", "9", "4", "6", "7", "2", "9", "1", "7", "5", 
             "5", "3", "1", "4", "6", "8", "2", "5", "1", "8", "7", "1", "4", 
             "5", "2", "8", "5", "6", "9", "2", "3", "1", "4", "0", "4", "3", 
             "5", "9", "8", "4", "5", "7", "7", "5", "7", "4", "6"}, {
            "9", "8", "5", "7", "4", "8", "0", "3", "9", "3", "4", "5", "6", 
             "7", "7", "7", "4", "8", "2", "4", "2", "3", "0", "9", "8", "5", 
             "4", "2", "1", "0", "7", "4", "6", "0", "5", "0", "6", "2", "3", 
             "7", "1", "1", "4", "1", "8", "7", "7", "9", "5", "4"}, {
            "1", "8", "2", "1", "5", "3", "0", "4", "6", "4", "7", "4", "9", 
             "8", "3", "5", "8", "1", "9", "4", "1", "2", "6", "7", "3", "9", 
             "8", "7", "6", "7", "5", "5", "9", "1", "6", "5", "5", "4", "3", 
             "9", "4", "6", "0", "7", "7", "0", "6", "2", "9", "1"}, {
            "4", "5", "7", "1", "1", "9", "6", "4", "7", "7", "6", "8", "6", 
             "5", "4", "2", "1", "6", "7", "6", "6", "0", "4", "2", "9", "8", 
             "3", "1", "6", "5", "2", "6", "2", "4", "3", "8", "6", "8", "3", 
             "7", "2", "0", "5", "6", "6", "8", "0", "6", "9", "3"}}, 
           AutoDelete -> False, 
           GridBoxFrame -> {"Columns" -> {{True}}, "Rows" -> {{True}}}, 
           GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Grid"]], 
        "ExerciseOutput", Selectable -> False, Copyable -> False, Editable -> 
        False, ShowCellBracket -> False]]], " "}
   },
   GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Center}}},
   GridBoxBackground->{"Columns" -> {{
        RGBColor[1, 1, 1]}}},
   GridBoxSpacings->{"Columns" -> {{Automatic}}, "Rows" -> {{1}}}],
  FrameMargins->0]], "ExerciseOutput",
 Editable->False,
 Selectable->False,
 Deletable->False,
 CellFrame->{{1, 1}, {1, 1}},
 ShowCellBracket->False,
 CellFrameColor->RGBColor[0.85, 0.85, 0.85],
 LineBreakWithin->Automatic]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 "Forme una rejilla con los 400 primeros caracteres del art\[IAcute]culo \
\[OpenCurlyDoubleQuote]computers\[CloseCurlyDoubleQuote] en Wikipedia, con 20 \
caracteres por rengl\[OAcute]n y con un marco en todos los casos.",
 StyleBox[ButtonBox["\[NonBreakingSpace]\[RightGuillemet]",
  Appearance->None,
  Evaluator->Automatic,
  Method->"Preemptive",
  ButtonFunction:>(SelectionMove[
     ButtonNotebook[], All, ButtonCell, AutoScroll -> False]; 
   FrontEndExecute[
     FrontEndToken[
      ButtonNotebook[], "OpenCloseGroup"]])],
  FontColor->RGBColor[1, 0.501961, 0]]
}], "Exercise",
 Editable->False,
 Selectable->False,
 Deletable->False,
 CellDingbat->Cell[
  "30.4", "ExerciseNumber", FontColor -> 
   RGBColor[0.9019607843137255, 0.4117647058823529, 0.027450980392156862`]],
 ShowCellBracket->False],

Cell[BoxData[
 PaneBox[GridBox[{
    {" ", 
     StyleBox[
      RowBox[{"Sample", " ", "expected", " ", 
       RowBox[{"output", ":"}]}],
      Editable->False,
      Selectable->False,
      StripOnInput->False,
      FontColor->RGBColor[0.45, 0.45, 0.45]], " "},
    {" ", 
     InterpretationBox[Cell[BoxData[
       TagBox[GridBox[{
          {"\<\"A\"\>", "\<\" \"\>", "\<\"c\"\>", "\<\"o\"\>", "\<\"m\"\>", "\
\<\"p\"\>", "\<\"u\"\>", "\<\"t\"\>", "\<\"e\"\>", "\<\"r\"\>", "\<\" \"\>", \
"\<\"i\"\>", "\<\"s\"\>", "\<\" \"\>", "\<\"a\"\>", "\<\" \"\>", "\<\"g\"\>", \
"\<\"e\"\>", "\<\"n\"\>", "\<\"e\"\>"},
          {"\<\"r\"\>", "\<\"a\"\>", "\<\"l\"\>", "\<\"-\"\>", "\<\"p\"\>", "\
\<\"u\"\>", "\<\"r\"\>", "\<\"p\"\>", "\<\"o\"\>", "\<\"s\"\>", "\<\"e\"\>", \
"\<\" \"\>", "\<\"d\"\>", "\<\"e\"\>", "\<\"v\"\>", "\<\"i\"\>", "\<\"c\"\>", \
"\<\"e\"\>", "\<\" \"\>", "\<\"t\"\>"},
          {"\<\"h\"\>", "\<\"a\"\>", "\<\"t\"\>", "\<\" \"\>", "\<\"c\"\>", "\
\<\"a\"\>", "\<\"n\"\>", "\<\" \"\>", "\<\"b\"\>", "\<\"e\"\>", "\<\" \"\>", \
"\<\"p\"\>", "\<\"r\"\>", "\<\"o\"\>", "\<\"g\"\>", "\<\"r\"\>", "\<\"a\"\>", \
"\<\"m\"\>", "\<\"m\"\>", "\<\"e\"\>"},
          {"\<\"d\"\>", "\<\" \"\>", "\<\"t\"\>", "\<\"o\"\>", "\<\" \"\>", "\
\<\"c\"\>", "\<\"a\"\>", "\<\"r\"\>", "\<\"r\"\>", "\<\"y\"\>", "\<\" \"\>", \
"\<\"o\"\>", "\<\"u\"\>", "\<\"t\"\>", "\<\" \"\>", "\<\"a\"\>", "\<\" \"\>", \
"\<\"s\"\>", "\<\"e\"\>", "\<\"t\"\>"},
          {"\<\" \"\>", "\<\"o\"\>", "\<\"f\"\>", "\<\" \"\>", "\<\"a\"\>", "\
\<\"r\"\>", "\<\"i\"\>", "\<\"t\"\>", "\<\"h\"\>", "\<\"m\"\>", "\<\"e\"\>", \
"\<\"t\"\>", "\<\"i\"\>", "\<\"c\"\>", "\<\" \"\>", "\<\"o\"\>", "\<\"r\"\>", \
"\<\" \"\>", "\<\"l\"\>", "\<\"o\"\>"},
          {"\<\"g\"\>", "\<\"i\"\>", "\<\"c\"\>", "\<\"a\"\>", "\<\"l\"\>", "\
\<\" \"\>", "\<\"o\"\>", "\<\"p\"\>", "\<\"e\"\>", "\<\"r\"\>", "\<\"a\"\>", \
"\<\"t\"\>", "\<\"i\"\>", "\<\"o\"\>", "\<\"n\"\>", "\<\"s\"\>", "\<\" \"\>", \
"\<\"a\"\>", "\<\"u\"\>", "\<\"t\"\>"},
          {"\<\"o\"\>", "\<\"m\"\>", "\<\"a\"\>", "\<\"t\"\>", "\<\"i\"\>", "\
\<\"c\"\>", "\<\"a\"\>", "\<\"l\"\>", "\<\"l\"\>", "\<\"y\"\>", "\<\".\"\>", \
"\<\" \"\>", "\<\"S\"\>", "\<\"i\"\>", "\<\"n\"\>", "\<\"c\"\>", "\<\"e\"\>", \
"\<\" \"\>", "\<\"a\"\>", "\<\" \"\>"},
          {"\<\"s\"\>", "\<\"e\"\>", "\<\"q\"\>", "\<\"u\"\>", "\<\"e\"\>", "\
\<\"n\"\>", "\<\"c\"\>", "\<\"e\"\>", "\<\" \"\>", "\<\"o\"\>", "\<\"f\"\>", \
"\<\" \"\>", "\<\"o\"\>", "\<\"p\"\>", "\<\"e\"\>", "\<\"r\"\>", "\<\"a\"\>", \
"\<\"t\"\>", "\<\"i\"\>", "\<\"o\"\>"},
          {"\<\"n\"\>", "\<\"s\"\>", "\<\" \"\>", "\<\"c\"\>", "\<\"a\"\>", "\
\<\"n\"\>", "\<\" \"\>", "\<\"b\"\>", "\<\"e\"\>", "\<\" \"\>", "\<\"r\"\>", \
"\<\"e\"\>", "\<\"a\"\>", "\<\"d\"\>", "\<\"i\"\>", "\<\"l\"\>", "\<\"y\"\>", \
"\<\" \"\>", "\<\"c\"\>", "\<\"h\"\>"},
          {"\<\"a\"\>", "\<\"n\"\>", "\<\"g\"\>", "\<\"e\"\>", "\<\"d\"\>", "\
\<\",\"\>", "\<\" \"\>", "\<\"t\"\>", "\<\"h\"\>", "\<\"e\"\>", "\<\" \"\>", \
"\<\"c\"\>", "\<\"o\"\>", "\<\"m\"\>", "\<\"p\"\>", "\<\"u\"\>", "\<\"t\"\>", \
"\<\"e\"\>", "\<\"r\"\>", "\<\" \"\>"},
          {"\<\"c\"\>", "\<\"a\"\>", "\<\"n\"\>", "\<\" \"\>", "\<\"s\"\>", "\
\<\"o\"\>", "\<\"l\"\>", "\<\"v\"\>", "\<\"e\"\>", "\<\" \"\>", "\<\"m\"\>", \
"\<\"o\"\>", "\<\"r\"\>", "\<\"e\"\>", "\<\" \"\>", "\<\"t\"\>", "\<\"h\"\>", \
"\<\"a\"\>", "\<\"n\"\>", "\<\" \"\>"},
          {"\<\"o\"\>", "\<\"n\"\>", "\<\"e\"\>", "\<\" \"\>", "\<\"k\"\>", "\
\<\"i\"\>", "\<\"n\"\>", "\<\"d\"\>", "\<\" \"\>", "\<\"o\"\>", "\<\"f\"\>", \
"\<\" \"\>", "\<\"p\"\>", "\<\"r\"\>", "\<\"o\"\>", "\<\"b\"\>", "\<\"l\"\>", \
"\<\"e\"\>", "\<\"m\"\>", "\<\".\"\>"},
          {"\<\"\\n\"\>", "\<\"C\"\>", "\<\"o\"\>", "\<\"n\"\>", "\<\"v\"\>", \
"\<\"e\"\>", "\<\"n\"\>", "\<\"t\"\>", "\<\"i\"\>", "\<\"o\"\>", "\<\"n\"\>", \
"\<\"a\"\>", "\<\"l\"\>", "\<\"l\"\>", "\<\"y\"\>", "\<\",\"\>", "\<\" \"\>", \
"\<\"a\"\>", "\<\" \"\>", "\<\"c\"\>"},
          {"\<\"o\"\>", "\<\"m\"\>", "\<\"p\"\>", "\<\"u\"\>", "\<\"t\"\>", "\
\<\"e\"\>", "\<\"r\"\>", "\<\" \"\>", "\<\"c\"\>", "\<\"o\"\>", "\<\"n\"\>", \
"\<\"s\"\>", "\<\"i\"\>", "\<\"s\"\>", "\<\"t\"\>", "\<\"s\"\>", "\<\" \"\>", \
"\<\"o\"\>", "\<\"f\"\>", "\<\" \"\>"},
          {"\<\"a\"\>", "\<\"t\"\>", "\<\" \"\>", "\<\"l\"\>", "\<\"e\"\>", "\
\<\"a\"\>", "\<\"s\"\>", "\<\"t\"\>", "\<\" \"\>", "\<\"o\"\>", "\<\"n\"\>", \
"\<\"e\"\>", "\<\" \"\>", "\<\"p\"\>", "\<\"r\"\>", "\<\"o\"\>", "\<\"c\"\>", \
"\<\"e\"\>", "\<\"s\"\>", "\<\"s\"\>"},
          {"\<\"i\"\>", "\<\"n\"\>", "\<\"g\"\>", "\<\" \"\>", "\<\"e\"\>", "\
\<\"l\"\>", "\<\"e\"\>", "\<\"m\"\>", "\<\"e\"\>", "\<\"n\"\>", "\<\"t\"\>", \
"\<\",\"\>", "\<\" \"\>", "\<\"t\"\>", "\<\"y\"\>", "\<\"p\"\>", "\<\"i\"\>", \
"\<\"c\"\>", "\<\"a\"\>", "\<\"l\"\>"},
          {"\<\"l\"\>", "\<\"y\"\>", "\<\" \"\>", "\<\"a\"\>", "\<\" \"\>", "\
\<\"c\"\>", "\<\"e\"\>", "\<\"n\"\>", "\<\"t\"\>", "\<\"r\"\>", "\<\"a\"\>", \
"\<\"l\"\>", "\<\" \"\>", "\<\"p\"\>", "\<\"r\"\>", "\<\"o\"\>", "\<\"c\"\>", \
"\<\"e\"\>", "\<\"s\"\>", "\<\"s\"\>"},
          {"\<\"i\"\>", "\<\"n\"\>", "\<\"g\"\>", "\<\" \"\>", "\<\"u\"\>", "\
\<\"n\"\>", "\<\"i\"\>", "\<\"t\"\>", "\<\" \"\>", "\<\"(\"\>", "\<\"C\"\>", \
"\<\"P\"\>", "\<\"U\"\>", "\<\")\"\>", "\<\",\"\>", "\<\" \"\>", "\<\"a\"\>", \
"\<\"n\"\>", "\<\"d\"\>", "\<\" \"\>"},
          {"\<\"s\"\>", "\<\"o\"\>", "\<\"m\"\>", "\<\"e\"\>", "\<\" \"\>", "\
\<\"f\"\>", "\<\"o\"\>", "\<\"r\"\>", "\<\"m\"\>", "\<\" \"\>", "\<\"o\"\>", \
"\<\"f\"\>", "\<\" \"\>", "\<\"m\"\>", "\<\"e\"\>", "\<\"m\"\>", "\<\"o\"\>", \
"\<\"r\"\>", "\<\"y\"\>", "\<\".\"\>"},
          {"\<\" \"\>", "\<\"T\"\>", "\<\"h\"\>", "\<\"e\"\>", "\<\" \"\>", "\
\<\"p\"\>", "\<\"r\"\>", "\<\"o\"\>", "\<\"c\"\>", "\<\"e\"\>", "\<\"s\"\>", \
"\<\"s\"\>", "\<\"i\"\>", "\<\"n\"\>", "\<\"g\"\>", "\<\" \"\>", "\<\"e\"\>", \
"\<\"l\"\>", "\<\"e\"\>", "\<\"m\"\>"}
         },
         AutoDelete->False,
         GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
         GridBoxItemSize->{
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
        "Grid"]], "ExerciseOutput"],
      Apply[TextCell, 
       Cell[
        BoxData[
         TagBox[
          
          GridBox[{{
            "\"A\"", "\" \"", "\"c\"", "\"o\"", "\"m\"", "\"p\"", "\"u\"", 
             "\"t\"", "\"e\"", "\"r\"", "\" \"", "\"i\"", "\"s\"", "\" \"", 
             "\"a\"", "\" \"", "\"g\"", "\"e\"", "\"n\"", "\"e\""}, {
            "\"r\"", "\"a\"", "\"l\"", "\"-\"", "\"p\"", "\"u\"", "\"r\"", 
             "\"p\"", "\"o\"", "\"s\"", "\"e\"", "\" \"", "\"d\"", "\"e\"", 
             "\"v\"", "\"i\"", "\"c\"", "\"e\"", "\" \"", "\"t\""}, {
            "\"h\"", "\"a\"", "\"t\"", "\" \"", "\"c\"", "\"a\"", "\"n\"", 
             "\" \"", "\"b\"", "\"e\"", "\" \"", "\"p\"", "\"r\"", "\"o\"", 
             "\"g\"", "\"r\"", "\"a\"", "\"m\"", "\"m\"", "\"e\""}, {
            "\"d\"", "\" \"", "\"t\"", "\"o\"", "\" \"", "\"c\"", "\"a\"", 
             "\"r\"", "\"r\"", "\"y\"", "\" \"", "\"o\"", "\"u\"", "\"t\"", 
             "\" \"", "\"a\"", "\" \"", "\"s\"", "\"e\"", "\"t\""}, {
            "\" \"", "\"o\"", "\"f\"", "\" \"", "\"a\"", "\"r\"", "\"i\"", 
             "\"t\"", "\"h\"", "\"m\"", "\"e\"", "\"t\"", "\"i\"", "\"c\"", 
             "\" \"", "\"o\"", "\"r\"", "\" \"", "\"l\"", "\"o\""}, {
            "\"g\"", "\"i\"", "\"c\"", "\"a\"", "\"l\"", "\" \"", "\"o\"", 
             "\"p\"", "\"e\"", "\"r\"", "\"a\"", "\"t\"", "\"i\"", "\"o\"", 
             "\"n\"", "\"s\"", "\" \"", "\"a\"", "\"u\"", "\"t\""}, {
            "\"o\"", "\"m\"", "\"a\"", "\"t\"", "\"i\"", "\"c\"", "\"a\"", 
             "\"l\"", "\"l\"", "\"y\"", "\".\"", "\" \"", "\"S\"", "\"i\"", 
             "\"n\"", "\"c\"", "\"e\"", "\" \"", "\"a\"", "\" \""}, {
            "\"s\"", "\"e\"", "\"q\"", "\"u\"", "\"e\"", "\"n\"", "\"c\"", 
             "\"e\"", "\" \"", "\"o\"", "\"f\"", "\" \"", "\"o\"", "\"p\"", 
             "\"e\"", "\"r\"", "\"a\"", "\"t\"", "\"i\"", "\"o\""}, {
            "\"n\"", "\"s\"", "\" \"", "\"c\"", "\"a\"", "\"n\"", "\" \"", 
             "\"b\"", "\"e\"", "\" \"", "\"r\"", "\"e\"", "\"a\"", "\"d\"", 
             "\"i\"", "\"l\"", "\"y\"", "\" \"", "\"c\"", "\"h\""}, {
            "\"a\"", "\"n\"", "\"g\"", "\"e\"", "\"d\"", "\",\"", "\" \"", 
             "\"t\"", "\"h\"", "\"e\"", "\" \"", "\"c\"", "\"o\"", "\"m\"", 
             "\"p\"", "\"u\"", "\"t\"", "\"e\"", "\"r\"", "\" \""}, {
            "\"c\"", "\"a\"", "\"n\"", "\" \"", "\"s\"", "\"o\"", "\"l\"", 
             "\"v\"", "\"e\"", "\" \"", "\"m\"", "\"o\"", "\"r\"", "\"e\"", 
             "\" \"", "\"t\"", "\"h\"", "\"a\"", "\"n\"", "\" \""}, {
            "\"o\"", "\"n\"", "\"e\"", "\" \"", "\"k\"", "\"i\"", "\"n\"", 
             "\"d\"", "\" \"", "\"o\"", "\"f\"", "\" \"", "\"p\"", "\"r\"", 
             "\"o\"", "\"b\"", "\"l\"", "\"e\"", "\"m\"", "\".\""}, {
            "\"\\n\"", "\"C\"", "\"o\"", "\"n\"", "\"v\"", "\"e\"", "\"n\"", 
             "\"t\"", "\"i\"", "\"o\"", "\"n\"", "\"a\"", "\"l\"", "\"l\"", 
             "\"y\"", "\",\"", "\" \"", "\"a\"", "\" \"", "\"c\""}, {
            "\"o\"", "\"m\"", "\"p\"", "\"u\"", "\"t\"", "\"e\"", "\"r\"", 
             "\" \"", "\"c\"", "\"o\"", "\"n\"", "\"s\"", "\"i\"", "\"s\"", 
             "\"t\"", "\"s\"", "\" \"", "\"o\"", "\"f\"", "\" \""}, {
            "\"a\"", "\"t\"", "\" \"", "\"l\"", "\"e\"", "\"a\"", "\"s\"", 
             "\"t\"", "\" \"", "\"o\"", "\"n\"", "\"e\"", "\" \"", "\"p\"", 
             "\"r\"", "\"o\"", "\"c\"", "\"e\"", "\"s\"", "\"s\""}, {
            "\"i\"", "\"n\"", "\"g\"", "\" \"", "\"e\"", "\"l\"", "\"e\"", 
             "\"m\"", "\"e\"", "\"n\"", "\"t\"", "\",\"", "\" \"", "\"t\"", 
             "\"y\"", "\"p\"", "\"i\"", "\"c\"", "\"a\"", "\"l\""}, {
            "\"l\"", "\"y\"", "\" \"", "\"a\"", "\" \"", "\"c\"", "\"e\"", 
             "\"n\"", "\"t\"", "\"r\"", "\"a\"", "\"l\"", "\" \"", "\"p\"", 
             "\"r\"", "\"o\"", "\"c\"", "\"e\"", "\"s\"", "\"s\""}, {
            "\"i\"", "\"n\"", "\"g\"", "\" \"", "\"u\"", "\"n\"", "\"i\"", 
             "\"t\"", "\" \"", "\"(\"", "\"C\"", "\"P\"", "\"U\"", "\")\"", 
             "\",\"", "\" \"", "\"a\"", "\"n\"", "\"d\"", "\" \""}, {
            "\"s\"", "\"o\"", "\"m\"", "\"e\"", "\" \"", "\"f\"", "\"o\"", 
             "\"r\"", "\"m\"", "\" \"", "\"o\"", "\"f\"", "\" \"", "\"m\"", 
             "\"e\"", "\"m\"", "\"o\"", "\"r\"", "\"y\"", "\".\""}, {
            "\" \"", "\"T\"", "\"h\"", "\"e\"", "\" \"", "\"p\"", "\"r\"", 
             "\"o\"", "\"c\"", "\"e\"", "\"s\"", "\"s\"", "\"i\"", "\"n\"", 
             "\"g\"", "\" \"", "\"e\"", "\"l\"", "\"e\"", "\"m\""}}, 
           AutoDelete -> False, 
           GridBoxFrame -> {"Columns" -> {{True}}, "Rows" -> {{True}}}, 
           GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Grid"]], 
        "ExerciseOutput", Selectable -> False, Copyable -> False, Editable -> 
        False, ShowCellBracket -> False]]], " "}
   },
   GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Center}}},
   GridBoxBackground->{"Columns" -> {{
        RGBColor[1, 1, 1]}}},
   GridBoxSpacings->{"Columns" -> {{Automatic}}, "Rows" -> {{1}}}],
  FrameMargins->0]], "ExerciseOutput",
 Editable->False,
 Selectable->False,
 Deletable->False,
 CellFrame->{{1, 1}, {1, 1}},
 ShowCellBracket->False,
 CellFrameColor->RGBColor[0.85, 0.85, 0.85],
 LineBreakWithin->Automatic]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 "Obtenga un gr\[AAcute]fico con los puntos unidos de la lista aplanada de \
los d\[IAcute]gitos de los n\[UAcute]meros del 0 al 200 ",
 StyleBox["(la secuencia de Champernowne",
  FontSlant->"Italic"],
 ").",
 StyleBox[ButtonBox["\[NonBreakingSpace]\[RightGuillemet]",
  Appearance->None,
  Evaluator->Automatic,
  Method->"Preemptive",
  ButtonFunction:>(SelectionMove[
     ButtonNotebook[], All, ButtonCell, AutoScroll -> False]; 
   FrontEndExecute[
     FrontEndToken[
      ButtonNotebook[], "OpenCloseGroup"]])],
  FontColor->RGBColor[1, 0.501961, 0]]
}], "Exercise",
 Editable->False,
 Selectable->False,
 Deletable->False,
 CellDingbat->Cell[
  "30.5", "ExerciseNumber", FontColor -> 
   RGBColor[0.9019607843137255, 0.4117647058823529, 0.027450980392156862`]],
 ShowCellBracket->False,
 CellTags->"i:25"],

Cell[BoxData[
 PaneBox[GridBox[{
    {" ", 
     StyleBox[
      RowBox[{"Expected", " ", 
       RowBox[{"output", ":"}]}],
      Editable->False,
      Selectable->False,
      StripOnInput->False,
      FontColor->RGBColor[0.45, 0.45, 0.45]], " "},
    {" ", 
     InterpretationBox[Cell[BoxData[
       GraphicsBox[{{}, {{}, {}, 
          {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
           0.011111111111111112`], AbsoluteThickness[1.6], 
           LineBox[CompressedData["
1:eJxdmEkO3EQUhgtWLHvBggULYyGEEELNPJMKZCIJiZMACSQEZ4aEEGeeozpC
H8FH6CPUEfoIvgBSHwEh/3+j99Xm6fP/ld1+5aG737h46+SVl1NK/7yU0n91
Hts9KY4ct7+S4/ZFjttfxfbXsP11bG+wvcX2N7H9LXyet/15NN5B/i74PfDS
81XfR/6B2Of3IfKPxD7fj5F/Ivb5f4r8M7H78TnyL8Tuz5fIvxK7X18j/0bc
qu5R9flm8zxKRr437q/sRf5t5AJO36mqf+U75PtU1b+yD/l+VfWv7Ed+QFX9
KweQH1RV/8pB5IdU1b9yCPn3qq1ys6+Hw/bnUQ4jP6Lq/h1BfjQerxxF/kPk
Ak7HVN2/Y8iPq7p/x5F3qupf7mJezOpfRZ5OqKp/+UTMi7nVfLPvl5OqGvlk
zItZ/avI0ynP1/FPxbyY9Xkq8vRj5AwuZvWvIk8/qbp/P8W8mN0/5OlnVffv
55gXc6v5Zj9PTqtq5NMxL2b3D3k64/k6/pmYF7P7hzz9Ej9v/iXmBVzB6VdV
9+/XmBez+4c8nVV1/87GvJhbzTf7eXtOVSOfi3kxu3/I02+er+P/FvNidv+Q
p/Oq7t/5mBez+4c8/R45g4vZ/UOeelX1r+ljns3tXHuzn6dmjRF5Nat/E/J0
wfN1/Asxz2b1r0dezOrfiLya1b8JebqoqvNtLsY8g3twMat/I/JqbnV8+OmS
qkZzKebZrP71yMtuvo6PvJrVvwl5uqyq/jWXY57N6l+PvJjVvxF5NasfE/J0
JXIDzuZWxwcXs8aIvJp9/SFPVz1fx78a82z29Ye8mH39Ia9mX3/I0zVVX3/X
Yp7Nvv6QF7OvP+QVPJn9/fAPsUYDzmZff8gL8hFc4U87Vv0z+s2f0c9m9x9+
gT+atR4V/gQ/XRdrfZrr0c/Xo9+b/XyFP8KvZl//8NON6DdmX/83ot/DL+Z2
riP8Cp4wP/0V8wacwT24gEez1rcin8Dppljr29yMeQb3Zn8/Qj6Cq9n3H/L0
d+TG7Pcf8h5czFrfEXkFT2Y//27h+OBsbufaIy9mP/93PI8Kf4KfhpgvwM0Q
/SU4w++Q92at7wC/wF+Z/TyFv4ZfzVrfDfwJ/tbs7z+3o7+4Hf3GrPVdws/w
O7PWt4c/wC/mdq4r+KNZ/Vvv5s+jwt/An5BvwelO9Bdmn/+d6C/hZ3AHv0c+
mH3/wl/BH81a3zX8Cn9j1vpO8Lfw011Vre/ibvSbu9Ffmv18ht/B783tXAf4
xax+rMwaI/w1/Ip8A57gb3f7V70X/cW96Ddmnz/8DL8D9/AH5MWs9V3BH+Gv
zVrfCn8DfzJrfbfw0/3oL8z+Pno/+kv42dzOtYPfm3V+g1mjwF/BH5GvwRX+
Zrf/uU7wt/DTA1Xf/w+i3zyI/tLs84ffwe/BA/yCfGX27wn4a/jVrPXdwJ/g
b81+/z6M/uJh9BtzO9cl/GzW5+3MGj38AX5BvgKP8Ne7/c+1wt/An8xa3y38
9Cj6C7Pv/0fRX8LPZvWrg9/DH8AF/gr5aNb6ruFX+Buz1neCv4WfHqu2c108
jn5j9vvfrJHhd/B75AO4wF/t9j/XEf4afjX7/Qd/gr81+//HJ9FfPIl+Y/b9
Dz/D78zqbw9/gF/AK/gj8rXZ/y/A38CfzO1ct/DT07i/hVmjeRr9JfyMvAP3
8Ifd/uda4K/gj2Z//4Nf4W/Mfv/B38JPz1S1votn0W+eRX9p9v0Pv4Pfm7Ue
A/wCfwUe4a+RV3M71w38CfnW7PE8+ovn0W+QL8EZfmf27x/4A/xi1vqu4I/w
12Z//4O/gT+Z/f6Dn15Ef2H2/1Evor+En82+/+H38Aez/z+Ev4I/gtdmv/92
PI/N//wvBq4bIA==
            "]]}}, {}},
        AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
        Axes->{True, True},
        AxesLabel->{None, None},
        AxesOrigin->{0, 0},
        DisplayFunction->Identity,
        Frame->{{False, False}, {False, False}},
        FrameLabel->{{None, None}, {None, None}},
        FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
        GridLines->{None, None},
        GridLinesStyle->Directive[
          GrayLevel[0.5, 0.4]],
        ImageSize->{465.4453125, Automatic},
        Method->{},
        PlotRange->{{0., 493.}, {0, 9.}},
        PlotRangeClipping->True,
        PlotRangePadding->{{
           Scaled[0.02], 
           Scaled[0.02]}, {
           Scaled[0.02], 
           Scaled[0.05]}},
        Ticks->{Automatic, Automatic}]], "ExerciseOutput"],
      Apply[TextCell, 
       Cell[
        BoxData[
         GraphicsBox[{{}, {{}, {}, {{
              RGBColor[0.368417, 0.506779, 0.709798], 
              PointSize[0.011111111111111112`], 
              AbsoluteThickness[1.6], 
              LineBox[CompressedData["
1:eJxdmEkO3EQUhgtWLHvBggULYyGEEELNPJMKZCIJiZMACSQEZ4aEEGeeozpC
H8FH6CPUEfoIvgBSHwEh/3+j99Xm6fP/ld1+5aG737h46+SVl1NK/7yU0n91
Hts9KY4ct7+S4/ZFjttfxfbXsP11bG+wvcX2N7H9LXyet/15NN5B/i74PfDS
81XfR/6B2Of3IfKPxD7fj5F/Ivb5f4r8M7H78TnyL8Tuz5fIvxK7X18j/0bc
qu5R9flm8zxKRr437q/sRf5t5AJO36mqf+U75PtU1b+yD/l+VfWv7Ed+QFX9
KweQH1RV/8pB5IdU1b9yCPn3qq1ys6+Hw/bnUQ4jP6Lq/h1BfjQerxxF/kPk
Ak7HVN2/Y8iPq7p/x5F3qupf7mJezOpfRZ5OqKp/+UTMi7nVfLPvl5OqGvlk
zItZ/avI0ynP1/FPxbyY9Xkq8vRj5AwuZvWvIk8/qbp/P8W8mN0/5OlnVffv
55gXc6v5Zj9PTqtq5NMxL2b3D3k64/k6/pmYF7P7hzz9Ej9v/iXmBVzB6VdV
9+/XmBez+4c8nVV1/87GvJhbzTf7eXtOVSOfi3kxu3/I02+er+P/FvNidv+Q
p/Oq7t/5mBez+4c8/R45g4vZ/UOeelX1r+ljns3tXHuzn6dmjRF5Nat/E/J0
wfN1/Asxz2b1r0dezOrfiLya1b8JebqoqvNtLsY8g3twMat/I/JqbnV8+OmS
qkZzKebZrP71yMtuvo6PvJrVvwl5uqyq/jWXY57N6l+PvJjVvxF5NasfE/J0
JXIDzuZWxwcXs8aIvJp9/SFPVz1fx78a82z29Ye8mH39Ia9mX3/I0zVVX3/X
Yp7Nvv6QF7OvP+QVPJn9/fAPsUYDzmZff8gL8hFc4U87Vv0z+s2f0c9m9x9+
gT+atR4V/gQ/XRdrfZrr0c/Xo9+b/XyFP8KvZl//8NON6DdmX/83ot/DL+Z2
riP8Cp4wP/0V8wacwT24gEez1rcin8Dppljr29yMeQb3Zn8/Qj6Cq9n3H/L0
d+TG7Pcf8h5czFrfEXkFT2Y//27h+OBsbufaIy9mP/93PI8Kf4KfhpgvwM0Q
/SU4w++Q92at7wC/wF+Z/TyFv4ZfzVrfDfwJ/tbs7z+3o7+4Hf3GrPVdws/w
O7PWt4c/wC/mdq4r+KNZ/Vvv5s+jwt/An5BvwelO9Bdmn/+d6C/hZ3AHv0c+
mH3/wl/BH81a3zX8Cn9j1vpO8Lfw011Vre/ibvSbu9Ffmv18ht/B783tXAf4
xax+rMwaI/w1/Ip8A57gb3f7V70X/cW96Ddmnz/8DL8D9/AH5MWs9V3BH+Gv
zVrfCn8DfzJrfbfw0/3oL8z+Pno/+kv42dzOtYPfm3V+g1mjwF/BH5GvwRX+
Zrf/uU7wt/DTA1Xf/w+i3zyI/tLs84ffwe/BA/yCfGX27wn4a/jVrPXdwJ/g
b81+/z6M/uJh9BtzO9cl/GzW5+3MGj38AX5BvgKP8Ne7/c+1wt/An8xa3y38
9Cj6C7Pv/0fRX8LPZvWrg9/DH8AF/gr5aNb6ruFX+Buz1neCv4WfHqu2c108
jn5j9vvfrJHhd/B75AO4wF/t9j/XEf4afjX7/Qd/gr81+//HJ9FfPIl+Y/b9
Dz/D78zqbw9/gF/AK/gj8rXZ/y/A38CfzO1ct/DT07i/hVmjeRr9JfyMvAP3
8Ifd/uda4K/gj2Z//4Nf4W/Mfv/B38JPz1S1votn0W+eRX9p9v0Pv4Pfm7Ue
A/wCfwUe4a+RV3M71w38CfnW7PE8+ovn0W+QL8EZfmf27x/4A/xi1vqu4I/w
12Z//4O/gT+Z/f6Dn15Ef2H2/1Evor+En82+/+H38Aez/z+Ev4I/gtdmv/92
PI/N//wvBq4bIA==
               "]]}}}, {}}, AspectRatio -> 
          NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
          AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction -> 
          Identity, Frame -> {{False, False}, {False, False}}, 
          FrameLabel -> {{None, None}, {None, None}}, 
          FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
          GridLines -> {None, None}, GridLinesStyle -> Directive[
            GrayLevel[0.5, 0.4]], ImageSize -> {465.4453125, Automatic}, 
          Method -> {}, PlotRange -> {{0., 493.}, {0, 9.}}, PlotRangeClipping -> 
          True, PlotRangePadding -> {{
             Scaled[0.02], 
             Scaled[0.02]}, {
             Scaled[0.02], 
             Scaled[0.05]}}, Ticks -> {Automatic, Automatic}]], 
        "ExerciseOutput", Selectable -> False, Copyable -> False, Editable -> 
        False, ShowCellBracket -> False]]], " "}
   },
   GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Center}}},
   GridBoxBackground->{"Columns" -> {{
        RGBColor[1, 1, 1]}}},
   GridBoxSpacings->{"Columns" -> {{Automatic}}, "Rows" -> {{1}}}],
  FrameMargins->0]], "ExerciseOutput",
 Editable->False,
 Selectable->False,
 Deletable->False,
 CellFrame->{{1, 1}, {1, 1}},
 ShowCellBracket->False,
 CellFrameColor->RGBColor[0.85, 0.85, 0.85],
 LineBreakWithin->Automatic]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 "Efect\[UAcute]e 4 pasos del an\[AAcute]logo ",
 StyleBox["\[OpenCurlyDoubleQuote]esponja de Menger\[CloseCurlyDoubleQuote]",
  FontSlant->"Italic"],
 " del patr\[OAcute]n de Sierpinski fractal del texto, pero con un ",
 StyleBox["kernel",
  FontSlant->"Italic"],
 " de la forma ",
 Cell[BoxData[
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      ButtonBox["#",
       BaseStyle->"Link",
       ButtonData->"Slot"], ",", 
      ButtonBox["#",
       BaseStyle->"Link",
       ButtonData->"Slot"], ",", 
      ButtonBox["#",
       BaseStyle->"Link",
       ButtonData->"Slot"]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      ButtonBox["#",
       BaseStyle->"Link",
       ButtonData->"Slot"], ",", "0", ",", 
      ButtonBox["#",
       BaseStyle->"Link",
       ButtonData->"Slot"]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      ButtonBox["#",
       BaseStyle->"Link",
       ButtonData->"Slot"], ",", 
      ButtonBox["#",
       BaseStyle->"Link",
       ButtonData->"Slot"], ",", 
      ButtonBox["#",
       BaseStyle->"Link",
       ButtonData->"Slot"]}], "}"}]}], "}"}]], "InlineCode"],
 ".",
 StyleBox[ButtonBox["\[NonBreakingSpace]\[RightGuillemet]",
  Appearance->None,
  Evaluator->Automatic,
  Method->"Preemptive",
  ButtonFunction:>(SelectionMove[
     ButtonNotebook[], All, ButtonCell, AutoScroll -> False]; 
   FrontEndExecute[
     FrontEndToken[
      ButtonNotebook[], "OpenCloseGroup"]])],
  FontColor->RGBColor[1, 0.501961, 0]]
}], "Exercise",
 Editable->False,
 Selectable->False,
 Deletable->False,
 CellDingbat->Cell[
  "30.6", "ExerciseNumber", FontColor -> 
   RGBColor[0.9019607843137255, 0.4117647058823529, 0.027450980392156862`]],
 ShowCellBracket->False,
 CellTags->"i:26"],

Cell[BoxData[
 PaneBox[GridBox[{
    {" ", 
     StyleBox[
      RowBox[{"Expected", " ", 
       RowBox[{"output", ":"}]}],
      Editable->False,
      Selectable->False,
      StripOnInput->False,
      FontColor->RGBColor[0.45, 0.45, 0.45]], " "},
    {" ", 
     InterpretationBox[Cell[BoxData[
       RowBox[{"{", 
        RowBox[{
         GraphicsBox[RasterBox[{{0}}, {{0, 0}, {1, 1}}, {0, 1}],
          Frame->Automatic,
          FrameLabel->{None, None},
          FrameTicks->{{None, None}, {None, None}},
          GridLinesStyle->Directive[
            GrayLevel[0.5, 0.4]],
          
          Method->{
           "DefaultBoundaryStyle" -> Automatic, "DefaultPlotStyle" -> 
            Automatic}], ",", 
         GraphicsBox[
          RasterBox[{{0, 0, 0}, {0, 1, 0}, {0, 0, 0}}, {{0, 0}, {3, 3}}, {0, 
           1}],
          Frame->Automatic,
          FrameLabel->{None, None},
          FrameTicks->{{None, None}, {None, None}},
          GridLinesStyle->Directive[
            GrayLevel[0.5, 0.4]],
          
          Method->{
           "DefaultBoundaryStyle" -> Automatic, "DefaultPlotStyle" -> 
            Automatic}], ",", 
         GraphicsBox[
          RasterBox[{{0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 1, 0, 0, 1, 0, 0, 1, 
           0}, {0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 1, 1, 1, 0, 0, 0}, {0, 
           1, 0, 1, 1, 1, 0, 1, 0}, {0, 0, 0, 1, 1, 1, 0, 0, 0}, {0, 0, 0, 0, 
           0, 0, 0, 0, 0}, {0, 1, 0, 0, 1, 0, 0, 1, 0}, {0, 0, 0, 0, 0, 0, 0, 
           0, 0}}, {{0, 0}, {9, 9}}, {0, 1}],
          Frame->Automatic,
          FrameLabel->{None, None},
          FrameTicks->{{None, None}, {None, None}},
          GridLinesStyle->Directive[
            GrayLevel[0.5, 0.4]],
          
          Method->{
           "DefaultBoundaryStyle" -> Automatic, "DefaultPlotStyle" -> 
            Automatic}], ",", 
         GraphicsBox[RasterBox[CompressedData["
1:eJxTTMoPSmJiYGCQhmJ8gBE3wq+PkRE7gxHMYMTGwKOLBi6Emw8BmAYipDAM
xKIL5lRkKTQvIxuI5mUsumjgQtyhMDxjGQCjewK4
           "], {{0, 0}, {27, 27}}, {
           0, 1}],
          Frame->Automatic,
          FrameLabel->{None, None},
          FrameTicks->{{None, None}, {None, None}},
          GridLinesStyle->Directive[
            GrayLevel[0.5, 0.4]],
          
          Method->{
           "DefaultBoundaryStyle" -> Automatic, "DefaultPlotStyle" -> 
            Automatic}], ",", 
         GraphicsBox[RasterBox[CompressedData["
1:eJztWFEKwzAIjbvJjrQdoRfo/f8GI+mKRqnmFSKLpCCxumfeM5Q9t/29PUop
r/rgjdDrDoxESIe+DuEcOEK4ZWC5Im02GmpQfyHRhS8ER9joPoeYEnyhJsgz
eKZVXwiOEH6GGVgGW4ZZZkoYddaNPSXLKnbdzDR1WQVDLQcR6gKwCwaEbbes
ZeERws8wA8ss3VWw8xOiQVfLnUOAIxQikTvdglqWlLFL2HIHj/AvWdbsSsFe
WoJZPl5gjl1Qy1o39pwsg80AH1t3YFzf2IOWgeWKVJ8CX0hMrjHUl0JwhOL2
O3aCofWvyJQsgy3DLDMljDrrxp6P5Q9Tgwvs
           "], {{0, 0}, {81, 81}}, {0, 
           1}],
          Frame->Automatic,
          FrameLabel->{None, None},
          FrameTicks->{{None, None}, {None, None}},
          GridLinesStyle->Directive[
            GrayLevel[0.5, 0.4]],
          
          Method->{
           "DefaultBoundaryStyle" -> Automatic, "DefaultPlotStyle" -> 
            Automatic}]}], "}"}]], "ExerciseOutput"],
      Apply[TextCell, 
       Cell[
        BoxData[
         RowBox[{"{", 
           RowBox[{
             GraphicsBox[
              RasterBox[{{0}}, {{0, 0}, {1, 1}}, {0, 1}], Frame -> Automatic, 
              FrameLabel -> {None, None}, 
              FrameTicks -> {{None, None}, {None, None}}, GridLinesStyle -> 
              Directive[
                GrayLevel[0.5, 0.4]], 
              Method -> {
               "DefaultBoundaryStyle" -> Automatic, "DefaultPlotStyle" -> 
                Automatic}], ",", 
             GraphicsBox[
              
              RasterBox[{{0, 0, 0}, {0, 1, 0}, {0, 0, 0}}, {{0, 0}, {3, 3}}, {
               0, 1}], Frame -> Automatic, FrameLabel -> {None, None}, 
              FrameTicks -> {{None, None}, {None, None}}, GridLinesStyle -> 
              Directive[
                GrayLevel[0.5, 0.4]], 
              Method -> {
               "DefaultBoundaryStyle" -> Automatic, "DefaultPlotStyle" -> 
                Automatic}], ",", 
             GraphicsBox[
              
              RasterBox[{{0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 1, 0, 0, 1, 0, 0, 1,
                0}, {0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 1, 1, 1, 0, 0, 
               0}, {0, 1, 0, 1, 1, 1, 0, 1, 0}, {0, 0, 0, 1, 1, 1, 0, 0, 0}, {
               0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 1, 0, 0, 1, 0, 0, 1, 0}, {0, 0,
                0, 0, 0, 0, 0, 0, 0}}, {{0, 0}, {9, 9}}, {0, 1}], Frame -> 
              Automatic, FrameLabel -> {None, None}, 
              FrameTicks -> {{None, None}, {None, None}}, GridLinesStyle -> 
              Directive[
                GrayLevel[0.5, 0.4]], 
              Method -> {
               "DefaultBoundaryStyle" -> Automatic, "DefaultPlotStyle" -> 
                Automatic}], ",", 
             GraphicsBox[
              RasterBox[CompressedData["
1:eJxTTMoPSmJiYGCQhmJ8gBE3wq+PkRE7gxHMYMTGwKOLBi6Emw8BmAYipDAM
xKIL5lRkKTQvIxuI5mUsumjgQtyhMDxjGQCjewK4
               "], {{0, 0}, {27, 
               27}}, {0, 1}], Frame -> Automatic, FrameLabel -> {None, None}, 
              FrameTicks -> {{None, None}, {None, None}}, GridLinesStyle -> 
              Directive[
                GrayLevel[0.5, 0.4]], 
              Method -> {
               "DefaultBoundaryStyle" -> Automatic, "DefaultPlotStyle" -> 
                Automatic}], ",", 
             GraphicsBox[
              RasterBox[CompressedData["
1:eJztWFEKwzAIjbvJjrQdoRfo/f8GI+mKRqnmFSKLpCCxumfeM5Q9t/29PUop
r/rgjdDrDoxESIe+DuEcOEK4ZWC5Im02GmpQfyHRhS8ER9joPoeYEnyhJsgz
eKZVXwiOEH6GGVgGW4ZZZkoYddaNPSXLKnbdzDR1WQVDLQcR6gKwCwaEbbes
ZeERws8wA8ss3VWw8xOiQVfLnUOAIxQikTvdglqWlLFL2HIHj/AvWdbsSsFe
WoJZPl5gjl1Qy1o39pwsg80AH1t3YFzf2IOWgeWKVJ8CX0hMrjHUl0JwhOL2
O3aCofWvyJQsgy3DLDMljDrrxp6P5Q9Tgwvs
               "], {{0, 0}, {81, 81}}, {
               0, 1}], Frame -> Automatic, FrameLabel -> {None, None}, 
              FrameTicks -> {{None, None}, {None, None}}, GridLinesStyle -> 
              Directive[
                GrayLevel[0.5, 0.4]], 
              Method -> {
               "DefaultBoundaryStyle" -> Automatic, "DefaultPlotStyle" -> 
                Automatic}]}], "}"}]], "ExerciseOutput", Selectable -> False, 
        Copyable -> False, Editable -> False, ShowCellBracket -> False]]], " "}
   },
   GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Center}}},
   GridBoxBackground->{"Columns" -> {{
        RGBColor[1, 1, 1]}}},
   GridBoxSpacings->{"Columns" -> {{Automatic}}, "Rows" -> {{1}}}],
  FrameMargins->0]], "ExerciseOutput",
 Editable->False,
 Selectable->False,
 Deletable->False,
 CellFrame->{{1, 1}, {1, 1}},
 ShowCellBracket->False,
 CellFrameColor->RGBColor[0.85, 0.85, 0.85],
 LineBreakWithin->Automatic]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 "Encuentre las ",
 StyleBox["ternas pitag\[OAcute]ricas",
  FontSlant->"Italic"],
 " que tengan solo enteros, seleccionando ",
 Cell[BoxData[
  RowBox[{"{", 
   RowBox[{"x", ",", "y", ",", 
    RowBox[{
     ButtonBox["Sqrt",
      BaseStyle->"CodeLink"], "[", 
     RowBox[{"x", 
      ButtonBox["^",
       BaseStyle->"Link",
       ButtonData->"Power"], "2", 
      ButtonBox["+",
       BaseStyle->"Link",
       ButtonData->"Plus"], "y", 
      ButtonBox["^",
       BaseStyle->"Link",
       ButtonData->"Power"], "2"}], "]"}]}], "}"}]], "InlineCode"],
 ", con ",
 Cell[BoxData["x"], "InlineCode"],
 " y ",
 Cell[BoxData["y"], "InlineCode"],
 " del 1 hasta el 20.",
 StyleBox[ButtonBox["\[NonBreakingSpace]\[RightGuillemet]",
  Appearance->None,
  Evaluator->Automatic,
  Method->"Preemptive",
  ButtonFunction:>(SelectionMove[
     ButtonNotebook[], All, ButtonCell, AutoScroll -> False]; 
   FrontEndExecute[
     FrontEndToken[
      ButtonNotebook[], "OpenCloseGroup"]])],
  FontColor->RGBColor[1, 0.501961, 0]]
}], "Exercise",
 Editable->False,
 Selectable->False,
 Deletable->False,
 CellDingbat->Cell[
  "30.7", "ExerciseNumber", FontColor -> 
   RGBColor[0.9019607843137255, 0.4117647058823529, 0.027450980392156862`]],
 ShowCellBracket->False,
 CellTags->"i:27"],

Cell[BoxData[
 PaneBox[GridBox[{
    {" ", 
     StyleBox[
      RowBox[{"Expected", " ", 
       RowBox[{"output", ":"}]}],
      Editable->False,
      Selectable->False,
      StripOnInput->False,
      FontColor->RGBColor[0.45, 0.45, 0.45]], " "},
    {" ", 
     InterpretationBox[Cell[BoxData[
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"3", ",", "4", ",", "5"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"4", ",", "3", ",", "5"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"5", ",", "12", ",", "13"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"6", ",", "8", ",", "10"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"8", ",", "6", ",", "10"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"8", ",", "15", ",", "17"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"9", ",", "12", ",", "15"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"12", ",", "5", ",", "13"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"12", ",", "9", ",", "15"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"12", ",", "16", ",", "20"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"15", ",", "8", ",", "17"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"15", ",", "20", ",", "25"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"16", ",", "12", ",", "20"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"20", ",", "15", ",", "25"}], "}"}]}], "}"}]], 
       "ExerciseOutput"],
      Apply[TextCell, 
       Cell[
        BoxData[
         RowBox[{"{", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{"3", ",", "4", ",", "5"}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{"4", ",", "3", ",", "5"}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{"5", ",", "12", ",", "13"}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{"6", ",", "8", ",", "10"}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{"8", ",", "6", ",", "10"}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{"8", ",", "15", ",", "17"}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{"9", ",", "12", ",", "15"}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{"12", ",", "5", ",", "13"}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{"12", ",", "9", ",", "15"}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{"12", ",", "16", ",", "20"}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{"15", ",", "8", ",", "17"}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{"15", ",", "20", ",", "25"}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{"16", ",", "12", ",", "20"}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{"20", ",", "15", ",", "25"}], "}"}]}], "}"}]], 
        "ExerciseOutput", Selectable -> False, Copyable -> False, Editable -> 
        False, ShowCellBracket -> False]]], " "}
   },
   GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Center}}},
   GridBoxBackground->{"Columns" -> {{
        RGBColor[1, 1, 1]}}},
   GridBoxSpacings->{"Columns" -> {{Automatic}}, "Rows" -> {{1}}}],
  FrameMargins->0]], "ExerciseOutput",
 Editable->False,
 Selectable->False,
 Deletable->False,
 CellFrame->{{1, 1}, {1, 1}},
 ShowCellBracket->False,
 CellFrameColor->RGBColor[0.85, 0.85, 0.85],
 LineBreakWithin->Automatic]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 "Encuentre las longitudes m\[AAcute]s largas entre las secuencias de d\
\[IAcute]gitos id\[EAcute]nticos en ",
 Cell[BoxData[
  RowBox[{"2", 
   ButtonBox["^",
    BaseStyle->"Link",
    ButtonData->"Power"], "n"}]], "InlineCode"],
 ", con ",
 Cell[BoxData["n"], "InlineCode"],
 " hasta 100.",
 StyleBox[ButtonBox["\[NonBreakingSpace]\[RightGuillemet]",
  Appearance->None,
  Evaluator->Automatic,
  Method->"Preemptive",
  ButtonFunction:>(SelectionMove[
     ButtonNotebook[], All, ButtonCell, AutoScroll -> False]; 
   FrontEndExecute[
     FrontEndToken[
      ButtonNotebook[], "OpenCloseGroup"]])],
  FontColor->RGBColor[1, 0.501961, 0]]
}], "Exercise",
 Editable->False,
 Selectable->False,
 Deletable->False,
 CellDingbat->Cell[
  "30.8", "ExerciseNumber", FontColor -> 
   RGBColor[0.9019607843137255, 0.4117647058823529, 0.027450980392156862`]],
 ShowCellBracket->False],

Cell[BoxData[
 PaneBox[GridBox[{
    {" ", 
     StyleBox[
      RowBox[{"Expected", " ", 
       RowBox[{"output", ":"}]}],
      Editable->False,
      Selectable->False,
      StripOnInput->False,
      FontColor->RGBColor[0.45, 0.45, 0.45]], " "},
    {" ", 
     InterpretationBox[Cell[BoxData[
       RowBox[{"{", 
        RowBox[{
        "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", 
         "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",",
          "1", ",", "2", ",", "1", ",", "2", ",", "2", ",", "1", ",", "1", 
         ",", "1", ",", "2", ",", "3", ",", "2", ",", "2", ",", "2", ",", "1",
          ",", "1", ",", "1", ",", "1", ",", "1", ",", "2", ",", "1", ",", 
         "1", ",", "1", ",", "1", ",", "2", ",", "3", ",", "3", ",", "4", ",",
          "3", ",", "3", ",", "3", ",", "3", ",", "2", ",", "2", ",", "1", 
         ",", "2", ",", "3", ",", "2", ",", "2", ",", "2", ",", "1", ",", "1",
          ",", "1", ",", "2", ",", "2", ",", "2", ",", "2", ",", "2", ",", 
         "2", ",", "2", ",", "2", ",", "2", ",", "1", ",", "1", ",", "1", ",",
          "1", ",", "2", ",", "2", ",", "2", ",", "3", ",", "3", ",", "3", 
         ",", "3", ",", "3", ",", "2", ",", "2", ",", "1", ",", "2", ",", "2",
          ",", "3", ",", "2", ",", "2", ",", "2", ",", "1", ",", "2", ",", 
         "2", ",", "2", ",", "2", ",", "2", ",", "2", ",", "2", ",", "2", ",",
          "2", ",", "2", ",", "2", ",", "2", ",", "2"}], "}"}]], 
       "ExerciseOutput"],
      Apply[TextCell, 
       Cell[
        BoxData[
         RowBox[{"{", 
           
           RowBox[{"1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",",
              "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1",
              ",", "1", ",", "1", ",", "2", ",", "1", ",", "2", ",", "2", ",",
              "1", ",", "1", ",", "1", ",", "2", ",", "3", ",", "2", ",", "2",
              ",", "2", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",",
              "2", ",", "1", ",", "1", ",", "1", ",", "1", ",", "2", ",", "3",
              ",", "3", ",", "4", ",", "3", ",", "3", ",", "3", ",", "3", ",",
              "2", ",", "2", ",", "1", ",", "2", ",", "3", ",", "2", ",", "2",
              ",", "2", ",", "1", ",", "1", ",", "1", ",", "2", ",", "2", ",",
              "2", ",", "2", ",", "2", ",", "2", ",", "2", ",", "2", ",", "2",
              ",", "1", ",", "1", ",", "1", ",", "1", ",", "2", ",", "2", ",",
              "2", ",", "3", ",", "3", ",", "3", ",", "3", ",", "3", ",", "2",
              ",", "2", ",", "1", ",", "2", ",", "2", ",", "3", ",", "2", ",",
              "2", ",", "2", ",", "1", ",", "2", ",", "2", ",", "2", ",", "2",
              ",", "2", ",", "2", ",", "2", ",", "2", ",", "2", ",", "2", ",",
              "2", ",", "2", ",", "2"}], "}"}]], "ExerciseOutput", Selectable -> 
        False, Copyable -> False, Editable -> False, ShowCellBracket -> 
        False]]], " "}
   },
   GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Center}}},
   GridBoxBackground->{"Columns" -> {{
        RGBColor[1, 1, 1]}}},
   GridBoxSpacings->{"Columns" -> {{Automatic}}, "Rows" -> {{1}}}],
  FrameMargins->0]], "ExerciseOutput",
 Editable->False,
 Selectable->False,
 Deletable->False,
 CellFrame->{{1, 1}, {1, 1}},
 ShowCellBracket->False,
 CellFrameColor->RGBColor[0.85, 0.85, 0.85],
 LineBreakWithin->Automatic]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 "Tome los nombres de los enteros hasta el 100, y agr\[UAcute]pelos en \
sublistas con acuerdo a sus letras iniciales.",
 StyleBox[ButtonBox["\[NonBreakingSpace]\[RightGuillemet]",
  Appearance->None,
  Evaluator->Automatic,
  Method->"Preemptive",
  ButtonFunction:>(SelectionMove[
     ButtonNotebook[], All, ButtonCell, AutoScroll -> False]; 
   FrontEndExecute[
     FrontEndToken[
      ButtonNotebook[], "OpenCloseGroup"]])],
  FontColor->RGBColor[1, 0.501961, 0]]
}], "Exercise",
 Editable->False,
 Selectable->False,
 Deletable->False,
 CellDingbat->Cell[
  "30.9", "ExerciseNumber", FontColor -> 
   RGBColor[0.9019607843137255, 0.4117647058823529, 0.027450980392156862`]],
 ShowCellBracket->False],

Cell[BoxData[
 PaneBox[GridBox[{
    {" ", 
     StyleBox[
      RowBox[{"Expected", " ", 
       RowBox[{"output", ":"}]}],
      Editable->False,
      Selectable->False,
      StripOnInput->False,
      FontColor->RGBColor[0.45, 0.45, 0.45]], " "},
    {" ", 
     InterpretationBox[Cell[BoxData[
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"\<\"one\"\>", ",", "\<\"one hundred\"\>"}], "}"}], ",", 
         RowBox[{"{", 
          
          RowBox[{"\<\"two\"\>", ",", "\<\"three\"\>", ",", "\<\"ten\"\>", 
           ",", "\<\"twelve\"\>", ",", "\<\"thirteen\"\>", 
           ",", "\<\"twenty\"\>", ",", "\<\"twenty\[Hyphen]one\"\>", 
           ",", "\<\"twenty\[Hyphen]two\"\>", 
           ",", "\<\"twenty\[Hyphen]three\"\>", 
           ",", "\<\"twenty\[Hyphen]four\"\>", 
           ",", "\<\"twenty\[Hyphen]five\"\>", 
           ",", "\<\"twenty\[Hyphen]six\"\>", 
           ",", "\<\"twenty\[Hyphen]seven\"\>", 
           ",", "\<\"twenty\[Hyphen]eight\"\>", 
           ",", "\<\"twenty\[Hyphen]nine\"\>", ",", "\<\"thirty\"\>", 
           ",", "\<\"thirty\[Hyphen]one\"\>", 
           ",", "\<\"thirty\[Hyphen]two\"\>", 
           ",", "\<\"thirty\[Hyphen]three\"\>", 
           ",", "\<\"thirty\[Hyphen]four\"\>", 
           ",", "\<\"thirty\[Hyphen]five\"\>", 
           ",", "\<\"thirty\[Hyphen]six\"\>", 
           ",", "\<\"thirty\[Hyphen]seven\"\>", 
           ",", "\<\"thirty\[Hyphen]eight\"\>", 
           ",", "\<\"thirty\[Hyphen]nine\"\>"}], "}"}], ",", 
         RowBox[{"{", 
          
          RowBox[{"\<\"four\"\>", ",", "\<\"five\"\>", 
           ",", "\<\"fourteen\"\>", ",", "\<\"fifteen\"\>", 
           ",", "\<\"forty\"\>", ",", "\<\"forty\[Hyphen]one\"\>", 
           ",", "\<\"forty\[Hyphen]two\"\>", 
           ",", "\<\"forty\[Hyphen]three\"\>", 
           ",", "\<\"forty\[Hyphen]four\"\>", 
           ",", "\<\"forty\[Hyphen]five\"\>", 
           ",", "\<\"forty\[Hyphen]six\"\>", 
           ",", "\<\"forty\[Hyphen]seven\"\>", 
           ",", "\<\"forty\[Hyphen]eight\"\>", 
           ",", "\<\"forty\[Hyphen]nine\"\>", ",", "\<\"fifty\"\>", 
           ",", "\<\"fifty\[Hyphen]one\"\>", ",", "\<\"fifty\[Hyphen]two\"\>",
            ",", "\<\"fifty\[Hyphen]three\"\>", 
           ",", "\<\"fifty\[Hyphen]four\"\>", 
           ",", "\<\"fifty\[Hyphen]five\"\>", 
           ",", "\<\"fifty\[Hyphen]six\"\>", 
           ",", "\<\"fifty\[Hyphen]seven\"\>", 
           ",", "\<\"fifty\[Hyphen]eight\"\>", 
           ",", "\<\"fifty\[Hyphen]nine\"\>"}], "}"}], ",", 
         RowBox[{"{", 
          
          RowBox[{"\<\"six\"\>", ",", "\<\"seven\"\>", ",", "\<\"sixteen\"\>",
            ",", "\<\"seventeen\"\>", ",", "\<\"sixty\"\>", 
           ",", "\<\"sixty\[Hyphen]one\"\>", ",", "\<\"sixty\[Hyphen]two\"\>",
            ",", "\<\"sixty\[Hyphen]three\"\>", 
           ",", "\<\"sixty\[Hyphen]four\"\>", 
           ",", "\<\"sixty\[Hyphen]five\"\>", 
           ",", "\<\"sixty\[Hyphen]six\"\>", 
           ",", "\<\"sixty\[Hyphen]seven\"\>", 
           ",", "\<\"sixty\[Hyphen]eight\"\>", 
           ",", "\<\"sixty\[Hyphen]nine\"\>", ",", "\<\"seventy\"\>", 
           ",", "\<\"seventy\[Hyphen]one\"\>", 
           ",", "\<\"seventy\[Hyphen]two\"\>", 
           ",", "\<\"seventy\[Hyphen]three\"\>", 
           ",", "\<\"seventy\[Hyphen]four\"\>", 
           ",", "\<\"seventy\[Hyphen]five\"\>", 
           ",", "\<\"seventy\[Hyphen]six\"\>", 
           ",", "\<\"seventy\[Hyphen]seven\"\>", 
           ",", "\<\"seventy\[Hyphen]eight\"\>", 
           ",", "\<\"seventy\[Hyphen]nine\"\>"}], "}"}], ",", 
         RowBox[{"{", 
          
          RowBox[{"\<\"eight\"\>", ",", "\<\"eleven\"\>", 
           ",", "\<\"eighteen\"\>", ",", "\<\"eighty\"\>", 
           ",", "\<\"eighty\[Hyphen]one\"\>", 
           ",", "\<\"eighty\[Hyphen]two\"\>", 
           ",", "\<\"eighty\[Hyphen]three\"\>", 
           ",", "\<\"eighty\[Hyphen]four\"\>", 
           ",", "\<\"eighty\[Hyphen]five\"\>", 
           ",", "\<\"eighty\[Hyphen]six\"\>", 
           ",", "\<\"eighty\[Hyphen]seven\"\>", 
           ",", "\<\"eighty\[Hyphen]eight\"\>", 
           ",", "\<\"eighty\[Hyphen]nine\"\>"}], "}"}], ",", 
         RowBox[{"{", 
          
          RowBox[{"\<\"nine\"\>", ",", "\<\"nineteen\"\>", 
           ",", "\<\"ninety\"\>", ",", "\<\"ninety\[Hyphen]one\"\>", 
           ",", "\<\"ninety\[Hyphen]two\"\>", 
           ",", "\<\"ninety\[Hyphen]three\"\>", 
           ",", "\<\"ninety\[Hyphen]four\"\>", 
           ",", "\<\"ninety\[Hyphen]five\"\>", 
           ",", "\<\"ninety\[Hyphen]six\"\>", 
           ",", "\<\"ninety\[Hyphen]seven\"\>", 
           ",", "\<\"ninety\[Hyphen]eight\"\>", 
           ",", "\<\"ninety\[Hyphen]nine\"\>"}], "}"}]}], "}"}]], 
       "ExerciseOutput"],
      Apply[TextCell, 
       Cell[
        BoxData[
         RowBox[{"{", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{"\"one\"", ",", "\"one hundred\""}], "}"}], ",", 
             RowBox[{"{", 
               
               RowBox[{
                "\"two\"", ",", "\"three\"", ",", "\"ten\"", ",", 
                 "\"twelve\"", ",", "\"thirteen\"", ",", "\"twenty\"", ",", 
                 "\"twenty\[Hyphen]one\"", ",", "\"twenty\[Hyphen]two\"", ",",
                  "\"twenty\[Hyphen]three\"", ",", "\"twenty\[Hyphen]four\"", 
                 ",", "\"twenty\[Hyphen]five\"", ",", 
                 "\"twenty\[Hyphen]six\"", ",", "\"twenty\[Hyphen]seven\"", 
                 ",", "\"twenty\[Hyphen]eight\"", ",", 
                 "\"twenty\[Hyphen]nine\"", ",", "\"thirty\"", ",", 
                 "\"thirty\[Hyphen]one\"", ",", "\"thirty\[Hyphen]two\"", ",",
                  "\"thirty\[Hyphen]three\"", ",", "\"thirty\[Hyphen]four\"", 
                 ",", "\"thirty\[Hyphen]five\"", ",", 
                 "\"thirty\[Hyphen]six\"", ",", "\"thirty\[Hyphen]seven\"", 
                 ",", "\"thirty\[Hyphen]eight\"", ",", 
                 "\"thirty\[Hyphen]nine\""}], "}"}], ",", 
             RowBox[{"{", 
               
               RowBox[{
                "\"four\"", ",", "\"five\"", ",", "\"fourteen\"", ",", 
                 "\"fifteen\"", ",", "\"forty\"", ",", 
                 "\"forty\[Hyphen]one\"", ",", "\"forty\[Hyphen]two\"", ",", 
                 "\"forty\[Hyphen]three\"", ",", "\"forty\[Hyphen]four\"", 
                 ",", "\"forty\[Hyphen]five\"", ",", "\"forty\[Hyphen]six\"", 
                 ",", "\"forty\[Hyphen]seven\"", ",", 
                 "\"forty\[Hyphen]eight\"", ",", "\"forty\[Hyphen]nine\"", 
                 ",", "\"fifty\"", ",", "\"fifty\[Hyphen]one\"", ",", 
                 "\"fifty\[Hyphen]two\"", ",", "\"fifty\[Hyphen]three\"", ",",
                  "\"fifty\[Hyphen]four\"", ",", "\"fifty\[Hyphen]five\"", 
                 ",", "\"fifty\[Hyphen]six\"", ",", "\"fifty\[Hyphen]seven\"",
                  ",", "\"fifty\[Hyphen]eight\"", ",", 
                 "\"fifty\[Hyphen]nine\""}], "}"}], ",", 
             RowBox[{"{", 
               
               RowBox[{
                "\"six\"", ",", "\"seven\"", ",", "\"sixteen\"", ",", 
                 "\"seventeen\"", ",", "\"sixty\"", ",", 
                 "\"sixty\[Hyphen]one\"", ",", "\"sixty\[Hyphen]two\"", ",", 
                 "\"sixty\[Hyphen]three\"", ",", "\"sixty\[Hyphen]four\"", 
                 ",", "\"sixty\[Hyphen]five\"", ",", "\"sixty\[Hyphen]six\"", 
                 ",", "\"sixty\[Hyphen]seven\"", ",", 
                 "\"sixty\[Hyphen]eight\"", ",", "\"sixty\[Hyphen]nine\"", 
                 ",", "\"seventy\"", ",", "\"seventy\[Hyphen]one\"", ",", 
                 "\"seventy\[Hyphen]two\"", ",", "\"seventy\[Hyphen]three\"", 
                 ",", "\"seventy\[Hyphen]four\"", ",", 
                 "\"seventy\[Hyphen]five\"", ",", "\"seventy\[Hyphen]six\"", 
                 ",", "\"seventy\[Hyphen]seven\"", ",", 
                 "\"seventy\[Hyphen]eight\"", ",", 
                 "\"seventy\[Hyphen]nine\""}], "}"}], ",", 
             RowBox[{"{", 
               
               RowBox[{
                "\"eight\"", ",", "\"eleven\"", ",", "\"eighteen\"", ",", 
                 "\"eighty\"", ",", "\"eighty\[Hyphen]one\"", ",", 
                 "\"eighty\[Hyphen]two\"", ",", "\"eighty\[Hyphen]three\"", 
                 ",", "\"eighty\[Hyphen]four\"", ",", 
                 "\"eighty\[Hyphen]five\"", ",", "\"eighty\[Hyphen]six\"", 
                 ",", "\"eighty\[Hyphen]seven\"", ",", 
                 "\"eighty\[Hyphen]eight\"", ",", "\"eighty\[Hyphen]nine\""}],
                "}"}], ",", 
             RowBox[{"{", 
               
               RowBox[{
                "\"nine\"", ",", "\"nineteen\"", ",", "\"ninety\"", ",", 
                 "\"ninety\[Hyphen]one\"", ",", "\"ninety\[Hyphen]two\"", ",",
                  "\"ninety\[Hyphen]three\"", ",", "\"ninety\[Hyphen]four\"", 
                 ",", "\"ninety\[Hyphen]five\"", ",", 
                 "\"ninety\[Hyphen]six\"", ",", "\"ninety\[Hyphen]seven\"", 
                 ",", "\"ninety\[Hyphen]eight\"", ",", 
                 "\"ninety\[Hyphen]nine\""}], "}"}]}], "}"}]], 
        "ExerciseOutput", Selectable -> False, Copyable -> False, Editable -> 
        False, ShowCellBracket -> False]]], " "}
   },
   GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Center}}},
   GridBoxBackground->{"Columns" -> {{
        RGBColor[1, 1, 1]}}},
   GridBoxSpacings->{"Columns" -> {{Automatic}}, "Rows" -> {{1}}}],
  FrameMargins->0]], "ExerciseOutput",
 Editable->False,
 Selectable->False,
 Deletable->False,
 CellFrame->{{1, 1}, {1, 1}},
 ShowCellBracket->False,
 CellFrameColor->RGBColor[0.85, 0.85, 0.85],
 LineBreakWithin->Automatic]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 "Ordene las 50 primeras palabras en ",
 Cell[BoxData[
  RowBox[{
   ButtonBox["WordList",
    BaseStyle->"CodeLink"], "[", " ", "]"}]], "InlineCode"],
 " seg\[UAcute]n la \[UAcute]ltima letra.",
 StyleBox[ButtonBox["\[NonBreakingSpace]\[RightGuillemet]",
  Appearance->None,
  Evaluator->Automatic,
  Method->"Preemptive",
  ButtonFunction:>(SelectionMove[
     ButtonNotebook[], All, ButtonCell, AutoScroll -> False]; 
   FrontEndExecute[
     FrontEndToken[
      ButtonNotebook[], "OpenCloseGroup"]])],
  FontColor->RGBColor[1, 0.501961, 0]]
}], "Exercise",
 Editable->False,
 Selectable->False,
 Deletable->False,
 CellDingbat->Cell[
  "30.10", "ExerciseNumber", FontColor -> 
   RGBColor[0.9019607843137255, 0.4117647058823529, 0.027450980392156862`]],
 ShowCellBracket->False],

Cell[BoxData[
 PaneBox[GridBox[{
    {" ", 
     StyleBox[
      RowBox[{"Expected", " ", 
       RowBox[{"output", ":"}]}],
      Editable->False,
      Selectable->False,
      StripOnInput->False,
      FontColor->RGBColor[0.45, 0.45, 0.45]], " "},
    {" ", 
     InterpretationBox[Cell[BoxData[
       RowBox[{"{", 
        RowBox[{"\<\"a\"\>", ",", "\<\"abandoned\"\>", ",", "\<\"abashed\"\>",
          ",", "\<\"abbreviated\"\>", ",", "\<\"abed\"\>", 
         ",", "\<\"abalone\"\>", ",", "\<\"abase\"\>", ",", "\<\"abate\"\>", 
         ",", "\<\"abbe\"\>", ",", "\<\"abbreviate\"\>", 
         ",", "\<\"abdicate\"\>", ",", "\<\"abeyance\"\>", 
         ",", "\<\"abhorrence\"\>", ",", "\<\"abidance\"\>", 
         ",", "\<\"abide\"\>", ",", "\<\"abducting\"\>", 
         ",", "\<\"abiding\"\>", ",", "\<\"aah\"\>", ",", "\<\"abash\"\>", 
         ",", "\<\"aardvark\"\>", ",", "\<\"aback\"\>", 
         ",", "\<\"abdominal\"\>", ",", "\<\"abeam\"\>", 
         ",", "\<\"abandon\"\>", ",", "\<\"abbreviation\"\>", 
         ",", "\<\"abdication\"\>", ",", "\<\"abdomen\"\>", 
         ",", "\<\"abduction\"\>", ",", "\<\"aberration\"\>", 
         ",", "\<\"abjection\"\>", ",", "\<\"abattoir\"\>", 
         ",", "\<\"abductor\"\>", ",", "\<\"abettor\"\>", 
         ",", "\<\"abhor\"\>", ",", "\<\"abacus\"\>", ",", "\<\"abbess\"\>", 
         ",", "\<\"abaft\"\>", ",", "\<\"abandonment\"\>", 
         ",", "\<\"abasement\"\>", ",", "\<\"abashment\"\>", 
         ",", "\<\"abatement\"\>", ",", "\<\"abbot\"\>", 
         ",", "\<\"abduct\"\>", ",", "\<\"aberrant\"\>", ",", "\<\"abet\"\>", 
         ",", "\<\"abhorrent\"\>", ",", "\<\"abject\"\>", 
         ",", "\<\"abbey\"\>", ",", "\<\"ability\"\>", 
         ",", "\<\"abjectly\"\>"}], "}"}]], "ExerciseOutput"],
      Apply[TextCell, 
       Cell[
        BoxData[
         RowBox[{"{", 
           
           RowBox[{"\"a\"", ",", "\"abandoned\"", ",", "\"abashed\"", ",", 
             "\"abbreviated\"", ",", "\"abed\"", ",", "\"abalone\"", ",", 
             "\"abase\"", ",", "\"abate\"", ",", "\"abbe\"", ",", 
             "\"abbreviate\"", ",", "\"abdicate\"", ",", "\"abeyance\"", ",", 
             "\"abhorrence\"", ",", "\"abidance\"", ",", "\"abide\"", ",", 
             "\"abducting\"", ",", "\"abiding\"", ",", "\"aah\"", ",", 
             "\"abash\"", ",", "\"aardvark\"", ",", "\"aback\"", ",", 
             "\"abdominal\"", ",", "\"abeam\"", ",", "\"abandon\"", ",", 
             "\"abbreviation\"", ",", "\"abdication\"", ",", "\"abdomen\"", 
             ",", "\"abduction\"", ",", "\"aberration\"", ",", 
             "\"abjection\"", ",", "\"abattoir\"", ",", "\"abductor\"", ",", 
             "\"abettor\"", ",", "\"abhor\"", ",", "\"abacus\"", ",", 
             "\"abbess\"", ",", "\"abaft\"", ",", "\"abandonment\"", ",", 
             "\"abasement\"", ",", "\"abashment\"", ",", "\"abatement\"", ",",
              "\"abbot\"", ",", "\"abduct\"", ",", "\"aberrant\"", ",", 
             "\"abet\"", ",", "\"abhorrent\"", ",", "\"abject\"", ",", 
             "\"abbey\"", ",", "\"ability\"", ",", "\"abjectly\""}], "}"}]], 
        "ExerciseOutput", Selectable -> False, Copyable -> False, Editable -> 
        False, ShowCellBracket -> False]]], " "}
   },
   GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Center}}},
   GridBoxBackground->{"Columns" -> {{
        RGBColor[1, 1, 1]}}},
   GridBoxSpacings->{"Columns" -> {{Automatic}}, "Rows" -> {{1}}}],
  FrameMargins->0]], "ExerciseOutput",
 Editable->False,
 Selectable->False,
 Deletable->False,
 CellFrame->{{1, 1}, {1, 1}},
 ShowCellBracket->False,
 CellFrameColor->RGBColor[0.85, 0.85, 0.85],
 LineBreakWithin->Automatic]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 "Haga una lista de los 20 primeros cuadrados, ordenada por sus primeros d\
\[IAcute]gitos.",
 StyleBox[ButtonBox["\[NonBreakingSpace]\[RightGuillemet]",
  Appearance->None,
  Evaluator->Automatic,
  Method->"Preemptive",
  ButtonFunction:>(SelectionMove[
     ButtonNotebook[], All, ButtonCell, AutoScroll -> False]; 
   FrontEndExecute[
     FrontEndToken[
      ButtonNotebook[], "OpenCloseGroup"]])],
  FontColor->RGBColor[1, 0.501961, 0]]
}], "Exercise",
 Editable->False,
 Selectable->False,
 Deletable->False,
 CellDingbat->Cell[
  "30.11", "ExerciseNumber", FontColor -> 
   RGBColor[0.9019607843137255, 0.4117647058823529, 0.027450980392156862`]],
 ShowCellBracket->False],

Cell[BoxData[
 PaneBox[GridBox[{
    {" ", 
     StyleBox[
      RowBox[{"Expected", " ", 
       RowBox[{"output", ":"}]}],
      Editable->False,
      Selectable->False,
      StripOnInput->False,
      FontColor->RGBColor[0.45, 0.45, 0.45]], " "},
    {" ", 
     InterpretationBox[Cell[BoxData[
       RowBox[{"{", 
        RowBox[{
        "1", ",", "16", ",", "100", ",", "121", ",", "144", ",", "169", ",", 
         "196", ",", "25", ",", "225", ",", "256", ",", "289", ",", "36", ",",
          "324", ",", "361", ",", "4", ",", "49", ",", "400", ",", "64", ",", 
         "81", ",", "9"}], "}"}]], "ExerciseOutput"],
      Apply[TextCell, 
       Cell[
        BoxData[
         RowBox[{"{", 
           
           RowBox[{"1", ",", "16", ",", "100", ",", "121", ",", "144", ",", 
             "169", ",", "196", ",", "25", ",", "225", ",", "256", ",", "289",
              ",", "36", ",", "324", ",", "361", ",", "4", ",", "49", ",", 
             "400", ",", "64", ",", "81", ",", "9"}], "}"}]], 
        "ExerciseOutput", Selectable -> False, Copyable -> False, Editable -> 
        False, ShowCellBracket -> False]]], " "}
   },
   GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Center}}},
   GridBoxBackground->{"Columns" -> {{
        RGBColor[1, 1, 1]}}},
   GridBoxSpacings->{"Columns" -> {{Automatic}}, "Rows" -> {{1}}}],
  FrameMargins->0]], "ExerciseOutput",
 Editable->False,
 Selectable->False,
 Deletable->False,
 CellFrame->{{1, 1}, {1, 1}},
 ShowCellBracket->False,
 CellFrameColor->RGBColor[0.85, 0.85, 0.85],
 LineBreakWithin->Automatic]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 "Ordene los enteros hasta el 20, seg\[UAcute]n las longitudes de sus nombres \
en ingl\[EAcute]s.",
 StyleBox[ButtonBox["\[NonBreakingSpace]\[RightGuillemet]",
  Appearance->None,
  Evaluator->Automatic,
  Method->"Preemptive",
  ButtonFunction:>(SelectionMove[
     ButtonNotebook[], All, ButtonCell, AutoScroll -> False]; 
   FrontEndExecute[
     FrontEndToken[
      ButtonNotebook[], "OpenCloseGroup"]])],
  FontColor->RGBColor[1, 0.501961, 0]]
}], "Exercise",
 Editable->False,
 Selectable->False,
 Deletable->False,
 CellDingbat->Cell[
  "30.12", "ExerciseNumber", FontColor -> 
   RGBColor[0.9019607843137255, 0.4117647058823529, 0.027450980392156862`]],
 ShowCellBracket->False],

Cell[BoxData[
 PaneBox[GridBox[{
    {" ", 
     StyleBox[
      RowBox[{"Expected", " ", 
       RowBox[{"output", ":"}]}],
      Editable->False,
      Selectable->False,
      StripOnInput->False,
      FontColor->RGBColor[0.45, 0.45, 0.45]], " "},
    {" ", 
     InterpretationBox[Cell[BoxData[
       RowBox[{"{", 
        RowBox[{
        "1", ",", "2", ",", "6", ",", "10", ",", "4", ",", "5", ",", "9", ",",
          "3", ",", "7", ",", "8", ",", "11", ",", "12", ",", "20", ",", "15",
          ",", "16", ",", "13", ",", "14", ",", "18", ",", "19", ",", "17"}], 
        "}"}]], "ExerciseOutput"],
      Apply[TextCell, 
       Cell[
        BoxData[
         RowBox[{"{", 
           
           RowBox[{"1", ",", "2", ",", "6", ",", "10", ",", "4", ",", "5", 
             ",", "9", ",", "3", ",", "7", ",", "8", ",", "11", ",", "12", 
             ",", "20", ",", "15", ",", "16", ",", "13", ",", "14", ",", "18",
              ",", "19", ",", "17"}], "}"}]], "ExerciseOutput", Selectable -> 
        False, Copyable -> False, Editable -> False, ShowCellBracket -> 
        False]]], " "}
   },
   GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Center}}},
   GridBoxBackground->{"Columns" -> {{
        RGBColor[1, 1, 1]}}},
   GridBoxSpacings->{"Columns" -> {{Automatic}}, "Rows" -> {{1}}}],
  FrameMargins->0]], "ExerciseOutput",
 Editable->False,
 Selectable->False,
 Deletable->False,
 CellFrame->{{1, 1}, {1, 1}},
 ShowCellBracket->False,
 CellFrameColor->RGBColor[0.85, 0.85, 0.85],
 LineBreakWithin->Automatic]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 "Obtenga una muestra aleatoria de 20 palabras de ",
 Cell[BoxData[
  RowBox[{
   ButtonBox["WordList",
    BaseStyle->"CodeLink"], "[", " ", "]"}]], "InlineCode"],
 ", y agr\[UAcute]pelas en sublistas, de acuerdo con el n\[UAcute]mero de sus \
caracteres.",
 StyleBox[ButtonBox["\[NonBreakingSpace]\[RightGuillemet]",
  Appearance->None,
  Evaluator->Automatic,
  Method->"Preemptive",
  ButtonFunction:>(SelectionMove[
     ButtonNotebook[], All, ButtonCell, AutoScroll -> False]; 
   FrontEndExecute[
     FrontEndToken[
      ButtonNotebook[], "OpenCloseGroup"]])],
  FontColor->RGBColor[1, 0.501961, 0]]
}], "Exercise",
 Editable->False,
 Selectable->False,
 Deletable->False,
 CellDingbat->Cell[
  "30.13", "ExerciseNumber", FontColor -> 
   RGBColor[0.9019607843137255, 0.4117647058823529, 0.027450980392156862`]],
 ShowCellBracket->False],

Cell[BoxData[
 PaneBox[GridBox[{
    {" ", 
     StyleBox[
      RowBox[{"Sample", " ", "expected", " ", 
       RowBox[{"output", ":"}]}],
      Editable->False,
      Selectable->False,
      StripOnInput->False,
      FontColor->RGBColor[0.45, 0.45, 0.45]], " "},
    {" ", 
     InterpretationBox[Cell[BoxData[
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", "\<\"paste\"\>", "}"}], ",", 
         RowBox[{"{", 
          
          RowBox[{"\<\"mistakenly\"\>", ",", "\<\"unintended\"\>", 
           ",", "\<\"victorious\"\>", ",", "\<\"watercress\"\>"}], "}"}], ",", 
         RowBox[{"{", 
          
          RowBox[{"\<\"powerful\"\>", ",", "\<\"jingoist\"\>", 
           ",", "\<\"ballpark\"\>", ",", "\<\"rapeseed\"\>", 
           ",", "\<\"dyslexia\"\>"}], "}"}], ",", 
         RowBox[{"{", "\<\"repeal\"\>", "}"}], ",", 
         RowBox[{"{", "\<\"paleontological\"\>", "}"}], ",", 
         RowBox[{"{", "\<\"encouragement\"\>", "}"}], ",", 
         RowBox[{"{", "\<\"countryside\"\>", "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"\<\"selfish\"\>", ",", "\<\"hedging\"\>"}], "}"}], ",", 
         RowBox[{"{", "\<\"barometer\"\>", "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"\<\"veil\"\>", ",", "\<\"well\"\>"}], "}"}], ",", 
         RowBox[{"{", "\<\"municipality\"\>", "}"}]}], "}"}]], 
       "ExerciseOutput"],
      Apply[TextCell, 
       Cell[
        BoxData[
         RowBox[{"{", 
           RowBox[{
             RowBox[{"{", "\"paste\"", "}"}], ",", 
             RowBox[{"{", 
               
               RowBox[{
                "\"mistakenly\"", ",", "\"unintended\"", ",", 
                 "\"victorious\"", ",", "\"watercress\""}], "}"}], ",", 
             RowBox[{"{", 
               
               RowBox[{
                "\"powerful\"", ",", "\"jingoist\"", ",", "\"ballpark\"", ",",
                  "\"rapeseed\"", ",", "\"dyslexia\""}], "}"}], ",", 
             RowBox[{"{", "\"repeal\"", "}"}], ",", 
             RowBox[{"{", "\"paleontological\"", "}"}], ",", 
             RowBox[{"{", "\"encouragement\"", "}"}], ",", 
             RowBox[{"{", "\"countryside\"", "}"}], ",", 
             RowBox[{"{", 
               RowBox[{"\"selfish\"", ",", "\"hedging\""}], "}"}], ",", 
             RowBox[{"{", "\"barometer\"", "}"}], ",", 
             RowBox[{"{", 
               RowBox[{"\"veil\"", ",", "\"well\""}], "}"}], ",", 
             RowBox[{"{", "\"municipality\"", "}"}]}], "}"}]], 
        "ExerciseOutput", Selectable -> False, Copyable -> False, Editable -> 
        False, ShowCellBracket -> False]]], " "}
   },
   GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Center}}},
   GridBoxBackground->{"Columns" -> {{
        RGBColor[1, 1, 1]}}},
   GridBoxSpacings->{"Columns" -> {{Automatic}}, "Rows" -> {{1}}}],
  FrameMargins->0]], "ExerciseOutput",
 Editable->False,
 Selectable->False,
 Deletable->False,
 CellFrame->{{1, 1}, {1, 1}},
 ShowCellBracket->False,
 CellFrameColor->RGBColor[0.85, 0.85, 0.85],
 LineBreakWithin->Automatic]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 "Encuentre las letras que aparecen en el alfabeto ucraniano, pero no en el \
ruso.",
 StyleBox[ButtonBox["\[NonBreakingSpace]\[RightGuillemet]",
  Appearance->None,
  Evaluator->Automatic,
  Method->"Preemptive",
  ButtonFunction:>(SelectionMove[
     ButtonNotebook[], All, ButtonCell, AutoScroll -> False]; 
   FrontEndExecute[
     FrontEndToken[
      ButtonNotebook[], "OpenCloseGroup"]])],
  FontColor->RGBColor[1, 0.501961, 0]]
}], "Exercise",
 Editable->False,
 Selectable->False,
 Deletable->False,
 CellDingbat->Cell[
  "30.14", "ExerciseNumber", FontColor -> 
   RGBColor[0.9019607843137255, 0.4117647058823529, 0.027450980392156862`]],
 ShowCellBracket->False],

Cell[BoxData[
 PaneBox[GridBox[{
    {" ", 
     StyleBox[
      RowBox[{"Expected", " ", 
       RowBox[{"output", ":"}]}],
      Editable->False,
      Selectable->False,
      StripOnInput->False,
      FontColor->RGBColor[0.45, 0.45, 0.45]], " "},
    {" ", 
     InterpretationBox[Cell[BoxData[
       RowBox[{"{", 
        RowBox[{"\<\"\:0454\"\>", ",", "\<\"\:0456\"\>", 
         ",", "\<\"\:0457\"\>", ",", "\<\"\:0491\"\>"}], "}"}]], 
       "ExerciseOutput"],
      Apply[TextCell, 
       Cell[
        BoxData[
         RowBox[{"{", 
           
           RowBox[{"\"\:0454\"", ",", "\"\:0456\"", ",", "\"\:0457\"", ",", 
             "\"\:0491\""}], "}"}]], "ExerciseOutput", Selectable -> False, 
        Copyable -> False, Editable -> False, ShowCellBracket -> False]]], " "}
   },
   GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Center}}},
   GridBoxBackground->{"Columns" -> {{
        RGBColor[1, 1, 1]}}},
   GridBoxSpacings->{"Columns" -> {{Automatic}}, "Rows" -> {{1}}}],
  FrameMargins->0]], "ExerciseOutput",
 Editable->False,
 Selectable->False,
 Deletable->False,
 CellFrame->{{1, 1}, {1, 1}},
 ShowCellBracket->False,
 CellFrameColor->RGBColor[0.85, 0.85, 0.85],
 LineBreakWithin->Automatic]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 "Use ",
 ButtonBox["Intersection",
  BaseStyle->"Link"],
 " para encontrar los n\[UAcute]meros que aparecen tanto en los 100 primeros \
cuadrados como en los 100 primeros cubos.",
 StyleBox[ButtonBox["\[NonBreakingSpace]\[RightGuillemet]",
  Appearance->None,
  Evaluator->Automatic,
  Method->"Preemptive",
  ButtonFunction:>(SelectionMove[
     ButtonNotebook[], All, ButtonCell, AutoScroll -> False]; 
   FrontEndExecute[
     FrontEndToken[
      ButtonNotebook[], "OpenCloseGroup"]])],
  FontColor->RGBColor[1, 0.501961, 0]]
}], "Exercise",
 Editable->False,
 Selectable->False,
 Deletable->False,
 CellDingbat->Cell[
  "30.15", "ExerciseNumber", FontColor -> 
   RGBColor[0.9019607843137255, 0.4117647058823529, 0.027450980392156862`]],
 ShowCellBracket->False],

Cell[BoxData[
 PaneBox[GridBox[{
    {" ", 
     StyleBox[
      RowBox[{"Expected", " ", 
       RowBox[{"output", ":"}]}],
      Editable->False,
      Selectable->False,
      StripOnInput->False,
      FontColor->RGBColor[0.45, 0.45, 0.45]], " "},
    {" ", 
     InterpretationBox[Cell[BoxData[
       RowBox[{"{", 
        RowBox[{"1", ",", "64", ",", "729", ",", "4096"}], "}"}]], 
       "ExerciseOutput"],
      Apply[TextCell, 
       Cell[
        BoxData[
         RowBox[{"{", 
           RowBox[{"1", ",", "64", ",", "729", ",", "4096"}], "}"}]], 
        "ExerciseOutput", Selectable -> False, Copyable -> False, Editable -> 
        False, ShowCellBracket -> False]]], " "}
   },
   GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Center}}},
   GridBoxBackground->{"Columns" -> {{
        RGBColor[1, 1, 1]}}},
   GridBoxSpacings->{"Columns" -> {{Automatic}}, "Rows" -> {{1}}}],
  FrameMargins->0]], "ExerciseOutput",
 Editable->False,
 Selectable->False,
 Deletable->False,
 CellFrame->{{1, 1}, {1, 1}},
 ShowCellBracket->False,
 CellFrameColor->RGBColor[0.85, 0.85, 0.85],
 LineBreakWithin->Automatic]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 "Encuentre la lista de los pa\[IAcute]ses que pertenecen tanto a la OTAN \
como al G8.",
 StyleBox[ButtonBox["\[NonBreakingSpace]\[RightGuillemet]",
  Appearance->None,
  Evaluator->Automatic,
  Method->"Preemptive",
  ButtonFunction:>(SelectionMove[
     ButtonNotebook[], All, ButtonCell, AutoScroll -> False]; 
   FrontEndExecute[
     FrontEndToken[
      ButtonNotebook[], "OpenCloseGroup"]])],
  FontColor->RGBColor[1, 0.501961, 0]]
}], "Exercise",
 Editable->False,
 Selectable->False,
 Deletable->False,
 CellDingbat->Cell[
  "30.16", "ExerciseNumber", FontColor -> 
   RGBColor[0.9019607843137255, 0.4117647058823529, 0.027450980392156862`]],
 ShowCellBracket->False,
 CellTags->"i:28"],

Cell[BoxData[
 PaneBox[GridBox[{
    {" ", 
     StyleBox[
      RowBox[{"Expected", " ", 
       RowBox[{"output", ":"}]}],
      Editable->False,
      Selectable->False,
      StripOnInput->False,
      FontColor->RGBColor[0.45, 0.45, 0.45]], " "},
    {" ", 
     InterpretationBox[Cell[BoxData[
       RowBox[{"{", 
        RowBox[{
         TemplateBox[{"\"Canada\"",RowBox[{"Entity", "[", 
             RowBox[{"\"Country\"", ",", "\"Canada\""}], "]"}],
           "\"Entity[\\\"Country\\\", \\\"Canada\\\"]\"","\"country\""},
          "Entity"], ",", 
         TemplateBox[{"\"France\"",RowBox[{"Entity", "[", 
             RowBox[{"\"Country\"", ",", "\"France\""}], "]"}],
           "\"Entity[\\\"Country\\\", \\\"France\\\"]\"","\"country\""},
          "Entity"], ",", 
         TemplateBox[{"\"Germany\"",RowBox[{"Entity", "[", 
             RowBox[{"\"Country\"", ",", "\"Germany\""}], "]"}],
           "\"Entity[\\\"Country\\\", \\\"Germany\\\"]\"","\"country\""},
          "Entity"], ",", 
         TemplateBox[{"\"Italy\"",RowBox[{"Entity", "[", 
             RowBox[{"\"Country\"", ",", "\"Italy\""}], "]"}],
           "\"Entity[\\\"Country\\\", \\\"Italy\\\"]\"","\"country\""},
          "Entity"], ",", 
         TemplateBox[{"\"United Kingdom\"",RowBox[{"Entity", "[", 
             RowBox[{"\"Country\"", ",", "\"UnitedKingdom\""}], "]"}],
           "\"Entity[\\\"Country\\\", \\\"UnitedKingdom\\\"]\"","\"country\""},
          "Entity"], ",", 
         TemplateBox[{"\"United States\"",RowBox[{"Entity", "[", 
             RowBox[{"\"Country\"", ",", "\"UnitedStates\""}], "]"}],
           "\"Entity[\\\"Country\\\", \\\"UnitedStates\\\"]\"","\"country\""},
          
          "Entity"]}], "}"}]], "ExerciseOutput"],
      Apply[TextCell, 
       Cell[
        BoxData[
         RowBox[{"{", 
           RowBox[{
             TemplateBox[{"\"Canada\"", 
               RowBox[{"Entity", "[", 
                 RowBox[{"\"Country\"", ",", "\"Canada\""}], "]"}], 
               "\"Entity[\\\"Country\\\", \\\"Canada\\\"]\"", "\"country\""}, 
              "Entity"], ",", 
             TemplateBox[{"\"France\"", 
               RowBox[{"Entity", "[", 
                 RowBox[{"\"Country\"", ",", "\"France\""}], "]"}], 
               "\"Entity[\\\"Country\\\", \\\"France\\\"]\"", "\"country\""}, 
              "Entity"], ",", 
             TemplateBox[{"\"Germany\"", 
               RowBox[{"Entity", "[", 
                 RowBox[{"\"Country\"", ",", "\"Germany\""}], "]"}], 
               "\"Entity[\\\"Country\\\", \\\"Germany\\\"]\"", "\"country\""},
               "Entity"], ",", 
             TemplateBox[{"\"Italy\"", 
               RowBox[{"Entity", "[", 
                 RowBox[{"\"Country\"", ",", "\"Italy\""}], "]"}], 
               "\"Entity[\\\"Country\\\", \\\"Italy\\\"]\"", "\"country\""}, 
              "Entity"], ",", 
             TemplateBox[{"\"United Kingdom\"", 
               RowBox[{"Entity", "[", 
                 RowBox[{"\"Country\"", ",", "\"UnitedKingdom\""}], "]"}], 
               "\"Entity[\\\"Country\\\", \\\"UnitedKingdom\\\"]\"", 
               "\"country\""}, "Entity"], ",", 
             TemplateBox[{"\"United States\"", 
               RowBox[{"Entity", "[", 
                 RowBox[{"\"Country\"", ",", "\"UnitedStates\""}], "]"}], 
               "\"Entity[\\\"Country\\\", \\\"UnitedStates\\\"]\"", 
               "\"country\""}, "Entity"]}], "}"}]], "ExerciseOutput", 
        Selectable -> False, Copyable -> False, Editable -> False, 
        ShowCellBracket -> False]]], " "}
   },
   GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Center}}},
   GridBoxBackground->{"Columns" -> {{
        RGBColor[1, 1, 1]}}},
   GridBoxSpacings->{"Columns" -> {{Automatic}}, "Rows" -> {{1}}}],
  FrameMargins->0]], "ExerciseOutput",
 Editable->False,
 Selectable->False,
 Deletable->False,
 CellFrame->{{1, 1}, {1, 1}},
 ShowCellBracket->False,
 CellFrameColor->RGBColor[0.85, 0.85, 0.85],
 LineBreakWithin->Automatic]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 "Haga una rejilla donde aparezcan en columnas consecutivas todas las \
permutaciones posibles de los n\[UAcute]meros 1 al 4.",
 StyleBox[ButtonBox["\[NonBreakingSpace]\[RightGuillemet]",
  Appearance->None,
  Evaluator->Automatic,
  Method->"Preemptive",
  ButtonFunction:>(SelectionMove[
     ButtonNotebook[], All, ButtonCell, AutoScroll -> False]; 
   FrontEndExecute[
     FrontEndToken[
      ButtonNotebook[], "OpenCloseGroup"]])],
  FontColor->RGBColor[1, 0.501961, 0]]
}], "Exercise",
 Editable->False,
 Selectable->False,
 Deletable->False,
 CellDingbat->Cell[
  "30.17", "ExerciseNumber", FontColor -> 
   RGBColor[0.9019607843137255, 0.4117647058823529, 0.027450980392156862`]],
 ShowCellBracket->False],

Cell[BoxData[
 PaneBox[GridBox[{
    {" ", 
     StyleBox[
      RowBox[{"Expected", " ", 
       RowBox[{"output", ":"}]}],
      Editable->False,
      Selectable->False,
      StripOnInput->False,
      FontColor->RGBColor[0.45, 0.45, 0.45]], " "},
    {" ", 
     InterpretationBox[Cell[BoxData[
       TagBox[GridBox[{
          {"1", "1", "1", "1", "1", "1", "2", "2", "2", "2", "2", "2", "3", 
           "3", "3", "3", "3", "3", "4", "4", "4", "4", "4", "4"},
          {"2", "2", "3", "3", "4", "4", "1", "1", "3", "3", "4", "4", "1", 
           "1", "2", "2", "4", "4", "1", "1", "2", "2", "3", "3"},
          {"3", "4", "2", "4", "2", "3", "3", "4", "1", "4", "1", "3", "2", 
           "4", "1", "4", "1", "2", "2", "3", "1", "3", "1", "2"},
          {"4", "3", "4", "2", "3", "2", "4", "3", "4", "1", "3", "1", "4", 
           "2", "4", "1", "2", "1", "3", "2", "3", "1", "2", "1"}
         },
         AutoDelete->False,
         GridBoxItemSize->{
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
        "Grid"]], "ExerciseOutput"],
      Apply[TextCell, 
       Cell[
        BoxData[
         TagBox[
          
          GridBox[{{
            "1", "1", "1", "1", "1", "1", "2", "2", "2", "2", "2", "2", "3", 
             "3", "3", "3", "3", "3", "4", "4", "4", "4", "4", "4"}, {
            "2", "2", "3", "3", "4", "4", "1", "1", "3", "3", "4", "4", "1", 
             "1", "2", "2", "4", "4", "1", "1", "2", "2", "3", "3"}, {
            "3", "4", "2", "4", "2", "3", "3", "4", "1", "4", "1", "3", "2", 
             "4", "1", "4", "1", "2", "2", "3", "1", "3", "1", "2"}, {
            "4", "3", "4", "2", "3", "2", "4", "3", "4", "1", "3", "1", "4", 
             "2", "4", "1", "2", "1", "3", "2", "3", "1", "2", "1"}}, 
           AutoDelete -> False, 
           GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Grid"]], 
        "ExerciseOutput", Selectable -> False, Copyable -> False, Editable -> 
        False, ShowCellBracket -> False]]], " "}
   },
   GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Center}}},
   GridBoxBackground->{"Columns" -> {{
        RGBColor[1, 1, 1]}}},
   GridBoxSpacings->{"Columns" -> {{Automatic}}, "Rows" -> {{1}}}],
  FrameMargins->0]], "ExerciseOutput",
 Editable->False,
 Selectable->False,
 Deletable->False,
 CellFrame->{{1, 1}, {1, 1}},
 ShowCellBracket->False,
 CellFrameColor->RGBColor[0.85, 0.85, 0.85],
 LineBreakWithin->Automatic]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 "Haga una lista de todas las diferentes cadenas de caracteres que pueden \
obtenerse permutando los caracteres en \[OpenCurlyDoubleQuote]hello\
\[CloseCurlyDoubleQuote].",
 StyleBox[ButtonBox["\[NonBreakingSpace]\[RightGuillemet]",
  Appearance->None,
  Evaluator->Automatic,
  Method->"Preemptive",
  ButtonFunction:>(SelectionMove[
     ButtonNotebook[], All, ButtonCell, AutoScroll -> False]; 
   FrontEndExecute[
     FrontEndToken[
      ButtonNotebook[], "OpenCloseGroup"]])],
  FontColor->RGBColor[1, 0.501961, 0]]
}], "Exercise",
 Editable->False,
 Selectable->False,
 Deletable->False,
 CellDingbat->Cell[
  "30.18", "ExerciseNumber", FontColor -> 
   RGBColor[0.9019607843137255, 0.4117647058823529, 0.027450980392156862`]],
 ShowCellBracket->False],

Cell[BoxData[
 PaneBox[GridBox[{
    {" ", 
     StyleBox[
      RowBox[{"Expected", " ", 
       RowBox[{"output", ":"}]}],
      Editable->False,
      Selectable->False,
      StripOnInput->False,
      FontColor->RGBColor[0.45, 0.45, 0.45]], " "},
    {" ", 
     InterpretationBox[Cell[BoxData[
       RowBox[{"{", 
        RowBox[{"\<\"ehllo\"\>", ",", "\<\"ehlol\"\>", ",", "\<\"eholl\"\>", 
         ",", "\<\"elhlo\"\>", ",", "\<\"elhol\"\>", ",", "\<\"ellho\"\>", 
         ",", "\<\"elloh\"\>", ",", "\<\"elohl\"\>", ",", "\<\"elolh\"\>", 
         ",", "\<\"eohll\"\>", ",", "\<\"eolhl\"\>", ",", "\<\"eollh\"\>", 
         ",", "\<\"hello\"\>", ",", "\<\"helol\"\>", ",", "\<\"heoll\"\>", 
         ",", "\<\"hlelo\"\>", ",", "\<\"hleol\"\>", ",", "\<\"hlleo\"\>", 
         ",", "\<\"hlloe\"\>", ",", "\<\"hloel\"\>", ",", "\<\"hlole\"\>", 
         ",", "\<\"hoell\"\>", ",", "\<\"holel\"\>", ",", "\<\"holle\"\>", 
         ",", "\<\"lehlo\"\>", ",", "\<\"lehol\"\>", ",", "\<\"lelho\"\>", 
         ",", "\<\"leloh\"\>", ",", "\<\"leohl\"\>", ",", "\<\"leolh\"\>", 
         ",", "\<\"lhelo\"\>", ",", "\<\"lheol\"\>", ",", "\<\"lhleo\"\>", 
         ",", "\<\"lhloe\"\>", ",", "\<\"lhoel\"\>", ",", "\<\"lhole\"\>", 
         ",", "\<\"lleho\"\>", ",", "\<\"lleoh\"\>", ",", "\<\"llheo\"\>", 
         ",", "\<\"llhoe\"\>", ",", "\<\"lloeh\"\>", ",", "\<\"llohe\"\>", 
         ",", "\<\"loehl\"\>", ",", "\<\"loelh\"\>", ",", "\<\"lohel\"\>", 
         ",", "\<\"lohle\"\>", ",", "\<\"loleh\"\>", ",", "\<\"lolhe\"\>", 
         ",", "\<\"oehll\"\>", ",", "\<\"oelhl\"\>", ",", "\<\"oellh\"\>", 
         ",", "\<\"ohell\"\>", ",", "\<\"ohlel\"\>", ",", "\<\"ohlle\"\>", 
         ",", "\<\"olehl\"\>", ",", "\<\"olelh\"\>", ",", "\<\"olhel\"\>", 
         ",", "\<\"olhle\"\>", ",", "\<\"olleh\"\>", ",", "\<\"ollhe\"\>"}], 
        "}"}]], "ExerciseOutput"],
      Apply[TextCell, 
       Cell[
        BoxData[
         RowBox[{"{", 
           
           RowBox[{"\"ehllo\"", ",", "\"ehlol\"", ",", "\"eholl\"", ",", 
             "\"elhlo\"", ",", "\"elhol\"", ",", "\"ellho\"", ",", 
             "\"elloh\"", ",", "\"elohl\"", ",", "\"elolh\"", ",", 
             "\"eohll\"", ",", "\"eolhl\"", ",", "\"eollh\"", ",", 
             "\"hello\"", ",", "\"helol\"", ",", "\"heoll\"", ",", 
             "\"hlelo\"", ",", "\"hleol\"", ",", "\"hlleo\"", ",", 
             "\"hlloe\"", ",", "\"hloel\"", ",", "\"hlole\"", ",", 
             "\"hoell\"", ",", "\"holel\"", ",", "\"holle\"", ",", 
             "\"lehlo\"", ",", "\"lehol\"", ",", "\"lelho\"", ",", 
             "\"leloh\"", ",", "\"leohl\"", ",", "\"leolh\"", ",", 
             "\"lhelo\"", ",", "\"lheol\"", ",", "\"lhleo\"", ",", 
             "\"lhloe\"", ",", "\"lhoel\"", ",", "\"lhole\"", ",", 
             "\"lleho\"", ",", "\"lleoh\"", ",", "\"llheo\"", ",", 
             "\"llhoe\"", ",", "\"lloeh\"", ",", "\"llohe\"", ",", 
             "\"loehl\"", ",", "\"loelh\"", ",", "\"lohel\"", ",", 
             "\"lohle\"", ",", "\"loleh\"", ",", "\"lolhe\"", ",", 
             "\"oehll\"", ",", "\"oelhl\"", ",", "\"oellh\"", ",", 
             "\"ohell\"", ",", "\"ohlel\"", ",", "\"ohlle\"", ",", 
             "\"olehl\"", ",", "\"olelh\"", ",", "\"olhel\"", ",", 
             "\"olhle\"", ",", "\"olleh\"", ",", "\"ollhe\""}], "}"}]], 
        "ExerciseOutput", Selectable -> False, Copyable -> False, Editable -> 
        False, ShowCellBracket -> False]]], " "}
   },
   GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Center}}},
   GridBoxBackground->{"Columns" -> {{
        RGBColor[1, 1, 1]}}},
   GridBoxSpacings->{"Columns" -> {{Automatic}}, "Rows" -> {{1}}}],
  FrameMargins->0]], "ExerciseOutput",
 Editable->False,
 Selectable->False,
 Deletable->False,
 CellFrame->{{1, 1}, {1, 1}},
 ShowCellBracket->False,
 CellFrameColor->RGBColor[0.85, 0.85, 0.85],
 LineBreakWithin->Automatic]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 "Obtenga un gr\[AAcute]fico de arreglo de la secuencia de tuplas de tama\
\[NTilde]o 5, con el 0 y el 1.",
 StyleBox[ButtonBox["\[NonBreakingSpace]\[RightGuillemet]",
  Appearance->None,
  Evaluator->Automatic,
  Method->"Preemptive",
  ButtonFunction:>(SelectionMove[
     ButtonNotebook[], All, ButtonCell, AutoScroll -> False]; 
   FrontEndExecute[
     FrontEndToken[
      ButtonNotebook[], "OpenCloseGroup"]])],
  FontColor->RGBColor[1, 0.501961, 0]]
}], "Exercise",
 Editable->False,
 Selectable->False,
 Deletable->False,
 CellDingbat->Cell[
  "30.19", "ExerciseNumber", FontColor -> 
   RGBColor[0.9019607843137255, 0.4117647058823529, 0.027450980392156862`]],
 ShowCellBracket->False],

Cell[BoxData[
 PaneBox[GridBox[{
    {" ", 
     StyleBox[
      RowBox[{"Expected", " ", 
       RowBox[{"output", ":"}]}],
      Editable->False,
      Selectable->False,
      StripOnInput->False,
      FontColor->RGBColor[0.45, 0.45, 0.45]], " "},
    {" ", 
     InterpretationBox[Cell[BoxData[
       GraphicsBox[
        RasterBox[{{0, 0, 0, 0, 0}, {0, 0, 0, 0, 1}, {0, 0, 0, 1, 0}, {0, 0, 
         0, 1, 1}, {0, 0, 1, 0, 0}, {0, 0, 1, 0, 1}, {0, 0, 1, 1, 0}, {0, 0, 
         1, 1, 1}, {0, 1, 0, 0, 0}, {0, 1, 0, 0, 1}, {0, 1, 0, 1, 0}, {0, 1, 
         0, 1, 1}, {0, 1, 1, 0, 0}, {0, 1, 1, 0, 1}, {0, 1, 1, 1, 0}, {0, 1, 
         1, 1, 1}, {1, 0, 0, 0, 0}, {1, 0, 0, 0, 1}, {1, 0, 0, 1, 0}, {1, 0, 
         0, 1, 1}, {1, 0, 1, 0, 0}, {1, 0, 1, 0, 1}, {1, 0, 1, 1, 0}, {1, 0, 
         1, 1, 1}, {1, 1, 0, 0, 0}, {1, 1, 0, 0, 1}, {1, 1, 0, 1, 0}, {1, 1, 
         0, 1, 1}, {1, 1, 1, 0, 0}, {1, 1, 1, 0, 1}, {1, 1, 1, 1, 0}, {1, 1, 
         1, 1, 1}}, {{0, 0}, {5, 32}}, {0, 1}],
        Frame->Automatic,
        FrameLabel->{None, None},
        FrameTicks->{{None, None}, {None, None}},
        GridLinesStyle->Directive[
          GrayLevel[0.5, 0.4]],
        ImageSize->{72.41796875, Automatic},
        Method->{
         "DefaultBoundaryStyle" -> Automatic, "DefaultPlotStyle" -> 
          Automatic}]], "ExerciseOutput"],
      Apply[TextCell, 
       Cell[
        BoxData[
         GraphicsBox[
          
          RasterBox[{{0, 0, 0, 0, 0}, {0, 0, 0, 0, 1}, {0, 0, 0, 1, 0}, {0, 0,
            0, 1, 1}, {0, 0, 1, 0, 0}, {0, 0, 1, 0, 1}, {0, 0, 1, 1, 0}, {0, 
           0, 1, 1, 1}, {0, 1, 0, 0, 0}, {0, 1, 0, 0, 1}, {0, 1, 0, 1, 0}, {0,
            1, 0, 1, 1}, {0, 1, 1, 0, 0}, {0, 1, 1, 0, 1}, {0, 1, 1, 1, 0}, {
           0, 1, 1, 1, 1}, {1, 0, 0, 0, 0}, {1, 0, 0, 0, 1}, {1, 0, 0, 1, 
           0}, {1, 0, 0, 1, 1}, {1, 0, 1, 0, 0}, {1, 0, 1, 0, 1}, {1, 0, 1, 1,
            0}, {1, 0, 1, 1, 1}, {1, 1, 0, 0, 0}, {1, 1, 0, 0, 1}, {1, 1, 0, 
           1, 0}, {1, 1, 0, 1, 1}, {1, 1, 1, 0, 0}, {1, 1, 1, 0, 1}, {1, 1, 1,
            1, 0}, {1, 1, 1, 1, 1}}, {{0, 0}, {5, 32}}, {0, 1}], Frame -> 
          Automatic, FrameLabel -> {None, None}, 
          FrameTicks -> {{None, None}, {None, None}}, GridLinesStyle -> 
          Directive[
            GrayLevel[0.5, 0.4]], ImageSize -> {72.41796875, Automatic}, 
          Method -> {
           "DefaultBoundaryStyle" -> Automatic, "DefaultPlotStyle" -> 
            Automatic}]], "ExerciseOutput", Selectable -> False, Copyable -> 
        False, Editable -> False, ShowCellBracket -> False]]], " "}
   },
   GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Center}}},
   GridBoxBackground->{"Columns" -> {{
        RGBColor[1, 1, 1]}}},
   GridBoxSpacings->{"Columns" -> {{Automatic}}, "Rows" -> {{1}}}],
  FrameMargins->0]], "ExerciseOutput",
 Editable->False,
 Selectable->False,
 Deletable->False,
 CellFrame->{{1, 1}, {1, 1}},
 ShowCellBracket->False,
 CellFrameColor->RGBColor[0.85, 0.85, 0.85],
 LineBreakWithin->Automatic]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 "Genere una lista de 10 secuencias aleatorias de 5 letras del alfabeto ingl\
\[EAcute]s.",
 StyleBox[ButtonBox["\[NonBreakingSpace]\[RightGuillemet]",
  Appearance->None,
  Evaluator->Automatic,
  Method->"Preemptive",
  ButtonFunction:>(SelectionMove[
     ButtonNotebook[], All, ButtonCell, AutoScroll -> False]; 
   FrontEndExecute[
     FrontEndToken[
      ButtonNotebook[], "OpenCloseGroup"]])],
  FontColor->RGBColor[1, 0.501961, 0]]
}], "Exercise",
 Editable->False,
 Selectable->False,
 Deletable->False,
 CellDingbat->Cell[
  "30.20", "ExerciseNumber", FontColor -> 
   RGBColor[0.9019607843137255, 0.4117647058823529, 0.027450980392156862`]],
 ShowCellBracket->False],

Cell[BoxData[
 PaneBox[GridBox[{
    {" ", 
     StyleBox[
      RowBox[{"Sample", " ", "expected", " ", 
       RowBox[{"output", ":"}]}],
      Editable->False,
      Selectable->False,
      StripOnInput->False,
      FontColor->RGBColor[0.45, 0.45, 0.45]], " "},
    {" ", 
     InterpretationBox[Cell[BoxData[
       RowBox[{"{", 
        RowBox[{"\<\"ayasl\"\>", ",", "\<\"icnry\"\>", ",", "\<\"ahbaa\"\>", 
         ",", "\<\"jqkpc\"\>", ",", "\<\"orlaf\"\>", ",", "\<\"rmexo\"\>", 
         ",", "\<\"ngrfy\"\>", ",", "\<\"vwhii\"\>", ",", "\<\"wjiqn\"\>", 
         ",", "\<\"gngvk\"\>"}], "}"}]], "ExerciseOutput"],
      Apply[TextCell, 
       Cell[
        BoxData[
         RowBox[{"{", 
           
           RowBox[{"\"ayasl\"", ",", "\"icnry\"", ",", "\"ahbaa\"", ",", 
             "\"jqkpc\"", ",", "\"orlaf\"", ",", "\"rmexo\"", ",", 
             "\"ngrfy\"", ",", "\"vwhii\"", ",", "\"wjiqn\"", ",", 
             "\"gngvk\""}], "}"}]], "ExerciseOutput", Selectable -> False, 
        Copyable -> False, Editable -> False, ShowCellBracket -> False]]], " "}
   },
   GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Center}}},
   GridBoxBackground->{"Columns" -> {{
        RGBColor[1, 1, 1]}}},
   GridBoxSpacings->{"Columns" -> {{Automatic}}, "Rows" -> {{1}}}],
  FrameMargins->0]], "ExerciseOutput",
 Editable->False,
 Selectable->False,
 Deletable->False,
 CellFrame->{{1, 1}, {1, 1}},
 ShowCellBracket->False,
 CellFrameColor->RGBColor[0.85, 0.85, 0.85],
 LineBreakWithin->Automatic]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 "Encuentre una forma m\[AAcute]s sencilla para ",
 Cell[BoxData[
  RowBox[{
   ButtonBox["Flatten",
    BaseStyle->"CodeLink"], "[", 
   RowBox[{
    RowBox[{
     ButtonBox["Table",
      BaseStyle->"CodeLink"], "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"i", ",", "j", ",", "k"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "2"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"j", ",", "2"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"k", ",", "2"}], "}"}]}], "]"}], ",", "2"}], "]"}]], 
  "InlineCode"],
 ".",
 StyleBox[ButtonBox["\[NonBreakingSpace]\[RightGuillemet]",
  Appearance->None,
  Evaluator->Automatic,
  Method->"Preemptive",
  ButtonFunction:>(SelectionMove[
     ButtonNotebook[], All, ButtonCell, AutoScroll -> False]; 
   FrontEndExecute[
     FrontEndToken[
      ButtonNotebook[], "OpenCloseGroup"]])],
  FontColor->RGBColor[1, 0.501961, 0]]
}], "Exercise",
 Editable->False,
 Selectable->False,
 Deletable->False,
 CellDingbat->Cell[
  "30.21", "ExerciseNumber", FontColor -> 
   RGBColor[0.9019607843137255, 0.4117647058823529, 0.027450980392156862`]],
 ShowCellBracket->False,
 CellTags->"LastCellOfAPage"],

Cell[BoxData[
 PaneBox[GridBox[{
    {" ", 
     StyleBox[
      RowBox[{"Expected", " ", 
       RowBox[{"output", ":"}]}],
      Editable->False,
      Selectable->False,
      StripOnInput->False,
      FontColor->RGBColor[0.45, 0.45, 0.45]], " "},
    {" ", 
     InterpretationBox[Cell[BoxData[
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"1", ",", "1", ",", "1"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"1", ",", "1", ",", "2"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"1", ",", "2", ",", "1"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"1", ",", "2", ",", "2"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"2", ",", "1", ",", "1"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"2", ",", "1", ",", "2"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"2", ",", "2", ",", "1"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"2", ",", "2", ",", "2"}], "}"}]}], "}"}]], 
       "ExerciseOutput"],
      Apply[TextCell, 
       Cell[
        BoxData[
         RowBox[{"{", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{"1", ",", "1", ",", "1"}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{"1", ",", "1", ",", "2"}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{"1", ",", "2", ",", "1"}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{"1", ",", "2", ",", "2"}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{"2", ",", "1", ",", "1"}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{"2", ",", "1", ",", "2"}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{"2", ",", "2", ",", "1"}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{"2", ",", "2", ",", "2"}], "}"}]}], "}"}]], 
        "ExerciseOutput", Selectable -> False, Copyable -> False, Editable -> 
        False, ShowCellBracket -> False]]], " "}
   },
   GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Center}}},
   GridBoxBackground->{"Columns" -> {{
        RGBColor[1, 1, 1]}}},
   GridBoxSpacings->{"Columns" -> {{Automatic}}, "Rows" -> {{1}}}],
  FrameMargins->0]], "ExerciseOutput",
 Editable->False,
 Selectable->False,
 Deletable->False,
 CellFrame->{{1, 1}, {1, 1}},
 ShowCellBracket->False,
 CellFrameColor->RGBColor[0.85, 0.85, 0.85],
 LineBreakWithin->Automatic]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 "Produzca un gr\[AAcute]fico de arreglo con los n\[UAcute]meros de las \
letras en los 1000 primeros caracteres del art\[IAcute]culo \
\[OpenCurlyDoubleQuote]computers\[CloseCurlyDoubleQuote] en Wikipedia, con 30 \
letras en cada rengl\[OAcute]n.",
 StyleBox[ButtonBox["\[NonBreakingSpace]\[RightGuillemet]",
  Appearance->None,
  Evaluator->Automatic,
  Method->"Preemptive",
  ButtonFunction:>(SelectionMove[
     ButtonNotebook[], All, ButtonCell, AutoScroll -> False]; 
   FrontEndExecute[
     FrontEndToken[
      ButtonNotebook[], "OpenCloseGroup"]])],
  FontColor->RGBColor[1, 0.501961, 0]]
}], "Exercise",
 Editable->False,
 Selectable->False,
 Deletable->False,
 CellDingbat->Cell[
  "+30.1", "ExerciseNumber", FontColor -> 
   RGBColor[0.9019607843137255, 0.4117647058823529, 0.027450980392156862`]],
 ShowCellBracket->False],

Cell[BoxData[
 PaneBox[GridBox[{
    {" ", 
     StyleBox[
      RowBox[{"Expected", " ", 
       RowBox[{"output", ":"}]}],
      Editable->False,
      Selectable->False,
      StripOnInput->False,
      FontColor->RGBColor[0.45, 0.45, 0.45]], " "},
    {" ", 
     InterpretationBox[Cell[BoxData[
       GraphicsBox[RasterBox[CompressedData["
1:eJxlklGO2zAMROONRbEipYKxKS1RoECv1CPsBXr/vw6NbBZoP+TEljh8M9Sv
jz+/P95ut9sPrJ9YEtZNj1kYT3pYJetODz+NK/kKMtFay3pEXTFWGfiCg8LN
Z/V5Ctfmy2LYzWe3YRS8RWsDMihSQ1VoDDmW9FbIud6dvUjPnZckmpjehce8
B5txgbYpODp+fY/hHOgVlVhUj2vrQlyuVNBRZ8pCyv9tV0FEPsHkKZ12Yse7
TnZiiIP7E5VRWqXwcmyjBXstg+SUhv7E/SIlefdX6cnSQ/2NPLdwzBrKYkzf
bXmNMeRuesrTIgQb/jhJRYbpEa56yChqtEKT48j8hafzs3H2znIwRfVvxXVh
BnhbgGFQAwXU8Gn0wPRgRCcisCWNu5zdu/AG0cYCJmAcPpCsEoH06+PF0AqK
q3RH7/+Oby2nNrZA7Hg8I15prVKVM2g4ZiTqivXddMoJlXeU49AOCfiAABQz
3pdAaJWxJya8IwX/jDxtYzcDj2ljQz7PLApJjuPCASImdkVDkeGeX1HgTmUS
uBIQXClPlyCwDo6O+0WSEW5SXoasxuGaY2yFm+AuYpp/AffXL94=
         "], {{0, 0}, {
         30, 27}}, {0, 26}],
        Frame->Automatic,
        FrameLabel->{None, None},
        FrameTicks->{{None, None}, {None, None}},
        GridLinesStyle->Directive[
          GrayLevel[0.5, 0.4]],
        Method->{
         "DefaultBoundaryStyle" -> Automatic, "DefaultPlotStyle" -> 
          Automatic}]], "ExerciseOutput"],
      Apply[TextCell, 
       Cell[
        BoxData[
         GraphicsBox[
          RasterBox[CompressedData["
1:eJxlklGO2zAMROONRbEipYKxKS1RoECv1CPsBXr/vw6NbBZoP+TEljh8M9Sv
jz+/P95ut9sPrJ9YEtZNj1kYT3pYJetODz+NK/kKMtFay3pEXTFWGfiCg8LN
Z/V5Ctfmy2LYzWe3YRS8RWsDMihSQ1VoDDmW9FbIud6dvUjPnZckmpjehce8
B5txgbYpODp+fY/hHOgVlVhUj2vrQlyuVNBRZ8pCyv9tV0FEPsHkKZ12Yse7
TnZiiIP7E5VRWqXwcmyjBXstg+SUhv7E/SIlefdX6cnSQ/2NPLdwzBrKYkzf
bXmNMeRuesrTIgQb/jhJRYbpEa56yChqtEKT48j8hafzs3H2znIwRfVvxXVh
BnhbgGFQAwXU8Gn0wPRgRCcisCWNu5zdu/AG0cYCJmAcPpCsEoH06+PF0AqK
q3RH7/+Oby2nNrZA7Hg8I15prVKVM2g4ZiTqivXddMoJlXeU49AOCfiAABQz
3pdAaJWxJya8IwX/jDxtYzcDj2ljQz7PLApJjuPCASImdkVDkeGeX1HgTmUS
uBIQXClPlyCwDo6O+0WSEW5SXoasxuGaY2yFm+AuYpp/AffXL94=
           "], {{0, 0}, {
           30, 27}}, {0, 26}], Frame -> Automatic, FrameLabel -> {None, None},
           FrameTicks -> {{None, None}, {None, None}}, GridLinesStyle -> 
          Directive[
            GrayLevel[0.5, 0.4]], 
          Method -> {
           "DefaultBoundaryStyle" -> Automatic, "DefaultPlotStyle" -> 
            Automatic}]], "ExerciseOutput", Selectable -> False, Copyable -> 
        False, Editable -> False, ShowCellBracket -> False]]], " "}
   },
   GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Center}}},
   GridBoxBackground->{"Columns" -> {{
        RGBColor[1, 1, 1]}}},
   GridBoxSpacings->{"Columns" -> {{Automatic}}, "Rows" -> {{1}}}],
  FrameMargins->0]], "ExerciseOutput",
 Editable->False,
 Selectable->False,
 Deletable->False,
 CellFrame->{{1, 1}, {1, 1}},
 ShowCellBracket->False,
 CellFrameColor->RGBColor[0.85, 0.85, 0.85],
 LineBreakWithin->Automatic]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 "Agrupe los enteros hasta el 30 en listas basadas en sus valores \
m\[OAcute]dulo 3.",
 StyleBox[ButtonBox["\[NonBreakingSpace]\[RightGuillemet]",
  Appearance->None,
  Evaluator->Automatic,
  Method->"Preemptive",
  ButtonFunction:>(SelectionMove[
     ButtonNotebook[], All, ButtonCell, AutoScroll -> False]; 
   FrontEndExecute[
     FrontEndToken[
      ButtonNotebook[], "OpenCloseGroup"]])],
  FontColor->RGBColor[1, 0.501961, 0]]
}], "Exercise",
 Editable->False,
 Selectable->False,
 Deletable->False,
 CellDingbat->Cell[
  "+30.2", "ExerciseNumber", FontColor -> 
   RGBColor[0.9019607843137255, 0.4117647058823529, 0.027450980392156862`]],
 ShowCellBracket->False],

Cell[BoxData[
 PaneBox[GridBox[{
    {" ", 
     StyleBox[
      RowBox[{"Expected", " ", 
       RowBox[{"output", ":"}]}],
      Editable->False,
      Selectable->False,
      StripOnInput->False,
      FontColor->RGBColor[0.45, 0.45, 0.45]], " "},
    {" ", 
     InterpretationBox[Cell[BoxData[
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
          "1", ",", "4", ",", "7", ",", "10", ",", "13", ",", "16", ",", "19",
            ",", "22", ",", "25", ",", "28"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
          "2", ",", "5", ",", "8", ",", "11", ",", "14", ",", "17", ",", "20",
            ",", "23", ",", "26", ",", "29"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
          "3", ",", "6", ",", "9", ",", "12", ",", "15", ",", "18", ",", "21",
            ",", "24", ",", "27", ",", "30"}], "}"}]}], "}"}]], 
       "ExerciseOutput"],
      Apply[TextCell, 
       Cell[
        BoxData[
         RowBox[{"{", 
           RowBox[{
             RowBox[{"{", 
               
               RowBox[{
                "1", ",", "4", ",", "7", ",", "10", ",", "13", ",", "16", ",",
                  "19", ",", "22", ",", "25", ",", "28"}], "}"}], ",", 
             RowBox[{"{", 
               
               RowBox[{
                "2", ",", "5", ",", "8", ",", "11", ",", "14", ",", "17", ",",
                  "20", ",", "23", ",", "26", ",", "29"}], "}"}], ",", 
             RowBox[{"{", 
               
               RowBox[{
                "3", ",", "6", ",", "9", ",", "12", ",", "15", ",", "18", ",",
                  "21", ",", "24", ",", "27", ",", "30"}], "}"}]}], "}"}]], 
        "ExerciseOutput", Selectable -> False, Copyable -> False, Editable -> 
        False, ShowCellBracket -> False]]], " "}
   },
   GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Center}}},
   GridBoxBackground->{"Columns" -> {{
        RGBColor[1, 1, 1]}}},
   GridBoxSpacings->{"Columns" -> {{Automatic}}, "Rows" -> {{1}}}],
  FrameMargins->0]], "ExerciseOutput",
 Editable->False,
 Selectable->False,
 Deletable->False,
 CellFrame->{{1, 1}, {1, 1}},
 ShowCellBracket->False,
 CellFrameColor->RGBColor[0.85, 0.85, 0.85],
 LineBreakWithin->Automatic]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 "Agrupe las 50 primeras potencias de 2 de acuerdo con el valor de sus \
\[UAcute]ltimos d\[IAcute]gitos.",
 StyleBox[ButtonBox["\[NonBreakingSpace]\[RightGuillemet]",
  Appearance->None,
  Evaluator->Automatic,
  Method->"Preemptive",
  ButtonFunction:>(SelectionMove[
     ButtonNotebook[], All, ButtonCell, AutoScroll -> False]; 
   FrontEndExecute[
     FrontEndToken[
      ButtonNotebook[], "OpenCloseGroup"]])],
  FontColor->RGBColor[1, 0.501961, 0]]
}], "Exercise",
 Editable->False,
 Selectable->False,
 Deletable->False,
 CellDingbat->Cell[
  "+30.3", "ExerciseNumber", FontColor -> 
   RGBColor[0.9019607843137255, 0.4117647058823529, 0.027450980392156862`]],
 ShowCellBracket->False],

Cell[BoxData[
 PaneBox[GridBox[{
    {" ", 
     StyleBox[
      RowBox[{"Expected", " ", 
       RowBox[{"output", ":"}]}],
      Editable->False,
      Selectable->False,
      StripOnInput->False,
      FontColor->RGBColor[0.45, 0.45, 0.45]], " "},
    {" ", 
     InterpretationBox[Cell[BoxData[
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
          "2", ",", "32", ",", "512", ",", "8192", ",", "131072", ",", 
           "2097152", ",", "33554432", ",", "536870912", ",", "8589934592", 
           ",", "137438953472", ",", "2199023255552", ",", "35184372088832", 
           ",", "562949953421312"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
          "4", ",", "64", ",", "1024", ",", "16384", ",", "262144", ",", 
           "4194304", ",", "67108864", ",", "1073741824", ",", "17179869184", 
           ",", "274877906944", ",", "4398046511104", ",", "70368744177664", 
           ",", "1125899906842624"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
          "8", ",", "128", ",", "2048", ",", "32768", ",", "524288", ",", 
           "8388608", ",", "134217728", ",", "2147483648", ",", "34359738368",
            ",", "549755813888", ",", "8796093022208", ",", 
           "140737488355328"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
          "16", ",", "256", ",", "4096", ",", "65536", ",", "1048576", ",", 
           "16777216", ",", "268435456", ",", "4294967296", ",", 
           "68719476736", ",", "1099511627776", ",", "17592186044416", ",", 
           "281474976710656"}], "}"}]}], "}"}]], "ExerciseOutput"],
      Apply[TextCell, 
       Cell[
        BoxData[
         RowBox[{"{", 
           RowBox[{
             RowBox[{"{", 
               
               RowBox[{
                "2", ",", "32", ",", "512", ",", "8192", ",", "131072", ",", 
                 "2097152", ",", "33554432", ",", "536870912", ",", 
                 "8589934592", ",", "137438953472", ",", "2199023255552", ",",
                  "35184372088832", ",", "562949953421312"}], "}"}], ",", 
             RowBox[{"{", 
               
               RowBox[{
                "4", ",", "64", ",", "1024", ",", "16384", ",", "262144", ",",
                  "4194304", ",", "67108864", ",", "1073741824", ",", 
                 "17179869184", ",", "274877906944", ",", "4398046511104", 
                 ",", "70368744177664", ",", "1125899906842624"}], "}"}], ",", 
             RowBox[{"{", 
               
               RowBox[{
                "8", ",", "128", ",", "2048", ",", "32768", ",", "524288", 
                 ",", "8388608", ",", "134217728", ",", "2147483648", ",", 
                 "34359738368", ",", "549755813888", ",", "8796093022208", 
                 ",", "140737488355328"}], "}"}], ",", 
             RowBox[{"{", 
               
               RowBox[{
                "16", ",", "256", ",", "4096", ",", "65536", ",", "1048576", 
                 ",", "16777216", ",", "268435456", ",", "4294967296", ",", 
                 "68719476736", ",", "1099511627776", ",", "17592186044416", 
                 ",", "281474976710656"}], "}"}]}], "}"}]], "ExerciseOutput", 
        Selectable -> False, Copyable -> False, Editable -> False, 
        ShowCellBracket -> False]]], " "}
   },
   GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Center}}},
   GridBoxBackground->{"Columns" -> {{
        RGBColor[1, 1, 1]}}},
   GridBoxSpacings->{"Columns" -> {{Automatic}}, "Rows" -> {{1}}}],
  FrameMargins->0]], "ExerciseOutput",
 Editable->False,
 Selectable->False,
 Deletable->False,
 CellFrame->{{1, 1}, {1, 1}},
 ShowCellBracket->False,
 CellFrameColor->RGBColor[0.85, 0.85, 0.85],
 LineBreakWithin->Automatic]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 "Obtenga un gr\[AAcute]fico con los puntos unidos con el resultado de \
ordenar los n\[UAcute]meros del \[Minus]10 al +10, seg\[UAcute]n sus valores \
absolutos.",
 StyleBox[ButtonBox["\[NonBreakingSpace]\[RightGuillemet]",
  Appearance->None,
  Evaluator->Automatic,
  Method->"Preemptive",
  ButtonFunction:>(SelectionMove[
     ButtonNotebook[], All, ButtonCell, AutoScroll -> False]; 
   FrontEndExecute[
     FrontEndToken[
      ButtonNotebook[], "OpenCloseGroup"]])],
  FontColor->RGBColor[1, 0.501961, 0]]
}], "Exercise",
 Editable->False,
 Selectable->False,
 Deletable->False,
 CellDingbat->Cell[
  "+30.4", "ExerciseNumber", FontColor -> 
   RGBColor[0.9019607843137255, 0.4117647058823529, 0.027450980392156862`]],
 ShowCellBracket->False],

Cell[BoxData[
 PaneBox[GridBox[{
    {" ", 
     StyleBox[
      RowBox[{"Expected", " ", 
       RowBox[{"output", ":"}]}],
      Editable->False,
      Selectable->False,
      StripOnInput->False,
      FontColor->RGBColor[0.45, 0.45, 0.45]], " "},
    {" ", 
     InterpretationBox[Cell[BoxData[
       GraphicsBox[{{}, {{}, {}, 
          {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
           0.019444444444444445`], AbsoluteThickness[1.6], 
           LineBox[CompressedData["
1:eJxTTMoPSmViYGAQBWIQDQEf7BlQgQNUfD+E5nBAVScA5TMcgFAiMD6UloDS
HFB5GRgfSitAaQGovBKMD6VVoLQIVF4NxofSGjB7oPJaaPbqQGkZqLwejA+l
DWDugMobornLCEorQeWNYXwobQJzJ1TeFO5uAFL6GCM=
            "]]}}, {}},
        AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
        Axes->{True, True},
        AxesLabel->{None, None},
        AxesOrigin->{0, 0},
        DisplayFunction->Identity,
        Frame->{{False, False}, {False, False}},
        FrameLabel->{{None, None}, {None, None}},
        FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
        GridLines->{None, None},
        GridLinesStyle->Directive[
          GrayLevel[0.5, 0.4]],
        Method->{},
        PlotRange->{{0., 21.}, {-10., 10.}},
        PlotRangeClipping->True,
        PlotRangePadding->{{
           Scaled[0.02], 
           Scaled[0.02]}, {
           Scaled[0.05], 
           Scaled[0.05]}},
        Ticks->{Automatic, Automatic}]], "ExerciseOutput"],
      Apply[TextCell, 
       Cell[
        BoxData[
         GraphicsBox[{{}, {{}, {}, {{
              RGBColor[0.368417, 0.506779, 0.709798], 
              PointSize[0.019444444444444445`], 
              AbsoluteThickness[1.6], 
              LineBox[CompressedData["
1:eJxTTMoPSmViYGAQBWIQDQEf7BlQgQNUfD+E5nBAVScA5TMcgFAiMD6UloDS
HFB5GRgfSitAaQGovBKMD6VVoLQIVF4NxofSGjB7oPJaaPbqQGkZqLwejA+l
DWDugMobornLCEorQeWNYXwobQJzJ1TeFO5uAFL6GCM=
               "]]}}}, {}}, 
          AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
          Axes -> {True, True}, AxesLabel -> {None, None}, 
          AxesOrigin -> {0, 0}, DisplayFunction -> Identity, 
          Frame -> {{False, False}, {False, False}}, 
          FrameLabel -> {{None, None}, {None, None}}, 
          FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
          GridLines -> {None, None}, GridLinesStyle -> Directive[
            GrayLevel[0.5, 0.4]], Method -> {}, 
          PlotRange -> {{0., 21.}, {-10., 10.}}, PlotRangeClipping -> True, 
          PlotRangePadding -> {{
             Scaled[0.02], 
             Scaled[0.02]}, {
             Scaled[0.05], 
             Scaled[0.05]}}, Ticks -> {Automatic, Automatic}]], 
        "ExerciseOutput", Selectable -> False, Copyable -> False, Editable -> 
        False, ShowCellBracket -> False]]], " "}
   },
   GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Center}}},
   GridBoxBackground->{"Columns" -> {{
        RGBColor[1, 1, 1]}}},
   GridBoxSpacings->{"Columns" -> {{Automatic}}, "Rows" -> {{1}}}],
  FrameMargins->0]], "ExerciseOutput",
 Editable->False,
 Selectable->False,
 Deletable->False,
 CellFrame->{{1, 1}, {1, 1}},
 ShowCellBracket->False,
 CellFrameColor->RGBColor[0.85, 0.85, 0.85],
 LineBreakWithin->Automatic]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 "Produzca un gr\[AAcute]fico con los puntos unidos de los 200 primeros \
cuadrados, ordenados por sus d\[IAcute]gitos iniciales.",
 StyleBox[ButtonBox["\[NonBreakingSpace]\[RightGuillemet]",
  Appearance->None,
  Evaluator->Automatic,
  Method->"Preemptive",
  ButtonFunction:>(SelectionMove[
     ButtonNotebook[], All, ButtonCell, AutoScroll -> False]; 
   FrontEndExecute[
     FrontEndToken[
      ButtonNotebook[], "OpenCloseGroup"]])],
  FontColor->RGBColor[1, 0.501961, 0]]
}], "Exercise",
 Editable->False,
 Selectable->False,
 Deletable->False,
 CellDingbat->Cell[
  "+30.5", "ExerciseNumber", FontColor -> 
   RGBColor[0.9019607843137255, 0.4117647058823529, 0.027450980392156862`]],
 ShowCellBracket->False],

Cell[BoxData[
 PaneBox[GridBox[{
    {" ", 
     StyleBox[
      RowBox[{"Expected", " ", 
       RowBox[{"output", ":"}]}],
      Editable->False,
      Selectable->False,
      StripOnInput->False,
      FontColor->RGBColor[0.45, 0.45, 0.45]], " "},
    {" ", 
     InterpretationBox[Cell[BoxData[
       GraphicsBox[{{}, {{}, {}, 
          {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
           0.01388888888888889], AbsoluteThickness[1.6], 
           LineBox[CompressedData["
1:eJxd1luMnHMcxvFfNnuxl5PlQsTFq5k0KhupVYet0r8xatShtapoi9mxdYrE
IdJEJPKrU95K08w6VBfh3bWo0sMWVZS+nS4GRZc6Vw3mQhMX7brRG0Gf7/+C
Jpsnn3nmmV8mafLOibXb+5d3mFnzn79/U/8Ozf1vWlDMJLvIa8iCMlyHjyVr
5HHKZDk+Qek344Ssk9OUnUO4qCw8iqcri4/hk7j/OD5ZOfgE7lHW1+JTlBNP
/u97DZOnKstP4V72T+PTlO1n8CzuP4tPV6a78RlH03+PPlPZP4HPUr89uk+Z
vI9nq0+jz1ZORc9Rv+wDfI6yGX2u+lkf4rnK0eigvtCUPZDYzlN/KPay1T6i
L6nfh122ysf056vfgV223k/oy+rXY5ct2UN/gfp12GXr/pR+nvrV2GXr+oz+
QvUPYpet43P6inrHXuH1veRFRzME7LKtjP189Y3Yy9Y5SX+x+nnYZVsV+0vU
74m9bIUv6C9Vvwi7bMOxv0z9gdjLVvySfoH6W7Ev4HX+n9lCZXKbMmC7g/fj
wl3KHI89x/suV6YZe1waYY9tlD1uYOtn/zx73D/GHicvsMdT2K5QNl9kj8fj
95XDnzinD/vYL1Kf4iDbJHb6479iTz+I7Ur1m3CQ7Qh2+vLX7Onr2Bar34+D
bDO+YU+/Auf0E9iuUt/9LXvZBrDTb8E5vX1HXq1+IQ6yjWCnn8I5ffl79noO
hLU48Fw4iJ1+zg/s6evYlqhv4yBb33729GtwTt/GtlT97B/ZL+X1Ensc7maP
6yt43zLl6Eu8D/t6EtdeZo8rG9hfq+x9hT1OXmWPuzeyx12b2PPc7NjMHg/x
fVwOv+GcPhxgf736dTjIdhg7/fyf2NOPYauq/wsnsve0+Dw5WYKrsqXY6bfh
jH0b5/TH/Cy32JewDai/EyeyZzjQ78XVAXa/cJ9+Js7YV3FOP4Rb7BuY3ynJ
HziRvfgr9+kX42qNHb97HMfnRhb7e7iP6/dyH4f7eN8N5Bbu45U44M5x7uNV
2HFhK/fxMM5x8TXu45TvY4PYuY/tfu7jcfZVHF7nPp7EGR58g/v4CG7h+jbu
8Ltwxpvcj78Tec4EnD7AfZw8xH08wT7DA9u5Hz/vLe7jEWw3Kstv87n4IA64
+TD3sackrr/Dfdy3g/u4jVt46F3u38Sd97iPD+MQe547VVx5hPt4bCf3Ze/J
uU+f4hZ9Gxu/w0u7uB9/l0/jLk5Wcx93reG+7Bn7LO4b3Kev4hZ9A9st6ou7
w9/sq93O
            "]]}}, {}},
        AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
        Axes->{True, True},
        AxesLabel->{None, None},
        AxesOrigin->{0, 0},
        DisplayFunction->Identity,
        Frame->{{False, False}, {False, False}},
        FrameLabel->{{None, None}, {None, None}},
        FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
        GridLines->{None, None},
        GridLinesStyle->Directive[
          GrayLevel[0.5, 0.4]],
        ImageSize->{337.6328125, Automatic},
        Method->{},
        PlotRange->{{0., 200.}, {0, 40000.}},
        PlotRangeClipping->True,
        PlotRangePadding->{{
           Scaled[0.02], 
           Scaled[0.02]}, {
           Scaled[0.02], 
           Scaled[0.05]}},
        Ticks->{Automatic, Automatic}]], "ExerciseOutput"],
      Apply[TextCell, 
       Cell[
        BoxData[
         GraphicsBox[{{}, {{}, {}, {{
              RGBColor[0.368417, 0.506779, 0.709798], 
              PointSize[0.01388888888888889], 
              AbsoluteThickness[1.6], 
              LineBox[CompressedData["
1:eJxd1luMnHMcxvFfNnuxl5PlQsTFq5k0KhupVYet0r8xatShtapoi9mxdYrE
IdJEJPKrU95K08w6VBfh3bWo0sMWVZS+nS4GRZc6Vw3mQhMX7brRG0Gf7/+C
Jpsnn3nmmV8mafLOibXb+5d3mFnzn79/U/8Ozf1vWlDMJLvIa8iCMlyHjyVr
5HHKZDk+Qek344Ssk9OUnUO4qCw8iqcri4/hk7j/OD5ZOfgE7lHW1+JTlBNP
/u97DZOnKstP4V72T+PTlO1n8CzuP4tPV6a78RlH03+PPlPZP4HPUr89uk+Z
vI9nq0+jz1ZORc9Rv+wDfI6yGX2u+lkf4rnK0eigvtCUPZDYzlN/KPay1T6i
L6nfh122ysf056vfgV223k/oy+rXY5ct2UN/gfp12GXr/pR+nvrV2GXr+oz+
QvUPYpet43P6inrHXuH1veRFRzME7LKtjP189Y3Yy9Y5SX+x+nnYZVsV+0vU
74m9bIUv6C9Vvwi7bMOxv0z9gdjLVvySfoH6W7Ev4HX+n9lCZXKbMmC7g/fj
wl3KHI89x/suV6YZe1waYY9tlD1uYOtn/zx73D/GHicvsMdT2K5QNl9kj8fj
95XDnzinD/vYL1Kf4iDbJHb6479iTz+I7Ur1m3CQ7Qh2+vLX7Onr2Bar34+D
bDO+YU+/Auf0E9iuUt/9LXvZBrDTb8E5vX1HXq1+IQ6yjWCnn8I5ffl79noO
hLU48Fw4iJ1+zg/s6evYlqhv4yBb33729GtwTt/GtlT97B/ZL+X1Ensc7maP
6yt43zLl6Eu8D/t6EtdeZo8rG9hfq+x9hT1OXmWPuzeyx12b2PPc7NjMHg/x
fVwOv+GcPhxgf736dTjIdhg7/fyf2NOPYauq/wsnsve0+Dw5WYKrsqXY6bfh
jH0b5/TH/Cy32JewDai/EyeyZzjQ78XVAXa/cJ9+Js7YV3FOP4Rb7BuY3ynJ
HziRvfgr9+kX42qNHb97HMfnRhb7e7iP6/dyH4f7eN8N5Bbu45U44M5x7uNV
2HFhK/fxMM5x8TXu45TvY4PYuY/tfu7jcfZVHF7nPp7EGR58g/v4CG7h+jbu
8Ltwxpvcj78Tec4EnD7AfZw8xH08wT7DA9u5Hz/vLe7jEWw3Kstv87n4IA64
+TD3sackrr/Dfdy3g/u4jVt46F3u38Sd97iPD+MQe547VVx5hPt4bCf3Ze/J
uU+f4hZ9Gxu/w0u7uB9/l0/jLk5Wcx93reG+7Bn7LO4b3Kev4hZ9A9st6ou7
w9/sq93O
               "]]}}}, {}}, AspectRatio -> 
          NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
          AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction -> 
          Identity, Frame -> {{False, False}, {False, False}}, 
          FrameLabel -> {{None, None}, {None, None}}, 
          FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
          GridLines -> {None, None}, GridLinesStyle -> Directive[
            GrayLevel[0.5, 0.4]], ImageSize -> {337.6328125, Automatic}, 
          Method -> {}, PlotRange -> {{0., 200.}, {0, 40000.}}, 
          PlotRangeClipping -> True, PlotRangePadding -> {{
             Scaled[0.02], 
             Scaled[0.02]}, {
             Scaled[0.02], 
             Scaled[0.05]}}, Ticks -> {Automatic, Automatic}]], 
        "ExerciseOutput", Selectable -> False, Copyable -> False, Editable -> 
        False, ShowCellBracket -> False]]], " "}
   },
   GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Center}}},
   GridBoxBackground->{"Columns" -> {{
        RGBColor[1, 1, 1]}}},
   GridBoxSpacings->{"Columns" -> {{Automatic}}, "Rows" -> {{1}}}],
  FrameMargins->0]], "ExerciseOutput",
 Editable->False,
 Selectable->False,
 Deletable->False,
 CellFrame->{{1, 1}, {1, 1}},
 ShowCellBracket->False,
 CellFrameColor->RGBColor[0.85, 0.85, 0.85],
 LineBreakWithin->Automatic]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 "Produzca el gr\[AAcute]fico con los puntos unidos de los enteros hasta el \
200, ordenados seg\[UAcute]n las longitudes de sus nombres en ingl\[EAcute]s.",
 StyleBox[ButtonBox["\[NonBreakingSpace]\[RightGuillemet]",
  Appearance->None,
  Evaluator->Automatic,
  Method->"Preemptive",
  ButtonFunction:>(SelectionMove[
     ButtonNotebook[], All, ButtonCell, AutoScroll -> False]; 
   FrontEndExecute[
     FrontEndToken[
      ButtonNotebook[], "OpenCloseGroup"]])],
  FontColor->RGBColor[1, 0.501961, 0]]
}], "Exercise",
 Editable->False,
 Selectable->False,
 Deletable->False,
 CellDingbat->Cell[
  "+30.6", "ExerciseNumber", FontColor -> 
   RGBColor[0.9019607843137255, 0.4117647058823529, 0.027450980392156862`]],
 ShowCellBracket->False],

Cell[BoxData[
 PaneBox[GridBox[{
    {" ", 
     StyleBox[
      RowBox[{"Expected", " ", 
       RowBox[{"output", ":"}]}],
      Editable->False,
      Selectable->False,
      StripOnInput->False,
      FontColor->RGBColor[0.45, 0.45, 0.45]], " "},
    {" ", 
     InterpretationBox[Cell[BoxData[
       GraphicsBox[{{}, {{}, {}, 
          {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
           0.01388888888888889], AbsoluteThickness[1.6], 
           LineBox[CompressedData["
1:eJxdlctOFUEQhjuuXLpwwcLFSIgxxhjvd6W93y+gCIjCcPAcceUr9KPMo/TS
x5hH8BHE8H2TVJOQP39NVVfVX1VwdvZ7fX4ipfTn6Pc/Hv/8XY2YcsST4BJ4
ClwBTzf2pcZ+BlwGu+bd5cZvpfE7Bz4Fz4OvwAvge/BiE3epibsMXgevgA/B
q+Bn8Noxli9NnO/eaN69if8a/FZT5+2mzjtN3rsxb7rX1Hmf99XjAfis6eMF
uIq/emXwNXb5W/ARdvQs8PQBfIz9IwifdHgCqoPcvqzbuuTWYR/mkT+PWFp8
yXf7foMdXuAJv/KuiaMf9yrbn9x5oltmP4o6ui/m3Yh5q/ujzpt8l2+B1OWe
WOe0J+45c3dOqZmTcyty52Bf6Dr1qU7qgC7V7/SZ1mLdky7q6Xfy1rX4TlqP
7+T16FfWo1+Vf2oQfTM8q7ccvSu8oLd3XeHOsaL/NMdt7PJfMa93bV7v1Ll7
p9W63G/q8m6s07vx74w6uDeTDpuxryx3H+UbsU/zumfG5a2IpUF1cU7qMukO
V/eyHe11O9rTVziY5TvRrl9t/BJ+ucEpz06MqzsxLn3Db594eJ1hh6cf2P1u
/Pf4TpbvEg/PPXHwsoh+9Sd+cuvajXkqPM+x78W6816su8iN34t1pD7W3cEH
9bBueK//jHfhI3yApwPi4AU+wjv0TOaBd/AKz36n7x6uLs7NPoemTuue6tyP
edMsYtegfQ5gr51+ivaD6DfaP7zQz6ST/ePXMc/OdxYxT13EPJl9mXSFD/B0
SJx1Hsa63Bv32r1xLu6Bc3GOvX04V7hzsa+xmaO6jXB1S03f6mAf7rl99PNY
R5nHdwfvwrh5jBvnMS4tInZy71E7vIcP6u+c0Ne59eoPH9Uf7h2bx7s0z3SX
zlX94d5JsU719z37h9v32PSRmrq6w5jHvsxjX/q5V0ODtUHnog6TzvwfPdL5
Hx4BaDU=
            "]]}}, {}, {}, {{}, {}}, {{}, {}}},
        AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
        Axes->{True, True},
        AxesLabel->{None, None},
        AxesOrigin->{0., 0},
        DisplayFunction->Identity,
        Frame->{{False, False}, {False, False}},
        FrameLabel->{{None, None}, {None, None}},
        FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
        GridLines->{None, None},
        GridLinesStyle->Directive[
          GrayLevel[0.5, 0.4]],
        ImagePadding->All,
        Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
              (Identity[#]& )[
               Part[#, 1]], 
              (Identity[#]& )[
               Part[#, 2]]}& ), "CopiedValueFunction" -> ({
              (Identity[#]& )[
               Part[#, 1]], 
              (Identity[#]& )[
               Part[#, 2]]}& )}},
        PlotRange->{{0., 200.}, {0, 200.}},
        PlotRangeClipping->True,
        PlotRangePadding->{{
           Scaled[0.02], 
           Scaled[0.02]}, {
           Scaled[0.02], 
           Scaled[0.05]}},
        Ticks->{Automatic, Automatic}]], "ExerciseOutput"],
      Apply[TextCell, 
       Cell[
        BoxData[
         GraphicsBox[{{}, {{{}, {}, {{{
                RGBColor[0.368417, 0.506779, 0.709798], 
                PointSize[0.01388888888888889], 
                AbsoluteThickness[1.6], 
                LineBox[CompressedData["
1:eJxdlctOFUEQhjuuXLpwwcLFSIgxxhjvd6W93y+gCIjCcPAcceUr9KPMo/TS
x5hH8BHE8H2TVJOQP39NVVfVX1VwdvZ7fX4ipfTn6Pc/Hv/8XY2YcsST4BJ4
ClwBTzf2pcZ+BlwGu+bd5cZvpfE7Bz4Fz4OvwAvge/BiE3epibsMXgevgA/B
q+Bn8Noxli9NnO/eaN69if8a/FZT5+2mzjtN3rsxb7rX1Hmf99XjAfis6eMF
uIq/emXwNXb5W/ARdvQs8PQBfIz9IwifdHgCqoPcvqzbuuTWYR/mkT+PWFp8
yXf7foMdXuAJv/KuiaMf9yrbn9x5oltmP4o6ui/m3Yh5q/ujzpt8l2+B1OWe
WOe0J+45c3dOqZmTcyty52Bf6Dr1qU7qgC7V7/SZ1mLdky7q6Xfy1rX4TlqP
7+T16FfWo1+Vf2oQfTM8q7ccvSu8oLd3XeHOsaL/NMdt7PJfMa93bV7v1Ll7
p9W63G/q8m6s07vx74w6uDeTDpuxryx3H+UbsU/zumfG5a2IpUF1cU7qMukO
V/eyHe11O9rTVziY5TvRrl9t/BJ+ucEpz06MqzsxLn3Db594eJ1hh6cf2P1u
/Pf4TpbvEg/PPXHwsoh+9Sd+cuvajXkqPM+x78W6816su8iN34t1pD7W3cEH
9bBueK//jHfhI3yApwPi4AU+wjv0TOaBd/AKz36n7x6uLs7NPoemTuue6tyP
edMsYtegfQ5gr51+ivaD6DfaP7zQz6ST/ePXMc/OdxYxT13EPJl9mXSFD/B0
SJx1Hsa63Bv32r1xLu6Bc3GOvX04V7hzsa+xmaO6jXB1S03f6mAf7rl99PNY
R5nHdwfvwrh5jBvnMS4tInZy71E7vIcP6u+c0Ne59eoPH9Uf7h2bx7s0z3SX
zlX94d5JsU719z37h9v32PSRmrq6w5jHvsxjX/q5V0ODtUHnog6TzvwfPdL5
Hx4BaDU=
                 "]]}}}}}, {}, {}, {{}, {}}, {{}, {}}}, AspectRatio -> 
          NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
          AxesLabel -> {None, None}, AxesOrigin -> {0., 0}, DisplayFunction -> 
          Identity, Frame -> {{False, False}, {False, False}}, 
          FrameLabel -> {{None, None}, {None, None}}, 
          FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
          GridLines -> {None, None}, GridLinesStyle -> Directive[
            GrayLevel[0.5, 0.4]], ImagePadding -> All, 
          Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                (Identity[#]& )[
                 Part[#, 1]], 
                (Identity[#]& )[
                 Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                (Identity[#]& )[
                 Part[#, 1]], 
                (Identity[#]& )[
                 Part[#, 2]]}& )}}, PlotRange -> {{0., 200.}, {0, 200.}}, 
          PlotRangeClipping -> True, PlotRangePadding -> {{
             Scaled[0.02], 
             Scaled[0.02]}, {
             Scaled[0.02], 
             Scaled[0.05]}}, Ticks -> {Automatic, Automatic}]], 
        "ExerciseOutput", Selectable -> False, Copyable -> False, Editable -> 
        False, ShowCellBracket -> False]]], " "}
   },
   GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Center}}},
   GridBoxBackground->{"Columns" -> {{
        RGBColor[1, 1, 1]}}},
   GridBoxSpacings->{"Columns" -> {{Automatic}}, "Rows" -> {{1}}}],
  FrameMargins->0]], "ExerciseOutput",
 Editable->False,
 Selectable->False,
 Deletable->False,
 CellFrame->{{1, 1}, {1, 1}},
 ShowCellBracket->False,
 CellFrameColor->RGBColor[0.85, 0.85, 0.85],
 LineBreakWithin->Automatic]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 "Obtenga una muestra aleatoria de 25 palabras de ",
 Cell[BoxData[
  RowBox[{
   ButtonBox["WordList",
    BaseStyle->"CodeLink"], "[", "]"}]], "InlineCode"],
 ".",
 StyleBox[ButtonBox["\[NonBreakingSpace]\[RightGuillemet]",
  Appearance->None,
  Evaluator->Automatic,
  Method->"Preemptive",
  ButtonFunction:>(SelectionMove[
     ButtonNotebook[], All, ButtonCell, AutoScroll -> False]; 
   FrontEndExecute[
     FrontEndToken[
      ButtonNotebook[], "OpenCloseGroup"]])],
  FontColor->RGBColor[1, 0.501961, 0]]
}], "Exercise",
 Editable->False,
 Selectable->False,
 Deletable->False,
 CellDingbat->Cell[
  "+30.7", "ExerciseNumber", FontColor -> 
   RGBColor[0.9019607843137255, 0.4117647058823529, 0.027450980392156862`]],
 ShowCellBracket->False],

Cell[BoxData[
 PaneBox[GridBox[{
    {" ", 
     StyleBox[
      RowBox[{"Expected", " ", 
       RowBox[{"output", ":"}]}],
      Editable->False,
      Selectable->False,
      StripOnInput->False,
      FontColor->RGBColor[0.45, 0.45, 0.45]], " "},
    {" ", 
     InterpretationBox[Cell[BoxData[
       RowBox[{"{", 
        RowBox[{"\<\"autopsy\"\>", ",", "\<\"reclassification\"\>", 
         ",", "\<\"advancement\"\>", ",", "\<\"forswear\"\>", 
         ",", "\<\"swimwear\"\>", ",", "\<\"cravat\"\>", 
         ",", "\<\"cyclone\"\>", ",", "\<\"taps\"\>", 
         ",", "\<\"diplomatic\"\>", ",", "\<\"effacement\"\>", 
         ",", "\<\"peaked\"\>", ",", "\<\"ponderously\"\>", 
         ",", "\<\"publication\"\>", ",", "\<\"immune\"\>", 
         ",", "\<\"outstay\"\>", ",", "\<\"petrol\"\>", ",", "\<\"deaf\"\>", 
         ",", "\<\"bilk\"\>", ",", "\<\"oddments\"\>", 
         ",", "\<\"scoreboard\"\>", ",", "\<\"lifeless\"\>", 
         ",", "\<\"debriefing\"\>", ",", "\<\"radiogram\"\>", 
         ",", "\<\"doting\"\>", ",", "\<\"inter\"\>"}], "}"}]], 
       "ExerciseOutput"],
      Apply[TextCell, 
       Cell[
        BoxData[
         RowBox[{"{", 
           
           RowBox[{"\"autopsy\"", ",", "\"reclassification\"", ",", 
             "\"advancement\"", ",", "\"forswear\"", ",", "\"swimwear\"", ",",
              "\"cravat\"", ",", "\"cyclone\"", ",", "\"taps\"", ",", 
             "\"diplomatic\"", ",", "\"effacement\"", ",", "\"peaked\"", ",", 
             "\"ponderously\"", ",", "\"publication\"", ",", "\"immune\"", 
             ",", "\"outstay\"", ",", "\"petrol\"", ",", "\"deaf\"", ",", 
             "\"bilk\"", ",", "\"oddments\"", ",", "\"scoreboard\"", ",", 
             "\"lifeless\"", ",", "\"debriefing\"", ",", "\"radiogram\"", ",",
              "\"doting\"", ",", "\"inter\""}], "}"}]], "ExerciseOutput", 
        Selectable -> False, Copyable -> False, Editable -> False, 
        ShowCellBracket -> False]]], " "}
   },
   GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Center}}},
   GridBoxBackground->{"Columns" -> {{
        RGBColor[1, 1, 1]}}},
   GridBoxSpacings->{"Columns" -> {{Automatic}}, "Rows" -> {{1}}}],
  FrameMargins->0]], "ExerciseOutput",
 Editable->False,
 Selectable->False,
 Deletable->False,
 CellFrame->{{1, 1}, {1, 1}},
 ShowCellBracket->False,
 CellFrameColor->RGBColor[0.85, 0.85, 0.85],
 LineBreakWithin->Automatic]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 "Intercale puntos en la cadena de caracteres \[OpenCurlyDoubleQuote]UNCLE\
\[CloseCurlyDoubleQuote] para obtener\[OpenCurlyDoubleQuote]U.N.C.L.E.\
\[CloseCurlyDoubleQuote].",
 StyleBox[ButtonBox["\[NonBreakingSpace]\[RightGuillemet]",
  Appearance->None,
  Evaluator->Automatic,
  Method->"Preemptive",
  ButtonFunction:>(SelectionMove[
     ButtonNotebook[], All, ButtonCell, AutoScroll -> False]; 
   FrontEndExecute[
     FrontEndToken[
      ButtonNotebook[], "OpenCloseGroup"]])],
  FontColor->RGBColor[1, 0.501961, 0]]
}], "Exercise",
 Editable->False,
 Selectable->False,
 Deletable->False,
 CellDingbat->Cell[
  "+30.8", "ExerciseNumber", FontColor -> 
   RGBColor[0.9019607843137255, 0.4117647058823529, 0.027450980392156862`]],
 ShowCellBracket->False],

Cell[BoxData[
 PaneBox[GridBox[{
    {" ", 
     StyleBox[
      RowBox[{"Expected", " ", 
       RowBox[{"output", ":"}]}],
      Editable->False,
      Selectable->False,
      StripOnInput->False,
      FontColor->RGBColor[0.45, 0.45, 0.45]], " "},
    {" ", 
     InterpretationBox[Cell[BoxData["\<\"U.N.C.L.E.\"\>"], "ExerciseOutput"],
      Apply[TextCell, 
       Cell[
        BoxData["\"U.N.C.L.E.\""], "ExerciseOutput", Selectable -> False, 
        Copyable -> False, Editable -> False, ShowCellBracket -> False]]], " "}
   },
   GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Center}}},
   GridBoxBackground->{"Columns" -> {{
        RGBColor[1, 1, 1]}}},
   GridBoxSpacings->{"Columns" -> {{Automatic}}, "Rows" -> {{1}}}],
  FrameMargins->0]], "ExerciseOutput",
 Editable->False,
 Selectable->False,
 Deletable->False,
 CellFrame->{{1, 1}, {1, 1}},
 ShowCellBracket->False,
 CellFrameColor->RGBColor[0.85, 0.85, 0.85],
 LineBreakWithin->Automatic]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 "Encuentre las letras que aparecen en sueco o en polaco, pero no en ingl\
\[EAcute]s.",
 StyleBox[ButtonBox["\[NonBreakingSpace]\[RightGuillemet]",
  Appearance->None,
  Evaluator->Automatic,
  Method->"Preemptive",
  ButtonFunction:>(SelectionMove[
     ButtonNotebook[], All, ButtonCell, AutoScroll -> False]; 
   FrontEndExecute[
     FrontEndToken[
      ButtonNotebook[], "OpenCloseGroup"]])],
  FontColor->RGBColor[1, 0.501961, 0]]
}], "Exercise",
 Editable->False,
 Selectable->False,
 Deletable->False,
 CellDingbat->Cell[
  "+30.9", "ExerciseNumber", FontColor -> 
   RGBColor[0.9019607843137255, 0.4117647058823529, 0.027450980392156862`]],
 ShowCellBracket->False],

Cell[BoxData[
 PaneBox[GridBox[{
    {" ", 
     StyleBox[
      RowBox[{"Expected", " ", 
       RowBox[{"output", ":"}]}],
      Editable->False,
      Selectable->False,
      StripOnInput->False,
      FontColor->RGBColor[0.45, 0.45, 0.45]], " "},
    {" ", 
     InterpretationBox[Cell[BoxData[
       RowBox[{"{", 
        RowBox[{"\<\"\:0105\"\>", ",", "\<\"\:0119\"\>", 
         ",", "\<\"\:0144\"\>", ",", "\<\"\:015b\"\>", ",", "\<\"\:017a\"\>", 
         ",", "\<\"\:017c\"\>", ",", "\<\"\[ARing]\"\>", 
         ",", "\<\"\[ADoubleDot]\"\>", ",", "\<\"\[CAcute]\"\>", 
         ",", "\<\"\[LSlash]\"\>", ",", "\<\"\[OAcute]\"\>", 
         ",", "\<\"\[ODoubleDot]\"\>"}], "}"}]], "ExerciseOutput"],
      Apply[TextCell, 
       Cell[
        BoxData[
         RowBox[{"{", 
           
           RowBox[{"\"\:0105\"", ",", "\"\:0119\"", ",", "\"\:0144\"", ",", 
             "\"\:015b\"", ",", "\"\:017a\"", ",", "\"\:017c\"", ",", 
             "\"\[ARing]\"", ",", "\"\[ADoubleDot]\"", ",", "\"\[CAcute]\"", 
             ",", "\"\[LSlash]\"", ",", "\"\[OAcute]\"", ",", 
             "\"\[ODoubleDot]\""}], "}"}]], "ExerciseOutput", Selectable -> 
        False, Copyable -> False, Editable -> False, ShowCellBracket -> 
        False]]], " "}
   },
   GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Center}}},
   GridBoxBackground->{"Columns" -> {{
        RGBColor[1, 1, 1]}}},
   GridBoxSpacings->{"Columns" -> {{Automatic}}, "Rows" -> {{1}}}],
  FrameMargins->0]], "ExerciseOutput",
 Editable->False,
 Selectable->False,
 Deletable->False,
 CellFrame->{{1, 1}, {1, 1}},
 ShowCellBracket->False,
 CellFrameColor->RGBColor[0.85, 0.85, 0.85],
 LineBreakWithin->Automatic]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 "Encuentre los pa\[IAcute]ses que pertenecen a la World Health Organization \
pero no a las Naciones Unidas.",
 StyleBox[ButtonBox["\[NonBreakingSpace]\[RightGuillemet]",
  Appearance->None,
  Evaluator->Automatic,
  Method->"Preemptive",
  ButtonFunction:>(SelectionMove[
     ButtonNotebook[], All, ButtonCell, AutoScroll -> False]; 
   FrontEndExecute[
     FrontEndToken[
      ButtonNotebook[], "OpenCloseGroup"]])],
  FontColor->RGBColor[1, 0.501961, 0]]
}], "Exercise",
 Editable->False,
 Selectable->False,
 Deletable->False,
 CellDingbat->Cell[
  "+30.10", "ExerciseNumber", FontColor -> 
   RGBColor[0.9019607843137255, 0.4117647058823529, 0.027450980392156862`]],
 ShowCellBracket->False],

Cell[BoxData[
 PaneBox[GridBox[{
    {" ", 
     StyleBox[
      RowBox[{"Expected", " ", 
       RowBox[{"output", ":"}]}],
      Editable->False,
      Selectable->False,
      StripOnInput->False,
      FontColor->RGBColor[0.45, 0.45, 0.45]], " "},
    {" ", 
     InterpretationBox[Cell[BoxData[
       RowBox[{"{", 
        RowBox[{
         TemplateBox[{"\"Cook Islands\"",RowBox[{"Entity", "[", 
             RowBox[{"\"Country\"", ",", "\"CookIslands\""}], "]"}],
           "\"Entity[\\\"Country\\\", \\\"CookIslands\\\"]\"","\"country\""},
          "Entity"], ",", 
         TemplateBox[{"\"Niue\"",RowBox[{"Entity", "[", 
             RowBox[{"\"Country\"", ",", "\"Niue\""}], "]"}],
           "\"Entity[\\\"Country\\\", \\\"Niue\\\"]\"","\"country\""},
          "Entity"]}], "}"}]], "ExerciseOutput"],
      Apply[TextCell, 
       Cell[
        BoxData[
         RowBox[{"{", 
           RowBox[{
             TemplateBox[{"\"Cook Islands\"", 
               RowBox[{"Entity", "[", 
                 RowBox[{"\"Country\"", ",", "\"CookIslands\""}], "]"}], 
               "\"Entity[\\\"Country\\\", \\\"CookIslands\\\"]\"", 
               "\"country\""}, "Entity"], ",", 
             TemplateBox[{"\"Niue\"", 
               RowBox[{"Entity", "[", 
                 RowBox[{"\"Country\"", ",", "\"Niue\""}], "]"}], 
               "\"Entity[\\\"Country\\\", \\\"Niue\\\"]\"", "\"country\""}, 
              "Entity"]}], "}"}]], "ExerciseOutput", Selectable -> False, 
        Copyable -> False, Editable -> False, ShowCellBracket -> False]]], " "}
   },
   GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Center}}},
   GridBoxBackground->{"Columns" -> {{
        RGBColor[1, 1, 1]}}},
   GridBoxSpacings->{"Columns" -> {{Automatic}}, "Rows" -> {{1}}}],
  FrameMargins->0]], "ExerciseOutput",
 Editable->False,
 Selectable->False,
 Deletable->False,
 CellFrame->{{1, 1}, {1, 1}},
 ShowCellBracket->False,
 CellFrameColor->RGBColor[0.85, 0.85, 0.85],
 LineBreakWithin->Automatic]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 "Haga la lista de todas las mezclas de dos de los colores rojo, verde y \
azul.",
 StyleBox[ButtonBox["\[NonBreakingSpace]\[RightGuillemet]",
  Appearance->None,
  Evaluator->Automatic,
  Method->"Preemptive",
  ButtonFunction:>(SelectionMove[
     ButtonNotebook[], All, ButtonCell, AutoScroll -> False]; 
   FrontEndExecute[
     FrontEndToken[
      ButtonNotebook[], "OpenCloseGroup"]])],
  FontColor->RGBColor[1, 0.501961, 0]]
}], "Exercise",
 Editable->False,
 Selectable->False,
 Deletable->False,
 CellDingbat->Cell[
  "+30.11", "ExerciseNumber", FontColor -> 
   RGBColor[0.9019607843137255, 0.4117647058823529, 0.027450980392156862`]],
 ShowCellBracket->False],

Cell[BoxData[
 PaneBox[GridBox[{
    {" ", 
     StyleBox[
      RowBox[{"Expected", " ", 
       RowBox[{"output", ":"}]}],
      Editable->False,
      Selectable->False,
      StripOnInput->False,
      FontColor->RGBColor[0.45, 0.45, 0.45]], " "},
    {" ", 
     InterpretationBox[Cell[BoxData[
       RowBox[{"{", 
        RowBox[{
         InterpretationBox[
          ButtonBox[
           TooltipBox[
            GraphicsBox[{
              {GrayLevel[0], RectangleBox[{0, 0}]}, 
              {GrayLevel[0], RectangleBox[{1, -1}]}, 
              {RGBColor[1, 0, 0], RectangleBox[{0, -1}, {2, 1}]}},
             AspectRatio->1,
             Frame->True,
             FrameStyle->RGBColor[0.6666666666666666, 0., 0.],
             FrameTicks->None,
             
             ImageSize->
              Dynamic[{
               Automatic, 
                1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}],
             PlotRangePadding->None],
            "RGBColor[1, 0, 0]"],
           Appearance->None,
           BaseStyle->{},
           BaselinePosition->Baseline,
           ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
             If[
              Not[
               AbsoluteCurrentValue["Deployed"]], 
              SelectionMove[Typeset`box$, All, Expression]; 
              FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
              FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 0, 0]; 
              FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
              MathLink`CallFrontEnd[
                FrontEnd`AttachCell[Typeset`box$, 
                 FrontEndResource["RGBColorValueSelector"], {
                 0, {Left, Bottom}}, {Left, Top}, 
                 "ClosingActions" -> {
                  "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
           
           DefaultBaseStyle->{},
           Evaluator->Automatic,
           Method->"Preemptive"],
          RGBColor[1, 0, 0],
          Editable->False,
          Selectable->False], ",", 
         InterpretationBox[
          ButtonBox[
           TooltipBox[
            GraphicsBox[{
              {GrayLevel[0], RectangleBox[{0, 0}]}, 
              {GrayLevel[0], RectangleBox[{1, -1}]}, 
              {RGBColor[
                Rational[1, 2], 
                Rational[1, 2], 0], RectangleBox[{0, -1}, {2, 1}]}},
             AspectRatio->1,
             Frame->True,
             FrameStyle->RGBColor[0.3333333333333333, 0.3333333333333333, 0.],
             
             FrameTicks->None,
             
             ImageSize->
              Dynamic[{
               Automatic, 
                1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}],
             PlotRangePadding->None],
            "RGBColor[1/2, 1/2, 0]"],
           Appearance->None,
           BaseStyle->{},
           BaselinePosition->Baseline,
           ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
             If[
              Not[
               AbsoluteCurrentValue["Deployed"]], 
              SelectionMove[Typeset`box$, All, Expression]; 
              FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
              FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[
                 Rational[1, 2], 
                 Rational[1, 2], 0]; 
              FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
              MathLink`CallFrontEnd[
                FrontEnd`AttachCell[Typeset`box$, 
                 FrontEndResource["RGBColorValueSelector"], {
                 0, {Left, Bottom}}, {Left, Top}, 
                 "ClosingActions" -> {
                  "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
           
           DefaultBaseStyle->{},
           Evaluator->Automatic,
           Method->"Preemptive"],
          RGBColor[
           Rational[1, 2], 
           Rational[1, 2], 0],
          Editable->False,
          Selectable->False], ",", 
         InterpretationBox[
          ButtonBox[
           TooltipBox[
            GraphicsBox[{
              {GrayLevel[0], RectangleBox[{0, 0}]}, 
              {GrayLevel[0], RectangleBox[{1, -1}]}, 
              {RGBColor[
                Rational[1, 2], 0, 
                Rational[1, 2]], RectangleBox[{0, -1}, {2, 1}]}},
             AspectRatio->1,
             Frame->True,
             FrameStyle->RGBColor[0.3333333333333333, 0., 0.3333333333333333],
             
             FrameTicks->None,
             
             ImageSize->
              Dynamic[{
               Automatic, 
                1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}],
             PlotRangePadding->None],
            "RGBColor[1/2, 0, 1/2]"],
           Appearance->None,
           BaseStyle->{},
           BaselinePosition->Baseline,
           ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
             If[
              Not[
               AbsoluteCurrentValue["Deployed"]], 
              SelectionMove[Typeset`box$, All, Expression]; 
              FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
              FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[
                 Rational[1, 2], 0, 
                 Rational[1, 2]]; 
              FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
              MathLink`CallFrontEnd[
                FrontEnd`AttachCell[Typeset`box$, 
                 FrontEndResource["RGBColorValueSelector"], {
                 0, {Left, Bottom}}, {Left, Top}, 
                 "ClosingActions" -> {
                  "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
           
           DefaultBaseStyle->{},
           Evaluator->Automatic,
           Method->"Preemptive"],
          RGBColor[
           Rational[1, 2], 0, 
           Rational[1, 2]],
          Editable->False,
          Selectable->False], ",", 
         InterpretationBox[
          ButtonBox[
           TooltipBox[
            GraphicsBox[{
              {GrayLevel[0], RectangleBox[{0, 0}]}, 
              {GrayLevel[0], RectangleBox[{1, -1}]}, 
              {RGBColor[
                Rational[1, 2], 
                Rational[1, 2], 0], RectangleBox[{0, -1}, {2, 1}]}},
             AspectRatio->1,
             Frame->True,
             FrameStyle->RGBColor[0.3333333333333333, 0.3333333333333333, 0.],
             
             FrameTicks->None,
             
             ImageSize->
              Dynamic[{
               Automatic, 
                1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}],
             PlotRangePadding->None],
            "RGBColor[1/2, 1/2, 0]"],
           Appearance->None,
           BaseStyle->{},
           BaselinePosition->Baseline,
           ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
             If[
              Not[
               AbsoluteCurrentValue["Deployed"]], 
              SelectionMove[Typeset`box$, All, Expression]; 
              FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
              FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[
                 Rational[1, 2], 
                 Rational[1, 2], 0]; 
              FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
              MathLink`CallFrontEnd[
                FrontEnd`AttachCell[Typeset`box$, 
                 FrontEndResource["RGBColorValueSelector"], {
                 0, {Left, Bottom}}, {Left, Top}, 
                 "ClosingActions" -> {
                  "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
           
           DefaultBaseStyle->{},
           Evaluator->Automatic,
           Method->"Preemptive"],
          RGBColor[
           Rational[1, 2], 
           Rational[1, 2], 0],
          Editable->False,
          Selectable->False], ",", 
         InterpretationBox[
          ButtonBox[
           TooltipBox[
            GraphicsBox[{
              {GrayLevel[0], RectangleBox[{0, 0}]}, 
              {GrayLevel[0], RectangleBox[{1, -1}]}, 
              {RGBColor[0, 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
             AspectRatio->1,
             Frame->True,
             FrameStyle->RGBColor[0., 0.6666666666666666, 0.],
             FrameTicks->None,
             
             ImageSize->
              Dynamic[{
               Automatic, 
                1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}],
             PlotRangePadding->None],
            "RGBColor[0, 1, 0]"],
           Appearance->None,
           BaseStyle->{},
           BaselinePosition->Baseline,
           ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
             If[
              Not[
               AbsoluteCurrentValue["Deployed"]], 
              SelectionMove[Typeset`box$, All, Expression]; 
              FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
              FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 1, 0]; 
              FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
              MathLink`CallFrontEnd[
                FrontEnd`AttachCell[Typeset`box$, 
                 FrontEndResource["RGBColorValueSelector"], {
                 0, {Left, Bottom}}, {Left, Top}, 
                 "ClosingActions" -> {
                  "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
           
           DefaultBaseStyle->{},
           Evaluator->Automatic,
           Method->"Preemptive"],
          RGBColor[0, 1, 0],
          Editable->False,
          Selectable->False], ",", 
         InterpretationBox[
          ButtonBox[
           TooltipBox[
            GraphicsBox[{
              {GrayLevel[0], RectangleBox[{0, 0}]}, 
              {GrayLevel[0], RectangleBox[{1, -1}]}, 
              {RGBColor[0, 
                Rational[1, 2], 
                Rational[1, 2]], RectangleBox[{0, -1}, {2, 1}]}},
             AspectRatio->1,
             Frame->True,
             FrameStyle->RGBColor[0., 0.3333333333333333, 0.3333333333333333],
             
             FrameTicks->None,
             
             ImageSize->
              Dynamic[{
               Automatic, 
                1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}],
             PlotRangePadding->None],
            "RGBColor[0, 1/2, 1/2]"],
           Appearance->None,
           BaseStyle->{},
           BaselinePosition->Baseline,
           ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
             If[
              Not[
               AbsoluteCurrentValue["Deployed"]], 
              SelectionMove[Typeset`box$, All, Expression]; 
              FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
              FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 
                 Rational[1, 2], 
                 Rational[1, 2]]; 
              FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
              MathLink`CallFrontEnd[
                FrontEnd`AttachCell[Typeset`box$, 
                 FrontEndResource["RGBColorValueSelector"], {
                 0, {Left, Bottom}}, {Left, Top}, 
                 "ClosingActions" -> {
                  "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
           
           DefaultBaseStyle->{},
           Evaluator->Automatic,
           Method->"Preemptive"],
          RGBColor[0, 
           Rational[1, 2], 
           Rational[1, 2]],
          Editable->False,
          Selectable->False], ",", 
         InterpretationBox[
          ButtonBox[
           TooltipBox[
            GraphicsBox[{
              {GrayLevel[0], RectangleBox[{0, 0}]}, 
              {GrayLevel[0], RectangleBox[{1, -1}]}, 
              {RGBColor[
                Rational[1, 2], 0, 
                Rational[1, 2]], RectangleBox[{0, -1}, {2, 1}]}},
             AspectRatio->1,
             Frame->True,
             FrameStyle->RGBColor[0.3333333333333333, 0., 0.3333333333333333],
             
             FrameTicks->None,
             
             ImageSize->
              Dynamic[{
               Automatic, 
                1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}],
             PlotRangePadding->None],
            "RGBColor[1/2, 0, 1/2]"],
           Appearance->None,
           BaseStyle->{},
           BaselinePosition->Baseline,
           ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
             If[
              Not[
               AbsoluteCurrentValue["Deployed"]], 
              SelectionMove[Typeset`box$, All, Expression]; 
              FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
              FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[
                 Rational[1, 2], 0, 
                 Rational[1, 2]]; 
              FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
              MathLink`CallFrontEnd[
                FrontEnd`AttachCell[Typeset`box$, 
                 FrontEndResource["RGBColorValueSelector"], {
                 0, {Left, Bottom}}, {Left, Top}, 
                 "ClosingActions" -> {
                  "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
           
           DefaultBaseStyle->{},
           Evaluator->Automatic,
           Method->"Preemptive"],
          RGBColor[
           Rational[1, 2], 0, 
           Rational[1, 2]],
          Editable->False,
          Selectable->False], ",", 
         InterpretationBox[
          ButtonBox[
           TooltipBox[
            GraphicsBox[{
              {GrayLevel[0], RectangleBox[{0, 0}]}, 
              {GrayLevel[0], RectangleBox[{1, -1}]}, 
              {RGBColor[0, 
                Rational[1, 2], 
                Rational[1, 2]], RectangleBox[{0, -1}, {2, 1}]}},
             AspectRatio->1,
             Frame->True,
             FrameStyle->RGBColor[0., 0.3333333333333333, 0.3333333333333333],
             
             FrameTicks->None,
             
             ImageSize->
              Dynamic[{
               Automatic, 
                1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}],
             PlotRangePadding->None],
            "RGBColor[0, 1/2, 1/2]"],
           Appearance->None,
           BaseStyle->{},
           BaselinePosition->Baseline,
           ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
             If[
              Not[
               AbsoluteCurrentValue["Deployed"]], 
              SelectionMove[Typeset`box$, All, Expression]; 
              FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
              FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 
                 Rational[1, 2], 
                 Rational[1, 2]]; 
              FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
              MathLink`CallFrontEnd[
                FrontEnd`AttachCell[Typeset`box$, 
                 FrontEndResource["RGBColorValueSelector"], {
                 0, {Left, Bottom}}, {Left, Top}, 
                 "ClosingActions" -> {
                  "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
           
           DefaultBaseStyle->{},
           Evaluator->Automatic,
           Method->"Preemptive"],
          RGBColor[0, 
           Rational[1, 2], 
           Rational[1, 2]],
          Editable->False,
          Selectable->False], ",", 
         InterpretationBox[
          ButtonBox[
           TooltipBox[
            GraphicsBox[{
              {GrayLevel[0], RectangleBox[{0, 0}]}, 
              {GrayLevel[0], RectangleBox[{1, -1}]}, 
              {RGBColor[0, 0, 1], RectangleBox[{0, -1}, {2, 1}]}},
             AspectRatio->1,
             Frame->True,
             FrameStyle->RGBColor[0., 0., 0.6666666666666666],
             FrameTicks->None,
             
             ImageSize->
              Dynamic[{
               Automatic, 
                1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}],
             PlotRangePadding->None],
            "RGBColor[0, 0, 1]"],
           Appearance->None,
           BaseStyle->{},
           BaselinePosition->Baseline,
           ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
             If[
              Not[
               AbsoluteCurrentValue["Deployed"]], 
              SelectionMove[Typeset`box$, All, Expression]; 
              FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
              FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 0, 1]; 
              FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
              MathLink`CallFrontEnd[
                FrontEnd`AttachCell[Typeset`box$, 
                 FrontEndResource["RGBColorValueSelector"], {
                 0, {Left, Bottom}}, {Left, Top}, 
                 "ClosingActions" -> {
                  "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
           
           DefaultBaseStyle->{},
           Evaluator->Automatic,
           Method->"Preemptive"],
          RGBColor[0, 0, 1],
          Editable->False,
          Selectable->False]}], "}"}]], "ExerciseOutput"],
      Apply[TextCell, 
       Cell[
        BoxData[
         RowBox[{"{", 
           RowBox[{
             InterpretationBox[
              ButtonBox[
               TooltipBox[
                GraphicsBox[{{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}}, {{
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}}, {{
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}}, AspectRatio -> 1, Frame -> 
                 True, FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                 FrameTicks -> None, ImageSize -> 
                 Dynamic[{
                   Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], PlotRangePadding -> None], 
                "RGBColor[1, 0, 0]"], Appearance -> None, BaseStyle -> {}, 
               BaselinePosition -> Baseline, ButtonFunction :> 
               With[{Typeset`box$ = EvaluationBox[]}, 
                 If[
                  Not[
                   AbsoluteCurrentValue["Deployed"]], 
                  SelectionMove[Typeset`box$, All, Expression]; 
                  FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                  FrontEnd`Private`$ColorSelectorInitialColor = 
                   RGBColor[1, 0, 0]; 
                  FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                  MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], DefaultBaseStyle -> {}, Evaluator -> 
               Automatic, Method -> "Preemptive"], 
              RGBColor[1, 0, 0], Editable -> False, Selectable -> False], ",", 
             InterpretationBox[
              ButtonBox[
               TooltipBox[
                GraphicsBox[{{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}}, {{
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}}, {{
                    RGBColor[
                    Rational[1, 2], 
                    Rational[1, 2], 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}}, AspectRatio -> 1, Frame -> 
                 True, FrameStyle -> 
                 RGBColor[0.3333333333333333, 0.3333333333333333, 0.], 
                 FrameTicks -> None, ImageSize -> 
                 Dynamic[{
                   Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], PlotRangePadding -> None], 
                "RGBColor[1/2, 1/2, 0]"], Appearance -> None, BaseStyle -> {},
                BaselinePosition -> Baseline, ButtonFunction :> 
               With[{Typeset`box$ = EvaluationBox[]}, 
                 If[
                  Not[
                   AbsoluteCurrentValue["Deployed"]], 
                  SelectionMove[Typeset`box$, All, Expression]; 
                  FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                  FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[
                    Rational[1, 2], 
                    Rational[1, 2], 0]; 
                  FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                  MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], DefaultBaseStyle -> {}, Evaluator -> 
               Automatic, Method -> "Preemptive"], 
              RGBColor[
               Rational[1, 2], 
               Rational[1, 2], 0], Editable -> False, Selectable -> False], 
             ",", 
             InterpretationBox[
              ButtonBox[
               TooltipBox[
                GraphicsBox[{{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}}, {{
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}}, {{
                    RGBColor[
                    Rational[1, 2], 0, 
                    Rational[1, 2]], 
                    RectangleBox[{0, -1}, {2, 1}]}}}, AspectRatio -> 1, Frame -> 
                 True, FrameStyle -> 
                 RGBColor[0.3333333333333333, 0., 0.3333333333333333], 
                 FrameTicks -> None, ImageSize -> 
                 Dynamic[{
                   Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], PlotRangePadding -> None], 
                "RGBColor[1/2, 0, 1/2]"], Appearance -> None, BaseStyle -> {},
                BaselinePosition -> Baseline, ButtonFunction :> 
               With[{Typeset`box$ = EvaluationBox[]}, 
                 If[
                  Not[
                   AbsoluteCurrentValue["Deployed"]], 
                  SelectionMove[Typeset`box$, All, Expression]; 
                  FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                  FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[
                    Rational[1, 2], 0, 
                    Rational[1, 2]]; 
                  FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                  MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], DefaultBaseStyle -> {}, Evaluator -> 
               Automatic, Method -> "Preemptive"], 
              RGBColor[
               Rational[1, 2], 0, 
               Rational[1, 2]], Editable -> False, Selectable -> False], ",", 
             
             InterpretationBox[
              ButtonBox[
               TooltipBox[
                GraphicsBox[{{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}}, {{
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}}, {{
                    RGBColor[
                    Rational[1, 2], 
                    Rational[1, 2], 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}}, AspectRatio -> 1, Frame -> 
                 True, FrameStyle -> 
                 RGBColor[0.3333333333333333, 0.3333333333333333, 0.], 
                 FrameTicks -> None, ImageSize -> 
                 Dynamic[{
                   Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], PlotRangePadding -> None], 
                "RGBColor[1/2, 1/2, 0]"], Appearance -> None, BaseStyle -> {},
                BaselinePosition -> Baseline, ButtonFunction :> 
               With[{Typeset`box$ = EvaluationBox[]}, 
                 If[
                  Not[
                   AbsoluteCurrentValue["Deployed"]], 
                  SelectionMove[Typeset`box$, All, Expression]; 
                  FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                  FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[
                    Rational[1, 2], 
                    Rational[1, 2], 0]; 
                  FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                  MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], DefaultBaseStyle -> {}, Evaluator -> 
               Automatic, Method -> "Preemptive"], 
              RGBColor[
               Rational[1, 2], 
               Rational[1, 2], 0], Editable -> False, Selectable -> False], 
             ",", 
             InterpretationBox[
              ButtonBox[
               TooltipBox[
                GraphicsBox[{{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}}, {{
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}}, {{
                    RGBColor[0, 1, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}}, AspectRatio -> 1, Frame -> 
                 True, FrameStyle -> RGBColor[0., 0.6666666666666666, 0.], 
                 FrameTicks -> None, ImageSize -> 
                 Dynamic[{
                   Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], PlotRangePadding -> None], 
                "RGBColor[0, 1, 0]"], Appearance -> None, BaseStyle -> {}, 
               BaselinePosition -> Baseline, ButtonFunction :> 
               With[{Typeset`box$ = EvaluationBox[]}, 
                 If[
                  Not[
                   AbsoluteCurrentValue["Deployed"]], 
                  SelectionMove[Typeset`box$, All, Expression]; 
                  FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                  FrontEnd`Private`$ColorSelectorInitialColor = 
                   RGBColor[0, 1, 0]; 
                  FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                  MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], DefaultBaseStyle -> {}, Evaluator -> 
               Automatic, Method -> "Preemptive"], 
              RGBColor[0, 1, 0], Editable -> False, Selectable -> False], ",", 
             InterpretationBox[
              ButtonBox[
               TooltipBox[
                GraphicsBox[{{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}}, {{
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}}, {{
                    RGBColor[0, 
                    Rational[1, 2], 
                    Rational[1, 2]], 
                    RectangleBox[{0, -1}, {2, 1}]}}}, AspectRatio -> 1, Frame -> 
                 True, FrameStyle -> 
                 RGBColor[0., 0.3333333333333333, 0.3333333333333333], 
                 FrameTicks -> None, ImageSize -> 
                 Dynamic[{
                   Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], PlotRangePadding -> None], 
                "RGBColor[0, 1/2, 1/2]"], Appearance -> None, BaseStyle -> {},
                BaselinePosition -> Baseline, ButtonFunction :> 
               With[{Typeset`box$ = EvaluationBox[]}, 
                 If[
                  Not[
                   AbsoluteCurrentValue["Deployed"]], 
                  SelectionMove[Typeset`box$, All, Expression]; 
                  FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                  FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 
                    Rational[1, 2], 
                    Rational[1, 2]]; 
                  FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                  MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], DefaultBaseStyle -> {}, Evaluator -> 
               Automatic, Method -> "Preemptive"], 
              RGBColor[0, 
               Rational[1, 2], 
               Rational[1, 2]], Editable -> False, Selectable -> False], ",", 
             
             InterpretationBox[
              ButtonBox[
               TooltipBox[
                GraphicsBox[{{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}}, {{
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}}, {{
                    RGBColor[
                    Rational[1, 2], 0, 
                    Rational[1, 2]], 
                    RectangleBox[{0, -1}, {2, 1}]}}}, AspectRatio -> 1, Frame -> 
                 True, FrameStyle -> 
                 RGBColor[0.3333333333333333, 0., 0.3333333333333333], 
                 FrameTicks -> None, ImageSize -> 
                 Dynamic[{
                   Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], PlotRangePadding -> None], 
                "RGBColor[1/2, 0, 1/2]"], Appearance -> None, BaseStyle -> {},
                BaselinePosition -> Baseline, ButtonFunction :> 
               With[{Typeset`box$ = EvaluationBox[]}, 
                 If[
                  Not[
                   AbsoluteCurrentValue["Deployed"]], 
                  SelectionMove[Typeset`box$, All, Expression]; 
                  FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                  FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[
                    Rational[1, 2], 0, 
                    Rational[1, 2]]; 
                  FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                  MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], DefaultBaseStyle -> {}, Evaluator -> 
               Automatic, Method -> "Preemptive"], 
              RGBColor[
               Rational[1, 2], 0, 
               Rational[1, 2]], Editable -> False, Selectable -> False], ",", 
             
             InterpretationBox[
              ButtonBox[
               TooltipBox[
                GraphicsBox[{{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}}, {{
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}}, {{
                    RGBColor[0, 
                    Rational[1, 2], 
                    Rational[1, 2]], 
                    RectangleBox[{0, -1}, {2, 1}]}}}, AspectRatio -> 1, Frame -> 
                 True, FrameStyle -> 
                 RGBColor[0., 0.3333333333333333, 0.3333333333333333], 
                 FrameTicks -> None, ImageSize -> 
                 Dynamic[{
                   Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], PlotRangePadding -> None], 
                "RGBColor[0, 1/2, 1/2]"], Appearance -> None, BaseStyle -> {},
                BaselinePosition -> Baseline, ButtonFunction :> 
               With[{Typeset`box$ = EvaluationBox[]}, 
                 If[
                  Not[
                   AbsoluteCurrentValue["Deployed"]], 
                  SelectionMove[Typeset`box$, All, Expression]; 
                  FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                  FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 
                    Rational[1, 2], 
                    Rational[1, 2]]; 
                  FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                  MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], DefaultBaseStyle -> {}, Evaluator -> 
               Automatic, Method -> "Preemptive"], 
              RGBColor[0, 
               Rational[1, 2], 
               Rational[1, 2]], Editable -> False, Selectable -> False], ",", 
             
             InterpretationBox[
              ButtonBox[
               TooltipBox[
                GraphicsBox[{{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}}, {{
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}}, {{
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}}, AspectRatio -> 1, Frame -> 
                 True, FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                 FrameTicks -> None, ImageSize -> 
                 Dynamic[{
                   Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], PlotRangePadding -> None], 
                "RGBColor[0, 0, 1]"], Appearance -> None, BaseStyle -> {}, 
               BaselinePosition -> Baseline, ButtonFunction :> 
               With[{Typeset`box$ = EvaluationBox[]}, 
                 If[
                  Not[
                   AbsoluteCurrentValue["Deployed"]], 
                  SelectionMove[Typeset`box$, All, Expression]; 
                  FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                  FrontEnd`Private`$ColorSelectorInitialColor = 
                   RGBColor[0, 0, 1]; 
                  FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                  MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], DefaultBaseStyle -> {}, Evaluator -> 
               Automatic, Method -> "Preemptive"], 
              RGBColor[0, 0, 1], Editable -> False, Selectable -> False]}], 
           "}"}]], "ExerciseOutput", Selectable -> False, Copyable -> False, 
        Editable -> False, ShowCellBracket -> False]]], " "}
   },
   GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Center}}},
   GridBoxBackground->{"Columns" -> {{
        RGBColor[1, 1, 1]}}},
   GridBoxSpacings->{"Columns" -> {{Automatic}}, "Rows" -> {{1}}}],
  FrameMargins->0]], "ExerciseOutput",
 Editable->False,
 Selectable->False,
 Deletable->False,
 CellFrame->{{1, 1}, {1, 1}},
 ShowCellBracket->False,
 CellFrameColor->RGBColor[0.85, 0.85, 0.85],
 LineBreakWithin->Automatic]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 "Haga una lista de gr\[AAcute]ficos de arreglo, cada uno con 50 renglones y \
tama\[NTilde]o de imagen 50, de las tuplas sucesivas de tama\[NTilde]o 8, con \
el 0 y el 1.",
 StyleBox[ButtonBox["\[NonBreakingSpace]\[RightGuillemet]",
  Appearance->None,
  Evaluator->Automatic,
  Method->"Preemptive",
  ButtonFunction:>(SelectionMove[
     ButtonNotebook[], All, ButtonCell, AutoScroll -> False]; 
   FrontEndExecute[
     FrontEndToken[
      ButtonNotebook[], "OpenCloseGroup"]])],
  FontColor->RGBColor[1, 0.501961, 0]]
}], "Exercise",
 Editable->False,
 Selectable->False,
 Deletable->False,
 CellDingbat->Cell[
  "+30.12", "ExerciseNumber", FontColor -> 
   RGBColor[0.9019607843137255, 0.4117647058823529, 0.027450980392156862`]],
 ShowCellBracket->False],

Cell[BoxData[
 PaneBox[GridBox[{
    {" ", 
     StyleBox[
      RowBox[{"Expected", " ", 
       RowBox[{"output", ":"}]}],
      Editable->False,
      Selectable->False,
      StripOnInput->False,
      FontColor->RGBColor[0.45, 0.45, 0.45]], " "},
    {" ", 
     InterpretationBox[Cell[BoxData[
       RowBox[{"{", 
        RowBox[{
         GraphicsBox[RasterBox[CompressedData["
1:eJxdj8sRgCAQQ/M82YYtWIol0AD930QI4OSws5+QD1epTzkk3a3OVvAVs/dR
444MtebdOMYxjnHzMX9LrydjN3/XAvssG8uGspETykl83mL/DxCBiYBEICIA
YUgYEIKEAEEgHhCHObzRVwLu
           "], {{0, 0}, {8, 50}}, {0, 1}],
          Frame->Automatic,
          FrameLabel->{None, None},
          FrameTicks->{{None, None}, {None, None}},
          GridLinesStyle->Directive[
            GrayLevel[0.5, 0.4]],
          ImageSize->50,
          
          Method->{
           "DefaultBoundaryStyle" -> Automatic, "DefaultPlotStyle" -> 
            Automatic}], ",", 
         GraphicsBox[RasterBox[CompressedData["
1:eJxVkMENgDAMA21erMEKjMIIXYD9f1TtOS2CKFjEvrRXe592SLp7nb3cX7u6
ZzearzE3OtroTPLfilOVoJ8DXc/U+I0/LviGb/hrOisvtPcU+IZv+N7YGVIN
h8rxJ11sQZhqq4Rrh2RLorip/a7rFFkq5Q+1UwK8
           "], {{0, 0}, {8, 50}}, {0,
            1}],
          Frame->Automatic,
          FrameLabel->{None, None},
          FrameTicks->{{None, None}, {None, None}},
          GridLinesStyle->Directive[
            GrayLevel[0.5, 0.4]],
          ImageSize->50,
          
          Method->{
           "DefaultBoundaryStyle" -> Automatic, "DefaultPlotStyle" -> 
            Automatic}], ",", 
         GraphicsBox[RasterBox[CompressedData["
1:eJxNkcERgzAMBPfyShtpIaWkBBpI/78QvIc1oJHxCp3Ofh3fz/EA3mc8zyDh
/5j70uXK8vTj4leVkFlE5JFHnjZZPP6vfsXtLIgbSVdL3uQwzKGIXCs4UrVH
1ATDDDoaR3Fbym7NKA3zENib9cj2Wk2y476B/ACzhQKs
           "], {{0, 0}, {8, 
           50}}, {0, 1}],
          Frame->Automatic,
          FrameLabel->{None, None},
          FrameTicks->{{None, None}, {None, None}},
          GridLinesStyle->Directive[
            GrayLevel[0.5, 0.4]],
          ImageSize->50,
          
          Method->{
           "DefaultBoundaryStyle" -> Automatic, "DefaultPlotStyle" -> 
            Automatic}], ",", 
         GraphicsBox[RasterBox[CompressedData["
1:eJxVkNsVgDAIQxO/XMMVHMURXMD9/3z0pmB7gENDCGU7r+NcJO2PrXqP7Yoe
0eQeucENbvCUfjDeJHBGq2lprZJQp7g5WVEEh98mTccou5MnoxAuOHz067XE
U6WqZiFmEWzv16WGdvurSnta1LIq35i5Apo=
           "], {{0, 0}, {8, 50}}, {0, 1}],
          Frame->Automatic,
          FrameLabel->{None, None},
          FrameTicks->{{None, None}, {None, None}},
          GridLinesStyle->Directive[
            GrayLevel[0.5, 0.4]],
          ImageSize->50,
          
          Method->{
           "DefaultBoundaryStyle" -> Automatic, "DefaultPlotStyle" -> 
            Automatic}], ",", 
         GraphicsBox[RasterBox[CompressedData["
1:eJxVj8sNwDAIQ3FPXaMrdJSOkAW6/61R8wwhEgrC+MM13mccEXHPOoMn+f8b
eUwrJmKx1sEZaDUb3WVZ8JQDty38kg81G/hlB+5YMiWvUIthyYK0xwr4Fc9L
jg2eccF91uJv8S2e3urngPvsyf8AdrECeA==
           "], {{0, 0}, {8, 50}}, {0, 1}],
          Frame->Automatic,
          FrameLabel->{None, None},
          FrameTicks->{{None, None}, {None, None}},
          GridLinesStyle->Directive[
            GrayLevel[0.5, 0.4]],
          ImageSize->50,
          
          Method->{
           "DefaultBoundaryStyle" -> Automatic, "DefaultPlotStyle" -> 
            Automatic}]}], "}"}]], "ExerciseOutput"],
      Apply[TextCell, 
       Cell[
        BoxData[
         RowBox[{"{", 
           RowBox[{
             GraphicsBox[
              RasterBox[CompressedData["
1:eJxdj8sRgCAQQ/M82YYtWIol0AD930QI4OSws5+QD1epTzkk3a3OVvAVs/dR
444MtebdOMYxjnHzMX9LrydjN3/XAvssG8uGspETykl83mL/DxCBiYBEICIA
YUgYEIKEAEEgHhCHObzRVwLu
               "], {{0, 0}, {8, 50}}, {0, 1}], Frame -> 
              Automatic, FrameLabel -> {None, None}, 
              FrameTicks -> {{None, None}, {None, None}}, GridLinesStyle -> 
              Directive[
                GrayLevel[0.5, 0.4]], ImageSize -> 50, 
              Method -> {
               "DefaultBoundaryStyle" -> Automatic, "DefaultPlotStyle" -> 
                Automatic}], ",", 
             GraphicsBox[
              RasterBox[CompressedData["
1:eJxVkMENgDAMA21erMEKjMIIXYD9f1TtOS2CKFjEvrRXe592SLp7nb3cX7u6
ZzearzE3OtroTPLfilOVoJ8DXc/U+I0/LviGb/hrOisvtPcU+IZv+N7YGVIN
h8rxJ11sQZhqq4Rrh2RLorip/a7rFFkq5Q+1UwK8
               "], {{0, 0}, {8, 
               50}}, {0, 1}], Frame -> Automatic, FrameLabel -> {None, None}, 
              FrameTicks -> {{None, None}, {None, None}}, GridLinesStyle -> 
              Directive[
                GrayLevel[0.5, 0.4]], ImageSize -> 50, 
              Method -> {
               "DefaultBoundaryStyle" -> Automatic, "DefaultPlotStyle" -> 
                Automatic}], ",", 
             GraphicsBox[
              RasterBox[CompressedData["
1:eJxNkcERgzAMBPfyShtpIaWkBBpI/78QvIc1oJHxCp3Ofh3fz/EA3mc8zyDh
/5j70uXK8vTj4leVkFlE5JFHnjZZPP6vfsXtLIgbSVdL3uQwzKGIXCs4UrVH
1ATDDDoaR3Fbym7NKA3zENib9cj2Wk2y476B/ACzhQKs
               "], {{0, 0}, {8, 
               50}}, {0, 1}], Frame -> Automatic, FrameLabel -> {None, None}, 
              FrameTicks -> {{None, None}, {None, None}}, GridLinesStyle -> 
              Directive[
                GrayLevel[0.5, 0.4]], ImageSize -> 50, 
              Method -> {
               "DefaultBoundaryStyle" -> Automatic, "DefaultPlotStyle" -> 
                Automatic}], ",", 
             GraphicsBox[
              RasterBox[CompressedData["
1:eJxVkNsVgDAIQxO/XMMVHMURXMD9/3z0pmB7gENDCGU7r+NcJO2PrXqP7Yoe
0eQeucENbvCUfjDeJHBGq2lprZJQp7g5WVEEh98mTccou5MnoxAuOHz067XE
U6WqZiFmEWzv16WGdvurSnta1LIq35i5Apo=
               "], {{0, 0}, {8, 50}}, {0,
                1}], Frame -> Automatic, FrameLabel -> {None, None}, 
              FrameTicks -> {{None, None}, {None, None}}, GridLinesStyle -> 
              Directive[
                GrayLevel[0.5, 0.4]], ImageSize -> 50, 
              Method -> {
               "DefaultBoundaryStyle" -> Automatic, "DefaultPlotStyle" -> 
                Automatic}], ",", 
             GraphicsBox[
              RasterBox[CompressedData["
1:eJxVj8sNwDAIQ3FPXaMrdJSOkAW6/61R8wwhEgrC+MM13mccEXHPOoMn+f8b
eUwrJmKx1sEZaDUb3WVZ8JQDty38kg81G/hlB+5YMiWvUIthyYK0xwr4Fc9L
jg2eccF91uJv8S2e3urngPvsyf8AdrECeA==
               "], {{0, 0}, {8, 50}}, {0,
                1}], Frame -> Automatic, FrameLabel -> {None, None}, 
              FrameTicks -> {{None, None}, {None, None}}, GridLinesStyle -> 
              Directive[
                GrayLevel[0.5, 0.4]], ImageSize -> 50, 
              Method -> {
               "DefaultBoundaryStyle" -> Automatic, "DefaultPlotStyle" -> 
                Automatic}]}], "}"}]], "ExerciseOutput", Selectable -> False, 
        Copyable -> False, Editable -> False, ShowCellBracket -> False]]], " "}
   },
   GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Center}}},
   GridBoxBackground->{"Columns" -> {{
        RGBColor[1, 1, 1]}}},
   GridBoxSpacings->{"Columns" -> {{Automatic}}, "Rows" -> {{1}}}],
  FrameMargins->0]], "ExerciseOutput",
 Editable->False,
 Selectable->False,
 Deletable->False,
 CellFrame->{{1, 1}, {1, 1}},
 ShowCellBracket->False,
 CellFrameColor->RGBColor[0.85, 0.85, 0.85],
 LineBreakWithin->Automatic]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 "Genere 1000 secuencias aleatorias de 4 letras, y hacer la lista de aquellas \
que aparezcan en ",
 Cell[BoxData[
  RowBox[{
   ButtonBox["WordList",
    BaseStyle->"CodeLink"], "[", " ", "]"}]], "InlineCode"],
 ". ",
 StyleBox[ButtonBox["\[NonBreakingSpace]\[RightGuillemet]",
  Appearance->None,
  Evaluator->Automatic,
  Method->"Preemptive",
  ButtonFunction:>(SelectionMove[
     ButtonNotebook[], All, ButtonCell, AutoScroll -> False]; 
   FrontEndExecute[
     FrontEndToken[
      ButtonNotebook[], "OpenCloseGroup"]])],
  FontColor->RGBColor[1, 0.501961, 0]]
}], "Exercise",
 Editable->False,
 Selectable->False,
 Deletable->False,
 CellDingbat->Cell[
  "+30.13", "ExerciseNumber", FontColor -> 
   RGBColor[0.9019607843137255, 0.4117647058823529, 0.027450980392156862`]],
 ShowCellBracket->False],

Cell[BoxData[
 PaneBox[GridBox[{
    {" ", 
     StyleBox[
      RowBox[{"Expected", " ", 
       RowBox[{"output", ":"}]}],
      Editable->False,
      Selectable->False,
      StripOnInput->False,
      FontColor->RGBColor[0.45, 0.45, 0.45]], " "},
    {" ", 
     InterpretationBox[Cell[BoxData[
       RowBox[{"{", 
        RowBox[{"\<\"avow\"\>", ",", "\<\"frog\"\>", ",", "\<\"know\"\>", 
         ",", "\<\"lido\"\>", ",", "\<\"snot\"\>"}], "}"}]], "ExerciseOutput"],
      Apply[TextCell, 
       Cell[
        BoxData[
         RowBox[{"{", 
           
           RowBox[{"\"avow\"", ",", "\"frog\"", ",", "\"know\"", ",", 
             "\"lido\"", ",", "\"snot\""}], "}"}]], "ExerciseOutput", 
        Selectable -> False, Copyable -> False, Editable -> False, 
        ShowCellBracket -> False]]], " "}
   },
   GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Center}}},
   GridBoxBackground->{"Columns" -> {{
        RGBColor[1, 1, 1]}}},
   GridBoxSpacings->{"Columns" -> {{Automatic}}, "Rows" -> {{1}}}],
  FrameMargins->0]], "ExerciseOutput",
 Editable->False,
 Selectable->False,
 Deletable->False,
 CellFrame->{{1, 1}, {1, 1}},
 ShowCellBracket->False,
 CellFrameColor->RGBColor[0.85, 0.85, 0.85],
 LineBreakWithin->Automatic]
}, Closed]]
}, Closed]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Preguntas y respuestas", "QASection",
 Editable->False,
 Deletable->False,
 ShowCellBracket->False,
 CellTags->"p:185"],

Cell[TextData[{
 "\[DownQuestion]C\[OAcute]mo funciona ",
 ButtonBox["Partition",
  BaseStyle->"Link"],
 " cuando los bloques no encajan perfectamente?"
}], "Question",
 Editable->False,
 Deletable->False,
 ShowCellBracket->False],

Cell[TextData[{
 "A menos que se indique lo contrario, solo se incluir\[AAcute]n bloques \
completos, de tal modo que se eliminar\[AAcute]n aquellos elementos que \
aparezcan solo en bloques incompletos. Sin embargo, si se dice, por ejemplo, ",
 Cell[BoxData[
  RowBox[{
   ButtonBox["Partition",
    BaseStyle->"CodeLink"], "[", 
   RowBox[{
    StyleBox["lista", "CodeVariable"], ",", 
    RowBox[{
     ButtonBox["UpTo",
      BaseStyle->"CodeLink"], "[", "4", "]"}]}], "]"}]], "InlineCode"],
 ", se har\[AAcute]n bloques ",
 StyleBox["hasta de",
  FontSlant->"Italic"],
 " longitud 4, y el \[UAcute]ltimo de ellos podr\[IAcute]a ser m\[AAcute]s \
corto si fuera necesario. "
}], "Answer",
 Editable->False,
 Deletable->False,
 ShowCellBracket->False,
 CellTags->"i:29"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Notas t\[EAcute]cnicas", "TechNoteSection",
 Editable->False,
 Deletable->False,
 ShowCellBracket->False],

Cell[TextData[{
 ButtonBox["Transpose",
  BaseStyle->"Link"],
 " puede verse como la transposici\[OAcute]n de filas y columnas en una \
matriz."
}], "TechNote",
 Editable->False,
 Deletable->False,
 ShowCellBracket->False,
 CellTags->"i:30"],

Cell[TextData[{
 ButtonBox["ArrayFlatten",
  BaseStyle->"Link"],
 " aplana un arreglo de arreglos para dejar un solo arreglo o, \
alternativamente, para dejar una matriz de matrices en una sola matriz."
}], "TechNote",
 Editable->False,
 Deletable->False,
 ShowCellBracket->False,
 CellTags->"i:31"],

Cell[TextData[{
 Cell[BoxData[
  RowBox[{
   ButtonBox["DeleteDuplicates",
    BaseStyle->"CodeLink"], "[", 
   StyleBox["lista", "CodeVariable"], "]"}]], "InlineCode"],
 " hace lo mismo que ",
 Cell[BoxData[
  RowBox[{
   ButtonBox["Union",
    BaseStyle->"CodeLink"], "[", 
   StyleBox["lista", "CodeVariable"], "]"}]], "InlineCode"],
 ", salvo que no reordena los elementos."
}], "TechNote",
 Editable->False,
 Deletable->False,
 ShowCellBracket->False,
 CellTags->"i:32"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Para explorar m\[AAcute]s", "MoreExploreSection",
 Editable->False,
 Deletable->False,
 ShowCellBracket->False],

Cell[TextData[ButtonBox["Gu\[IAcute]a para reorganizar y reestructurar listas \
en Wolfram Language\[NonBreakingSpace]\[RightGuillemet]",
 BaseStyle->"Link",
 ButtonData->"paclet:guide/RearrangingAndRestructuringLists"]], "MoreExplore",\

 Editable->False,
 Deletable->False,
 ShowCellBracket->False,
 CellTags->"LastCellOfAPage"]
}, Open  ]]
},
Saveable->False,
WindowToolbars->{},
BlinkingCellInsertionPoint->False,
CellInsertionPointCell->None,
WindowSize->{830, 800},
WindowMargins->Automatic,
WindowPersistentStyles->{
 WindowFrame, WindowMargins, WindowSize, Magnification},
WindowTitle->"Reorganizaci\[OAcute]n de listas: Una introducci\[OAcute]n \
elemental a Wolfram Language",
DockedCells->{
  Cell[
   BoxData[
    TagBox[
     GridBox[{{
        TemplateBox[{
         "\[ThickSpace]\[ThickSpace]\[ThickSpace]\[ThickSpace]", 
          "\"\[ThickSpace]\[ThickSpace]\[ThickSpace]\[ThickSpace]\"", 
          GraphicsBox[
           TagBox[
            RasterBox[CompressedData["
1:eJztl01IVFEUxyctMFzUysjIyUDCTauiIJFM6ENpM4NEtJrBUaSYZMYPhCRm
rYuoICgiW0VEBVIUEbTNEMTAIqRsk6JGCVFBHx7//+4JLo/36DqvB4Ie+Mk7
7+t3733nHpzq9NlEW0ksFsuX4U8i1duQy6X6kpuRtGTzHe3ZTOuxbFemPZPb
ny7FyZ2gEqwHInICfJToguOIReywPVHHlYDzcY4hJHZ486giyBOXtfms5Pms
Bs9zUBDTow6DJOgBT8DP/+B5CepAPbgqZm+zT70Bt9VXCx6H8DwE28Gw5ufB
IT2eA1N6PKquC0V4xtUxqfkE6ARD4BHYAx5Y938Gu8GdZXq4VsNWngIfwDzY
Aa6Bm55nOKYq8NXRw29eb+Uz4JSVd4Nn4IbPs2fARUdPQcfLWAQJ8Mq6Tkdd
gGcEHHT0sHYn9Jg1dcnnnhf6vnee8xzXVkcP9wdr97eY7z0NnlrX74qpxffg
iOZ2VDp6kvqOe6AVXAb7xNQB462YNfsCfoBzoE1MzTEqHD096mgE98WsEec4
Jqamvvk8cx2kwWuw19HDXnIAbNAx03ka9IO8mO+3ScyebRZTi01i1rqguHjY
r3aJWaugOA5O6vEC+K6ebWDW0cNgv6oBnwKus87KwKDmv8BRMOBz77/6G/sV
e8lkwHWuTwm4pQ7WzGIRHgb7FXsJ9/mI5z2si42gXMw8/ByuHgb7FXsJ9yX3
IPfHFjF1xTl5v0exnrCx5gnn+fu7JC7h/z/0Y52+P+rfWX9iCXVYErg=
             "], {{0,
              34}, {26, 0}}, {0, 255}, ColorFunction -> RGBColor], 
            BoxForm`ImageTag[
            "Byte", ColorSpace -> "RGB", Interleaving -> True, Magnification -> 
             1], Selectable -> False], DefaultBaseStyle -> "ImageGraphics", 
           ImageSize -> Magnification[1], ImageSizeRaw -> {26, 34}, 
           PlotRange -> {{0, 26}, {0, 34}}], 
          GraphicsBox[
           TagBox[
            RasterBox[CompressedData["
1:eJztXUuS47gRLX8WXtYRaJ+gl17SS+8U4/CeM+H2hDdtRY8jHF6ZR9AReATt
qrwyj6AjcO+ZaN0gLZCZwEMiQVJqSd2qwYvgdBGf/AF4+LFqfvvd37/56y+f
np5++M3pP998+88/fPz47b/+9Hx6+fOHH/72/Yf3f/njh3+8//79x99/96tT
4u9Oz79/8fT066cY9NNLSz++9uPz0+uOPv3n3Zj+40vj083npZktd5IVdJzk
hvT9pHOq78uc9I75rD/KA31n6/z03+dY1lRX64jkQh3LLpevbWI7t6N/Esv/
vdSJDpcOdpr5M74lvk/tt6VPL1VG3j7v79Qedr2XLlevoKDgsTHx8Cud+OTA
XDKM7yfOijnmlB+XC9zvuGfMm+HhqfwR8sjLY54ddbJuw05yesL7Sp2qHtY1
4+F8VjZ4Xajf2/q6Gd/HuUDH6OTvZOM21jHZmm0TsTvH/d531WZOn5o3x3lL
Ys22pnFN87Bezs6CgoLHhFsnMqd1IW1cz26TsrO8nOdSX8bgO+CwZlmHzf2L
OoXbYE08y/2e80AXcDGkbVEuzEXbIAvmA9S/kvuz+aIL5yeJHbTlVHbcQwzT
/BDncT5l6xXuLyh4k4C1Xfb8wZe9Bfcrnr0J949r43H9vV9bl2Oyn2w88Te/
Yx0+DxmiOiddiSyDk2/B/cEGFWPm/GkOeDmavo5zQ5wnaYX7CwreJvy61HGb
cc7uy63g/rEMPLEeg/tl7cxrZa/DpStZ2TOfFTo1Vy5yP88Zk02vGzkTic54
prjx/JDuFWJ501nXXCwS/Wev+9m+aN/Bdrk8dUYVZE1zv7n/4vScHQUFBY8L
f2fpz99PP1v8vob71ROV8efSruxYfj9xojujVuf92cfg/mWdPf88yDp9ed0f
8uXMZJIxroP5zN3ar6Tn6cGOsK5efd6f8S1/3n/6Nzrbirl7sj852yFuk87P
Zfzzmr1VQUHBY2M6+x/HPJnnCddY9yOXjevmkz7kqhut+xPZS9zv1/juvnvc
N3STTv5+R8XCsi+2Y+Joyy67fLijxifxXbhf5uzkeyZ/zt/yt0ADzrXs06RH
fJ7uKI7TnXfh/oKCnwvgDiD67u8W5/1JmZuc92vOndbus9wvd+D+TEq+ZQ3v
wpNTebkTMO5S4b4gZ5dp9xlnPp7/cR7F73v0g9/K4v7Ff4c17VEK9xcUvE2M
vJR828dcpc/m3wL3e05fvsPktW/0jY7n02m9PSS6FP+infHvJlyZ+4352p/h
671AWi5wv/+2R/Y5hfsLCt4icKzD2cpe3xmOZS8484nuIm/E/efqpJXfLkIc
hihdvtnP7YvcuYq/Ww1nM7EM/v5I2y5zzCV3vXJeF/YCg7Yx8kv2LMj9MofI
7/YV7i8oeJOY1vhwxh+e5JvPS+5643vGG3H/mTr9efYi9/vf5+qUHebc6O0P
c4M8e+Mc3rzLDWcvF3C/P6fnuSdno5xX+d/Lm7mnKNxfUPDmodeeBZdjXD+P
sYw5v6CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoOBr
BxE9n57aPV/aloLr4dSeFbdr9m/CXlmf60fVPXTdGi5mHLvqS9uyhNz45fTm
9LTu3y9jXcFacHu1/NRXktlmnprzXb8ZcQ19Pxdw3K7WTtcG2+bQ30nf4fQc
7zXX3BIuZhy79kryKhl3Kt1K23J6tVK2OX7Bh69mbFv+FkzgeVpg/r9bL5CZ
Q8v5D8n99+S1jP4W43hm3Zvbfivuz/nN6Y7/b/57dCcdwzX6K/T9VqXfgvuj
MYZpBPPluWPRGr9KdkdfyXz8iDxzLzi+5/Ac+d/PHkfQB7bcT+SpOP/huJ+m
PflDcj/Eu7+NZV7PXbn/nrhWf70X97NMGdM1v+M6b8tp0q+T/+/cCh/ISrsG
h1wLj8Yz9wJN5z3C+x3/3KgyY7/g8XeE8vn/z1dAncnP7Rk3xOsrRof9SHiF
6x/gXc4Zxb6dkvuO4v1oT/G6R/JQhvt3w/mNsmuUAbL3Kk/rF50tlNnyv3tV
VvQk8SWDA0HeJba3UFfi2UIbYb2Dtol9HyBf4thr+1a0/Vbpk3bdUYoWZRP0
M8Nu3dai38ntVLmEs9jHAylAvu6zkT4lC9tI+yKx2yt5jZJh6TO5FmQKz6O/
e7DJv4PPOF6cPh1jHweK+4H2S2yUdnT+yzkz1hkobifpmxsK3HNkeysKYy6q
Z8TA25nJrykdv63hK/ogequZmCFqMtZfZI9nHIsSr0bZvKW0H3nZNMW3W5Cx
4bwOftZcRErG0SqXqROt+4146jEkcPZIv+gytmC/ORpp77hOBfk9hfY5gFxs
syPIGYz2OHL5HeftVLqgUXajjcJrggr6j9drxHWO+0XHEWUs2N5COnG5DduB
aVhfbMW4DqT4SNu30PYt1JUz/IEC9+vYNcr3WsVvzu6aYuA4S//+Xcr9PYUx
Vis5EoOR3wxZDZTRvmjewHg+G/51YFevdam4SnsPYOfR6lOUtiv6LmPK4n4d
I91G6HMFaRi33rBdxwPXN6u5aCa/A3nYBtKndH/BdulADtoXjQUK9/g5H1tD
jo59ZdiD+a68tDPOix3EqTb8dn0SuUivtYntdGU8Ry/FWwPyrfEvfjT8/sw2
Hw25so4R3h0otNWg5EgZbCdp43fqfc96fd80bPZtB3Zu4F307SBN0Km6En/x
p9V1Vfk57u8usB25H9dcYheuBSVGnRH7Z1Wvh3o5WzBN+qbEYfTD0O39Vr7X
/C593rJbxoXo92sh8MXkEMtmpa+DNOl/yTyiYq59ETt7CuM8GrOgbwv1RJ81
12xQptgKunCtKjokFr3hp+wVrDbMxUig98IbitcRWp7E6cD5yE/S18W/41MG
lk0q38nG8St9uNV+UeifjREjgV47VUoO1rHGs6uLY1F4sTbigvviDuo74LgU
e5GTxL4NxecoTS52ZLRTLt4cx1YeyLf6jqCH52iVMWKH8Yx4At4PIFfGS63K
1DO6TP6E2O4hntomwbOqJzIP/C7xrzJxneP+s22nzFwDduCYiPq7jrOSl/hu
2ELWe8bvtdwv7Tpn99wYjOKTszmnf6WsJe5vjTTxD/di0RhBG6C+jFVXRniy
ARsaUnMH6MT5Rfw/qvfV3J+xbUfqPG0uTpSO2zV9Zzafy1jjt13ha2/YJnEU
v/ReCetYPjo+30I7aHsiHieY3/l9y++yj+lJ7Q8pPmPRwHVTEjsrzcqnM877
oU6vn5xeupz75dHr/npGV44/8cynA1lZu1V935/Fzpm43or7W5U+GDJ1H/sa
ud/a22q7H5n7BVZfrjL6JCbST/H8we/dDJ1Nzn8rHksxUmm4Lu4hJkvcr+Px
2dxP8ZnPTrfDgq89pAknu7EjXHtYqBP5SBPvH0BOS2EsYhwkrYc4bpRM5H55
RE8H9Vt+pC9k19or4ymoM/lWPMWfjVXH0kvruL/D94zcc7jf2WmdidUzNmXj
BeWlzc2zAlW2hbQk1mfYvsRDuEeMzkUgrp1RJvGdwt5X1iXCI7iX9z5k7OlU
uo69xZ9ipz6vQBuX+BrP2a39eGPo6zKyTF0Z2zXXJby8BKjjoM9PPf/O2a9t
ps/n/tbQoeXdnPspvneQ9brm47Xc731iO7cUjzWpg/OBnKVpXdhOms/ceHHj
WOb/PcVj34/1mZhIu+tvNyIOtmK3Nt6kznwonK/WUEbSJHbjOSyFfdhGyzXi
jW2gY4W6XPmN2GXUqWd04fjvKb3LOpD6bmRNvCjufw7VTFw/l/u17Tnuxz1h
C+W8Hoq/F9zN+C79aU9qH2vE/8i6OoL7UiXb6ZL92pxNObvP5n6ly/nTqnrO
1i3F34HUGTlbKOPHLa3jfvFP4iRjpJmxG2Ng3YNondhXdhS+sSEK/QbHQqPr
WXGbsWlHcDdqlJmLx2rup5iHWq6LY8/Jxn7W5nSQ3YfEhx2F71twnYAxi3y2
dFE6XqSM9IGBfxZdlWGLq79hfXKXKWN7MGIl/nczbZekZeKtgbGaW3MIjmTw
HLwvcr+KF8IaB/Wcj6S+veI0HO/OXpnL+zlZSq7Umf3Gmi7k/hnbTe43/CKr
HKXfkUkc0fdWyfD9GcrgXhfL1Zxfq7x2xnfLbuvs2rLRp62IR2XEQNDMyHG+
JvdCtIL7M3aMZxUz+qJ5PCNno+pY40XfCUXjl87jfjzzIYI7OChzbe7XaJVM
iWVuLb523a8x3skauhyk76CPOA4GsvsFzhsI/J0NXebA6RWpeQnkRnn8c63K
JGlWvvHgPOj0bLUNbJ9LT85+tF7LD8r8XRQu2/Cj71yljt6jJT7SNJYaZccG
5Ro2ZeNFExdI+2bPe5S/FaTVa2ynMOd72y15hj6JWa6MtJfpO5RpQW8utjWX
S3RBf9lQ/O1E5PuS3RT+Fo3ui+Z4UHU3FL5bxnhLDLJxMmwQ+2ScJf3W6pfK
v+z5qOGvtrmy0g0dpk96/KIeVS7X1lK/Ql8N+7LxyOm09BsPyh3HhZJZqXe0
zepDbgwPFP4+hoxpUnWlD1VaF8j2bavjQGHe6Sic0yfraCi7pRV9suC+4H4g
87w/4ygoKHgcUNhb4f2YnMsTLawpztTVa5kUzhH7a+kpuC0o3vc2X9qegoKC
80Hp78Phmr+7si48q5O9hqwdrzbHFNwWFL61rr60LQUFBZeDwt9N7Sl8O1nf
SFdD4XuijtQ3RXP4P6lulfg=
             "], {{0, 34}, {383, 0}}, {0, 255}, 
             ColorFunction -> RGBColor], 
            BoxForm`ImageTag[
            "Byte", ColorSpace -> "RGB", Interleaving -> True, Magnification -> 
             1], Selectable -> False], DefaultBaseStyle -> "ImageGraphics", 
           ImageSize -> Magnification[1], ImageSizeRaw -> {383, 34}, 
           PlotRange -> {{0, 383}, {0, 34}}]}, "RowWithSeparators"], 
        PaneBox[
         StyleBox["\[VeryThinSpace]", ShowStringCharacters -> False], 
         Alignment -> Right, ImageSize -> {174, 47}], 
        PaneBox[
         PaneBox[
          TemplateBox[{"\[ThinSpace]", "\" \"", 
            TagBox[
             TooltipBox[
              PaneSelectorBox[{False -> ButtonBox[
                  PaneBox[
                   GraphicsBox[
                    TagBox[
                    RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UJAPiDmBmIUBO/j//z8jEDcA8W8g3oBFnhmIZ/9HgE9o8mxAvBZJ/hsQuyPJ
8wPxfiT5N0BsjiQvCsTnkOSfALEWkrwSEN9Bkr8OxDJobniAJP8ZZCYWfxCj
RpGQXcS4mVi/ExuGxMYFmlp4nAIAG14fWQ==
                    "], {{0, 14}, {9, 
                    0}}, {0, 255}, ColorFunction -> RGBColor], 
                    BoxForm`ImageTag[
                    "Byte", ColorSpace -> "RGB", Interleaving -> True], 
                    Selectable -> False], DefaultBaseStyle -> "ImageGraphics",
                     ImageSizeRaw -> {9, 14}, PlotRange -> {{0, 9}, {0, 14}}, 
                    ImageSize -> Magnification[1]], ImageSize -> {35, 30}, 
                   Alignment -> Center], 
                  ButtonFunction :> (
                   NotebookLocate[{
                    "EIWL2-29-more-about-pure-functions.nb", ""}, 
                    FrontEnd`HistoryData :> {
                    EvaluationNotebook[]}]& ), Enabled -> True, Appearance -> 
                  None, Evaluator -> Automatic, Method -> "Preemptive"], True -> 
                ButtonBox[
                  PaneBox[
                   GraphicsBox[
                    TagBox[
                    RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UJAPiDmBmIUBO/j//z8jEDcA8W8g3oBFnhmIZ/9HgE9o8mxAvBZJ/hsQuyPJ
8wPxfiT5N0BsjiQvCsTnkOSfALEWkrwSEN9Bkr8OxDJobniAJP8ZZCYWfxCj
RpGQXcS4mVi/ExuGxMYFmlp4nAIAG14fWQ==
                    "], {{0, 14}, {9, 
                    0}}, {0, 255}, ColorFunction -> RGBColor], 
                    BoxForm`ImageTag[
                    "Byte", ColorSpace -> "RGB", Interleaving -> True], 
                    Selectable -> False], DefaultBaseStyle -> "ImageGraphics",
                     ImageSizeRaw -> {9, 14}, PlotRange -> {{0, 9}, {0, 14}}, 
                    ImageSize -> Magnification[1]], ImageSize -> {35, 30}, 
                   Alignment -> Center], 
                  ButtonFunction :> (
                   NotebookLocate[{
                    "EIWL2-29-more-about-pure-functions.nb", ""}, 
                    FrontEnd`HistoryData :> {
                    EvaluationNotebook[]}]& ), Enabled -> True, Appearance -> 
                  None, Background -> RGBColor[0.835294, 0.364706, 0.0196078],
                   Evaluator -> Automatic, Method -> "Preemptive"]}, 
               Dynamic[
                CurrentValue["MouseOver"]], ImageSize -> Automatic, 
               FrameMargins -> 0], 
              "\"M\[AAcute]s sobre las funciones puras\"", TooltipDelay -> 
              0.15, LabelStyle -> "TextStyling"], 
             Annotation[#, "M\[AAcute]s sobre las funciones puras", 
              "Tooltip"]& ], 
            TemplateBox[{5}, "Spacer1"], 
            TagBox[
             TooltipBox[
              PaneSelectorBox[{False -> ButtonBox[
                  PaneBox[
                   GraphicsBox[
                    TagBox[
                    RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UJAfiDmBmAWI////vwKIfwFxMQMOAJT7+R8B6nGoSf+PCjpwqMskUl0SEP9F
UtcHxIxY1EWjqZuOQ10Mmr2TcNj7BEnNP1LNIeQeIDsZn78IhQ8x4fwfNb4a
cPgTFu8l2ORBAAC+1hnm
                    "], {{0, 15}, {9, 0}}, {0, 255}, 
                    ColorFunction -> RGBColor], 
                    BoxForm`ImageTag[
                    "Byte", ColorSpace -> "RGB", Interleaving -> True], 
                    Selectable -> False], DefaultBaseStyle -> "ImageGraphics",
                     ImageSizeRaw -> {9, 15}, PlotRange -> {{0, 9}, {0, 15}}, 
                    ImageSize -> Magnification[1]], ImageSize -> {35, 30}, 
                   Alignment -> Center], 
                  ButtonFunction :> (
                   NotebookLocate[{"EIWL2-31-parts-of-lists.nb", ""}, 
                    FrontEnd`HistoryData :> {
                    EvaluationNotebook[]}]& ), Appearance -> None, Evaluator -> 
                  Automatic, Method -> "Preemptive"], True -> ButtonBox[
                  PaneBox[
                   GraphicsBox[
                    TagBox[
                    RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UJAfiDmBmAWI////vwKIfwFxMQMOAJT7+R8B6nGoSf+PCjpwqMskUl0SEP9F
UtcHxIxY1EWjqZuOQ10Mmr2TcNj7BEnNP1LNIeQeIDsZn78IhQ8x4fwfNb4a
cPgTFu8l2ORBAAC+1hnm
                    "], {{0, 15}, {9, 0}}, {0, 255}, 
                    ColorFunction -> RGBColor], 
                    BoxForm`ImageTag[
                    "Byte", ColorSpace -> "RGB", Interleaving -> True], 
                    Selectable -> False], DefaultBaseStyle -> "ImageGraphics",
                     ImageSizeRaw -> {9, 15}, PlotRange -> {{0, 9}, {0, 15}}, 
                    ImageSize -> Magnification[1]], ImageSize -> {35, 30}, 
                   Alignment -> Center], 
                  ButtonFunction :> (
                   NotebookLocate[{"EIWL2-31-parts-of-lists.nb", ""}, 
                    FrontEnd`HistoryData :> {
                    EvaluationNotebook[]}]& ), Appearance -> None, Background -> 
                  RGBColor[0.835294, 0.364706, 0.0196078], Evaluator -> 
                  Automatic, Method -> "Preemptive"]}, 
               Dynamic[
                CurrentValue["MouseOver"]], ImageSize -> Automatic, 
               FrameMargins -> 0], "\"Partes de listas\"", TooltipDelay -> 
              0.15, LabelStyle -> "TextStyling"], 
             Annotation[#, "Partes de listas", "Tooltip"]& ]}, 
           "RowWithSeparators"], Alignment -> Right], ImageSize -> {100, 30}, 
         FrameMargins -> {{0, 6}, {0, 0}}, Alignment -> Right], 
        ActionMenuBox[
         PaneSelectorBox[{True -> PanelBox[
             GraphicsBox[
              TagBox[
               RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UBAkIQ3ELED8////Jf/pA0D2/KWTXSB7ZtPBPrA9DKOAYgAMR1Eg9gPiABpi
P6g912mcLmAAZM9XOtkFsicKiNcD8QYaYpD5UQOdXoYD+E/HMooO9iDbR7c6
BQDxtyEt
                "], {{0, 16}, {27, 0}}, {0, 255}, ColorFunction -> 
                RGBColor], 
               BoxForm`ImageTag[
               "Byte", ColorSpace -> "RGB", Interleaving -> True, 
                Magnification -> 1], Selectable -> False], DefaultBaseStyle -> 
              "ImageGraphics", ImageSize -> Magnification[1], 
              ImageSizeRaw -> {27, 16}, PlotRange -> {{0, 27}, {0, 16}}], 
             Appearance -> None, Background -> 
             RGBColor[0.835294, 0.364706, 0.0196078], ImageSize -> {35, 30}, 
             Alignment -> Center], False -> PanelBox[
             GraphicsBox[
              TagBox[
               RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UBAkIQ3ELED8////Jf/pA0D2/KWTXSB7ZtPBPrA9DKOAYgAMR1Eg9gPiABpi
P6g912mcLmAAZM9XOtkFsicKiNcD8QYaYpD5UQOdXoYD+E/HMooO9iDbR7c6
BQDxtyEt
                "], {{0, 16}, {27, 0}}, {0, 255}, ColorFunction -> 
                RGBColor], 
               BoxForm`ImageTag[
               "Byte", ColorSpace -> "RGB", Interleaving -> True, 
                Magnification -> 1], Selectable -> False], DefaultBaseStyle -> 
              "ImageGraphics", ImageSize -> Magnification[1], 
              ImageSizeRaw -> {27, 16}, PlotRange -> {{0, 27}, {0, 16}}], 
             Appearance -> None, Background -> 
             RGBColor[0.952941, 0.509804, 0], ImageSize -> {35, 30}, 
             Alignment -> Center]}, 
          Dynamic[
           CurrentValue["MouseOver"]]], {
         "Prefacio" :> 
          NotebookLocate[{"EIWL2-0a-preface.nb", ""}, FrontEnd`HistoryData :> {
              EvaluationNotebook[]}], 
          "\[DownQuestion]Qu\[EAcute] es Wolfram Language?" :> 
          NotebookLocate[{"EIWL2-0b-what-is-the-wolfram-language.nb", ""}, 
            FrontEnd`HistoryData :> {
              EvaluationNotebook[]}], 
          "Aspectos pr\[AAcute]cticos en el uso de Wolfram Language" :> 
          NotebookLocate[{
            "EIWL2-0c-practicalities-of-using-the-wolfram-language.nb", ""}, 
            FrontEnd`HistoryData :> {
              EvaluationNotebook[]}], "Otros recursos" :> 
          NotebookLocate[{"EIWL2-0d-other-resources.nb", ""}, 
            FrontEnd`HistoryData :> {
              EvaluationNotebook[]}], 
          "Sobre la traducci\[OAcute]n al espa\[NTilde]ol" :> 
          NotebookLocate[{"EIWL2-0e-translation-notes.nb", ""}, 
            FrontEnd`HistoryData :> {
              EvaluationNotebook[]}], 
          "\[ThickSpace]\[ThickSpace]\[ThinSpace]1\[ThickSpace]\[ThickSpace]|\
\[ThickSpace]\[ThickSpace]Inicio: aritm\[EAcute]tica elemental" :> 
          NotebookLocate[{
            "EIWL2-01-starting-out-elementary-arithmetic.nb", ""}, 
            FrontEnd`HistoryData :> {
              EvaluationNotebook[]}], 
          "\[ThickSpace]\[ThickSpace]\[ThinSpace]2\[ThickSpace]\[ThickSpace]|\
\[ThickSpace]\[ThickSpace]Introducci\[OAcute]n a las funciones" :> 
          NotebookLocate[{"EIWL2-02-introducing-functions.nb", ""}, 
            FrontEnd`HistoryData :> {
              EvaluationNotebook[]}], 
          "\[ThickSpace]\[ThickSpace]\[ThinSpace]3\[ThickSpace]\[ThickSpace]|\
\[ThickSpace]\[ThickSpace]Un primer vistazo a las listas" :> 
          NotebookLocate[{"EIWL2-03-first-look-at-lists.nb", ""}, 
            FrontEnd`HistoryData :> {
              EvaluationNotebook[]}], 
          "\[ThickSpace]\[ThickSpace]\[ThinSpace]4\[ThickSpace]\[ThickSpace]|\
\[ThickSpace]\[ThickSpace]Visualizaci\[OAcute]n de listas" :> 
          NotebookLocate[{"EIWL2-04-displaying-lists.nb", ""}, 
            FrontEnd`HistoryData :> {
              EvaluationNotebook[]}], 
          "\[ThickSpace]\[ThickSpace]\[ThinSpace]5\[ThickSpace]\[ThickSpace]|\
\[ThickSpace]\[ThickSpace]Operaciones con listas" :> 
          NotebookLocate[{"EIWL2-05-operations-on-lists.nb", ""}, 
            FrontEnd`HistoryData :> {
              EvaluationNotebook[]}], 
          "\[ThickSpace]\[ThickSpace]\[ThinSpace]6\[ThickSpace]\[ThickSpace]|\
\[ThickSpace]\[ThickSpace]Construcci\[OAcute]n de tablas" :> 
          NotebookLocate[{"EIWL2-06-making-tables.nb", ""}, 
            FrontEnd`HistoryData :> {
              EvaluationNotebook[]}], 
          "\[ThickSpace]\[ThickSpace]\[ThinSpace]7\[ThickSpace]\[ThickSpace]|\
\[ThickSpace]\[ThickSpace]Colores y estilos" :> 
          NotebookLocate[{"EIWL2-07-colors-and-styles.nb", ""}, 
            FrontEnd`HistoryData :> {
              EvaluationNotebook[]}], 
          "\[ThickSpace]\[ThickSpace]\[ThinSpace]8\[ThickSpace]\[ThickSpace]|\
\[ThickSpace]\[ThickSpace]Objetos gr\[AAcute]ficos elementales" :> 
          NotebookLocate[{"EIWL2-08-basic-graphics-objects.nb", ""}, 
            FrontEnd`HistoryData :> {
              EvaluationNotebook[]}], 
          "\[ThickSpace]\[ThickSpace]\[ThinSpace]9\[ThickSpace]\[ThickSpace]|\
\[ThickSpace]\[ThickSpace]Manipulaci\[OAcute]n interactiva" :> 
          NotebookLocate[{"EIWL2-09-interactive-manipulation.nb", ""}, 
            FrontEnd`HistoryData :> {
              EvaluationNotebook[]}], 
          "10\[ThickSpace]\[ThickSpace]|\[ThickSpace]\[ThickSpace]Im\[AAcute]\
genes" :> NotebookLocate[{"EIWL2-10-images.nb", ""}, 
            FrontEnd`HistoryData :> {
              EvaluationNotebook[]}], 
          "11\[ThickSpace]\[ThickSpace]|\[ThickSpace]\[ThickSpace]Cadenas de \
caracteres y texto" :> 
          NotebookLocate[{"EIWL2-11-strings-and-text.nb", ""}, 
            FrontEnd`HistoryData :> {
              EvaluationNotebook[]}], 
          "12\[ThickSpace]\[ThickSpace]|\[ThickSpace]\[ThickSpace]Sonido" :> 
          NotebookLocate[{"EIWL2-12-sound.nb", ""}, FrontEnd`HistoryData :> {
              EvaluationNotebook[]}], 
          "13\[ThickSpace]\[ThickSpace]|\[ThickSpace]\[ThickSpace]Arreglos o \
listas de listas" :> 
          NotebookLocate[{"EIWL2-13-arrays-or-lists-of-lists.nb", ""}, 
            FrontEnd`HistoryData :> {
              EvaluationNotebook[]}], 
          "14\[ThickSpace]\[ThickSpace]|\[ThickSpace]\[ThickSpace]Coordenadas \
y gr\[AAcute]ficos" :> 
          NotebookLocate[{"EIWL2-14-coordinates-and-graphics.nb", ""}, 
            FrontEnd`HistoryData :> {
              EvaluationNotebook[]}], 
          "15\[ThickSpace]\[ThickSpace]|\[ThickSpace]\[ThickSpace]El alcance \
de Wolfram Language" :> 
          NotebookLocate[{
            "EIWL2-15-the-scope-of-the-wolfram-language.nb", ""}, 
            FrontEnd`HistoryData :> {
              EvaluationNotebook[]}], 
          "16\[ThickSpace]\[ThickSpace]|\[ThickSpace]\[ThickSpace]Datos del \
mundo real" :> 
          NotebookLocate[{"EIWL2-16-real-world-data.nb", ""}, 
            FrontEnd`HistoryData :> {
              EvaluationNotebook[]}], 
          "17\[ThickSpace]\[ThickSpace]|\[ThickSpace]\[ThickSpace]Unidades" :> 
          NotebookLocate[{"EIWL2-17-units.nb", ""}, FrontEnd`HistoryData :> {
              EvaluationNotebook[]}], 
          "18\[ThickSpace]\[ThickSpace]|\[ThickSpace]\[ThickSpace]\
Geocomputaci\[OAcute]n" :> 
          NotebookLocate[{"EIWL2-18-geocomputation.nb", ""}, 
            FrontEnd`HistoryData :> {
              EvaluationNotebook[]}], 
          "19\[ThickSpace]\[ThickSpace]|\[ThickSpace]\[ThickSpace]Fechas y \
horas" :> NotebookLocate[{"EIWL2-19-dates-and-times.nb", ""}, 
            FrontEnd`HistoryData :> {
              EvaluationNotebook[]}], 
          "20\[ThickSpace]\[ThickSpace]|\[ThickSpace]\[ThickSpace]Opciones" :> 
          NotebookLocate[{"EIWL2-20-options.nb", ""}, FrontEnd`HistoryData :> {
              EvaluationNotebook[]}], 
          "21\[ThickSpace]\[ThickSpace]|\[ThickSpace]\[ThickSpace]Grafos y \
redes" :> NotebookLocate[{"EIWL2-21-graphs-and-networks.nb", ""}, 
            FrontEnd`HistoryData :> {
              EvaluationNotebook[]}], 
          "22\[ThickSpace]\[ThickSpace]|\[ThickSpace]\[ThickSpace]Aprendizaje \
autom\[AAcute]tico" :> 
          NotebookLocate[{"EIWL2-22-machine-learning.nb", ""}, 
            FrontEnd`HistoryData :> {
              EvaluationNotebook[]}], 
          "23\[ThickSpace]\[ThickSpace]|\[ThickSpace]\[ThickSpace]M\[AAcute]s \
sobre n\[UAcute]meros" :> 
          NotebookLocate[{"EIWL2-23-more-about-numbers.nb", ""}, 
            FrontEnd`HistoryData :> {
              EvaluationNotebook[]}], 
          "24\[ThickSpace]\[ThickSpace]|\[ThickSpace]\[ThickSpace]M\[AAcute]s \
formas de visualizaci\[OAcute]n" :> 
          NotebookLocate[{"EIWL2-24-more-forms-of-visualization.nb", ""}, 
            FrontEnd`HistoryData :> {
              EvaluationNotebook[]}], 
          "25\[ThickSpace]\[ThickSpace]|\[ThickSpace]\[ThickSpace]Maneras de \
aplicar funciones" :> 
          NotebookLocate[{"EIWL2-25-ways-to-apply-functions.nb", ""}, 
            FrontEnd`HistoryData :> {
              EvaluationNotebook[]}], 
          "26\[ThickSpace]\[ThickSpace]|\[ThickSpace]\[ThickSpace]Funciones \
puras an\[OAcute]nimas" :> 
          NotebookLocate[{"EIWL2-26-pure-anonymous-functions.nb", ""}, 
            FrontEnd`HistoryData :> {
              EvaluationNotebook[]}], 
          "27\[ThickSpace]\[ThickSpace]|\[ThickSpace]\[ThickSpace]Aplicaci\
\[OAcute]n repetida de funciones " :> 
          NotebookLocate[{"EIWL2-27-applying-functions-repeatedly.nb", ""}, 
            FrontEnd`HistoryData :> {
              EvaluationNotebook[]}], 
          "28\[ThickSpace]\[ThickSpace]|\[ThickSpace]\[ThickSpace]Pruebas y \
condicionales" :> 
          NotebookLocate[{"EIWL2-28-tests-and-conditionals.nb", ""}, 
            FrontEnd`HistoryData :> {
              EvaluationNotebook[]}], 
          "29\[ThickSpace]\[ThickSpace]|\[ThickSpace]\[ThickSpace]M\[AAcute]s \
sobre las funciones puras" :> 
          NotebookLocate[{"EIWL2-29-more-about-pure-functions.nb", ""}, 
            FrontEnd`HistoryData :> {
              EvaluationNotebook[]}], 
          "30\[ThickSpace]\[ThickSpace]|\[ThickSpace]\[ThickSpace]\
Reorganizaci\[OAcute]n de listas" :> 
          NotebookLocate[{"EIWL2-30-rearranging-lists.nb", ""}, 
            FrontEnd`HistoryData :> {
              EvaluationNotebook[]}], 
          "31\[ThickSpace]\[ThickSpace]|\[ThickSpace]\[ThickSpace]Partes de \
listas" :> NotebookLocate[{"EIWL2-31-parts-of-lists.nb", ""}, 
            FrontEnd`HistoryData :> {
              EvaluationNotebook[]}], 
          "32\[ThickSpace]\[ThickSpace]|\[ThickSpace]\[ThickSpace]Patrones" :> 
          NotebookLocate[{"EIWL2-32-patterns.nb", ""}, FrontEnd`HistoryData :> {
              EvaluationNotebook[]}], 
          "33\[ThickSpace]\[ThickSpace]|\[ThickSpace]\[ThickSpace]Expresiones \
y su estructura" :> 
          NotebookLocate[{"EIWL2-33-expressions-and-their-structure.nb", ""}, 
            FrontEnd`HistoryData :> {
              EvaluationNotebook[]}], 
          "34\[ThickSpace]\[ThickSpace]|\[ThickSpace]\[ThickSpace]\
Asociaciones" :> 
          NotebookLocate[{"EIWL2-34-associations.nb", ""}, 
            FrontEnd`HistoryData :> {
              EvaluationNotebook[]}], 
          "35\[ThickSpace]\[ThickSpace]|\[ThickSpace]\[ThickSpace]Comprensi\
\[OAcute]n del lenguaje natural" :> 
          NotebookLocate[{"EIWL2-35-natural-language-understanding.nb", ""}, 
            FrontEnd`HistoryData :> {
              EvaluationNotebook[]}], 
          "36\[ThickSpace]\[ThickSpace]|\[ThickSpace]\[ThickSpace]Construcci\
\[OAcute]n de sitios web y aplicaciones" :> 
          NotebookLocate[{"EIWL2-36-creating-websites-and-apps.nb", ""}, 
            FrontEnd`HistoryData :> {
              EvaluationNotebook[]}], 
          "37\[ThickSpace]\[ThickSpace]|\[ThickSpace]\[ThickSpace]Composici\
\[OAcute]n y visualizaci\[OAcute]n" :> 
          NotebookLocate[{"EIWL2-37-layout-and-display.nb", ""}, 
            FrontEnd`HistoryData :> {
              EvaluationNotebook[]}], 
          "38\[ThickSpace]\[ThickSpace]|\[ThickSpace]\[ThickSpace]Asignaci\
\[OAcute]n de nombres a cosas" :> 
          NotebookLocate[{"EIWL2-38-assigning-names-to-things.nb", ""}, 
            FrontEnd`HistoryData :> {
              EvaluationNotebook[]}], 
          "39\[ThickSpace]\[ThickSpace]|\[ThickSpace]\[ThickSpace]Valores \
inmediatos y diferidos" :> 
          NotebookLocate[{"EIWL2-39-immediate-and-delayed-values.nb", ""}, 
            FrontEnd`HistoryData :> {
              EvaluationNotebook[]}], 
          "40\[ThickSpace]\[ThickSpace]|\[ThickSpace]\[ThickSpace]Funciones \
definidas por el usuario" :> 
          NotebookLocate[{"EIWL2-40-defining-your-own-functions.nb", ""}, 
            FrontEnd`HistoryData :> {
              EvaluationNotebook[]}], 
          "41\[ThickSpace]\[ThickSpace]|\[ThickSpace]\[ThickSpace]M\[AAcute]s \
informaci\[OAcute]n sobre los patrones" :> 
          NotebookLocate[{"EIWL2-41-more-about-patterns.nb", ""}, 
            FrontEnd`HistoryData :> {
              EvaluationNotebook[]}], 
          "42\[ThickSpace]\[ThickSpace]|\[ThickSpace]\[ThickSpace]Cadenas de \
caracteres y plantillas " :> 
          NotebookLocate[{"EIWL2-42-string-patterns-and-templates.nb", ""}, 
            FrontEnd`HistoryData :> {
              EvaluationNotebook[]}], 
          "43\[ThickSpace]\[ThickSpace]|\[ThickSpace]\[ThickSpace]C\[OAcute]\
mo guardar cosas" :> 
          NotebookLocate[{"EIWL2-43-storing-things.nb", ""}, 
            FrontEnd`HistoryData :> {
              EvaluationNotebook[]}], 
          "44\[ThickSpace]\[ThickSpace]|\[ThickSpace]\[ThickSpace]Importar y \
exportar" :> 
          NotebookLocate[{"EIWL2-44-importing-and-exporting.nb", ""}, 
            FrontEnd`HistoryData :> {
              EvaluationNotebook[]}], 
          "45\[ThickSpace]\[ThickSpace]|\[ThickSpace]\[ThickSpace]Conjuntos \
de datos" :> 
          NotebookLocate[{"EIWL2-45-datasets.nb", ""}, FrontEnd`HistoryData :> {
              EvaluationNotebook[]}], 
          "46\[ThickSpace]\[ThickSpace]|\[ThickSpace]\[ThickSpace]C\[OAcute]\
mo escribir c\[OAcute]digo de buena calidad" :> 
          NotebookLocate[{"EIWL2-46-writing-good-code.nb", ""}, 
            FrontEnd`HistoryData :> {
              EvaluationNotebook[]}], 
          "47\[ThickSpace]\[ThickSpace]|\[ThickSpace]\[ThickSpace]Depuraci\
\[OAcute]n de c\[OAcute]digo" :> 
          NotebookLocate[{"EIWL2-47-debugging-your-code.nb", ""}, 
            FrontEnd`HistoryData :> {
              EvaluationNotebook[]}], "Lo que no se vio en el libro" :> 
          NotebookLocate[{"EIWL2-what-we-havent-discussed.nb", ""}, 
            FrontEnd`HistoryData :> {
              EvaluationNotebook[]}], "Ep\[IAcute]logo: ser un programador" :> 
          NotebookLocate[{"EIWL2-being-a-programmer.nb", ""}, 
            FrontEnd`HistoryData :> {
              EvaluationNotebook[]}], "Respuestas a los ejercicios" :> 
          NotebookLocate[{"EIWL2-answers-to-exercises.nb", ""}, 
            FrontEnd`HistoryData :> {
              EvaluationNotebook[]}], "\[CapitalIAcute]ndice" :> 
          NotebookLocate[{"EIWL2-book-index.nb", ""}, FrontEnd`HistoryData :> {
              EvaluationNotebook[]}]}, Appearance -> None]}}, 
      GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Center}}}, 
      GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Grid"]], 
   "Text", ShowCellBracket -> False, CellFrame -> {{0, 0}, {3, 0}}, 
   Selectable -> False, CellFrameColor -> 
   RGBColor[0.835294, 0.364706, 0.0196078], CellMargins -> {{0, 0}, {0, -1}}, 
   CellFrameMargins -> {{27, 0}, {1, 7}}, Background -> 
   RGBColor[0.952941, 0.509804, 0], CellTags -> "DockedCellLogoCell"], 
  Cell["SEGUNDA EDICI\[CapitalOAcute]N", "Text", FontFamily -> 
   "Source Sans Pro", CellFrame -> {{0, 0}, {3, 0}}, ShowCellBracket -> False,
    CellMargins -> {{0, 0}, {-1, -1}}, CellFrameMargins -> {{66, 0}, {2, 4}}, 
   CellFrameColor -> RGBColor[0.952941, 0.509804, 0], FontSize -> 10, 
   FontTracking -> "Extended", FontColor -> RGBColor[1, 0.929412, 0.721569], 
   Background -> RGBColor[0.862745, 0.309804, 0], CellTags -> 
   "DockedCellLogoCell"]},
PrintingStartingPageNumber->254,
PageHeaders->{{
   Cell[
    TextData[{
      StyleBox[
       CounterBox["Page"], "PageNumber"], 
      StyleBox[
      "    An Elementary Introduction to the Wolfram Language", "Header"]}], 
    "Header", CellMargins -> {{37, Inherited}, {Inherited, Inherited}}], None,
    None}, {None, None, 
   Cell[
    TextData[{
      StyleBox[
       CounterBox["Section"], "Header"], 
      StyleBox[" | Rearranging Lists \[LongDash] wolfr.am/eiwl-", "Header"], 
      StyleBox[
       CounterBox["Section"], "Header"], 
      StyleBox["    ", "Header"], 
      StyleBox[
       CounterBox["Page"], "PageNumber"]}], "Header", 
    CellMargins -> {{Inherited, 17}, {Inherited, Inherited}}]}},
PrintingOptions->{"FirstPageHeader"->True},
ShowCellBracket->Automatic,
ShowAutoSpellCheck->False,
ShowPredictiveInterface->False,
ShowSyntaxStyles->False,
AutoStyleOptions->{"HighlightMisspelledWords"->False},
FrontEndVersion->"11.3 for Mac OS X x86 (32-bit, 64-bit Kernel) (March 5, \
2018)",
StyleDefinitions->Notebook[{
   Cell[
    StyleData[StyleDefinitions -> "Default.nb"]], 
   Cell[
    CellGroupData[{
      Cell[
      "Style Environments", "Section", 
       CellChangeTimes -> {{3.64661165091824*^9, 3.646611654013329*^9}, 
         3.6485723794335403`*^9, 3.651347081728628*^9, 3.651347179462186*^9, 
         3.651347384135805*^9, 3.651348171662589*^9}], 
      Cell[
       StyleData[All, "Working"], CellInsertionPointCell -> 
       FEPrivate`FrontEndResource["FEExpressions", "CellInsertionMenu"], 
       CreateCellID -> True, $CellContext`GhostCellInEmptyNotebook -> False], 
      
      Cell[
       StyleData[All, "Printout"], 
       PrintingOptions -> {
        "PageSize" -> {504, 720}, "PrintRegistrationMarks" -> True}, 
       Magnification -> 0.6]}, Closed]], 
   Cell[
    CellGroupData[{
      Cell["Styles for Headers and Footers", "Section"], 
      Cell[
       StyleData["Header"], StyleMenuListing -> None, FontFamily -> "Verdana",
        FontSize -> 7, FontSlant -> "Plain", FontColor -> GrayLevel[0.6]], 
      Cell[
       StyleData["PageNumber"], CellMargins -> {{0, 0}, {4, 1}}, 
       StyleMenuListing -> None, FontFamily -> "Verdana", FontSize -> 7, 
       FontWeight -> "Bold", FontSlant -> "Plain", FontColor -> 
       GrayLevel[0]]}, Closed]], 
   Cell[
    CellGroupData[{
      Cell[
      "WPL Specific", "Section", 
       CellChangeTimes -> {{3.6556608433734913`*^9, 3.6556608489412746`*^9}}], 
      Cell[
       StyleData["Link"], FontFamily -> "Source Sans Pro", FontSize :> 
       If[CurrentValue[
           EvaluationCell[], "FontFamily"] === "Source Sans Pro", Inherited, 
         If[CurrentValue[
            EvaluationCell[], "FontFamily"] === "WolframCodeSans", Inherited, 
          Inherited 0.9]], FontColor -> GrayLevel[0]], 
      Cell[
       StyleData["CodeLink"], 
       ButtonBoxOptions -> {
        Appearance -> None, ButtonFunction :> (FEPrivate`FrontEndExecute[
           FrontEndToken["OpenHelpLink", {
             Part[#, 1], Null}]]& ), ButtonSource -> ButtonContents, 
         Evaluator -> None, Method -> "Preemptive"}]}, Closed]], 
   Cell[
    CellGroupData[{
      Cell[
      "Custom Styles", "Section", 
       CellChangeTimes -> {{3.646611660445352*^9, 3.646611669493331*^9}}], 
      Cell[
       StyleData["Notebook"], PageWidth -> 700, 
       PrintingOptions -> {
        "InnerOuterMargins" -> {35, 16}, "PaperOrientation" -> "Portrait", 
         "PaperSize" -> {504, 720}, 
         "PrintingMargins" -> {{20, 20}, {54, 54}}}, CellLabelAutoDelete -> 
       False, ShowSyntaxStyles -> True, 
       AutoStyleOptions -> {
        "FormattingErrorTooltips" -> False, "HighlightComments" -> False, 
         "HighlightEmphasizedSyntaxErrors" -> False, 
         "HighlightExcessArguments" -> False, "HighlightFormattingErrors" -> 
         False, "HighlightGlobalToLocalScopeConflicts" -> False, 
         "HighlightGraphicsCompatibilityProblems" -> False, 
         "HighlightLocalScopeConflicts" -> False, "HighlightMissingArguments" -> 
         False, "HighlightNoKernelPresent" -> False, 
         "HighlightOrderOfEvaluationConflicts" -> False, "HighlightStrings" -> 
         True, "HighlightSymbolContexts" -> False, "HighlightSymbolShadowing" -> 
         False, "HighlightSyntaxErrors" -> False, "HighlightUndefinedSymbols" -> 
         False, "HighlightUnknownOptions" -> False, 
         "HighlightUnwantedAssignments" -> False}, MenuSortingValue -> None, 
       GraphicsBoxOptions -> {ImageSize -> 240}, 
       Graphics3DBoxOptions -> {ImageSize -> 240}], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["Title"], CellMargins -> {{64, Inherited}, {50, 72}}, 
          MenuCommandKey -> None, FontFamily -> "Verdana", FontSize -> 42, 
          FontWeight -> "Bold", FontColor -> GrayLevel[0.4]], 
         Cell[
          StyleData["Title", "Printout"], 
          CellMargins -> {{64, Inherited}, {50, 72}}]}, Closed]], 
      Cell[
       StyleData["Chapter"], MenuCommandKey -> None], 
      Cell[
       StyleData["Subchapter"], MenuCommandKey -> None], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["Section"], CellFrame -> {{0, 0}, {0, 0}}, CellDingbat -> 
          Cell[
            TextData[
             CounterBox["Section"], 
             StyleBox[
             "|\[NegativeThinSpace]", FontColor -> 
              RGBColor[
               0.9019607843137255, 0.4117647058823529, 0.027450980392156862`],
               FontFamily -> "Courier", FontSize -> 36, FontWeight -> Plain]],
             "SectionNumber"], CellMargins -> {{96, Inherited}, {12, 44}}, 
          Evaluatable -> True, CellGroupingRules -> {"SectionGrouping", 60}, 
          PageBreakAbove -> True, ShowCellLabel -> False, 
          CellFrameLabelMargins -> {{2, Inherited}, {Inherited, Inherited}}, 
          CellChangeTimes -> {3.652728456208679*^9, 3.652728527108994*^9}, 
          CounterIncrements -> "Section", 
          CounterAssignments -> {{"Subsection", 0}, {"Subsubsection", 0}, {
            "Exercise", 0}}, FontFamily -> "Source Sans Pro Semibold", 
          FontSize -> 26, FontSlant -> "Plain", FontColor -> 
          RGBColor[
           0.9019607843137255, 0.4117647058823529, 0.027450980392156862`], 
          InterpretationBoxOptions -> {Editable -> True}], 
         Cell[
          StyleData["Section", "Printout"], 
          CellMargins -> {{96, Inherited}, {12, 2}}]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["SectionDoubleDigit"], CellFrame -> {{0, 0}, {0, 0}}, 
          CellDingbat -> Cell[
            TextData[
             CounterBox["Section"], 
             StyleBox[
             "|\[NegativeThinSpace]", FontColor -> 
              RGBColor[
               0.9019607843137255, 0.4117647058823529, 0.027450980392156862`],
               FontFamily -> "Courier", FontSize -> 36, FontWeight -> Plain]],
             "SectionNumber"], CellMargins -> {{112, Inherited}, {12, 44}}, 
          Evaluatable -> True, CellGroupingRules -> {"SectionGrouping", 60}, 
          PageBreakAbove -> True, ShowCellLabel -> False, 
          CellFrameLabelMargins -> {{2, Inherited}, {Inherited, Inherited}}, 
          CellChangeTimes -> {3.652728456208679*^9, 3.652728527108994*^9}, 
          CounterIncrements -> "Section", 
          CounterAssignments -> {{"Subsection", 0}, {"Subsubsection", 0}, {
            "Exercise", 0}}, FontFamily -> "Source Sans Pro Semibold", 
          FontSize -> 26, FontSlant -> "Plain", FontColor -> 
          RGBColor[
           0.9019607843137255, 0.4117647058823529, 0.027450980392156862`], 
          InterpretationBoxOptions -> {Editable -> True}], 
         Cell[
          StyleData["SectionDoubleDigit", "Printout"], 
          CellMargins -> {{112, Inherited}, {12, 2}}]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["SectionNumber"], CellBaseline -> Baseline, FontFamily -> 
          "Source Sans Pro Semibold", FontSize -> 26, FontColor -> 
          RGBColor[
           0.9019607843137255, 0.4117647058823529, 0.027450980392156862`]], 
         Cell[
          StyleData["SectionNumber", "Printout"]]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["SectionInline"], FontFamily -> 
          "Source Sans Pro Semibold", FontColor -> 
          RGBColor[
           0.9019607843137255, 0.4117647058823529, 0.027450980392156862`]], 
         Cell[
          StyleData["SectionInline", "Printout"]]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["SectionNoDingbat"], 
          CellMargins -> {{64, Inherited}, {12, 44}}, Evaluatable -> True, 
          CellGroupingRules -> {"SectionGrouping", 60}, PageBreakAbove -> 
          True, ShowCellLabel -> False, 
          CellFrameLabelMargins -> {{2, Inherited}, {Inherited, Inherited}}, 
          CellChangeTimes -> {3.652728456208679*^9, 3.652728527108994*^9}, 
          CounterIncrements -> "Section", 
          CounterAssignments -> {{"Subsection", 0}, {"Subsubsection", 0}, {
            "Exercise", 0}}, FontFamily -> "Source Sans Pro Semibold", 
          FontSize -> 26, FontSlant -> "Plain", FontColor -> 
          RGBColor[
           0.9019607843137255, 0.4117647058823529, 0.027450980392156862`], 
          InterpretationBoxOptions -> {Editable -> True}], 
         Cell[
          StyleData["SectionNoDingbat", "Printout"], 
          CellMargins -> {{64, Inherited}, {12, 2}}]}, Closed]], 
      Cell[
       StyleData["AnswerKeyNumberedSection"], 
       CellMargins -> {{64, Inherited}, {8, 28}}, Evaluatable -> True, 
       CellGroupingRules -> {"SectionGrouping", 60}, PageBreakAbove -> True, 
       ShowCellLabel -> False, 
       CellFrameLabelMargins -> {{2, Inherited}, {Inherited, Inherited}}, 
       CellChangeTimes -> {3.652728456208679*^9, 3.652728527108994*^9}, 
       CounterIncrements -> "Section", 
       CounterAssignments -> {{"Subsection", 0}, {"Subsubsection", 0}, {
         "Exercise", 0}}, FontFamily -> "Source Sans Pro Semibold", FontSize -> 
       18, FontSlant -> "Plain", FontColor -> 
       RGBColor[
        0.9019607843137255, 0.4117647058823529, 0.027450980392156862`], 
       InterpretationBoxOptions -> {Editable -> True}], 
      Cell[
       StyleData["AnswerKeySectionNumber"], CellBaseline -> Baseline, 
       FontFamily -> "Source Sans Pro Semibold", FontSize -> 18, FontColor -> 
       RGBColor[
        0.9019607843137255, 0.4117647058823529, 0.027450980392156862`]], 
      Cell[
       StyleData["IndexLinkGuide"], 
       CellMargins -> {{64, Inherited}, {48, 28}}, Evaluatable -> True, 
       CellGroupingRules -> {"SectionGrouping", 60}, PageBreakAbove -> True, 
       ShowCellLabel -> False, 
       CellFrameLabelMargins -> {{2, Inherited}, {Inherited, Inherited}}, 
       CellChangeTimes -> {3.652728456208679*^9, 3.652728527108994*^9}, 
       CounterIncrements -> "Section", 
       CounterAssignments -> {{"Subsection", 0}, {"Subsubsection", 0}, {
         "Exercise", 0}}, FontFamily -> "Source Sans Pro", FontSize -> 14, 
       FontSlant -> "Plain", FontColor -> 
       RGBColor[
        0.9019607843137255, 0.4117647058823529, 0.027450980392156862`], 
       InterpretationBoxOptions -> {Editable -> True}], 
      Cell[
       StyleData["Index"], MenuSortingValue -> 10000, FontFamily -> 
       "Source Sans Pro", FontSize -> 11], 
      Cell[
       StyleData["IndexSubentry"], MenuSortingValue -> 10000, FontFamily -> 
       "Source Sans Pro", FontSize -> 11], 
      Cell[
       StyleData["FunctionName"], MenuSortingValue -> 10000, FontFamily -> 
       "Source Sans Pro Semibold", FontWeight -> "Bold"], 
      Cell[
       StyleData["IndexColumn"], 
       CellMargins -> {{66, 0}, {Inherited, Inherited}}, TabSpacings -> {2.}, 
       MenuSortingValue -> 10000, FontFamily -> "Source Sans Pro", 
       GridBoxOptions -> {
        GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
         GridBoxItemSize -> {"Columns" -> {{25}}}, 
         GridBoxSpacings -> {"Columns" -> {{2}}}}], 
      Cell[
       StyleData["IndexSubsection"], 
       CellMargins -> {{64, Inherited}, {9, 28}}, 
       CellGroupingRules -> {"SectionGrouping", 40}, MenuSortingValue -> 
       10000, FontFamily -> "Source Sans Pro", FontSize -> 24], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["Subsection"], CellMargins -> {{64, Inherited}, {12, 32}},
           FontFamily -> "Source Sans Pro Semibold", FontSize -> 18, 
          FontColor -> 
          RGBColor[
           0.9019607843137255, 0.4117647058823529, 0.027450980392156862`]], 
         Cell[
          StyleData["Subsection", "Printout"], 
          CellMargins -> {{64, Inherited}, {12, 32}}]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["ResourcesSubsection"], 
          CellMargins -> {{64, Inherited}, {4, 16}}, FontFamily -> 
          "Source Sans Pro Semibold", FontSize -> 15, FontSlant -> "Plain", 
          FontColor -> GrayLevel[0]], 
         Cell[
          StyleData["ResourcesSubsection", "Printout"], 
          CellMargins -> {{64, Inherited}, {4, 16}}]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["Subsubsection"], 
          CellMargins -> {{64, Inherited}, {6, 12}}, FontFamily -> 
          "Source Sans Pro Semibold", FontSize -> 16, FontColor -> 
          RGBColor[
           0.9019607843137255, 0.4117647058823529, 0.027450980392156862`]], 
         Cell[
          StyleData["Subsubsection", "Printout"], 
          CellMargins -> {{64, Inherited}, {6, 12}}]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["VocabularySection"], PageWidth -> 700, 
          CellFrame -> {{0, 0}, {0, 3}}, 
          CellMargins -> {{64, Inherited}, {8, 24}}, 
          CellGroupingRules -> {"SectionGrouping", 60}, PageBreakBelow -> 
          False, CellFrameMargins -> {{8, 8}, {4, 6}}, CellFrameColor -> 
          RGBColor[0.901961, 0.411765, 0.027451], FontFamily -> 
          "Source Sans Pro", FontSize -> 18, FontSlant -> "Italic", FontColor -> 
          RGBColor[
           0.9019607843137255, 0.4117647058823529, 0.027450980392156862`], 
          GridBoxOptions -> {GridBoxAlignment -> {}}], 
         Cell[
          StyleData["VocabularySection", "Printout"], 
          CellMargins -> {{64, Inherited}, {8, 24}}]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["VocabularyTable", StyleDefinitions -> StyleData["Text"]],
           SpanMaxSize -> 1, FontFamily -> "Source Sans Pro Light", FontColor -> 
          GrayLevel[0.8], 
          GridBoxOptions -> {
           GridBoxAlignment -> {"Columns" -> {{Left}}}, 
            GridBoxDividers -> {"Columns" -> {{False}}, "Rows" -> {False, {
                 Directive[
                  Thickness[0.5], "VocabDivColor"]}, False}}, 
            GridBoxItemStyle -> {
             "Columns" -> {"VocabularyCode", Inherited, Inherited}, 
              "Rows" -> {{Automatic}}}, 
            GridBoxSpacings -> {
             "Columns" -> {{0, 1, 2, 1, 2}}, "Rows" -> {{1}}}}], 
         Cell[
          StyleData["VocabularyTable", "Printout"]]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData[
          "VocabularyTable3Column", StyleDefinitions -> StyleData["Text"]], 
          SpanMaxSize -> 1, FontFamily -> "Source Sans Pro Light", FontColor -> 
          GrayLevel[0.8], 
          GridBoxOptions -> {
           GridBoxAlignment -> {"Columns" -> {{Left}}}, 
            GridBoxDividers -> {"Columns" -> {{False}}, "Rows" -> {False, {
                 Directive[
                  Thickness[0.5], "VocabDivColor"]}, False}}, 
            GridBoxItemStyle -> {
             "Columns" -> {
               "VocabularyCode", Inherited, "VocabularyCode", Inherited, 
                Inherited}, "Rows" -> {{Automatic}}}, 
            GridBoxSpacings -> {
             "Columns" -> {{0, 1, 2, 1, 2}}, "Rows" -> {{1}}}}], 
         Cell[
          StyleData["VocabularyTable3Column", "Printout"]]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["VocabularyText"], FontFamily -> "Source Sans Pro", 
          FontSize -> 14, FontWeight -> "Plain", FontSlant -> "Plain", 
          FontColor -> GrayLevel[0.25]], 
         Cell[
          StyleData["VocabularyText", "Printout"], 
          CellMargins -> {{66, 10}, {7, 7}}]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["VocabularyCode", StyleDefinitions -> StyleData["Text"]], 
          Deletable -> False, FontFamily -> "Source Sans Pro", FontSize -> 14,
           FontWeight -> "Bold", FontColor -> GrayLevel[0.25], 
          GridBoxOptions -> {
           GridBoxAlignment -> {"Columns" -> {{Left}}}, 
            GridBoxDividers -> {
             "Columns" -> {{False}}, "ColumnsIndexed" -> {}, 
              "Rows" -> {True, {True}, True}, "RowsIndexed" -> {}}}], 
         Cell[
          StyleData["VocabularyCode", "Printout"], FontColor -> 
          GrayLevel[0.25]]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["VocabDivColor"], FontColor -> GrayLevel[0.8]], 
         Cell[
          StyleData["VocabDivColor", "Printout"]]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["ExerciseSection"], PageWidth -> 700, 
          CellFrame -> {{0, 0}, {0, 3}}, 
          CellMargins -> {{64, Inherited}, {8, 30}}, Evaluatable -> True, 
          CellGroupingRules -> {"SectionGrouping", 60}, PageBreakBelow -> 
          False, ShowCellLabel -> False, CellFrameMargins -> {{8, 8}, {4, 6}},
           CellFrameColor -> RGBColor[0.901961, 0.411765, 0.027451], 
          CounterAssignments -> {{"Subsection", 0}, {"Subsubsection", 0}, {
            "Exercise", 0}}, FontFamily -> "Source Sans Pro", FontSize -> 18, 
          FontSlant -> "Italic", FontColor -> 
          RGBColor[
           0.9019607843137255, 0.4117647058823529, 0.027450980392156862`], 
          GridBoxOptions -> {GridBoxAlignment -> {}}], 
         Cell[
          StyleData["ExerciseSection", "Printout"], 
          CellMargins -> {{64, Inherited}, {8, 30}}]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["Exercise"], PageWidth -> 700, CellDingbat -> Cell[
            TextData[{"  ", 
              CounterBox["Section"], ".", 
              CounterBox["Exercise"]}], "ExerciseNumber", FontColor -> 
            RGBColor[
             0.9019607843137255, 0.4117647058823529, 0.027450980392156862`]], 
          ShowGroupOpener -> True, CellMargins -> {{108, Inherited}, {4, 8}}, 
          CellGroupingRules -> {"SectionGrouping", 67}, CounterIncrements -> 
          "Exercise", MenuSortingValue -> 10020, MenuCommandKey -> "2", 
          FontFamily -> "Source Sans Pro", FontSize -> 14, FontWeight -> 
          "Plain", FontSlant -> "Plain", FontColor -> GrayLevel[0.25]], 
         Cell[
          StyleData["Exercise", "Printout"], ShowGroupOpener -> False, 
          CellMargins -> {{110, Inherited}, {4, 8}}]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["ExerciseNumber"], FontFamily -> "Source Sans Pro", 
          FontSize -> 14, FontWeight -> "Bold", FontColor -> GrayLevel[0.25]], 
         Cell[
          StyleData["ExerciseNumber", "Printout"]]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["ExerciseSubsection"], PageWidth -> 500, 
          CellFrame -> {{False, False}, {1, False}}, 
          CellMargins -> {{64, Inherited}, {8, 18}}, 
          CellGroupingRules -> {"SectionGrouping", 60}, CellFrameColor -> 
          RGBColor[0.65, 0.6, 0.6], FontFamily -> "Source Sans Pro", FontSize -> 
          18, FontSlant -> "Italic", FontColor -> RGBColor[0.65, 0.6, 0.6]], 
         Cell[
          StyleData["ExerciseSubsection", "Printout"], 
          CellFrame -> {{False, False}, {1, False}}, CellFrameColor -> 
          RGBColor[0.65, 0.6, 0.6]]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["ExerciseNote"], PageWidth -> 700, 
          CellMargins -> {{64, Inherited}, {4, 8}}, PageBreakBelow -> False, 
          MenuSortingValue -> 10050, FontFamily -> "Source Sans Pro", 
          FontSize -> 14, FontWeight -> "Plain", FontSlant -> "Plain", 
          FontColor -> GrayLevel[0.25], $CellContext`ReturnCreatesNewCell -> 
          True], 
         Cell[
          StyleData["ExerciseNote", "Printout"], 
          CellMargins -> {{64, Inherited}, {4, 8}}]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["QASection"], PageWidth -> 700, 
          CellFrame -> {{0, 0}, {0, 3}}, 
          CellMargins -> {{64, Inherited}, {8, 30}}, 
          CellGroupingRules -> {"SectionGrouping", 60}, PageBreakBelow -> 
          False, CellFrameMargins -> {{8, 8}, {4, 6}}, CellFrameColor -> 
          RGBColor[0.901961, 0.411765, 0.027451], 
          CounterAssignments -> {{"Subsection", 0}, {"Subsubsection", 0}, {
            "Question", 0}}, FontFamily -> "Source Sans Pro", FontSize -> 18, 
          FontSlant -> "Italic", FontColor -> 
          RGBColor[
           0.9019607843137255, 0.4117647058823529, 0.027450980392156862`], 
          GridBoxOptions -> {GridBoxAlignment -> {}}], 
         Cell[
          StyleData["QASection", "Printout"], 
          CellMargins -> {{64, Inherited}, {8, 30}}]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["Question"], PageWidth -> 700, 
          CellMargins -> {{64, Inherited}, {2, 12}}, PageBreakBelow -> False, 
          CounterIncrements -> "Question", MenuSortingValue -> 10030, 
          MenuCommandKey -> "3", FontFamily -> "Source Sans Pro", FontSize -> 
          14, FontWeight -> "Bold", FontSlant -> 
          "Plain", $CellContext`ReturnCreatesNewCell -> 
          True, $CellContext`DefaultReturnCreatedCellStyle -> "Answer"], 
         Cell[
          StyleData["Question", "Printout"], 
          CellMargins -> {{65, Inherited}, {2, 12}}]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["Answer"], PageWidth -> 700, 
          CellMargins -> {{66, 10}, {4, 1}}, LineSpacing -> {1.125, 1., 2.}, 
          MenuSortingValue -> 10032, FontFamily -> "Source Sans Pro", 
          FontSize -> 14, FontWeight -> "Plain", FontSlant -> "Plain", 
          FontColor -> GrayLevel[0.25], $CellContext`ReturnCreatesNewCell -> 
          True, $CellContext`DefaultReturnCreatedCellStyle -> "Question"], 
         Cell[
          StyleData["Answer", "Printout"], 
          CellMargins -> {{66, 10}, {4, 1}}]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["QuestionNumber"], FontFamily -> "Source Sans Pro", 
          FontSize -> 14, FontWeight -> "Bold", FontColor -> GrayLevel[0.25]], 
         Cell[
          StyleData["QuestionNumber", "Printout"]]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["TechNoteSection"], PageWidth -> 700, 
          CellFrame -> {{0, 0}, {0, 3}}, 
          CellMargins -> {{64, Inherited}, {8, 30}}, 
          CellGroupingRules -> {"SectionGrouping", 60}, PageBreakBelow -> 
          False, CellFrameMargins -> {{8, 8}, {4, 6}}, CellFrameColor -> 
          RGBColor[0.901961, 0.411765, 0.027451], FontFamily -> 
          "Source Sans Pro", FontSize -> 18, FontSlant -> "Italic", FontColor -> 
          RGBColor[
           0.9019607843137255, 0.4117647058823529, 0.027450980392156862`], 
          GridBoxOptions -> {GridBoxAlignment -> {}}], 
         Cell[
          StyleData["TechNoteSection", "Printout"], 
          CellMargins -> {{64, Inherited}, {8, 30}}]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["TechNote"], PageWidth -> 700, CellDingbat -> Cell[
            TextData[{"\[FilledSmallSquare]"}], FontSize -> 12, FontColor -> 
            GrayLevel[0.5]], CellMargins -> {{78, Inherited}, {4, 8}}, 
          CellChangeTimes -> {{3.651515120816633*^9, 3.651515125814807*^9}, 
            3.6515155174947033`*^9}, LineSpacing -> {1.25, 1., 2.}, 
          MenuSortingValue -> 10040, FontFamily -> "Source Sans Pro", 
          FontSize -> 14, FontWeight -> "Plain", FontSlant -> "Plain", 
          FontColor -> GrayLevel[0.25], $CellContext`ReturnCreatesNewCell -> 
          True], 
         Cell[
          StyleData["TechNote", "Printout"], 
          CellMargins -> {{82, Inherited}, {4, 8}}]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["MoreExploreSection"], PageWidth -> 700, 
          CellFrame -> {{0, 0}, {0, 3}}, 
          CellMargins -> {{64, Inherited}, {8, 30}}, 
          CellGroupingRules -> {"SectionGrouping", 60}, PageBreakBelow -> 
          False, CellFrameMargins -> {{8, 8}, {4, 6}}, CellFrameColor -> 
          RGBColor[0.901961, 0.411765, 0.027451], FontFamily -> 
          "Source Sans Pro", FontSize -> 18, FontSlant -> "Italic", FontColor -> 
          RGBColor[
           0.9019607843137255, 0.4117647058823529, 0.027450980392156862`], 
          GridBoxOptions -> {GridBoxAlignment -> {}}], 
         Cell[
          StyleData["MoreExploreSection", "Printout"], 
          CellMargins -> {{64, Inherited}, {8, 30}}]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["MoreExplore"], PageWidth -> 700, 
          CellMargins -> {{64, Inherited}, {4, 8}}, PageBreakBelow -> False, 
          MenuSortingValue -> 10050, FontFamily -> "Source Sans Pro", 
          FontSize -> 14, FontWeight -> "Plain", FontSlant -> "Plain", 
          FontColor -> GrayLevel[0], $CellContext`ReturnCreatesNewCell -> 
          True], 
         Cell[
          StyleData["MoreExplore", "Printout"], 
          CellMargins -> {{64, Inherited}, {4, 8}}]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["MoreExploreShortURL"], 
          CellMargins -> {{64, Inherited}, {4, 8}}, PageBreakBelow -> False, 
          FontFamily -> "Source Sans Pro Light", FontSize -> 14, FontSlant -> 
          "Plain", FontColor -> GrayLevel[0]], 
         Cell[
          StyleData["MoreExploreShortURL", "Printout"], 
          CellMargins -> {{64, Inherited}, {4, 8}}]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["Text"], CellMargins -> {{66, 10}, {4, 14}}, FontFamily -> 
          "Baskerville", FontSize -> 18, FontColor -> 
          GrayLevel[0], $CellContext`ReturnCreatesNewCell -> True], 
         Cell[
          StyleData["Text", "Printout"], CellMargins -> {{66, 10}, {7, 7}}]}, 
        Closed]], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["ResourcesText"], CellMargins -> {{66, 10}, {2, 0}}, 
          FontFamily -> "Source Sans Pro", FontSize -> 14, FontWeight -> 
          "Plain", FontSlant -> "Plain", FontColor -> 
          GrayLevel[0], $CellContext`ReturnCreatesNewCell -> True], 
         Cell[
          StyleData["ResourcesText", "Printout"], 
          CellMargins -> {{66, 10}, {2, 0}}]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["ResourcesLink"], CellMargins -> {{66, 10}, {2, 0}}, 
          FontFamily -> "Source Sans Pro", FontSize -> 14, FontWeight -> 
          "Plain", FontSlant -> "Italic", FontColor -> 
          GrayLevel[0], $CellContext`ReturnCreatesNewCell -> True], 
         Cell[
          StyleData["ResourcesLink", "Printout"], 
          CellMargins -> {{66, 10}, {2, 0}}]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["CodeCaption"], CellFrame -> {{0, 0}, {0, 0}}, 
          CellMargins -> {{66, 10}, {4, 12}}, PageBreakBelow -> False, 
          CellFrameColor -> GrayLevel[0.4], MenuSortingValue -> 10010, 
          MenuCommandKey -> "1", FontFamily -> "Source Sans Pro", FontSize -> 
          16, FontColor -> GrayLevel[0.25]], 
         Cell[
          StyleData["CodeCaption", "Printout"], 
          CellMargins -> {{66, 10}, {4, 12}}]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["Input"], CellMargins -> {{99, 10}, {3, 7}}, SpanMaxSize -> 
          1, FontSize -> 15], 
         Cell[
          StyleData["Input", "Printout"], CellMargins -> {{99, 10}, {3, 7}}]},
         Closed]], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["Output"], CellMargins -> {{99, 10}, {14, 7}}, FontSize -> 
          15], 
         Cell[
          StyleData["Output", "Printout"], 
          CellMargins -> {{99, 10}, {14, 7}}]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["InputOnly"], CellMargins -> {{99, 10}, {25, 10}}, 
          SpanMaxSize -> 1, MenuSortingValue -> 1500, FontSize -> 15], 
         Cell[
          StyleData["InputOnly", "Printout"], 
          CellMargins -> {{99, 10}, {15, 10}}]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["CellLabel"], 
          CellLabelMargins -> {{12, Inherited}, {Inherited, Inherited}}, 
          LanguageCategory -> None, StyleMenuListing -> None, FontFamily -> 
          "Helvetica Neue", FontSize -> 9, FontWeight -> "Plain", FontSlant -> 
          "Plain", FontColor -> GrayLevel[0.5]], 
         Cell[
          StyleData["CellLabel", "Printout"], FontSize -> 8, FontColor -> 
          GrayLevel[0.5]]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["Message"], Editable -> False, 
          CellMargins -> {{66, Inherited}, {Inherited, Inherited}}, 
          CellGroupingRules -> "OutputGrouping", TextClipboardType -> 
          "PlainText", PageBreakWithin -> False, GroupPageBreakWithin -> 
          False, GeneratedCell -> True, CellAutoOverwrite -> True, 
          ShowCellLabel -> False, DefaultFormatType -> 
          DefaultOutputFormatType, ContextMenu -> 
          FEPrivate`FrontEndResource["ContextMenus", "Output"], 
          ShowAutoStyles -> False, ShowSyntaxStyles -> False, 
          AutoStyleOptions -> {
           "StringStyle" -> None, "SyntaxErrorStyle" -> None}, 
          HyphenationOptions -> {"HyphenationCharacter" -> "\[Continuation]"},
           AutoItalicWords -> {}, AutoQuoteCharacters -> {}, 
          PasteAutoQuoteCharacters -> {}, LanguageCategory -> None, 
          FormatType -> InputForm, ShowStringCharacters -> False, 
          CounterIncrements -> "Message", MenuSortingValue -> 1600, 
          StyleMenuListing -> None, FontFamily :> 
          CurrentValue["PanelFontFamily"], FontSize -> 11, FontColor -> 
          RGBColor[0.5072, 0.16933, 0.15221], $CellContext`StripStyleOnPaste -> 
          True], 
         Cell[
          StyleData["Message", "Printout"], 
          CellMargins -> {{100, Inherited}, {Inherited, Inherited}}, 
          CellFrameLabels -> {{None, None}, {None, None}}, FontColor -> 
          GrayLevel[0]]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["ExerciseInput", StyleDefinitions -> StyleData["Input"]], 
          CellMargins -> {{88, 10}, {4, 7}}, ShowCellLabel -> False, 
          SpanMaxSize -> 1, FontSize -> 
          14, $CellContext`GeneratedCellStyles -> {
           "Output" -> "ExerciseOutput"}], 
         Cell[
          StyleData["ExerciseInput", "Printout"], 
          CellMargins -> {{88, 10}, {4, 7}}]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData[
          "ExerciseOutput", StyleDefinitions -> StyleData["Output"]], 
          CellMargins -> {{88, 10}, {10, 4}}, ShowCellLabel -> False, 
          FontSize -> 14], 
         Cell[
          StyleData["ExerciseOutput", "Printout"], 
          CellMargins -> {{88, 10}, {10, 4}}]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["Picture"], CellMargins -> {{66, 10}, {10, 10}}, 
          CellGroupingRules -> "GraphicsGrouping", StyleMenuListing -> None], 
         
         Cell[
          StyleData["Picture", "Printout"], 
          CellMargins -> {{66, 10}, {8, 8}}]}, Closed]], 
      Cell[
       StyleData["ExerciseSummaryCell"], PageWidth -> 700, CellFrame -> 0, 
       CellMargins -> {{64, Inherited}, {8, 10}}, 
       CellGroupingRules -> {"SectionGrouping", 64}, PageBreakBelow -> False, 
       ShowCellLabel -> False, CellFrameMargins -> 0, ShowStringCharacters -> 
       False, FontFamily -> "Source Sans Pro", FontSize -> 18, FontColor -> 
       RGBColor[1, 1, 1], 
       GridBoxOptions -> {GridBoxBackground -> {"Columns" -> {{
              RGBColor[0.990997, 0.539528, 0.155779], 
              RGBColor[0.989487, 0.434699, 0.0320439]}}, "Rows" -> {{None}}}, 
         GridBoxItemSize -> {"Columns" -> {
             Scaled[0.7], 
             Scaled[0.3]}, "Rows" -> {{Automatic}}}}], 
      Cell[
       StyleData["ExerciseSummaryHeading"], ShowStringCharacters -> False, 
       FontFamily -> "Source Sans Pro", FontSize -> 18, FontColor -> 
       RGBColor[1, 1, 1]], 
      Cell[
       StyleData["ExerciseSummarySubheading"], ShowStringCharacters -> False, 
       FontFamily -> "Source Sans Pro", FontSize -> 15, FontColor -> 
       RGBColor[1., 0.9294117647058824, 0.7215686274509804]], 
      Cell[
       StyleData["ExercisePreviewButtonText"], ShowStringCharacters -> False, 
       FontFamily -> "Source Sans Pro", FontSize -> 14, FontSlant -> "Plain", 
       FontColor -> RGBColor[0.6, 0.6, 0.6]], 
      Cell[
       StyleData["ExercisePreviewButtonTextHighlight"], ShowStringCharacters -> 
       False, FontFamily -> "Source Sans Pro", FontSize -> 14, FontSlant -> 
       "Plain", FontColor -> 
       RGBColor[
        0.9019607843137255, 0.4117647058823529, 0.027450980392156862`]]}, 
     Open]], 
   Cell[
    CellGroupData[{
      Cell[
      "Inline and special formatting", "Section", 
       CellChangeTimes -> {{3.646681732592888*^9, 3.646681749414035*^9}}], 
      Cell[
       StyleData["Graphics"], MenuSortingValue -> None], 
      Cell[
       StyleData["Graphics3D"], MenuSortingValue -> None], 
      Cell[
       StyleData["StandardForm"], 
       InputAutoReplacements -> {
        "->" -> "\[Rule]", ":>" -> "\[RuleDelayed]", "<=" -> "\[LessEqual]", 
         ">=" -> "\[GreaterEqual]", "!=" -> "\[NotEqual]", "==" -> "\[Equal]",
          "@>" -> "\\[InlinePart]", "<->" -> "\[UndirectedEdge]", ParentList},
        LineSpacing -> {1.25, 0, 2}, SingleLetterItalics -> False, 
       StyleMenuListing -> None, FontFamily -> "Source Sans Pro", 
       PrivateFontOptions -> {"OperatorSubstitution" -> True}], 
      Cell[
       StyleData["OutputForm"], PageWidth -> DirectedInfinity[1], 
       TextAlignment -> Left, LineSpacing -> {0.6, 1}, 
       AutoQuoteCharacters -> {}, PasteAutoQuoteCharacters -> {}, 
       StyleMenuListing -> None, FontFamily -> "Source Sans Pro", 
       PrivateFontOptions -> {"OperatorSubstitution" -> True}], 
      Cell[
       StyleData["InputForm"], PageWidth -> DirectedInfinity[1], 
       InputAutoReplacements -> {}, AllowInlineCells -> False, Hyphenation -> 
       False, AutoQuoteCharacters -> {}, PasteAutoQuoteCharacters -> {}, 
       AutoSpacing -> False, NumberMarks -> True, AutoNumberFormatting -> 
       False, StyleMenuListing -> None, FontFamily -> "Source Sans Pro", 
       PrivateFontOptions -> {"OperatorSubstitution" -> True}], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["DetailsLink"], FontFamily -> "Source Sans Pro", FontSize :> 
          If[CurrentValue[
              EvaluationCell[], "FontFamily"] === "Source Sans Pro", 
            Inherited, 
            If[CurrentValue[
               EvaluationCell[], "FontFamily"] === "WolframCodeSans", 
             Inherited, Inherited 0.9]], FontColor -> GrayLevel[0], 
          ButtonBoxOptions -> {
           ButtonFunction :> (
             Function[$CellContext`t, 
              NotebookFind[$CellContext`t, "Notes", All, CellStyle]; 
              NotebookFind[$CellContext`t, "NotesSection", All, CellStyle, 
                AutoScroll -> Top]][
              Documentation`HelpLookup[
               StringJoin["ref/", #]]]& ), ButtonSource -> ButtonContents, 
            Evaluator -> Automatic}], 
         Cell[
          StyleData["DetailsLink", "Printout"], FontFamily -> 
          "Source Sans Pro", FontSize :> If[CurrentValue[
              EvaluationCell[], "FontFamily"] === "Source Sans Pro", 
            Inherited, 
            If[CurrentValue[
               EvaluationCell[], "FontFamily"] === "WolframCodeSans", 
             Inherited, Inherited 0.88]], FontColor -> GrayLevel[0]]}, 
        Closed]], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["LinkAlt"], FontFamily -> "Source Sans Pro", FontSize :> 
          If[CurrentValue[
              EvaluationCell[], "FontFamily"] === "Source Sans Pro", 
            Inherited, 
            If[CurrentValue[
               EvaluationCell[], "FontFamily"] === "WolframCodeSans", 
             Inherited, Inherited 0.9]], FontColor -> GrayLevel[0]], 
         Cell[
          StyleData["LinkAlt", "Printout"], FontFamily -> "Source Sans Pro", 
          FontSize :> If[CurrentValue[
              EvaluationCell[], "FontFamily"] === "Source Sans Pro", 
            Inherited, 
            If[CurrentValue[
               EvaluationCell[], "FontFamily"] === "WolframCodeSans", 
             Inherited, Inherited 0.88]], FontColor -> GrayLevel[0]]}, 
        Closed]], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["Hyperlink"], MenuSortingValue -> None, FontColor -> 
          RGBColor[0.3, 0.35, 0.5]], 
         Cell[
          StyleData["Hyperlink", "Printout"]]}, Closed]], 
      Cell[
       StyleData[
       "IndexNavigationLink", StyleDefinitions -> StyleData["Hyperlink"]], 
       MenuSortingValue -> None, FontColor -> 
       RGBColor[
        0.9019607843137255, 0.4117647058823529, 0.027450980392156862`]], 
      Cell[
       StyleData["Crosslink"], 
       ButtonBoxOptions -> {ButtonFunction :> (FrontEndExecute[{
            
            NotebookLocate[#2, "OpenInNewWindow" -> 
             CurrentValue["HyperlinkModifierKey"]]}]& ), Evaluator -> None, 
         Method -> "Queued"}], 
      Cell[
       StyleData["VocabularyLink"], FontColor -> GrayLevel[0], 
       ButtonBoxOptions -> {ButtonFunction :> (FrontEndExecute[{
            
            NotebookLocate[#2, "OpenInNewWindow" -> 
             CurrentValue["HyperlinkModifierKey"]]}]& ), Evaluator -> None, 
         Method -> "Queued"}], 
      Cell[
       StyleData["InlineCode"], SpanMaxSize -> 1, FontColor -> GrayLevel[0]], 
      
      Cell[
       StyleData["InlineCodeText"], SpanMaxSize -> 1, FontFamily -> 
       "Source Sans Pro", FontSize -> 0.95 Inherited], 
      Cell[
       StyleData["NoLabel"], ShowCellLabel -> 
       False, $CellContext`GeneratedCellStyles -> {
        "Output" -> "ExerciseOutput"}], 
      Cell[
       StyleData["MenuName"], FontFamily -> "Verdana", FontWeight -> "Bold", 
       FontColor -> GrayLevel[0.286275]], 
      Cell[
       StyleData["KeyEvent"], CellFrame -> {{0.5, 0.5}, {0.5, 0.5}}, 
       CellFrameMargins -> {{2, 2}, {2, 2}}, CellFrameColor -> GrayLevel[0.7],
        FontFamily -> "Verdana", FontColor -> GrayLevel[0.4]], 
      Cell[
       StyleData["KeyEventDelimiter"], FontColor -> GrayLevel[0.5]], 
      Cell[
       CellGroupData[{
         Cell["Key Styles", "Subsubsection"], 
         Cell[
          StyleData["Key0"], 
          TemplateBoxOptions -> {DisplayFunction -> (FrameBox[
              TagBox[
               GridBox[{{
                  ItemBox[
                   
                   TemplateBox[{"\[ThickSpace]", #, "\[ThickSpace]"}, 
                    "RowDefault"], Background -> GrayLevel[1], StripOnInput -> 
                   False]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Center}}, "Rows" -> {{Baseline}}}, AutoDelete -> 
                False, GridBoxDividers -> {"Rows" -> {{None}}}, 
                GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{1.45}}},
                 GridBoxSpacings -> {"Columns" -> {{0}}}, 
                BaselinePosition -> {{1, 1}, Baseline}], "Grid"], 
              RoundingRadius -> 4, Background -> 
              GrayLevel[0.9333333333333333], 
              FrameMargins -> {{0, 0}, {-2, -2}}, FrameStyle -> {
                GrayLevel[0.8352941176470589], 
                AbsoluteThickness[1]}, BaselinePosition -> Baseline, 
              StripOnInput -> False]& )}], 
         Cell[
          StyleData["Key1"], 
          TemplateBoxOptions -> {DisplayFunction -> (FrameBox[
              TagBox[
               GridBox[{{
                  ItemBox[
                   
                   TemplateBox[{"\[ThickSpace]", #, "\[ThickSpace]"}, 
                    "RowDefault"], Background -> 
                   GrayLevel[0.9333333333333333], StripOnInput -> False], 
                  ItemBox[
                   
                   TemplateBox[{"\[ThickSpace]", #2, "\[ThickSpace]"}, 
                    "RowDefault"], Background -> GrayLevel[1], StripOnInput -> 
                   False]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Center}}, "Rows" -> {{Baseline}}}, AutoDelete -> 
                False, GridBoxDividers -> {
                 "ColumnsIndexed" -> {2 -> GrayLevel[0.8352941176470589]}, 
                  "Rows" -> {{None}}}, 
                GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{1.45}}},
                 GridBoxSpacings -> {"Columns" -> {{0}}}, 
                BaselinePosition -> {{1, 1}, Baseline}], "Grid"], 
              RoundingRadius -> 4, Background -> 
              GrayLevel[0.9333333333333333], 
              FrameMargins -> {{0, 0}, {-2, -2}}, FrameStyle -> {
                GrayLevel[0.8352941176470589], 
                AbsoluteThickness[1]}, BaselinePosition -> Baseline, 
              StripOnInput -> False]& )}], 
         Cell[
          StyleData["Key2"], 
          TemplateBoxOptions -> {DisplayFunction -> (FrameBox[
              TagBox[
               GridBox[{{
                  ItemBox[
                   
                   TemplateBox[{"\[ThickSpace]", #, "\[ThickSpace]"}, 
                    "RowDefault"], Background -> 
                   GrayLevel[0.9333333333333333], StripOnInput -> False], 
                  ItemBox[
                   
                   TemplateBox[{"\[ThickSpace]", #2, "\[ThickSpace]"}, 
                    "RowDefault"], Background -> 
                   GrayLevel[0.9333333333333333], StripOnInput -> False], 
                  ItemBox[
                   
                   TemplateBox[{"\[ThickSpace]", #3, "\[ThickSpace]"}, 
                    "RowDefault"], Background -> GrayLevel[1], StripOnInput -> 
                   False]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Center}}, "Rows" -> {{Baseline}}}, AutoDelete -> 
                False, GridBoxDividers -> {
                 "ColumnsIndexed" -> {
                   2 -> GrayLevel[0.8352941176470589], 3 -> 
                    GrayLevel[0.8352941176470589]}, "Rows" -> {{None}}}, 
                GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{1.45}}},
                 GridBoxSpacings -> {"Columns" -> {{0}}}, 
                BaselinePosition -> {{1, 1}, Baseline}], "Grid"], 
              RoundingRadius -> 4, Background -> 
              GrayLevel[0.9333333333333333], 
              FrameMargins -> {{0, 0}, {-2, -2}}, FrameStyle -> {
                GrayLevel[0.8352941176470589], 
                AbsoluteThickness[1]}, BaselinePosition -> Baseline, 
              StripOnInput -> False]& )}], 
         Cell[
          StyleData["Key3"], 
          TemplateBoxOptions -> {DisplayFunction -> (FrameBox[
              TagBox[
               GridBox[{{
                  ItemBox[
                   
                   TemplateBox[{"\[ThickSpace]", #, "\[ThickSpace]"}, 
                    "RowDefault"], Background -> 
                   GrayLevel[0.9333333333333333], StripOnInput -> False], 
                  ItemBox[
                   
                   TemplateBox[{"\[ThickSpace]", #2, "\[ThickSpace]"}, 
                    "RowDefault"], Background -> 
                   GrayLevel[0.9333333333333333], StripOnInput -> False], 
                  ItemBox[
                   
                   TemplateBox[{"\[ThickSpace]", #3, "\[ThickSpace]"}, 
                    "RowDefault"], Background -> 
                   GrayLevel[0.9333333333333333], StripOnInput -> False], 
                  ItemBox[
                   
                   TemplateBox[{"\[ThickSpace]", #4, "\[ThickSpace]"}, 
                    "RowDefault"], Background -> GrayLevel[1], StripOnInput -> 
                   False]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Center}}, "Rows" -> {{Baseline}}}, AutoDelete -> 
                False, GridBoxDividers -> {
                 "ColumnsIndexed" -> {
                   2 -> GrayLevel[0.8352941176470589], 3 -> 
                    GrayLevel[0.8352941176470589], 4 -> 
                    GrayLevel[0.8352941176470589]}, "Rows" -> {{None}}}, 
                GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{1.45}}},
                 GridBoxSpacings -> {"Columns" -> {{0}}}, 
                BaselinePosition -> {{1, 1}, Baseline}], "Grid"], 
              RoundingRadius -> 4, Background -> 
              GrayLevel[0.9333333333333333], 
              FrameMargins -> {{0, 0}, {-2, -2}}, FrameStyle -> {
                GrayLevel[0.8352941176470589], 
                AbsoluteThickness[1]}, BaselinePosition -> Baseline, 
              StripOnInput -> False]& )}]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell["Entity styles", "Subsubsection"], 
         Cell[
          StyleData["Entity"], ShowStringCharacters -> False, 
          TemplateBoxOptions -> {DisplayFunction -> (TooltipBox[
              FrameBox[
               PaneSelectorBox[{True -> GridBox[{{
                    
                    StyleBox[#, FontWeight -> "Bold", FontFamily -> 
                    "Source Sans Pro", FontColor -> 
                    RGBColor[0.395437, 0.20595, 0.061158]], 
                    StyleBox[
                    RowBox[{"(", #4, ")"}], FontFamily -> "Source Sans Pro", 
                    FontWeight -> "Plain", FontColor -> GrayLevel[0.65], 
                    Selectable -> False]}}, 
                   GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                   GridBoxSpacings -> {"Columns" -> {{0.2}}, "Rows" -> {{0}}},
                    BaselinePosition -> {1, 1}], False -> 
                 PaneBox[#, 
                   BaseStyle -> {
                    FontColor -> RGBColor[0.395437, 0.20595, 0.061158]}, 
                   BaselinePosition -> Baseline]}, 
                Dynamic[
                 CurrentValue[Evaluatable]], ImageSize -> Automatic, 
                BaselinePosition -> Baseline, 
                BaseStyle -> {FontFamily -> "Helvetica"}], FrameStyle -> 
               RGBColor[1., 0.504768, 0.], Background -> 
               RGBColor[1., 0.980392, 0.921569], 
               FrameMargins -> {{5, 5}, {1.5, 1.5}}, 
               ImageMargins -> {{2, 2}, {2, 2}}, BaselinePosition -> Baseline,
                RoundingRadius -> 4], #3, 
              BaseStyle -> {
               FontWeight -> "Plain", ShowStringCharacters -> False, 
                LineIndent -> 0, 
                PrivateFontOptions -> {"OperatorSubstitution" -> False}}]& ), 
            Editable -> False, InterpretationFunction -> (#2& )}], 
         Cell[
          StyleData["EntityFrameless"], ShowStringCharacters -> False, 
          TemplateBoxOptions -> {DisplayFunction -> (TooltipBox[
              PaneSelectorBox[{True -> GridBox[{{
                    
                    StyleBox[#, FontWeight -> "Bold", FontFamily -> 
                    "Source Sans Pro", FontColor -> 
                    RGBColor[0.395437, 0.20595, 0.061158]], 
                    StyleBox[
                    RowBox[{"(", #4, ")"}], FontFamily -> "Source Sans Pro", 
                    FontWeight -> "Plain", FontColor -> GrayLevel[0.65], 
                    Selectable -> False]}}, 
                  GridBoxItemSize -> {
                   "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                  GridBoxSpacings -> {"Columns" -> {{0.2}}, "Rows" -> {{0}}}, 
                  BaselinePosition -> {1, 1}], False -> 
                PaneBox[#, 
                  BaseStyle -> {
                   FontColor -> RGBColor[0.395437, 0.20595, 0.061158]}, 
                  BaselinePosition -> Baseline]}, 
               Dynamic[
                CurrentValue[Evaluatable]], ImageSize -> Automatic, 
               BaselinePosition -> Baseline, 
               BaseStyle -> {FontFamily -> "Helvetica"}], #3, 
              BaseStyle -> {
               ShowStringCharacters -> False, LineIndent -> 0, 
                PrivateFontOptions -> {
                 FontWeight -> "Plain", "OperatorSubstitution" -> False}}]& ),
             Editable -> False, InterpretationFunction -> (#2& )}], 
         Cell[
          StyleData["EntityFramelessHot"], ShowStringCharacters -> False, 
          TemplateBoxOptions -> {
           DisplayFunction -> (PaneSelectorBox[{True -> GridBox[{{
                   
                   StyleBox[#, FontWeight -> "Bold", FontFamily -> 
                    "Source Sans Pro", FontColor -> GrayLevel[0]], 
                   StyleBox[
                    RowBox[{"(", #4, ")"}], FontWeight -> "Plain", FontFamily -> 
                    "Source Sans Pro", FontColor -> GrayLevel[0], Selectable -> 
                    False]}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {"Columns" -> {{0.2}}, "Rows" -> {{0}}}, 
                 BaselinePosition -> {1, 1}], False -> 
               PaneBox[#, BaseStyle -> {FontColor -> GrayLevel[0]}, 
                 BaselinePosition -> Baseline]}, 
              Dynamic[
               CurrentValue[Evaluatable]], ImageSize -> Automatic, 
              BaselinePosition -> Baseline, 
              BaseStyle -> {
               FontWeight -> "Plain", FontFamily -> "Helvetica", 
                ShowStringCharacters -> False, LineIndent -> 0, 
                PrivateFontOptions -> {"OperatorSubstitution" -> False}}]& ), 
            Editable -> False, InterpretationFunction -> (#2& )}], 
         Cell[
          StyleData["EntityClass"], ShowStringCharacters -> False, 
          TemplateBoxOptions -> {DisplayFunction -> (TooltipBox[
              FrameBox[
               PaneSelectorBox[{True -> GridBox[{{
                    PaneBox[
                    DynamicBox[
                    FEPrivate`ImportImage[
                    
                    FrontEnd`ToFileName[{"Typeset", "Entity"}, 
                    "EntityClass.png"]], ImageSizeCache -> {8., {2., 6.}}], 
                    BaselinePosition -> Bottom], 
                    
                    StyleBox[#, FontWeight -> "Bold", FontFamily -> 
                    "Source Sans Pro", FontColor -> 
                    RGBColor[0.395437, 0.20595, 0.061158]], 
                    StyleBox[
                    RowBox[{"(", #4, ")"}], FontWeight -> "Plain", FontFamily -> 
                    "Source Sans Pro", FontColor -> GrayLevel[0.65], 
                    Selectable -> False]}}, 
                   GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                   GridBoxSpacings -> {"Columns" -> {{0.2}}, "Rows" -> {{0}}},
                    BaselinePosition -> {1, 2}], False -> GridBox[{{
                    PaneBox[
                    DynamicBox[
                    FEPrivate`ImportImage[
                    
                    FrontEnd`ToFileName[{"Typeset", "Entity"}, 
                    "EntityClass.png"]], ImageSizeCache -> {8., {2., 6.}}], 
                    BaselinePosition -> Bottom], 
                    
                    StyleBox[#, FontColor -> 
                    RGBColor[0.395437, 0.20595, 0.061158]]}}, 
                   GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                   GridBoxSpacings -> {"Columns" -> {{0.2}}, "Rows" -> {{0}}},
                    BaselinePosition -> {1, 2}]}, 
                Dynamic[
                 CurrentValue[Evaluatable]], ImageSize -> Automatic, 
                BaselinePosition -> Baseline, 
                BaseStyle -> {FontFamily -> "Helvetica"}], FrameStyle -> 
               RGBColor[1., 0.504768, 0.], Background -> 
               RGBColor[1., 0.980392, 0.921569], 
               FrameMargins -> {{5, 5}, {1.5, 1.5}}, 
               ImageMargins -> {{2, 2}, {2, 2}}, BaselinePosition -> Baseline,
                RoundingRadius -> 4], #3, 
              BaseStyle -> {
               FontWeight -> "Plain", ShowStringCharacters -> False, 
                LineIndent -> 0, 
                PrivateFontOptions -> {"OperatorSubstitution" -> False}}]& ), 
            Editable -> False, InterpretationFunction -> (#2& )}], 
         Cell[
          StyleData["EntityClassFrameless"], ShowStringCharacters -> False, 
          TemplateBoxOptions -> {DisplayFunction -> (TooltipBox[
              PaneSelectorBox[{True -> GridBox[{{
                    PaneBox[
                    DynamicBox[
                    FEPrivate`ImportImage[
                    
                    FrontEnd`ToFileName[{"Typeset", "Entity"}, 
                    "EntityClass.png"]], ImageSizeCache -> {8., {2., 6.}}], 
                    BaselinePosition -> Bottom], 
                    
                    StyleBox[#, FontWeight -> "Bold", FontFamily -> 
                    "Source Sans Pro", FontColor -> 
                    RGBColor[0.395437, 0.20595, 0.061158]], 
                    StyleBox[
                    RowBox[{"(", #4, ")"}], FontWeight -> "Plain", FontFamily -> 
                    "Source Sans Pro", FontColor -> GrayLevel[0.65], 
                    Selectable -> False]}}, 
                  GridBoxItemSize -> {
                   "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                  GridBoxSpacings -> {"Columns" -> {{0.2}}, "Rows" -> {{0}}}, 
                  BaselinePosition -> {1, 2}], False -> GridBox[{{
                    PaneBox[
                    DynamicBox[
                    FEPrivate`ImportImage[
                    
                    FrontEnd`ToFileName[{"Typeset", "Entity"}, 
                    "EntityClass.png"]], ImageSizeCache -> {8., {2., 6.}}], 
                    BaselinePosition -> Bottom], 
                    
                    StyleBox[#, FontColor -> 
                    RGBColor[0.395437, 0.20595, 0.061158]]}}, 
                  GridBoxItemSize -> {
                   "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                  GridBoxSpacings -> {"Columns" -> {{0.2}}, "Rows" -> {{0}}}, 
                  BaselinePosition -> {1, 2}]}, 
               Dynamic[
                CurrentValue[Evaluatable]], ImageSize -> Automatic, 
               BaselinePosition -> Baseline, 
               BaseStyle -> {FontFamily -> "Helvetica"}], #3, 
              BaseStyle -> {
               FontWeight -> "Plain", ShowStringCharacters -> False, 
                LineIndent -> 0, 
                PrivateFontOptions -> {"OperatorSubstitution" -> False}}]& ), 
            Editable -> False, InterpretationFunction -> (#2& )}], 
         Cell[
          StyleData["EntityClassFramelessHot"], ShowStringCharacters -> False,
           TemplateBoxOptions -> {
           DisplayFunction -> (PaneSelectorBox[{True -> GridBox[{{
                   PaneBox[
                    DynamicBox[
                    FEPrivate`ImportImage[
                    
                    FrontEnd`ToFileName[{"Typeset", "Entity"}, 
                    "EntityClass.png"]], ImageSizeCache -> {8., {2., 6.}}], 
                    BaselinePosition -> Bottom], 
                   
                   StyleBox[#, FontWeight -> "Bold", FontFamily -> 
                    "Source Sans Pro", FontColor -> GrayLevel[0]], 
                   StyleBox[
                    RowBox[{"(", #4, ")"}], FontWeight -> "Plain", FontFamily -> 
                    "Source Sans Pro", FontColor -> GrayLevel[0], Selectable -> 
                    False]}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {"Columns" -> {{0.2}}, "Rows" -> {{0}}}, 
                 BaselinePosition -> {1, 2}], False -> GridBox[{{
                   PaneBox[
                    DynamicBox[
                    FEPrivate`ImportImage[
                    
                    FrontEnd`ToFileName[{"Typeset", "Entity"}, 
                    "EntityClass.png"]], ImageSizeCache -> {8., {2., 6.}}], 
                    BaselinePosition -> Bottom], 
                   StyleBox[#, FontColor -> GrayLevel[0]]}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {"Columns" -> {{0.2}}, "Rows" -> {{0}}}, 
                 BaselinePosition -> {1, 2}]}, 
              Dynamic[
               CurrentValue[Evaluatable]], ImageSize -> Automatic, 
              BaselinePosition -> Baseline, 
              BaseStyle -> {
               FontWeight -> "Plain", FontFamily -> "Helvetica", 
                ShowStringCharacters -> False, LineIndent -> 0, 
                PrivateFontOptions -> {"OperatorSubstitution" -> False}}]& ), 
            Editable -> False, InterpretationFunction -> (#2& )}], 
         Cell[
          StyleData["EntityProperty"], ShowStringCharacters -> False, 
          TemplateBoxOptions -> {DisplayFunction -> (TooltipBox[
              FrameBox[
               
               PaneBox[#, 
                BaseStyle -> {
                 FontSlant -> Italic, FontWeight -> Plain, FontFamily -> 
                  "Source Sans Pro", FontColor -> 
                  RGBColor[0.395437, 0.20595, 0.061158]}, BaselinePosition -> 
                Baseline], FrameStyle -> 
               RGBColor[0.94227, 0.703639, 0.033387], Background -> 
               RGBColor[1., 0.980392, 0.921569], 
               FrameMargins -> {{5, 5}, {1.5, 1.5}}, 
               ImageMargins -> {{2, 2}, {2, 2}}, BaselinePosition -> Baseline,
                RoundingRadius -> 4], #3, 
              BaseStyle -> {
               FontWeight -> "Plain", ShowStringCharacters -> False, 
                LineIndent -> 0, 
                PrivateFontOptions -> {"OperatorSubstitution" -> False}}]& ), 
            Editable -> False, InterpretationFunction -> (#2& )}], 
         Cell[
          StyleData["EntityPropertyClass"], ShowStringCharacters -> False, 
          TemplateBoxOptions -> {DisplayFunction -> (TooltipBox[
              FrameBox[
               PaneBox[
                GridBox[{{
                   PaneBox[
                    DynamicBox[
                    FEPrivate`ImportImage[
                    
                    FrontEnd`ToFileName[{"Typeset", "Entity"}, 
                    "EntityClass.png"]], ImageSizeCache -> {8., {2., 6.}}], 
                    BaselinePosition -> Bottom], #}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {"Columns" -> {{0.2}}, "Rows" -> {{0}}}, 
                 BaselinePosition -> {1, 2}], 
                BaseStyle -> {
                 FontSlant -> Italic, FontWeight -> Plain, FontFamily -> 
                  "Source Sans Pro", FontColor -> 
                  RGBColor[0.395437, 0.20595, 0.061158]}, BaselinePosition -> 
                Baseline], FrameStyle -> 
               RGBColor[0.94227, 0.703639, 0.033387], Background -> 
               RGBColor[1., 0.980392, 0.921569], 
               FrameMargins -> {{5, 5}, {1.5, 1.5}}, 
               ImageMargins -> {{2, 2}, {2, 2}}, BaselinePosition -> Baseline,
                RoundingRadius -> 4], #3, 
              BaseStyle -> {
               FontWeight -> "Plain", ShowStringCharacters -> False, 
                LineIndent -> 0, 
                PrivateFontOptions -> {"OperatorSubstitution" -> False}}]& ), 
            Editable -> False, InterpretationFunction -> (#2& )}], 
         Cell[
          StyleData["EntityValue"], ShowStringCharacters -> False, 
          TemplateBoxOptions -> {DisplayFunction -> (FrameBox[
              
              GridBox[{{#, #2}}, GridBoxAlignment -> {"Rows" -> {{Baseline}}},
                GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}}, 
               GridBoxSpacings -> {"Columns" -> {{0}}}, 
               BaselinePosition -> {1, 1}], Background -> 
              RGBColor[{0.9921568627450981, 0.9529411764705882, 
                0.8509803921568627}], BaselinePosition -> Baseline, 
              FrameMargins -> {{1, 1}, {1, 1}}, ImageMargins -> 2, FrameStyle -> 
              RGBColor[{0.9333333333333333, 0.8470588235294118, 
                0.5529411764705883}], RoundingRadius -> 5]& )}]}, Closed]]}, 
     Closed]]}, Visible -> False, FrontEndVersion -> 
  "11.3 for Mac OS X x86 (32-bit, 64-bit Kernel) (March 5, 2018)", 
  StyleDefinitions -> "StylesheetFormatting.nb"]
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{
 "p:177"->{
  Cell[673, 24, 318, 8, 70, "SectionDoubleDigit",ExpressionUUID->"318f7d16-6989-4a43-b416-b20a96c6f6d5",
   CounterAssignments->{{"Section", 29}, {"Subsection", 0}, {"Subsubsection", 0}, {"Exercise", 0}},
   CellTags->"p:177"]},
 "i:1"->{
  Cell[1320, 44, 178, 6, 70, "CodeCaption",ExpressionUUID->"590a8f03-c698-4417-bdb7-c5bd64a91ab8",
   CellTags->"i:1"]},
 "i:2"->{
  Cell[3262, 125, 327, 12, 70, "Text",ExpressionUUID->"6d5f9508-6744-4745-b4fe-bd8b9abd6395",
   CellTags->"i:2"]},
 "i:3"->{
  Cell[4580, 178, 236, 9, 70, "Text",ExpressionUUID->"5e57246d-1846-42a0-8f4d-e9b3566a0be6",
   CellTags->"i:3"]},
 "i:4"->{
  Cell[5606, 222, 174, 6, 70, "CodeCaption",ExpressionUUID->"c562eaa7-c461-4be2-b0e9-eb1fd0dd05bb",
   CellTags->"i:4"]},
 "i:5"->{
  Cell[7469, 280, 193, 7, 70, "CodeCaption",ExpressionUUID->"3620cd53-abd5-4e03-8e6b-deff0ae633d9",
   CellTags->"i:5"]},
 "LastCellOfAPage"->{
  Cell[7861, 298, 725, 23, 70, "Output",ExpressionUUID->"7646bc10-9d1b-423d-ba78-4fa50dacdb5d",
   Evaluatable->False,
   CellTags->"LastCellOfAPage"],
  Cell[16489, 593, 1077, 37, 70, "Output",ExpressionUUID->"be7238dd-3131-4b21-8e19-8126108c998f",
   Evaluatable->False,
   CellTags->"LastCellOfAPage"],
  Cell[28652, 1019, 2382, 48, 70, "Output",ExpressionUUID->"875edf7e-6b58-4686-b685-2f11f6e2dfde",
   Evaluatable->False,
   CellTags->"LastCellOfAPage"],
  Cell[39657, 1401, 259, 9, 70, "Output",ExpressionUUID->"333a2ce1-e169-4770-9eb4-94a5b1cb912f",
   Evaluatable->False,
   CellTags->"LastCellOfAPage"],
  Cell[45807, 1636, 361, 11, 70, "Text",ExpressionUUID->"e9bd25c6-4934-471d-b3aa-97d88697f592",
   CellTags->"LastCellOfAPage"],
  Cell[190262, 5643, 281, 9, 70, "Output",ExpressionUUID->"e0b12624-8217-4674-8ba2-1d132baa020f",
   Evaluatable->False,
   CellTags->"LastCellOfAPage"],
  Cell[190717, 5664, 7316, 225, 70, "VocabularyTable",ExpressionUUID->"8fcdd951-42ea-4210-a8c5-2997d60db842",
   CellTags->"LastCellOfAPage"],
  Cell[298483, 8310, 1184, 39, 70, "Exercise",ExpressionUUID->"1d247409-c928-436e-94f9-9941cff305c6",
   CellTags->"LastCellOfAPage"],
  Cell[389708, 10636, 330, 8, 70, "MoreExplore",ExpressionUUID->"7f139b22-28c6-496f-9384-713d38245b0a",
   CellTags->"LastCellOfAPage"]},
 "p:178"->{
  Cell[8601, 324, 186, 6, 70, "CodeCaption",ExpressionUUID->"ea2de6a2-e559-4a36-932d-058136d26190",
   CellTags->"p:178"]},
 "i:6"->{
  Cell[11550, 413, 321, 11, 70, "Text",ExpressionUUID->"61095355-8bf2-41ce-b97a-5fa0ad8f0482",
   CellTags->"i:6"]},
 "p:179"->{
  Cell[17581, 633, 130, 4, 70, "CodeCaption",ExpressionUUID->"b9eaf41a-b0b0-4ad8-8994-2abba505ee52",
   CellTags->"p:179"]},
 "i:7"->{
  Cell[19859, 719, 323, 12, 70, "Text",ExpressionUUID->"c63373ef-62fe-4951-81d0-a5f554dca71c",
   CellTags->"i:7"]},
 "i:8"->{
  Cell[22637, 825, 247, 9, 70, "CodeCaption",ExpressionUUID->"0cc7563d-c73c-41c4-a6ca-bdc1837cbd56",
   CellTags->"i:8"]},
 "i:9"->{
  Cell[27925, 989, 243, 9, 70, "CodeCaption",ExpressionUUID->"c9512ba9-c8cc-4b67-83b1-6ffbcb02f89b",
   CellTags->"i:9"]},
 "p:180"->{
  Cell[31049, 1070, 297, 9, 70, "Text",ExpressionUUID->"97e82758-6f9f-494f-85f5-e82605b6fb88",
   CellTags->{"p:180", "i:10"}]},
 "i:10"->{
  Cell[31049, 1070, 297, 9, 70, "Text",ExpressionUUID->"97e82758-6f9f-494f-85f5-e82605b6fb88",
   CellTags->{"p:180", "i:10"}]},
 "i:11"->{
  Cell[32287, 1118, 263, 9, 70, "Text",ExpressionUUID->"3638cfc1-100e-4799-9498-d8c453fa712d",
   CellTags->"i:11"]},
 "i:12"->{
  Cell[33364, 1161, 404, 13, 70, "Text",ExpressionUUID->"70c0d442-72c5-4fe2-9834-c7916353d6cd",
   CellTags->"i:12"]},
 "i:13"->{
  Cell[35043, 1214, 221, 8, 70, "Text",ExpressionUUID->"5a5945c2-6a37-4835-86d6-593d71102331",
   CellTags->"i:13"]},
 "i:14"->{
  Cell[35267, 1224, 230, 8, 70, "CodeCaption",ExpressionUUID->"85c619d9-3e49-4f0b-8015-32d4095d319d",
   CellTags->"i:14"]},
 "i:15"->{
  Cell[37826, 1324, 269, 11, 70, "Text",ExpressionUUID->"3e8fc6dd-dd27-4152-be57-f08d48ec5e07",
   CellTags->"i:15"]},
 "p:181"->{
  Cell[39931, 1413, 177, 5, 70, "CodeCaption",ExpressionUUID->"aac472ce-57d0-4fd4-b3e4-dd92f5050ddd",
   CellTags->{"p:181", "i:16"}]},
 "i:16"->{
  Cell[39931, 1413, 177, 5, 70, "CodeCaption",ExpressionUUID->"aac472ce-57d0-4fd4-b3e4-dd92f5050ddd",
   CellTags->{"p:181", "i:16"}]},
 "i:17"->{
  Cell[40706, 1444, 208, 7, 70, "CodeCaption",ExpressionUUID->"5beb505e-b7c2-4b28-8215-93fc029ba943",
   CellTags->"i:17"]},
 "i:18"->{
  Cell[41411, 1475, 210, 7, 70, "CodeCaption",ExpressionUUID->"28e57eab-73ba-4b35-8743-34892da580aa",
   CellTags->"i:18"]},
 "i:19"->{
  Cell[43472, 1540, 293, 9, 70, "Text",ExpressionUUID->"0d08151f-32d5-45bf-8e53-0b190dd7dafb",
   CellTags->"i:19"]},
 "p:182"->{
  Cell[46171, 1649, 288, 11, 70, "Text",ExpressionUUID->"d10d6491-2961-4e60-b3be-6fc4473fc843",
   CellTags->{"p:182", "i:20"}]},
 "i:20"->{
  Cell[46171, 1649, 288, 11, 70, "Text",ExpressionUUID->"d10d6491-2961-4e60-b3be-6fc4473fc843",
   CellTags->{"p:182", "i:20"}]},
 "i:21"->{
  Cell[75120, 2439, 312, 11, 70, "CodeCaption",ExpressionUUID->"90616249-f751-4b70-a7ae-531657dad66d",
   CellTags->"i:21"]},
 "i:22"->{
  Cell[94527, 2975, 274, 9, 70, "Text",ExpressionUUID->"66702c98-7a91-490c-ac6e-9430a1950b9e",
   CellTags->"i:22"]},
 "i:23"->{
  Cell[132795, 4013, 251, 9, 70, "Text",ExpressionUUID->"d573129c-8dca-4dec-bb52-86e9a7eea98c",
   CellTags->"i:23"]},
 "i:24"->{
  Cell[188820, 5586, 284, 9, 70, "Text",ExpressionUUID->"de437962-6fe6-438f-9551-b47d97871a83",
   CellTags->"i:24"]},
 "p:183"->{
  Cell[190592, 5658, 122, 4, 70, "VocabularySection",ExpressionUUID->"55601d51-beda-46c2-985f-326bc0d2773c",
   CellTags->"p:183"]},
 "i:25"->{
  Cell[226795, 6514, 831, 24, 70, "Exercise",ExpressionUUID->"13a9ad20-9b07-436d-a8d6-6097b73c85a4",
   CellTags->"i:25"]},
 "i:26"->{
  Cell[234442, 6683, 1753, 60, 70, "Exercise",ExpressionUUID->"261d443b-b236-4385-8010-5a2cc502e089",
   CellTags->"i:26"]},
 "i:27"->{
  Cell[243084, 6912, 1294, 44, 70, "Exercise",ExpressionUUID->"37004709-1e38-4bc1-a452-1795b63277b5",
   CellTags->"i:27"]},
 "i:28"->{
  Cell[279734, 7851, 712, 21, 70, "Exercise",ExpressionUUID->"9e8d88e2-8a21-489d-853b-9b236750ecbc",
   CellTags->"i:28"]},
 "p:185"->{
  Cell[387245, 10539, 125, 4, 70, "QASection",ExpressionUUID->"e5181de0-c511-42fe-a2d6-6990af500e8e",
   CellTags->"p:185"]},
 "i:29"->{
  Cell[387606, 10555, 773, 22, 70, "Answer",ExpressionUUID->"d810a33f-0f69-4a86-994f-119b700e3e62",
   CellTags->"i:29"]},
 "i:30"->{
  Cell[388530, 10587, 241, 9, 70, "TechNote",ExpressionUUID->"69115230-225d-4f92-b347-bb0270739c42",
   CellTags->"i:30"]},
 "i:31"->{
  Cell[388774, 10598, 299, 9, 70, "TechNote",ExpressionUUID->"7a3f322c-6b57-4a7c-a86c-efcd5216ac4d",
   CellTags->"i:31"]},
 "i:32"->{
  Cell[389076, 10609, 475, 17, 70, "TechNote",ExpressionUUID->"2f74ea7c-f1fc-4ec7-84d6-e3772143fbea",
   CellTags->"i:32"]}
 }
*)
(*CellTagsIndex
CellTagsIndex->{
 {"p:177", 481285, 12488},
 {"i:1", 481524, 12492},
 {"i:2", 481655, 12495},
 {"i:3", 481781, 12498},
 {"i:4", 481906, 12501},
 {"i:5", 482038, 12504},
 {"LastCellOfAPage", 482182, 12507},
 {"p:178", 483507, 12531},
 {"i:6", 483641, 12534},
 {"p:179", 483770, 12537},
 {"i:7", 483905, 12540},
 {"i:8", 484032, 12543},
 {"i:9", 484165, 12546},
 {"p:180", 484300, 12549},
 {"i:10", 484440, 12552},
 {"i:11", 484580, 12555},
 {"i:12", 484709, 12558},
 {"i:13", 484839, 12561},
 {"i:14", 484968, 12564},
 {"i:15", 485104, 12567},
 {"p:181", 485235, 12570},
 {"i:16", 485382, 12573},
 {"i:17", 485529, 12576},
 {"i:18", 485665, 12579},
 {"i:19", 485801, 12582},
 {"p:182", 485931, 12585},
 {"i:20", 486072, 12588},
 {"i:21", 486213, 12591},
 {"i:22", 486350, 12594},
 {"i:23", 486479, 12597},
 {"i:24", 486609, 12600},
 {"p:183", 486740, 12603},
 {"i:25", 486884, 12606},
 {"i:26", 487019, 12609},
 {"i:27", 487155, 12612},
 {"i:28", 487291, 12615},
 {"p:185", 487427, 12618},
 {"i:29", 487564, 12621},
 {"i:30", 487698, 12624},
 {"i:31", 487833, 12627},
 {"i:32", 487968, 12630}
 }
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[673, 24, 318, 8, 70, "SectionDoubleDigit",ExpressionUUID->"318f7d16-6989-4a43-b416-b20a96c6f6d5",
 CounterAssignments->{{"Section", 29}, {"Subsection", 0}, {"Subsubsection", 0}, {"Exercise", 0}},
 CellTags->"p:177"],
Cell[994, 34, 323, 8, 70, "Text",ExpressionUUID->"afd1c150-b97e-4019-a706-68a80b449c8b"],
Cell[1320, 44, 178, 6, 70, "CodeCaption",ExpressionUUID->"590a8f03-c698-4417-bdb7-c5bd64a91ab8",
 CellTags->"i:1"],
Cell[CellGroupData[{
Cell[1523, 54, 437, 15, 70, "Input",ExpressionUUID->"74169828-2fae-4ebb-a042-fb567072a98e"],
Cell[1963, 71, 324, 11, 70, "Output",ExpressionUUID->"5c645e34-af37-4418-a84a-80d0ba022ac1",
 Evaluatable->False]
}, Open  ]],
Cell[2302, 85, 162, 5, 70, "CodeCaption",ExpressionUUID->"a48f1eb5-f9ee-46dd-8668-ebf5a5cf1205"],
Cell[CellGroupData[{
Cell[2489, 94, 317, 10, 70, "Input",ExpressionUUID->"3d783662-169f-49e3-a820-b97df0001983"],
Cell[2809, 106, 438, 16, 70, "Output",ExpressionUUID->"bd59eb3e-a0f2-4ced-8171-fa752fb66b60",
 Evaluatable->False]
}, Open  ]],
Cell[3262, 125, 327, 12, 70, "Text",ExpressionUUID->"6d5f9508-6744-4745-b4fe-bd8b9abd6395",
 CellTags->"i:2"],
Cell[3592, 139, 310, 10, 70, "CodeCaption",ExpressionUUID->"b83e781b-cefa-43f0-a051-7d6a754a813f"],
Cell[CellGroupData[{
Cell[3927, 153, 292, 9, 70, "Input",ExpressionUUID->"49bd2cc8-e9c8-404f-9e9f-513dda898ea5"],
Cell[4222, 164, 343, 11, 70, "Output",ExpressionUUID->"1045a02d-f303-4718-8dd3-002a88124f82",
 Evaluatable->False]
}, Open  ]],
Cell[4580, 178, 236, 9, 70, "Text",ExpressionUUID->"5e57246d-1846-42a0-8f4d-e9b3566a0be6",
 CellTags->"i:3"],
Cell[4819, 189, 162, 5, 70, "CodeCaption",ExpressionUUID->"f09888f8-7342-41a4-8d8d-8c09a83974c8"],
Cell[CellGroupData[{
Cell[5006, 198, 161, 5, 70, "Input",ExpressionUUID->"af05b244-24d6-4c3b-a0d6-c472aa87dd76"],
Cell[5170, 205, 421, 14, 70, "Output",ExpressionUUID->"ddb6e200-2a4d-40c0-a059-0add0121641f",
 Evaluatable->False]
}, Open  ]],
Cell[5606, 222, 174, 6, 70, "CodeCaption",ExpressionUUID->"c562eaa7-c461-4be2-b0e9-eb1fd0dd05bb",
 CellTags->"i:4"],
Cell[CellGroupData[{
Cell[5805, 232, 331, 11, 70, "Input",ExpressionUUID->"929bb05b-f3ef-49df-8202-9783cf794199"],
Cell[6139, 245, 932, 20, 70, "Output",ExpressionUUID->"c57a36c9-4257-41e3-ad58-00735ac7747c",
 Evaluatable->False]
}, Open  ]],
Cell[7086, 268, 380, 10, 70, "Text",ExpressionUUID->"0ab16528-bc79-43e9-a5ec-a1a4297286f4"],
Cell[7469, 280, 193, 7, 70, "CodeCaption",ExpressionUUID->"3620cd53-abd5-4e03-8e6b-deff0ae633d9",
 CellTags->"i:5"],
Cell[CellGroupData[{
Cell[7687, 291, 171, 5, 70, "Input",ExpressionUUID->"fd5f7b59-419e-4d1e-a743-4cea218675c2"],
Cell[7861, 298, 725, 23, 70, "Output",ExpressionUUID->"7646bc10-9d1b-423d-ba78-4fa50dacdb5d",
 Evaluatable->False,
 CellTags->"LastCellOfAPage"]
}, Open  ]],
Cell[8601, 324, 186, 6, 70, "CodeCaption",ExpressionUUID->"ea2de6a2-e559-4a36-932d-058136d26190",
 CellTags->"p:178"],
Cell[CellGroupData[{
Cell[8812, 334, 300, 9, 70, "Input",ExpressionUUID->"8c1dd79a-bb0a-40dc-9e55-640e5a89c1de"],
Cell[9115, 345, 1137, 25, 70, "Output",ExpressionUUID->"e5c1b991-de2d-442e-aa3d-a8e52a6d245b",
 Evaluatable->False]
}, Open  ]],
Cell[10267, 373, 135, 3, 70, "CodeCaption",ExpressionUUID->"03947a41-9eb6-435c-a0b4-ed75acc26962"],
Cell[CellGroupData[{
Cell[10427, 380, 300, 9, 70, "Input",ExpressionUUID->"1d9ff06e-f500-4eb7-bb1b-1d64bf350dd5"],
Cell[10730, 391, 805, 19, 70, "Output",ExpressionUUID->"5c13bb3f-d919-4d36-b0f9-7f6a0e4253a4",
 Evaluatable->False]
}, Open  ]],
Cell[11550, 413, 321, 11, 70, "Text",ExpressionUUID->"61095355-8bf2-41ce-b97a-5fa0ad8f0482",
 CellTags->"i:6"],
Cell[11874, 426, 172, 6, 70, "CodeCaption",ExpressionUUID->"03680681-98e5-4dcb-a682-e21e267f10d3"],
Cell[CellGroupData[{
Cell[12071, 436, 137, 4, 70, "Input",ExpressionUUID->"96f575e6-eee3-4ebd-8e18-3f24dc533ab3"],
Cell[12211, 442, 1097, 37, 70, "Output",ExpressionUUID->"cda0cdac-a7c8-4795-bf91-ad07dacf97ed",
 Evaluatable->False]
}, Open  ]],
Cell[13323, 482, 121, 3, 70, "CodeCaption",ExpressionUUID->"47270b98-675c-4097-97db-61036d5313fc"],
Cell[CellGroupData[{
Cell[13469, 489, 173, 5, 70, "Input",ExpressionUUID->"f7df100f-dda3-4d48-b03c-5f8e4caae0d2"],
Cell[13645, 496, 472, 11, 70, "Output",ExpressionUUID->"bc507355-6c62-419b-a481-57e589d772e8",
 Evaluatable->False]
}, Open  ]],
Cell[14132, 510, 151, 4, 70, "CodeCaption",ExpressionUUID->"db6dc014-ddb6-4208-8d82-8aaaa6468c6c"],
Cell[CellGroupData[{
Cell[14308, 518, 214, 6, 70, "Input",ExpressionUUID->"6fcaa34b-1ce8-49e5-816b-81f87e012ffc"],
Cell[14525, 526, 1112, 33, 70, "Output",ExpressionUUID->"5c5ab439-1ae0-42bf-9621-9658532548d2",
 Evaluatable->False]
}, Open  ]],
Cell[15652, 562, 387, 10, 70, "Text",ExpressionUUID->"84644098-be8a-4ec3-a5af-22a0d1d48e16"],
Cell[16042, 574, 121, 3, 70, "CodeCaption",ExpressionUUID->"4bc00a77-43cf-4585-9e4a-d373005634f2"],
Cell[CellGroupData[{
Cell[16188, 581, 298, 10, 70, "Input",ExpressionUUID->"a6fa5089-68b4-4ff6-b5df-5f97ff9f1198"],
Cell[16489, 593, 1077, 37, 70, "Output",ExpressionUUID->"be7238dd-3131-4b21-8e19-8126108c998f",
 Evaluatable->False,
 CellTags->"LastCellOfAPage"]
}, Open  ]],
Cell[17581, 633, 130, 4, 70, "CodeCaption",ExpressionUUID->"b9eaf41a-b0b0-4ad8-8994-2abba505ee52",
 CellTags->"p:179"],
Cell[CellGroupData[{
Cell[17736, 641, 339, 11, 70, "Input",ExpressionUUID->"03031349-44d2-4098-9ad4-adc9d8574553"],
Cell[18078, 654, 388, 10, 70, "Output",ExpressionUUID->"b6437fd3-1a31-4c16-ac8a-73aba69db717",
 Evaluatable->False]
}, Open  ]],
Cell[18481, 667, 118, 3, 70, "CodeCaption",ExpressionUUID->"002fd4f6-5ba9-437a-99ba-774efc0c20f4"],
Cell[CellGroupData[{
Cell[18624, 674, 370, 12, 70, "Input",ExpressionUUID->"a22de065-ad43-47e0-ace5-38a84abe0b95"],
Cell[18997, 688, 847, 28, 70, "Output",ExpressionUUID->"b1dec626-f0b8-41ea-b48e-dc84bb032837",
 Evaluatable->False]
}, Open  ]],
Cell[19859, 719, 323, 12, 70, "Text",ExpressionUUID->"c63373ef-62fe-4951-81d0-a5f554dca71c",
 CellTags->"i:7"],
Cell[20185, 733, 206, 6, 70, "CodeCaption",ExpressionUUID->"dfe11f25-1d6b-444b-96ae-fcec87aed34b"],
Cell[CellGroupData[{
Cell[20416, 743, 366, 13, 70, "Input",ExpressionUUID->"20b7e138-908f-4bad-9d7e-a3e35f552454"],
Cell[20785, 758, 1837, 64, 70, "Output",ExpressionUUID->"4e71072f-34b1-4f34-a6d5-08c476d55622",
 Evaluatable->False]
}, Open  ]],
Cell[22637, 825, 247, 9, 70, "CodeCaption",ExpressionUUID->"0cc7563d-c73c-41c4-a6ca-bdc1837cbd56",
 CellTags->"i:8"],
Cell[CellGroupData[{
Cell[22909, 838, 413, 14, 70, "Input",ExpressionUUID->"52244605-f4f5-4a2b-b6e9-50bbb7417451"],
Cell[23325, 854, 741, 25, 70, "Output",ExpressionUUID->"2971ffd5-0bf9-4631-8a4c-e1ea80249986",
 Evaluatable->False]
}, Open  ]],
Cell[24081, 882, 248, 9, 70, "CodeCaption",ExpressionUUID->"77896191-498d-4e8c-b587-dce833db491c"],
Cell[CellGroupData[{
Cell[24354, 895, 456, 15, 70, "Input",ExpressionUUID->"5dc6aa88-a82b-41c2-a05d-91b5ced8db69"],
Cell[24813, 912, 3097, 74, 70, "Output",ExpressionUUID->"6896dee3-484d-4503-b51a-ec2579897079",
 Evaluatable->False]
}, Open  ]],
Cell[27925, 989, 243, 9, 70, "CodeCaption",ExpressionUUID->"c9512ba9-c8cc-4b67-83b1-6ffbcb02f89b",
 CellTags->"i:9"],
Cell[CellGroupData[{
Cell[28193, 1002, 456, 15, 70, "Input",ExpressionUUID->"16e1f9af-3417-4ec4-ab6a-0495f039ac3c"],
Cell[28652, 1019, 2382, 48, 70, "Output",ExpressionUUID->"875edf7e-6b58-4686-b685-2f11f6e2dfde",
 Evaluatable->False,
 CellTags->"LastCellOfAPage"]
}, Open  ]],
Cell[31049, 1070, 297, 9, 70, "Text",ExpressionUUID->"97e82758-6f9f-494f-85f5-e82605b6fb88",
 CellTags->{"p:180", "i:10"}],
Cell[31349, 1081, 171, 5, 70, "CodeCaption",ExpressionUUID->"a1a31feb-3c58-4b39-a463-d33a1e03056d"],
Cell[CellGroupData[{
Cell[31545, 1090, 257, 7, 70, "Input",ExpressionUUID->"f9db25ba-4d73-4baf-b3c4-a0601e94fea4"],
Cell[31805, 1099, 467, 16, 70, "Output",ExpressionUUID->"4359fc90-1f55-49a5-b1e9-6e987965b8d5",
 Evaluatable->False]
}, Open  ]],
Cell[32287, 1118, 263, 9, 70, "Text",ExpressionUUID->"3638cfc1-100e-4799-9498-d8c453fa712d",
 CellTags->"i:11"],
Cell[32553, 1129, 134, 3, 70, "CodeCaption",ExpressionUUID->"aa67b6f0-0d1a-4500-a2e4-5f49e2ebba41"],
Cell[CellGroupData[{
Cell[32712, 1136, 258, 7, 70, "Input",ExpressionUUID->"24648c91-d1ef-471a-8edb-4aeb1d497034"],
Cell[32973, 1145, 376, 13, 70, "Output",ExpressionUUID->"22b82a4a-f80d-486c-9e62-75b956e7db5d",
 Evaluatable->False]
}, Open  ]],
Cell[33364, 1161, 404, 13, 70, "Text",ExpressionUUID->"70c0d442-72c5-4fe2-9834-c7916353d6cd",
 CellTags->"i:12"],
Cell[33771, 1176, 148, 4, 70, "CodeCaption",ExpressionUUID->"3317529e-983f-4ef4-9441-ee5225051d57"],
Cell[CellGroupData[{
Cell[33944, 1184, 219, 7, 70, "Input",ExpressionUUID->"d5f9266e-1fa2-4efc-bd00-87e668730283"],
Cell[34166, 1193, 862, 18, 70, "Output",ExpressionUUID->"b6caf8f7-017a-4e63-bb64-60bcc0286b94",
 Evaluatable->False]
}, Open  ]],
Cell[35043, 1214, 221, 8, 70, "Text",ExpressionUUID->"5a5945c2-6a37-4835-86d6-593d71102331",
 CellTags->"i:13"],
Cell[35267, 1224, 230, 8, 70, "CodeCaption",ExpressionUUID->"85c619d9-3e49-4f0b-8015-32d4095d319d",
 CellTags->"i:14"],
Cell[CellGroupData[{
Cell[35522, 1236, 276, 9, 70, "Input",ExpressionUUID->"fbd31941-cefd-4011-b2f0-8b7e51d80d9b"],
Cell[35801, 1247, 708, 23, 70, "Output",ExpressionUUID->"e12e99a2-c3f4-4009-996e-0c15088d86b6",
 Evaluatable->False]
}, Open  ]],
Cell[36524, 1273, 237, 8, 70, "CodeCaption",ExpressionUUID->"35f45e05-46bc-4afb-adf7-efb457b2bd1d"],
Cell[CellGroupData[{
Cell[36786, 1285, 314, 11, 70, "Input",ExpressionUUID->"67529f01-a9b4-4e23-af86-577663689132"],
Cell[37103, 1298, 708, 23, 70, "Output",ExpressionUUID->"2f826abd-5440-4ad9-a06f-f43c28fd9f88",
 Evaluatable->False]
}, Open  ]],
Cell[37826, 1324, 269, 11, 70, "Text",ExpressionUUID->"3e8fc6dd-dd27-4152-be57-f08d48ec5e07",
 CellTags->"i:15"],
Cell[38098, 1337, 156, 5, 70, "CodeCaption",ExpressionUUID->"f99fac0e-4b6d-400c-85a7-361d6356084b"],
Cell[CellGroupData[{
Cell[38279, 1346, 269, 8, 70, "Input",ExpressionUUID->"22af4e9e-68d4-4094-b76d-510488a9b6f2"],
Cell[38551, 1356, 193, 6, 70, "Output",ExpressionUUID->"057c9ef2-e617-4fa4-b7c2-c94ea86d019d",
 Evaluatable->False]
}, Open  ]],
Cell[38759, 1365, 302, 10, 70, "Text",ExpressionUUID->"d5f7f6bd-8d40-467d-81e5-1ed67c5a27c3"],
Cell[39064, 1377, 177, 6, 70, "CodeCaption",ExpressionUUID->"65b8bc24-00d8-46d8-ada7-cef2498bf319"],
Cell[CellGroupData[{
Cell[39266, 1387, 388, 12, 70, "Input",ExpressionUUID->"1242c8dc-5c1e-4e62-93e6-5903d4aa87a4"],
Cell[39657, 1401, 259, 9, 70, "Output",ExpressionUUID->"333a2ce1-e169-4770-9eb4-94a5b1cb912f",
 Evaluatable->False,
 CellTags->"LastCellOfAPage"]
}, Open  ]],
Cell[39931, 1413, 177, 5, 70, "CodeCaption",ExpressionUUID->"aac472ce-57d0-4fd4-b3e4-dd92f5050ddd",
 CellTags->{"p:181", "i:16"}],
Cell[CellGroupData[{
Cell[40133, 1422, 382, 11, 70, "Input",ExpressionUUID->"15b88487-bfce-42a2-b951-2bd804fd9981"],
Cell[40518, 1435, 173, 6, 70, "Output",ExpressionUUID->"e5648ba1-236f-4c53-9398-c0722808e964",
 Evaluatable->False]
}, Open  ]],
Cell[40706, 1444, 208, 7, 70, "CodeCaption",ExpressionUUID->"5beb505e-b7c2-4b28-8215-93fc029ba943",
 CellTags->"i:17"],
Cell[CellGroupData[{
Cell[40939, 1455, 291, 9, 70, "Input",ExpressionUUID->"42cecc58-fe2c-4aca-81c0-3195f3089098"],
Cell[41233, 1466, 163, 6, 70, "Output",ExpressionUUID->"4f6fd8cf-e50d-47f7-a724-ffd672796ac7",
 Evaluatable->False]
}, Open  ]],
Cell[41411, 1475, 210, 7, 70, "CodeCaption",ExpressionUUID->"28e57eab-73ba-4b35-8743-34892da580aa",
 CellTags->"i:18"],
Cell[CellGroupData[{
Cell[41646, 1486, 284, 7, 70, "Input",ExpressionUUID->"e5ac80c0-2109-45e3-b32d-6834c9d5f226"],
Cell[41933, 1495, 867, 16, 70, "Output",ExpressionUUID->"94d9faec-8539-43fe-9d38-8704a238d960",
 Evaluatable->False]
}, Open  ]],
Cell[42815, 1514, 153, 4, 70, "CodeCaption",ExpressionUUID->"f90b7bd9-7bff-44db-b9ad-ea4921a30d82"],
Cell[CellGroupData[{
Cell[42993, 1522, 229, 6, 70, "Input",ExpressionUUID->"abce0510-afe3-48bd-81d3-c295a2d23b7b"],
Cell[43225, 1530, 232, 7, 70, "Output",ExpressionUUID->"7a4c5d1a-1e92-4dbd-82f8-711f2f3c0a2e",
 Evaluatable->False]
}, Open  ]],
Cell[43472, 1540, 293, 9, 70, "Text",ExpressionUUID->"0d08151f-32d5-45bf-8e53-0b190dd7dafb",
 CellTags->"i:19"],
Cell[43768, 1551, 184, 7, 70, "CodeCaption",ExpressionUUID->"37e11861-ccb5-40a9-a35c-2dd10597fd78"],
Cell[CellGroupData[{
Cell[43977, 1562, 207, 7, 70, "Input",ExpressionUUID->"e982bc3d-e325-419e-9bf5-6ef799f6b2d6"],
Cell[44187, 1571, 240, 8, 70, "Output",ExpressionUUID->"e8056d56-b2bb-4fb5-aa90-8ca2ce451400",
 Evaluatable->False]
}, Open  ]],
Cell[44442, 1582, 182, 7, 70, "CodeCaption",ExpressionUUID->"69d4e418-560c-496c-81bd-6624aad385e6"],
Cell[CellGroupData[{
Cell[44649, 1593, 189, 6, 70, "Input",ExpressionUUID->"b5b0a878-7722-43f7-ba2d-72da4c1d6709"],
Cell[44841, 1601, 395, 9, 70, "Output",ExpressionUUID->"f91a7ef8-dd71-4f6d-bf5c-b9f91eadb83b",
 Evaluatable->False]
}, Open  ]],
Cell[45251, 1613, 140, 3, 70, "CodeCaption",ExpressionUUID->"16661a25-9188-4d19-91fc-79231c08ce5b"],
Cell[CellGroupData[{
Cell[45416, 1620, 229, 7, 70, "Input",ExpressionUUID->"8eab7bc8-db39-4ffa-a024-5e9cb20f444d"],
Cell[45648, 1629, 144, 4, 70, "Output",ExpressionUUID->"a99cd243-0c38-497e-b737-bcfcfe186264",
 Evaluatable->False]
}, Open  ]],
Cell[45807, 1636, 361, 11, 70, "Text",ExpressionUUID->"e9bd25c6-4934-471d-b3aa-97d88697f592",
 CellTags->"LastCellOfAPage"],
Cell[46171, 1649, 288, 11, 70, "Text",ExpressionUUID->"d10d6491-2961-4e60-b3be-6fc4473fc843",
 CellTags->{"p:182", "i:20"}],
Cell[46462, 1662, 182, 6, 70, "CodeCaption",ExpressionUUID->"a9a2b2fb-a974-46d4-b12f-614659efa157"],
Cell[CellGroupData[{
Cell[46669, 1672, 174, 5, 70, "Input",ExpressionUUID->"ed049c52-8a57-403b-b92b-7440b34a40e3"],
Cell[46846, 1679, 28259, 757, 70, "Output",ExpressionUUID->"b1c06be9-6507-4d2b-86ee-0b32692dfb67",
 Evaluatable->False]
}, Open  ]],
Cell[75120, 2439, 312, 11, 70, "CodeCaption",ExpressionUUID->"90616249-f751-4b70-a7ae-531657dad66d",
 CellTags->"i:21"],
Cell[CellGroupData[{
Cell[75457, 2454, 169, 5, 70, "Input",ExpressionUUID->"c2e38e98-68f5-44ec-b6e4-66bb689b3269"],
Cell[75629, 2461, 18883, 511, 70, "Output",ExpressionUUID->"4d60dbd5-fba2-44f9-a965-05847389c36c",
 Evaluatable->False]
}, Open  ]],
Cell[94527, 2975, 274, 9, 70, "Text",ExpressionUUID->"66702c98-7a91-490c-ac6e-9430a1950b9e",
 CellTags->"i:22"],
Cell[94804, 2986, 155, 5, 70, "CodeCaption",ExpressionUUID->"e0546a66-126e-463e-89ff-960a774f486d"],
Cell[CellGroupData[{
Cell[94984, 2995, 180, 6, 70, "Input",ExpressionUUID->"d0ba0d77-f815-48dc-b52f-69952956cf35"],
Cell[95167, 3003, 37613, 1007, 70, "Output",ExpressionUUID->"542b69ee-4e14-44c3-8616-406b7e44b68a",
 Evaluatable->False]
}, Open  ]],
Cell[132795, 4013, 251, 9, 70, "Text",ExpressionUUID->"d573129c-8dca-4dec-bb52-86e9a7eea98c",
 CellTags->"i:23"],
Cell[133049, 4024, 168, 5, 70, "CodeCaption",ExpressionUUID->"8827ec1e-54c0-40a1-b503-69370339f120"],
Cell[CellGroupData[{
Cell[133242, 4033, 174, 5, 70, "Input",ExpressionUUID->"c9ab317b-ab21-4296-a0d0-17c2211c0ca7"],
Cell[133419, 4040, 1536, 45, 70, "Output",ExpressionUUID->"3b8ade99-72ed-4acf-8c47-4a323280e9c3",
 Evaluatable->False]
}, Open  ]],
Cell[134970, 4088, 128, 3, 70, "CodeCaption",ExpressionUUID->"579887df-5626-4aed-83dd-05899036ff64"],
Cell[CellGroupData[{
Cell[135123, 4095, 203, 7, 70, "Input",ExpressionUUID->"2cbbd2fb-a5b2-4f51-8340-c1b3b342305f"],
Cell[135329, 4104, 29477, 827, 70, "Output",ExpressionUUID->"34dbf1bd-6b28-4365-a080-c0dbaf6b0a37",
 Evaluatable->False]
}, Open  ]],
Cell[164821, 4934, 126, 3, 70, "CodeCaption",ExpressionUUID->"fea03286-3167-4877-9db2-e74b0f2ad5bc"],
Cell[CellGroupData[{
Cell[164972, 4941, 248, 8, 70, "Input",ExpressionUUID->"34bb9d55-0b53-477e-93ce-5d3f8377d0e5"],
Cell[165223, 4951, 23582, 632, 70, "Output",ExpressionUUID->"fb065ad0-6aee-45cf-aa26-5111e3ed6c14",
 Evaluatable->False]
}, Open  ]],
Cell[188820, 5586, 284, 9, 70, "Text",ExpressionUUID->"de437962-6fe6-438f-9551-b47d97871a83",
 CellTags->"i:24"],
Cell[189107, 5597, 188, 6, 70, "CodeCaption",ExpressionUUID->"0c10bf82-f219-446a-8d8c-cf642b6b9d68"],
Cell[CellGroupData[{
Cell[189320, 5607, 167, 5, 70, "Input",ExpressionUUID->"1c746c90-0a6a-4d24-a84c-522c8d2ae779"],
Cell[189490, 5614, 375, 10, 70, "Output",ExpressionUUID->"89f178ef-59d8-4f0a-8014-4b805e835e0b",
 Evaluatable->False]
}, Open  ]],
Cell[189880, 5627, 213, 6, 70, "CodeCaption",ExpressionUUID->"86ecc9e8-258f-4a4b-ac95-2a901068f7c6"],
Cell[CellGroupData[{
Cell[190118, 5637, 141, 4, 70, "Input",ExpressionUUID->"cdb5d555-42b9-4d2f-b515-2e3825622b34"],
Cell[190262, 5643, 281, 9, 70, "Output",ExpressionUUID->"e0b12624-8217-4674-8ba2-1d132baa020f",
 Evaluatable->False,
 CellTags->"LastCellOfAPage"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[190592, 5658, 122, 4, 70, "VocabularySection",ExpressionUUID->"55601d51-beda-46c2-985f-326bc0d2773c",
 CellTags->"p:183"],
Cell[190717, 5664, 7316, 225, 70, "VocabularyTable",ExpressionUUID->"8fcdd951-42ea-4210-a8c5-2997d60db842",
 CellTags->"LastCellOfAPage"]
}, Open  ]],
Cell[CellGroupData[{
Cell[198070, 5894, 1722, 45, 70, "ExerciseSection",ExpressionUUID->"5d07e3bd-a4c0-4404-8d16-66f78f8cd3fc"],
Cell[CellGroupData[{
Cell[199817, 5943, 1395, 44, 70, "ExerciseSummaryCell",ExpressionUUID->"ca341ab6-05c1-459c-845c-cde8b0995085"],
Cell[CellGroupData[{
Cell[201237, 5991, 783, 23, 70, "Exercise",ExpressionUUID->"77f53b40-b35d-4b7a-8471-0cd11a6e264b"],
Cell[202023, 6016, 3867, 85, 70, "ExerciseOutput",ExpressionUUID->"6026adf2-40a3-40b2-b983-ca8da1250930"]
}, Closed]],
Cell[CellGroupData[{
Cell[205927, 6106, 695, 20, 70, "Exercise",ExpressionUUID->"100c9055-f966-4062-ae34-8f45b9455f9a"],
Cell[206625, 6128, 1932, 52, 70, "ExerciseOutput",ExpressionUUID->"a12dc6e7-f876-4e0a-ac84-ca87085896dc"]
}, Closed]],
Cell[CellGroupData[{
Cell[208594, 6185, 743, 20, 70, "Exercise",ExpressionUUID->"f8088ad4-6d2d-40e3-9a51-575581c11dce"],
Cell[209340, 6207, 5072, 91, 70, "ExerciseOutput",ExpressionUUID->"81bcaac0-96e1-4d3e-9195-847c34d99671"]
}, Closed]],
Cell[CellGroupData[{
Cell[214449, 6303, 825, 21, 70, "Exercise",ExpressionUUID->"0271a031-e1f0-41df-9422-17e6e05428c0"],
Cell[215277, 6326, 11481, 183, 70, "ExerciseOutput",ExpressionUUID->"f31401e0-5d4e-4fbe-a51e-2230e0945899"]
}, Closed]],
Cell[CellGroupData[{
Cell[226795, 6514, 831, 24, 70, "Exercise",ExpressionUUID->"13a9ad20-9b07-436d-a8d6-6097b73c85a4",
 CellTags->"i:25"],
Cell[227629, 6540, 6776, 138, 70, "ExerciseOutput",ExpressionUUID->"fc2b00ff-9aa7-47ef-bedd-c5bc1fe149e1"]
}, Closed]],
Cell[CellGroupData[{
Cell[234442, 6683, 1753, 60, 70, "Exercise",ExpressionUUID->"261d443b-b236-4385-8010-5a2cc502e089",
 CellTags->"i:26"],
Cell[236198, 6745, 6849, 162, 70, "ExerciseOutput",ExpressionUUID->"43e8cf56-928c-44fc-8937-4470b944585f"]
}, Closed]],
Cell[CellGroupData[{
Cell[243084, 6912, 1294, 44, 70, "Exercise",ExpressionUUID->"37004709-1e38-4bc1-a452-1795b63277b5",
 CellTags->"i:27"],
Cell[244381, 6958, 3479, 90, 70, "ExerciseOutput",ExpressionUUID->"7a804244-6dba-46aa-ae09-a39b013fb790"]
}, Closed]],
Cell[CellGroupData[{
Cell[247897, 7053, 897, 28, 70, "Exercise",ExpressionUUID->"810c6819-e0f7-499e-8576-d1dad4d1ead6"],
Cell[248797, 7083, 3404, 65, 70, "ExerciseOutput",ExpressionUUID->"5b1193c5-cb06-4de5-bd81-a68e0a606f99"]
}, Closed]],
Cell[CellGroupData[{
Cell[252238, 7153, 723, 20, 70, "Exercise",ExpressionUUID->"171ca0fa-eac2-4ca8-bbf0-f8509ad9f1be"],
Cell[252964, 7175, 9749, 198, 70, "ExerciseOutput",ExpressionUUID->"71fa82d8-3869-4eb8-a25b-16fd1e8a3ed7"]
}, Closed]],
Cell[CellGroupData[{
Cell[262750, 7378, 799, 24, 70, "Exercise",ExpressionUUID->"b5274c9a-f78b-4959-aa74-4a5c55306e08"],
Cell[263552, 7404, 3697, 72, 70, "ExerciseOutput",ExpressionUUID->"9688d2d6-2f38-4da0-92f1-afda7a946c17"]
}, Closed]],
Cell[CellGroupData[{
Cell[267286, 7481, 697, 20, 70, "Exercise",ExpressionUUID->"f565ce12-6be9-4d35-89dc-4af878a4e5c3"],
Cell[267986, 7503, 1574, 41, 70, "ExerciseOutput",ExpressionUUID->"d8dd214d-38cc-412a-92d0-3955e6f7b186"]
}, Closed]],
Cell[CellGroupData[{
Cell[269597, 7549, 704, 20, 70, "Exercise",ExpressionUUID->"914a631a-fa0a-45bc-ad18-5ed532484f3b"],
Cell[270304, 7571, 1539, 41, 70, "ExerciseOutput",ExpressionUUID->"8e478dfd-c23f-440a-930c-87e94aceaa9c"]
}, Closed]],
Cell[CellGroupData[{
Cell[271880, 7617, 862, 25, 70, "Exercise",ExpressionUUID->"34960fe0-2dad-4a7f-a48d-afe72fb568e9"],
Cell[272745, 7644, 3046, 75, 70, "ExerciseOutput",ExpressionUUID->"1943c263-2741-44e4-afb0-99419c4f49eb"]
}, Closed]],
Cell[CellGroupData[{
Cell[275828, 7724, 689, 20, 70, "Exercise",ExpressionUUID->"4ce7f931-141e-4140-93cf-f49a63b9deed"],
Cell[276520, 7746, 1228, 36, 70, "ExerciseOutput",ExpressionUUID->"0e313788-7104-44bf-8699-17f9a05b6212"]
}, Closed]],
Cell[CellGroupData[{
Cell[277785, 7787, 784, 23, 70, "Exercise",ExpressionUUID->"a2795095-81ce-46eb-a392-932370c5414a"],
Cell[278572, 7812, 1125, 34, 70, "ExerciseOutput",ExpressionUUID->"81bb7952-2f33-4b66-914a-a3800a639e63"]
}, Closed]],
Cell[CellGroupData[{
Cell[279734, 7851, 712, 21, 70, "Exercise",ExpressionUUID->"9e8d88e2-8a21-489d-853b-9b236750ecbc",
 CellTags->"i:28"],
Cell[280449, 7874, 4012, 88, 70, "ExerciseOutput",ExpressionUUID->"bca60f85-03db-464a-b2bf-c1017c5399fa"]
}, Closed]],
Cell[CellGroupData[{
Cell[284498, 7967, 731, 20, 70, "Exercise",ExpressionUUID->"98d0529c-d66b-4a4e-8b38-eb51758ef67d"],
Cell[285232, 7989, 2473, 57, 70, "ExerciseOutput",ExpressionUUID->"afa7b0b9-8bba-494e-a6c7-f96f34738d8c"]
}, Closed]],
Cell[CellGroupData[{
Cell[287742, 8051, 776, 21, 70, "Exercise",ExpressionUUID->"807c9a95-5156-47f2-b947-d67869fef8c5"],
Cell[288521, 8074, 3902, 73, 70, "ExerciseOutput",ExpressionUUID->"e5336e42-cebb-4fc7-9413-2442e2f7ab41"]
}, Closed]],
Cell[CellGroupData[{
Cell[292460, 8152, 711, 20, 70, "Exercise",ExpressionUUID->"95c5a9dc-a7d9-4bbd-949d-e26e271317c8"],
Cell[293174, 8174, 3022, 65, 70, "ExerciseOutput",ExpressionUUID->"5db45257-dd48-4bc4-9d4f-fbe34ee3aa17"]
}, Closed]],
Cell[CellGroupData[{
Cell[296233, 8244, 695, 20, 70, "Exercise",ExpressionUUID->"f35c1406-e03b-41f8-b0fc-456ef97bcc80"],
Cell[296931, 8266, 1515, 39, 70, "ExerciseOutput",ExpressionUUID->"a8ce0981-6363-44f6-8e28-5dd03b46f91c"]
}, Closed]],
Cell[CellGroupData[{
Cell[298483, 8310, 1184, 39, 70, "Exercise",ExpressionUUID->"1d247409-c928-436e-94f9-9941cff305c6",
 CellTags->"LastCellOfAPage"],
Cell[299670, 8351, 2401, 66, 70, "ExerciseOutput",ExpressionUUID->"854a8f8e-e51f-46a4-b0e4-30c41b2b37fc"]
}, Closed]],
Cell[CellGroupData[{
Cell[302108, 8422, 853, 22, 70, "Exercise",ExpressionUUID->"25718290-8565-48c8-b39e-f3328fcc01da"],
Cell[302964, 8446, 2935, 69, 70, "ExerciseOutput",ExpressionUUID->"ca529d93-a886-4b6d-a579-8ea259ae354e"]
}, Closed]],
Cell[CellGroupData[{
Cell[305936, 8520, 691, 20, 70, "Exercise",ExpressionUUID->"a4ae8638-1167-4d22-8446-bd14bbe1311b"],
Cell[306630, 8542, 2230, 61, 70, "ExerciseOutput",ExpressionUUID->"4e86b6cb-9289-46e3-ab45-4fd869accf46"]
}, Closed]],
Cell[CellGroupData[{
Cell[308897, 8608, 711, 20, 70, "Exercise",ExpressionUUID->"a732925d-9f0a-4795-aa5a-77ec3dcaa2b2"],
Cell[309611, 8630, 3725, 85, 70, "ExerciseOutput",ExpressionUUID->"21f77a3e-dda7-4a06-816f-8dd3542c60c7"]
}, Closed]],
Cell[CellGroupData[{
Cell[313373, 8720, 768, 21, 70, "Exercise",ExpressionUUID->"8dc092ff-d0fd-4b73-b2f9-a7ef86785ee4"],
Cell[314144, 8743, 3227, 80, 70, "ExerciseOutput",ExpressionUUID->"2c24d31a-0409-4ed9-8521-88c43ac940c2"]
}, Closed]],
Cell[CellGroupData[{
Cell[317408, 8828, 735, 20, 70, "Exercise",ExpressionUUID->"50742937-477e-4d23-9968-9b5ed8e9a912"],
Cell[318146, 8850, 5544, 118, 70, "ExerciseOutput",ExpressionUUID->"c83c5b0d-399b-4a2a-b4ee-64ac595b8f0a"]
}, Closed]],
Cell[CellGroupData[{
Cell[323727, 8973, 761, 20, 70, "Exercise",ExpressionUUID->"26c4c67a-6e64-40f6-aee1-c9bb4c450504"],
Cell[324491, 8995, 5626, 124, 70, "ExerciseOutput",ExpressionUUID->"cdb8383a-bf2f-401b-8a47-530ae195cbbc"]
}, Closed]],
Cell[CellGroupData[{
Cell[330154, 9124, 769, 24, 70, "Exercise",ExpressionUUID->"af8564ed-245f-4db3-ad19-2923299ae531"],
Cell[330926, 9150, 2413, 54, 70, "ExerciseOutput",ExpressionUUID->"f354bd4d-6a9e-4a94-8612-12fa63f881e4"]
}, Closed]],
Cell[CellGroupData[{
Cell[333376, 9209, 779, 21, 70, "Exercise",ExpressionUUID->"4d9104cf-faf3-47c1-82ae-91a87e49b052"],
Cell[334158, 9232, 967, 28, 70, "ExerciseOutput",ExpressionUUID->"e9beebe7-997c-4aac-8bdd-9271a66a9c9b"]
}, Closed]],
Cell[CellGroupData[{
Cell[335162, 9265, 692, 20, 70, "Exercise",ExpressionUUID->"409c5c65-39cf-45db-8ac8-5a8562d85171"],
Cell[335857, 9287, 1697, 43, 70, "ExerciseOutput",ExpressionUUID->"44cb3731-efd7-4c76-b3a4-02474d1576b3"]
}, Closed]],
Cell[CellGroupData[{
Cell[337591, 9335, 716, 20, 70, "Exercise",ExpressionUUID->"db5282bb-90fc-4749-b74e-39d1d2c6b943"],
Cell[338310, 9357, 2001, 50, 70, "ExerciseOutput",ExpressionUUID->"431eb568-ea9b-4574-a2a1-3f86091fede6"]
}, Closed]],
Cell[CellGroupData[{
Cell[340348, 9412, 687, 20, 70, "Exercise",ExpressionUUID->"3558b4ae-f75f-4b76-9159-c5eb27c7e581"],
Cell[341038, 9434, 36020, 828, 70, "ExerciseOutput",ExpressionUUID->"91ee0e26-1974-4a44-b169-43881ab03784"]
}, Closed]],
Cell[CellGroupData[{
Cell[377095, 10267, 778, 21, 70, "Exercise",ExpressionUUID->"547cf104-5a33-4415-b64b-38305a2d6133"],
Cell[377876, 10290, 7194, 174, 70, "ExerciseOutput",ExpressionUUID->"283b186f-e173-463f-b750-e05f70e2f3f6"]
}, Closed]],
Cell[CellGroupData[{
Cell[385107, 10469, 823, 25, 70, "Exercise",ExpressionUUID->"2b9cacce-7f33-4263-b5fd-9c62c052d725"],
Cell[385933, 10496, 1251, 36, 70, "ExerciseOutput",ExpressionUUID->"8c517615-cb2b-465d-b066-a33f7de27881"]
}, Closed]]
}, Closed]]
}, Open  ]],
Cell[CellGroupData[{
Cell[387245, 10539, 125, 4, 70, "QASection",ExpressionUUID->"e5181de0-c511-42fe-a2d6-6990af500e8e",
 CellTags->"p:185"],
Cell[387373, 10545, 230, 8, 70, "Question",ExpressionUUID->"31dfc539-1b64-4170-96ff-8aa76a0fe5ce"],
Cell[387606, 10555, 773, 22, 70, "Answer",ExpressionUUID->"d810a33f-0f69-4a86-994f-119b700e3e62",
 CellTags->"i:29"]
}, Open  ]],
Cell[CellGroupData[{
Cell[388416, 10582, 111, 3, 70, "TechNoteSection",ExpressionUUID->"4e3c6eba-d24d-46b6-9213-6bceeb7076c0"],
Cell[388530, 10587, 241, 9, 70, "TechNote",ExpressionUUID->"69115230-225d-4f92-b347-bb0270739c42",
 CellTags->"i:30"],
Cell[388774, 10598, 299, 9, 70, "TechNote",ExpressionUUID->"7a3f322c-6b57-4a7c-a86c-efcd5216ac4d",
 CellTags->"i:31"],
Cell[389076, 10609, 475, 17, 70, "TechNote",ExpressionUUID->"2f74ea7c-f1fc-4ec7-84d6-e3772143fbea",
 CellTags->"i:32"]
}, Open  ]],
Cell[CellGroupData[{
Cell[389588, 10631, 117, 3, 70, "MoreExploreSection",ExpressionUUID->"d18731a4-b4ab-494b-b777-ce789238f3a6"],
Cell[389708, 10636, 330, 8, 70, "MoreExplore",ExpressionUUID->"7f139b22-28c6-496f-9384-713d38245b0a",
 CellTags->"LastCellOfAPage"]
}, Open  ]]
}
]
*)

(* End of internal cache information *)
(* NotebookSignature lTc1KzRAsNk53iIQRj@oNiLB *)
