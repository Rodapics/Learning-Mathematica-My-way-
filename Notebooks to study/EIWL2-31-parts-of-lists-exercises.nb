(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 11.3' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    331502,       6802]
NotebookOptionsPosition[    260628,       5402]
NotebookOutlinePosition[    320699,       6625]
CellTagsIndexPosition[    320620,       6620]
WindowTitle->Partes de listas: Una introducci\363n elemental a Wolfram Language
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell["Encuentre los 5 \[UAcute]ltimos d\[IAcute]gitos de 2^1000.", "Exercise",
 Editable->False,
 Selectable->False,
 Deletable->False,
 CellDingbat->Cell[
  "31.1", "ExerciseNumber", FontColor -> 
   RGBColor[0.9019607843137255, 0.4117647058823529, 0.027450980392156862`]],
 ShowCellBracket->False,
 CounterAssignments->{{"SectionNumber", 31}, {"ExerciseNumber", 1}, {
   "WebOnly", 0}}],

Cell[CellGroupData[{

Cell[BoxData[
 TagBox[
  ButtonBox[
   StyleBox[
    RowBox[{"EXPECTED", " ", "OUTPUT", " ", "\[RightGuillemet]"}],
    FontFamily->"Source Sans Pro",
    FontSize->12,
    FontColor->GrayLevel[0.6]],
   Appearance->None,
   ButtonFunction:>(SelectionMove[
      ButtonNotebook[], All, ButtonCell, AutoScroll -> False]; FrontEndExecute[
      FrontEndToken[
       ButtonNotebook[], "OpenCloseGroup"]]),
   Evaluator->Automatic,
   Method->"Preemptive"],
  MouseAppearanceTag["LinkHand"]]], "ExerciseExpectedResult",
 Editable->False,
 Deletable->False,
 ShowCellBracket->False],

Cell[BoxData[
 FrameBox[
  TagBox[GridBox[{
     {
      PaneBox[
       InterpretationBox[Cell[BoxData[
         GraphicsBox[
          TagBox[RasterBox[CompressedData["
1:eJztVq+PnEAUJq2pbNK/oP8AupZUVZFccw5zlx6Xmiu5a9JgcUjcOBQKhRqF
QWEwmDEjMBgEgooRI7bvzbC/ujO7cs2+BLIw37z5vveL/fz46y585zjO2we4
3T388V5fH+LvH+Hh/uXt5/PL049vL7+fnp9evzy+h5ef4PoKF/7e3OxmN7ts
M01D1416gQ9yHhpalRVlk7BvWbq6KkvaDfM5x2Jqa3TVstEOGfpjG+znHnNb
itDzgqSd5MqpJ9D1YVqNcrOwwjmwgpl8yiH1cNV18R7TwXzoWPvKiUI5ftpI
E6zPPOfY3KwzOjzh9pfRPAB82q6ALnOcTDGeldeY48NcpsSoY6xjAJUceMkq
BpqRUYkcqecmXLGvUbnXLmbFUkgwFJWDdL8zw8zcGGxxM10WokchCx5dATS1
nLezDjxu925GCltydmHL3CR2ITtBDMIbFMy8aOHWEyBD9FteBJqYSo3fMMhY
nheUzcZaUEKcdN5ShIess3bKMo19UwZYu8V5HUMZAoibz7RyY4o8eJ55HUGw
VJnpZsEz4yTAyvbqyeBTcKxVN0gISXT9E0s1gEuy7YAzYrUOqFc/723LNm6S
l5ipiqWqvep5D64GLZZHds8zb7IkjhPStBWm5yxJKSaaBQeeTaZKtODWeWXn
JoiKppwZhjWp8RWC3WYltQDANkB2JjDjDs470+KeluxRb2vVO1BISNDb572N
m2A5NmmL451jCevmHaEnnYCwaerKeO1iyWAyeQndHSKnJgqShg28K3HARhXK
OIFRiJob12ycp6FK/TXgJzBtaoCQfYEaYCZua4MTsYpdp9ZGDf9gO6jjotPL
gRruu1Pk1IbuduaHZM32CUyMna7m9eNAuRGmrSe+4x0IMcEM3I6nlhoI6cEW
uYCJfbVgyg7DpXcp0OEbI0wKxMlLsFOzwP7nxkDINgK6zLxdbI9txBJxiv78
zLkKTLQ51pi3b2TRFmkYJsbvOHwJzvz5uSpM0DSKkpxfzO7NrmH/APHszhs=

            "], {{0, 19}, {67, 0}}, {0, 255},
            ColorFunction->RGBColor],
           BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
           Selectable->False],
          DefaultBaseStyle->"ImageGraphics",
          ImageSize->Magnification[1],
          ImageSizeRaw->{67, 19},
          PlotRange->{{0, 67}, {0, 19}}]], "ExerciseOutput",
         ImageSize->{71, 19},
         ImageMargins->{{0, 0}, {0, 0}},
         ImageRegion->{{0, 1}, {0, 1}},
         Magnification->1],
        Apply[TextCell, 
         Cell[
          BoxData[
           GraphicsBox[
            TagBox[
             RasterBox[CompressedData["
1:eJztVq+PnEAUJq2pbNK/oP8AupZUVZFccw5zlx6Xmiu5a9JgcUjcOBQKhRqF
QWEwmDEjMBgEgooRI7bvzbC/ujO7cs2+BLIw37z5vveL/fz46y585zjO2we4
3T388V5fH+LvH+Hh/uXt5/PL049vL7+fnp9evzy+h5ef4PoKF/7e3OxmN7ts
M01D1416gQ9yHhpalRVlk7BvWbq6KkvaDfM5x2Jqa3TVstEOGfpjG+znHnNb
itDzgqSd5MqpJ9D1YVqNcrOwwjmwgpl8yiH1cNV18R7TwXzoWPvKiUI5ftpI
E6zPPOfY3KwzOjzh9pfRPAB82q6ALnOcTDGeldeY48NcpsSoY6xjAJUceMkq
BpqRUYkcqecmXLGvUbnXLmbFUkgwFJWDdL8zw8zcGGxxM10WokchCx5dATS1
nLezDjxu925GCltydmHL3CR2ITtBDMIbFMy8aOHWEyBD9FteBJqYSo3fMMhY
nheUzcZaUEKcdN5ShIess3bKMo19UwZYu8V5HUMZAoibz7RyY4o8eJ55HUGw
VJnpZsEz4yTAyvbqyeBTcKxVN0gISXT9E0s1gEuy7YAzYrUOqFc/723LNm6S
l5ipiqWqvep5D64GLZZHds8zb7IkjhPStBWm5yxJKSaaBQeeTaZKtODWeWXn
JoiKppwZhjWp8RWC3WYltQDANkB2JjDjDs470+KeluxRb2vVO1BISNDb572N
m2A5NmmL451jCevmHaEnnYCwaerKeO1iyWAyeQndHSKnJgqShg28K3HARhXK
OIFRiJob12ycp6FK/TXgJzBtaoCQfYEaYCZua4MTsYpdp9ZGDf9gO6jjotPL
gRruu1Pk1IbuduaHZM32CUyMna7m9eNAuRGmrSe+4x0IMcEM3I6nlhoI6cEW
uYCJfbVgyg7DpXcp0OEbI0wKxMlLsFOzwP7nxkDINgK6zLxdbI9txBJxiv78
zLkKTLQ51pi3b2TRFmkYJsbvOHwJzvz5uSpM0DSKkpxfzO7NrmH/APHszhs=

              "], {{0, 19}, {67, 0}}, {0, 255}, ColorFunction -> RGBColor], 
             BoxForm`ImageTag[
             "Byte", ColorSpace -> "RGB", Interleaving -> True], Selectable -> 
             False], DefaultBaseStyle -> "ImageGraphics", ImageSize -> 
            Magnification[1], ImageSizeRaw -> {67, 19}, 
            PlotRange -> {{0, 67}, {0, 19}}]], "ExerciseOutput", 
          Magnification -> 1, CellFrameColor -> GrayLevel[0], Selectable -> 
          False, Copyable -> False, Editable -> False, ShowCellBracket -> 
          False, CellLabel -> "Out[]=", CellFrame -> False]]],
       FrameMargins->{{10, 0}, {10, 12}},
       ImageMargins->0,
       ImageSize->Full], 
      ButtonBox[
       PaneBox[
        StyleBox["\[Times]",
         FontFamily->"MathematicaMono",
         FontSize->18,
         FontWeight->"Bold",
         FontColor->GrayLevel[0.75]],
        Alignment->Right,
        FrameMargins->{{0, 6}, {0, 0}},
        ImageMargins->0],
       Appearance->None,
       ButtonFunction:>(SelectionMove[
          ButtonNotebook[], All, ButtonCell, AutoScroll -> False]; 
        NotebookFind[
          EvaluationNotebook[], "Exercise", Previous, CellStyle, WrapAround -> 
          False, AutoScroll -> False]; FrontEndExecute[
          FrontEndToken[
           ButtonNotebook[], "OpenCloseGroup"]])]}
    },
    GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {Top}},
    GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
   "Grid"],
  FrameMargins->0,
  FrameStyle->GrayLevel[0.7],
  StripOnInput->False]], "ExerciseOutput",
 Editable->False,
 Selectable->False,
 Deletable->False,
 CellFrame->{{1, 1}, {1, 1}},
 ShowCellBracket->False,
 CellFrameMargins->{{0, 0}, {0, 0}},
 CellFrameColor->GrayLevel[1],
 LineBreakWithin->Automatic]
}, Closed]],

Cell[CellGroupData[{

Cell[BoxData[
 StyleBox[
  DynamicBox[ToBoxes[
    $CellContext`SolutionResponseText["31.1"], StandardForm],
   ImageSizeCache->{140., {3., 9.}}], "SolutionResponseText"]], "Subsection",
 Editable->False,
 Selectable->False,
 Deletable->False,
 ShowCellBracket->False,
 CellMargins->{{24, 25}, {3, 0}},
 CellFrameMargins->{{8, 0}, {0, 0}},
 TextAlignment->Right,
 ShowStringCharacters->False,
 FontFamily->"Source Sans Pro",
 FontSize->12,
 FontWeight->"Plain",
 FontSlant->"Plain",
 Background->GrayLevel[1]],

Cell[BoxData[
 ButtonBox[
  PaneBox[
   StyleBox[
    RowBox[{"[", " ", 
     RowBox[{"Click", " ", "to", " ", "enter", " ", "code"}], " ", "]"}],
    Selectable->False,
    StripOnInput->False,
    FontFamily->"Source Sans Pro",
    FontSize->14,
    FontWeight->Plain,
    FontColor->GrayLevel[0.6]],
   ImageSize->Full],
  Appearance->None,
  ButtonFunction:>(SelectionMove[
     InputNotebook[], All, ButtonCell]; NotebookWrite[
     InputNotebook[], 
     Cell[
      BoxData[""], "Input"]]; SelectionMove[
     InputNotebook[], Before, CellContents]; Null),
  Evaluator->Automatic,
  Method->"Preemptive"]], "Input",
 CellFrameLabels->{{None, None}, {None, None}},
 ShowSyntaxStyles->False,
 ShowStringCharacters->False,
 CellTags->"FirstInputCell"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 PaneBox["\[ThickSpace]",
  ImageSize->Full]], "CodeSectionDividerCloud",
 Editable->False,
 Selectable->False,
 Deletable->False,
 CellMargins->{{0, 0}, {0, 35}},
 CellBracketOptions->{"OverlapContent"->True}],

Cell["Obtenga las letras de la 10 a la 20 del alfabeto ingl\[EAcute]s.", \
"Exercise",
 Editable->False,
 Selectable->False,
 Deletable->False,
 CellDingbat->Cell[
  "31.2", "ExerciseNumber", FontColor -> 
   RGBColor[0.9019607843137255, 0.4117647058823529, 0.027450980392156862`]],
 ShowCellBracket->False,
 CounterAssignments->{{"SectionNumber", 31}, {"ExerciseNumber", 2}, {
   "WebOnly", 0}}],

Cell[CellGroupData[{

Cell[BoxData[
 TagBox[
  ButtonBox[
   StyleBox[
    RowBox[{"EXPECTED", " ", "OUTPUT", " ", "\[RightGuillemet]"}],
    FontFamily->"Source Sans Pro",
    FontSize->12,
    FontColor->GrayLevel[0.6]],
   Appearance->None,
   ButtonFunction:>(SelectionMove[
      ButtonNotebook[], All, ButtonCell, AutoScroll -> False]; FrontEndExecute[
      FrontEndToken[
       ButtonNotebook[], "OpenCloseGroup"]]),
   Evaluator->Automatic,
   Method->"Preemptive"],
  MouseAppearanceTag["LinkHand"]]], "ExerciseExpectedResult",
 Editable->False,
 Deletable->False,
 ShowCellBracket->False],

Cell[BoxData[
 FrameBox[
  TagBox[GridBox[{
     {
      PaneBox[
       InterpretationBox[Cell[BoxData[
         GraphicsBox[
          TagBox[RasterBox[CompressedData["
1:eJztV6+P5TYQjlpysFL/gv4DxkcNiyJdVRZyp25OJdtor1IVGhbppCosLCgo
KOihkCCTgJqEuFJISECAiUHA69hO8rJvnR+7V5iRdpWXfP48nrG/Gf/06Y8P
7neWZX15B/8+fPwLPz199H/5AX78+vjl98+PD7/9/Pjnw+eHp/efvoeXP8Lf
3/Ann6+nnXbaaac9t2EQg/mLYFXV9CsfXw077W3WX0IXIY8KiDS1LQtHlQHF
CbKsgPQ7ZAdhp63bIMD0buepi7ETkG7c/JzG0Gm4Yd7Ci6GJPTcqGgOFqCCP
UbWXhYOw09atChFsd/U41JfEsSwU6p9XXkUQXbFLISp8LFmHYLB9+G3O5fMO
PedHFFayH1Xi4eDsr6CUh2MdO4itrypZKKLzzzqxLRTpgAoqk8VHHhYgnFBu
8vWWhaG5QLr9jG3DTH6yAOMwyzzQStgwbsLaKsDy2cKBcdp5VJTnIxJ5Vbe+
2J6GjmIHD5NyNQ2KM0gS7YmFfdKucg5dFdia0gl8x/ZzM61eXZq6EmlTA0iU
sauJsBczw3p55o2LBL+8rIZXNMYWijWWpc6cODhmq6HWWQAPBHWk14k5H9vJ
4pVedJgRkgXabS8pqjKBUTg21crFKD8tKUlXq+pVhsuXQDcntEjlo73HGeak
rnK5IhR2K5yeSlNWViSPZChxbF7exOkleUnql7nXFSchrKmLwPWNQWqVM8iL
i7KoGpmiWiUInnpWgCd4ksStUKtPMaliFazWHIK9ZKmKFpQ6KjxCsxoLyBZa
S4EeVehRQwaLcTPj3tbRyJoxTmUA29OtjVDFGU6NUF/CzsHEdLQ1Zzqx1It9
buS0I2L8OFP5KdlslmUo8EIGB5apTVWH6sQVc2g3k+VYk9krx2qb4fZVr5XH
eD4jy+ftUSALNw2/Myqr8U1/VDk2p+DOT1EnsKzYJMRMqppdTZx0M1lKfNbU
HGyoskDrru1n5oNsCIWI1Zihr+XgoDAu4c4TlSyvIDmWKkgNmF2Hn/G/Nlmj
VxvhUtmxLtOxJ6H01FQ7FqqurL34qydLcqJy+rSfrAPNFStTJfvGGKpQLD7p
jZQQuSomZWXaqPN0Q+0jqPmX20L5TTdqVUJzUJuXMFXR3KSSB91Esp+snVE6
XMrhldnhFakZvUSqEJVmTiVZlh2UdcOIDB3IBTciu0Luayequ05zQiE0I+8q
/gsATT3bT1nHeUvATydlBpKryCC6KKBtw1o5j2oqYjGub9ENzsnSq0bRbQup
N5MWdbLQ2ql4CYO51Cu5FVdJxmRJcR4bAA59w5isnVFKBnVgDbNfOctnucZe
2i2T+IxTJQvjCerTfgV5vTZFNBcA2Wni2Dz7cz9fApoysedS4kSytBqXQFMN
0QV9eZbVMQ+n1p3OV1p54tbO+8JMMLgMjbehgyQHOF+FHDjndxeye6Tul6Bt
GHjf8y3kRNn3si9Qt56pkd7z0wRQvi3uWWYScYthrWRRA7QkYjf+59+aFLJd
Aa1rL7JdTemO/G7DDpK8edQ3IVcuKbucswjvIo+4t4cRJJEXkEU1FyQNXTfI
vypNsCMG+si7pjtwr9+GHSR586hvQcobGTJc//c4oV4jfXHYnf2IezsYcQk9
L0hM1+fTTjvt/7H/AE3wCYI=
            "], {{0, 19}, {143, 0}}, {0, 255},
            ColorFunction->RGBColor],
           BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
           Selectable->False],
          DefaultBaseStyle->"ImageGraphics",
          ImageSize->Magnification[1],
          ImageSizeRaw->{143, 19},
          PlotRange->{{0, 143}, {0, 19}}]], "ExerciseOutput",
         ImageSize->{147, 19},
         ImageMargins->{{0, 0}, {0, 0}},
         ImageRegion->{{0, 1}, {0, 1}},
         Magnification->1],
        Apply[TextCell, 
         Cell[
          BoxData[
           GraphicsBox[
            TagBox[
             RasterBox[CompressedData["
1:eJztV6+P5TYQjlpysFL/gv4DxkcNiyJdVRZyp25OJdtor1IVGhbppCosLCgo
KOihkCCTgJqEuFJISECAiUHA69hO8rJvnR+7V5iRdpWXfP48nrG/Gf/06Y8P
7neWZX15B/8+fPwLPz199H/5AX78+vjl98+PD7/9/Pjnw+eHp/efvoeXP8Lf
3/Ann6+nnXbaaac9t2EQg/mLYFXV9CsfXw077W3WX0IXIY8KiDS1LQtHlQHF
CbKsgPQ7ZAdhp63bIMD0buepi7ETkG7c/JzG0Gm4Yd7Ci6GJPTcqGgOFqCCP
UbWXhYOw09atChFsd/U41JfEsSwU6p9XXkUQXbFLISp8LFmHYLB9+G3O5fMO
PedHFFayH1Xi4eDsr6CUh2MdO4itrypZKKLzzzqxLRTpgAoqk8VHHhYgnFBu
8vWWhaG5QLr9jG3DTH6yAOMwyzzQStgwbsLaKsDy2cKBcdp5VJTnIxJ5Vbe+
2J6GjmIHD5NyNQ2KM0gS7YmFfdKucg5dFdia0gl8x/ZzM61eXZq6EmlTA0iU
sauJsBczw3p55o2LBL+8rIZXNMYWijWWpc6cODhmq6HWWQAPBHWk14k5H9vJ
4pVedJgRkgXabS8pqjKBUTg21crFKD8tKUlXq+pVhsuXQDcntEjlo73HGeak
rnK5IhR2K5yeSlNWViSPZChxbF7exOkleUnql7nXFSchrKmLwPWNQWqVM8iL
i7KoGpmiWiUInnpWgCd4ksStUKtPMaliFazWHIK9ZKmKFpQ6KjxCsxoLyBZa
S4EeVehRQwaLcTPj3tbRyJoxTmUA29OtjVDFGU6NUF/CzsHEdLQ1Zzqx1It9
buS0I2L8OFP5KdlslmUo8EIGB5apTVWH6sQVc2g3k+VYk9krx2qb4fZVr5XH
eD4jy+ftUSALNw2/Myqr8U1/VDk2p+DOT1EnsKzYJMRMqppdTZx0M1lKfNbU
HGyoskDrru1n5oNsCIWI1Zihr+XgoDAu4c4TlSyvIDmWKkgNmF2Hn/G/Nlmj
VxvhUtmxLtOxJ6H01FQ7FqqurL34qydLcqJy+rSfrAPNFStTJfvGGKpQLD7p
jZQQuSomZWXaqPN0Q+0jqPmX20L5TTdqVUJzUJuXMFXR3KSSB91Esp+snVE6
XMrhldnhFakZvUSqEJVmTiVZlh2UdcOIDB3IBTciu0Luayequ05zQiE0I+8q
/gsATT3bT1nHeUvATydlBpKryCC6KKBtw1o5j2oqYjGub9ENzsnSq0bRbQup
N5MWdbLQ2ql4CYO51Cu5FVdJxmRJcR4bAA59w5isnVFKBnVgDbNfOctnucZe
2i2T+IxTJQvjCerTfgV5vTZFNBcA2Wni2Dz7cz9fApoysedS4kSytBqXQFMN
0QV9eZbVMQ+n1p3OV1p54tbO+8JMMLgMjbehgyQHOF+FHDjndxeye6Tul6Bt
GHjf8y3kRNn3si9Qt56pkd7z0wRQvi3uWWYScYthrWRRA7QkYjf+59+aFLJd
Aa1rL7JdTemO/G7DDpK8edQ3IVcuKbucswjvIo+4t4cRJJEXkEU1FyQNXTfI
vypNsCMG+si7pjtwr9+GHSR586hvQcobGTJc//c4oV4jfXHYnf2IezsYcQk9
L0hM1+fTTjvt/7H/AE3wCYI=
              "], {{0, 19}, {143, 0}}, {0, 255}, 
              ColorFunction -> RGBColor], 
             BoxForm`ImageTag[
             "Byte", ColorSpace -> "RGB", Interleaving -> True], Selectable -> 
             False], DefaultBaseStyle -> "ImageGraphics", ImageSize -> 
            Magnification[1], ImageSizeRaw -> {143, 19}, 
            PlotRange -> {{0, 143}, {0, 19}}]], "ExerciseOutput", 
          Magnification -> 1, CellFrameColor -> GrayLevel[0], Selectable -> 
          False, Copyable -> False, Editable -> False, ShowCellBracket -> 
          False, CellLabel -> "Out[]=", CellFrame -> False]]],
       FrameMargins->{{10, 0}, {10, 12}},
       ImageMargins->0,
       ImageSize->Full], 
      ButtonBox[
       PaneBox[
        StyleBox["\[Times]",
         FontFamily->"MathematicaMono",
         FontSize->18,
         FontWeight->"Bold",
         FontColor->GrayLevel[0.75]],
        Alignment->Right,
        FrameMargins->{{0, 6}, {0, 0}},
        ImageMargins->0],
       Appearance->None,
       ButtonFunction:>(SelectionMove[
          ButtonNotebook[], All, ButtonCell, AutoScroll -> False]; 
        NotebookFind[
          EvaluationNotebook[], "Exercise", Previous, CellStyle, WrapAround -> 
          False, AutoScroll -> False]; FrontEndExecute[
          FrontEndToken[
           ButtonNotebook[], "OpenCloseGroup"]])]}
    },
    GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {Top}},
    GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
   "Grid"],
  FrameMargins->0,
  FrameStyle->GrayLevel[0.7],
  StripOnInput->False]], "ExerciseOutput",
 Editable->False,
 Selectable->False,
 Deletable->False,
 CellFrame->{{1, 1}, {1, 1}},
 ShowCellBracket->False,
 CellFrameMargins->{{0, 0}, {0, 0}},
 CellFrameColor->GrayLevel[1],
 LineBreakWithin->Automatic]
}, Closed]],

Cell[CellGroupData[{

Cell[BoxData[
 StyleBox[
  DynamicBox[ToBoxes[
    $CellContext`SolutionResponseText["31.2"], StandardForm],
   ImageSizeCache->{140., {3., 9.}}], "SolutionResponseText"]], "Subsection",
 Editable->False,
 Selectable->False,
 Deletable->False,
 ShowCellBracket->False,
 CellMargins->{{24, 25}, {3, 0}},
 CellFrameMargins->{{8, 0}, {0, 0}},
 TextAlignment->Right,
 ShowStringCharacters->False,
 FontFamily->"Source Sans Pro",
 FontSize->12,
 FontWeight->"Plain",
 FontSlant->"Plain",
 Background->GrayLevel[1]],

Cell[BoxData[
 ButtonBox[
  PaneBox[
   StyleBox[
    RowBox[{"[", " ", 
     RowBox[{"Click", " ", "to", " ", "enter", " ", "code"}], " ", "]"}],
    Selectable->False,
    StripOnInput->False,
    FontFamily->"Source Sans Pro",
    FontSize->14,
    FontWeight->Plain,
    FontColor->GrayLevel[0.6]],
   ImageSize->Full],
  Appearance->None,
  ButtonFunction:>(SelectionMove[
     InputNotebook[], All, ButtonCell]; NotebookWrite[
     InputNotebook[], 
     Cell[
      BoxData[""], "Input"]]; SelectionMove[
     InputNotebook[], Before, CellContents]; Null),
  Evaluator->Automatic,
  Method->"Preemptive"]], "Input",
 CellFrameLabels->{{None, None}, {None, None}},
 ShowSyntaxStyles->False,
 ShowStringCharacters->False,
 CellTags->"FirstInputCell"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 PaneBox["\[ThickSpace]",
  ImageSize->Full]], "CodeSectionDividerCloud",
 Editable->False,
 Selectable->False,
 Deletable->False,
 CellMargins->{{0, 0}, {0, 35}},
 CellBracketOptions->{"OverlapContent"->True}],

Cell["\<\
Forme la lista de las letras en las posiciones pares del alfabeto ingl\
\[EAcute]s.\
\>", "Exercise",
 Editable->False,
 Selectable->False,
 Deletable->False,
 CellDingbat->Cell[
  "31.3", "ExerciseNumber", FontColor -> 
   RGBColor[0.9019607843137255, 0.4117647058823529, 0.027450980392156862`]],
 ShowCellBracket->False,
 CounterAssignments->{{"SectionNumber", 31}, {"ExerciseNumber", 3}, {
   "WebOnly", 0}}],

Cell[CellGroupData[{

Cell[BoxData[
 TagBox[
  ButtonBox[
   StyleBox[
    RowBox[{"EXPECTED", " ", "OUTPUT", " ", "\[RightGuillemet]"}],
    FontFamily->"Source Sans Pro",
    FontSize->12,
    FontColor->GrayLevel[0.6]],
   Appearance->None,
   ButtonFunction:>(SelectionMove[
      ButtonNotebook[], All, ButtonCell, AutoScroll -> False]; FrontEndExecute[
      FrontEndToken[
       ButtonNotebook[], "OpenCloseGroup"]]),
   Evaluator->Automatic,
   Method->"Preemptive"],
  MouseAppearanceTag["LinkHand"]]], "ExerciseExpectedResult",
 Editable->False,
 Deletable->False,
 ShowCellBracket->False],

Cell[BoxData[
 FrameBox[
  TagBox[GridBox[{
     {
      PaneBox[
       InterpretationBox[Cell[BoxData[
         GraphicsBox[
          TagBox[RasterBox[CompressedData["
1:eJztWCGP5TYQtlpysFJ/Qf9AcKlhUaSryh65Uzenkm20V6kKDQs0C4sOBAUF
BYUEhYSYmASEPPIqpVIKDAy2HsfZzW7sJG+f9u6qvpHe6u3zl5nxfOOZcX54
//tb7xuE0Mc38s/bd3/iu7t3wc/fyX9+uf3424fbm19/uv3j5sPN3Y/vv5U/
fi8/n+QHvt9f5SpXucpV/kvC26bpenHuY0NHG3ZaUUvLLEmzqu0vtCgEt0Bf
6Pn/Rvoi8hzHp3/VDkJhvSRiQ5pIPhfZHmPJASnxUvZ8bTjHIqcuQpg0hqWz
9HwuEVzKF8m6IfUwPoT1SVsfaAzxj/LjP42MIWnODhSNMXLiwWIukUr9wrzI
z7Eoutj3SNldqudzCWR+WH8Jy4IVcK6cSFsfGiLDw+8hUBihmKqvA9+ja4Qx
yaKVYp5ghGNqWQSLRFscXp7xo54dFO+2InZGQB1Ws0pJsUMsG399UaSQMSKc
AsVAkDoLHol9RxVWHDyc9KWIUxO6CuYcPBlfbKaYpf5YpZFsBMuYKYtBmoVY
Yxq7xXvRhg5OqMnOOsXyQYxJnm9bUcgwSR4jcFxDRmnqAc5dbG3IfG1MavKz
RYeCWuoc4qnpgDaHVIZ5po4PyI06MX73kEuOy92z1AFLDnZdF2M/gbyal9Y2
PWi6eTN2TZLXrMnhuxOZpyjRKuYOWdXUOYF4uGaKh7aAiuHHZdUYpqHJYpBV
tE6trVbrsvO4TvHQjMkYpFtWJmS0GYEJ6Sd5VbPlzo7qcbXxsukMsamJdNkf
u05fy1OGCmPinSp1gKg4FbCFwtCnRN+WRVnVkA5AXw0uM0WrNCwXJVl4LNrq
TEXT0NJXoVwxjjBj+06Zzl221otVobbVK2UxLMcoikx66GXW+rjC4zrF+60Y
I2DcmEK6ZKXVrm4cJoscQVuU2kUuOXBT28aPRagr4UpwwN1aZa92SbSZylUW
qWJS6pL9JFCcJZMPz6WF+uQ2k731cSvG9lOjLQ6Tnsf2YQe/hOK9VnZHYJoi
LJsGWd04SC8BKKjkEZlloFGYqhhObpo0JzlBMX1Sc3is2o3oWQj3jXLmtmbu
WAS2HFYTmlNNSxdT3O/Qs4NiW8D3W9kdgR0Dntq4bc7U+n24bOTykB6Y/XzS
RB4oB6+e4prACa5m7oz5mdTQuluoXCqrx/7ihhXr2joFnW4C+xMscBAOi0f9
pxIS5EDY8UQL1Ytx3BuRc4qXq8My+MSiZxbV5SqnUH2TRlxohe+OwLPBwOAw
z4CZkB679jiYdzToUQSHlU3PWM9DSV6X6V68wPRNrMaCrG0ZpZR14JUasWKu
w/MwUVNwynV15ccBnWZuNXiQeTp3JdEw5HruFAoDEu7FmuLlqvplFnzXrmdG
sWGVZ+onKCyXWBkpxng7Ak91Gh0eaKovE3LUMe7oXpRqyn+YahYwLonS3uqj
eqB/P1fVkIky7TbUqHmxUlU3mpuWd0Ipc1fgpC+Lm4I9Kx1m5L7VDaSgD+83
THrAG3GhlfHNgAy4GPp+RwQ2Afxsr/bA9mCY6hMjZiza2Is7yxVQtQyU0u0X
C+vIS/T0HatLKEdy3H09K7Z72abOywH7YTswvE4C9ORuyOs08rzQ2vGHU3fa
96pnHXmBHkpU8XRJy1/RirxpBMgxvF3Z1Hk5YD9sG8OLyPfDpN1TyK5ylat8
9fIvu2iRZA==
            "], {{0, 19}, {161, 0}}, {0, 255},
            ColorFunction->RGBColor],
           BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
           Selectable->False],
          DefaultBaseStyle->"ImageGraphics",
          ImageSize->Magnification[1],
          ImageSizeRaw->{161, 19},
          PlotRange->{{0, 161}, {0, 19}}]], "ExerciseOutput",
         ImageSize->{165, 19},
         ImageMargins->{{0, 0}, {0, 0}},
         ImageRegion->{{0, 1}, {0, 1}},
         Magnification->1],
        Apply[TextCell, 
         Cell[
          BoxData[
           GraphicsBox[
            TagBox[
             RasterBox[CompressedData["
1:eJztWCGP5TYQtlpysFJ/Qf9AcKlhUaSryh65Uzenkm20V6kKDQs0C4sOBAUF
BYUEhYSYmASEPPIqpVIKDAy2HsfZzW7sJG+f9u6qvpHe6u3zl5nxfOOZcX54
//tb7xuE0Mc38s/bd3/iu7t3wc/fyX9+uf3424fbm19/uv3j5sPN3Y/vv5U/
fi8/n+QHvt9f5SpXucpV/kvC26bpenHuY0NHG3ZaUUvLLEmzqu0vtCgEt0Bf
6Pn/Rvoi8hzHp3/VDkJhvSRiQ5pIPhfZHmPJASnxUvZ8bTjHIqcuQpg0hqWz
9HwuEVzKF8m6IfUwPoT1SVsfaAzxj/LjP42MIWnODhSNMXLiwWIukUr9wrzI
z7Eoutj3SNldqudzCWR+WH8Jy4IVcK6cSFsfGiLDw+8hUBihmKqvA9+ja4Qx
yaKVYp5ghGNqWQSLRFscXp7xo54dFO+2InZGQB1Ws0pJsUMsG399UaSQMSKc
AsVAkDoLHol9RxVWHDyc9KWIUxO6CuYcPBlfbKaYpf5YpZFsBMuYKYtBmoVY
Yxq7xXvRhg5OqMnOOsXyQYxJnm9bUcgwSR4jcFxDRmnqAc5dbG3IfG1MavKz
RYeCWuoc4qnpgDaHVIZ5po4PyI06MX73kEuOy92z1AFLDnZdF2M/gbyal9Y2
PWi6eTN2TZLXrMnhuxOZpyjRKuYOWdXUOYF4uGaKh7aAiuHHZdUYpqHJYpBV
tE6trVbrsvO4TvHQjMkYpFtWJmS0GYEJ6Sd5VbPlzo7qcbXxsukMsamJdNkf
u05fy1OGCmPinSp1gKg4FbCFwtCnRN+WRVnVkA5AXw0uM0WrNCwXJVl4LNrq
TEXT0NJXoVwxjjBj+06Zzl221otVobbVK2UxLMcoikx66GXW+rjC4zrF+60Y
I2DcmEK6ZKXVrm4cJoscQVuU2kUuOXBT28aPRagr4UpwwN1aZa92SbSZylUW
qWJS6pL9JFCcJZMPz6WF+uQ2k731cSvG9lOjLQ6Tnsf2YQe/hOK9VnZHYJoi
LJsGWd04SC8BKKjkEZlloFGYqhhObpo0JzlBMX1Sc3is2o3oWQj3jXLmtmbu
WAS2HFYTmlNNSxdT3O/Qs4NiW8D3W9kdgR0Dntq4bc7U+n24bOTykB6Y/XzS
RB4oB6+e4prACa5m7oz5mdTQuluoXCqrx/7ihhXr2joFnW4C+xMscBAOi0f9
pxIS5EDY8UQL1Ytx3BuRc4qXq8My+MSiZxbV5SqnUH2TRlxohe+OwLPBwOAw
z4CZkB679jiYdzToUQSHlU3PWM9DSV6X6V68wPRNrMaCrG0ZpZR14JUasWKu
w/MwUVNwynV15ccBnWZuNXiQeTp3JdEw5HruFAoDEu7FmuLlqvplFnzXrmdG
sWGVZ+onKCyXWBkpxng7Ak91Gh0eaKovE3LUMe7oXpRqyn+YahYwLonS3uqj
eqB/P1fVkIky7TbUqHmxUlU3mpuWd0Ipc1fgpC+Lm4I9Kx1m5L7VDaSgD+83
THrAG3GhlfHNgAy4GPp+RwQ2Afxsr/bA9mCY6hMjZiza2Is7yxVQtQyU0u0X
C+vIS/T0HatLKEdy3H09K7Z72abOywH7YTswvE4C9ORuyOs08rzQ2vGHU3fa
96pnHXmBHkpU8XRJy1/RirxpBMgxvF3Z1Hk5YD9sG8OLyPfDpN1TyK5ylat8
9fIvu2iRZA==
              "], {{0, 19}, {161, 0}}, {0, 255}, ColorFunction -> 
              RGBColor], 
             BoxForm`ImageTag[
             "Byte", ColorSpace -> "RGB", Interleaving -> True], Selectable -> 
             False], DefaultBaseStyle -> "ImageGraphics", ImageSize -> 
            Magnification[1], ImageSizeRaw -> {161, 19}, 
            PlotRange -> {{0, 161}, {0, 19}}]], "ExerciseOutput", 
          Magnification -> 1, CellFrameColor -> GrayLevel[0], Selectable -> 
          False, Copyable -> False, Editable -> False, ShowCellBracket -> 
          False, CellLabel -> "Out[]=", CellFrame -> False]]],
       FrameMargins->{{10, 0}, {10, 12}},
       ImageMargins->0,
       ImageSize->Full], 
      ButtonBox[
       PaneBox[
        StyleBox["\[Times]",
         FontFamily->"MathematicaMono",
         FontSize->18,
         FontWeight->"Bold",
         FontColor->GrayLevel[0.75]],
        Alignment->Right,
        FrameMargins->{{0, 6}, {0, 0}},
        ImageMargins->0],
       Appearance->None,
       ButtonFunction:>(SelectionMove[
          ButtonNotebook[], All, ButtonCell, AutoScroll -> False]; 
        NotebookFind[
          EvaluationNotebook[], "Exercise", Previous, CellStyle, WrapAround -> 
          False, AutoScroll -> False]; FrontEndExecute[
          FrontEndToken[
           ButtonNotebook[], "OpenCloseGroup"]])]}
    },
    GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {Top}},
    GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
   "Grid"],
  FrameMargins->0,
  FrameStyle->GrayLevel[0.7],
  StripOnInput->False]], "ExerciseOutput",
 Editable->False,
 Selectable->False,
 Deletable->False,
 CellFrame->{{1, 1}, {1, 1}},
 ShowCellBracket->False,
 CellFrameMargins->{{0, 0}, {0, 0}},
 CellFrameColor->GrayLevel[1],
 LineBreakWithin->Automatic]
}, Closed]],

Cell[CellGroupData[{

Cell[BoxData[
 StyleBox[
  DynamicBox[ToBoxes[
    $CellContext`SolutionResponseText["31.3"], StandardForm],
   ImageSizeCache->{140., {3., 9.}}], "SolutionResponseText"]], "Subsection",
 Editable->False,
 Selectable->False,
 Deletable->False,
 ShowCellBracket->False,
 CellMargins->{{24, 25}, {3, 0}},
 CellFrameMargins->{{8, 0}, {0, 0}},
 TextAlignment->Right,
 ShowStringCharacters->False,
 FontFamily->"Source Sans Pro",
 FontSize->12,
 FontWeight->"Plain",
 FontSlant->"Plain",
 Background->GrayLevel[1]],

Cell[BoxData[
 ButtonBox[
  PaneBox[
   StyleBox[
    RowBox[{"[", " ", 
     RowBox[{"Click", " ", "to", " ", "enter", " ", "code"}], " ", "]"}],
    Selectable->False,
    StripOnInput->False,
    FontFamily->"Source Sans Pro",
    FontSize->14,
    FontWeight->Plain,
    FontColor->GrayLevel[0.6]],
   ImageSize->Full],
  Appearance->None,
  ButtonFunction:>(SelectionMove[
     InputNotebook[], All, ButtonCell]; NotebookWrite[
     InputNotebook[], 
     Cell[
      BoxData[""], "Input"]]; SelectionMove[
     InputNotebook[], Before, CellContents]; Null),
  Evaluator->Automatic,
  Method->"Preemptive"]], "Input",
 CellFrameLabels->{{None, None}, {None, None}},
 ShowSyntaxStyles->False,
 ShowStringCharacters->False,
 CellTags->"FirstInputCell"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 PaneBox["\[ThickSpace]",
  ImageSize->Full]], "CodeSectionDividerCloud",
 Editable->False,
 Selectable->False,
 Deletable->False,
 CellMargins->{{0, 0}, {0, 35}},
 CellBracketOptions->{"OverlapContent"->True}],

Cell["\<\
Obtenga el gr\[AAcute]fico con los puntos unidos del pen\[UAcute]ltimo d\
\[IAcute]gito en las 100 primeras potencias de 12.\
\>", "Exercise",
 Editable->False,
 Selectable->False,
 Deletable->False,
 CellDingbat->Cell[
  "31.4", "ExerciseNumber", FontColor -> 
   RGBColor[0.9019607843137255, 0.4117647058823529, 0.027450980392156862`]],
 ShowCellBracket->False,
 CounterAssignments->{{"SectionNumber", 31}, {"ExerciseNumber", 4}, {
   "WebOnly", 0}}],

Cell[CellGroupData[{

Cell[BoxData[
 TagBox[
  ButtonBox[
   StyleBox[
    RowBox[{"EXPECTED", " ", "OUTPUT", " ", "\[RightGuillemet]"}],
    FontFamily->"Source Sans Pro",
    FontSize->12,
    FontColor->GrayLevel[0.6]],
   Appearance->None,
   ButtonFunction:>(SelectionMove[
      ButtonNotebook[], All, ButtonCell, AutoScroll -> False]; FrontEndExecute[
      FrontEndToken[
       ButtonNotebook[], "OpenCloseGroup"]]),
   Evaluator->Automatic,
   Method->"Preemptive"],
  MouseAppearanceTag["LinkHand"]]], "ExerciseExpectedResult",
 Editable->False,
 Deletable->False,
 ShowCellBracket->False],

Cell[BoxData[
 FrameBox[
  TagBox[GridBox[{
     {
      PaneBox[
       InterpretationBox[Cell[BoxData[
         GraphicsBox[
          TagBox[RasterBox[CompressedData["
1:eJztvd+bVdW1LZp77st5PP/C+S/u6308r+d+53VyoqSi2bFyt9khZ0dJooH4
K0YJKjuRhEhUNIoaNYCCCBFRNGjKH6ClIKJiIEFEUUtF5ulztjWbbY3R56g1
Zo3KCX7Vv0o+KRazRq01eht99N566//1gu/896n/9LWvfe27/9n+779//fv/
76WXfv3f/7//Yn/4H9Pfvfib099Y/t+m/+0b3/zGpf/PBf+3ffNl+99/+7++
9rXmv+t+m+os8ZolW7IlO+9syamXbMm+krbk2ku2ZF9JW3LtJVuyr6QtufaS
LdlX0pZce8mW7CtpS669ZEv2lbQl116yJftK2pJrL9mSfSVtybWXbMm+krbE
RluyJftKWimn3jPz9s/ueObUB58UeRps21OHr7/z2c8+P1vwmbHtffEdW/nf
3/+44DMf3feGrXzu088LPjO2fS8fs5WfOPVRwWfuePaIrfzjuc8KPjO2Zw+8
ayv/68kzBZ/5+P43beUffvxpwWfGtv+Vv9rK3/nbhwWfufu5o7by02fmCj6z
Lufad+84WF3xx7eOf1DkabB1m5+3Zy72Nrt356v2U44ce7/gM3/1wF/smR9+
tLjb7IHds/ZTXn/7VMFn/vrBF+yZpz4svM0Ce+iJ1+2nvPrmyYLP/O0fX7Rn
loXo2LbsPWQ/5cAbfy/4zNu3vmzPLAt0dTnXvvORA7a8Q0W32U337G8cZJFx
+Pc7XrGfMnv0vYLPBCi9v8gOsvnxBpQOFt1mAKWTpxfXQR7Y/Zr9lBdfP1Hw
mb95qAGl4++VjGFie2hPA0p/mT1e8Jm3/fEle+axopFAXc61gTxlt9mau/9s
zyweqAS26dEGlF469LeCzwQonTxd8noS2z2PvVJ8m/3HfQ0onVhkB7mvBSUL
bgs+89YHZuyZ7/69sIME9oc/NaD0zMvHCj4ToFQ24q3LuTaQZ+a1kjhsF5B/
gIPcvq0BpeeKbjOAUtlbcGwAJbu3FnzmTfc81zpI4eAwMIDSUy++U/CZAKW3
TxR2kMDu29VcgvbMvF3wmQClN989XfCZdTnX3tAiT9ltdt3t++yZfzu1uMHh
xi0NKD39Uslt9vNNzy7G7SmwO1pQKrvNAErvnFjcs++u7U1mZvfzRws+E6D0
5l8LO0hgAKWdf36z4DMBSoffKXmZrcu59q1/aJDnyRdKbrOrNz79D3CQDQ83
6Zc/Pf9WwWcClMrmUWMDKJXdZgClo4vsIHe0mZntz7xR8Jm/+P3+1kFKpkNj
u7sFpW1PHS74zJvvbUDptbdKZnvqcq79y/ub9Mvj+0tus9Ub9i5GeiGw9S0o
7XjmSMFnApSK354C+20LStueLrnNfnbHM/bMN4rWC2L73dYGlP745KGCz7yh
BaXX3yp89gWGdLHduAs+E6BUtl5Ql3PtW9qc8CNPv1HkabArfv3kP8BBAEpl
t9nq3z5VvKAWGwpVDz5RcpsBlMoW1GJDoer+XbMFnwlQKu4ggSFdfO/OVwo+
E6BUtqBWl3Nt5IQfeuL1Ik+D/ejWPY2DlE4vBIZC1QO7S26zK1tQKlsKjA2F
qnt3vlrwmQClsqXA2ABKd+84WPCZAKWyNZrYAEp2oSj4TIBS2VJgXY5oivTL
5sdLbrPL/+NPi5FeCAzpl7LbDKD02iI7CNIvdxbdZgClg0cW9+xDTtjC8oLP
/GkLSmWLmLGhUGVXoYLPvOZ3+4oXMetypzbSL5seLbnN/v2W3YuRXggMoGSB
VsFnApReWWQHQfrFzpGCz/xxC0qL7SAAJTu7Cz7zJ7/ZW7z8GhvSxXaJK/hM
gFLZ8mtdzrURVJTdZt9bu+sf4CC46ZTdZgCllw8vroMg/WJhecFnXv7LJ+yZ
Lyyyg9zSgpJdhQo+E6D0/KuFHSQwZGbs+lnwmQClsoXjupxrI6iwQKvI02Df
XbOzdZDFvT0BlOwcKfjMFTc1oPRC6dtTYDfc9WzxbQZQev7VwsFhYGtbULJ4
qeAzAUp/PljYQQIDKF1/57MFnwlQevqlkgy3upxrI6iwe2uRp8H+/xseW4z0
QmDXtqBUdpsBlIrfngK7/s4GlOwqVPCZAKX9Bxf37LvxruYSdN3t+wo+8wfr
mkvQvqIU0NjWtuniqzc+XfCZK1tQ2luUE1KXc20EFTcU3WaX/Gz7P8BBrrqt
ASU7uws+E6BUliMd27UtMabsNvu3Xzz+D3AQUIhXb9hb8Jnfb0Fpb1HyamzI
zFzx6ycLPhOg9MRfhpGmTm9ft6JNhK/YcmDs6lrKta9Y/2TxbXbxtY/+Axxk
VUuMWf3bpwo+85LrdxRvIojtqtuacs+VRbcZQKksuzs2sPV+dOuegs8EKJWl
3caGdPFl//Gngs8EKO1+bgjt9szspqmpNcfO1sf3rJua2qTEzVKu/cNfNfcF
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
G+ZcQdY=
            "], {{0, 213}, {329, 0}}, {0, 255},
            ColorFunction->RGBColor],
           BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
           Selectable->False],
          DefaultBaseStyle->"ImageGraphics",
          ImageSize->Magnification[1],
          ImageSizeRaw->{329, 213},
          PlotRange->{{0, 329}, {0, 213}}]], "ExerciseOutput",
         ImageSize->{333, 213},
         ImageMargins->{{0, 0}, {0, 0}},
         ImageRegion->{{0, 1}, {0, 1}},
         Magnification->1],
        Apply[TextCell, 
         Cell[
          BoxData[
           GraphicsBox[
            TagBox[
             RasterBox[CompressedData["
1:eJztvd+bVdW1LZp77st5PP/C+S/u6308r+d+53VyoqSi2bFyt9khZ0dJooH4
K0YJKjuRhEhUNIoaNYCCCBFRNGjKH6ClIKJiIEFEUUtF5ulztjWbbY3R56g1
Zo3KCX7Vv0o+KRazRq01eht99N566//1gu/896n/9LWvfe27/9n+779//fv/
76WXfv3f/7//Yn/4H9Pfvfib099Y/t+m/+0b3/zGpf/PBf+3ffNl+99/+7++
9rXmv+t+m+os8ZolW7IlO+9syamXbMm+krbk2ku2ZF9JW3LtJVuyr6QtufaS
LdlX0pZce8mW7CtpS669ZEv2lbQl116yJftK2pJrL9mSfSVtybWXbMm+krbE
RluyJftKWimn3jPz9s/ueObUB58UeRps21OHr7/z2c8+P1vwmbHtffEdW/nf
3/+44DMf3feGrXzu088LPjO2fS8fs5WfOPVRwWfuePaIrfzjuc8KPjO2Zw+8
ayv/68kzBZ/5+P43beUffvxpwWfGtv+Vv9rK3/nbhwWfufu5o7by02fmCj6z
Lufad+84WF3xx7eOf1DkabB1m5+3Zy72Nrt356v2U44ce7/gM3/1wF/smR9+
tLjb7IHds/ZTXn/7VMFn/vrBF+yZpz4svM0Ce+iJ1+2nvPrmyYLP/O0fX7Rn
loXo2LbsPWQ/5cAbfy/4zNu3vmzPLAt0dTnXvvORA7a8Q0W32U337G8cZJFx
+Pc7XrGfMnv0vYLPBCi9v8gOsvnxBpQOFt1mAKWTpxfXQR7Y/Zr9lBdfP1Hw
mb95qAGl4++VjGFie2hPA0p/mT1e8Jm3/fEle+axopFAXc61gTxlt9mau/9s
zyweqAS26dEGlF469LeCzwQonTxd8noS2z2PvVJ8m/3HfQ0onVhkB7mvBSUL
bgs+89YHZuyZ7/69sIME9oc/NaD0zMvHCj4ToFQ24q3LuTaQZ+a1kjhsF5B/
gIPcvq0BpeeKbjOAUtlbcGwAJbu3FnzmTfc81zpI4eAwMIDSUy++U/CZAKW3
TxR2kMDu29VcgvbMvF3wmQClN989XfCZdTnX3tAiT9ltdt3t++yZfzu1uMHh
xi0NKD39Uslt9vNNzy7G7SmwO1pQKrvNAErvnFjcs++u7U1mZvfzRws+E6D0
5l8LO0hgAKWdf36z4DMBSoffKXmZrcu59q1/aJDnyRdKbrOrNz79D3CQDQ83
6Zc/Pf9WwWcClMrmUWMDKJXdZgClo4vsIHe0mZntz7xR8Jm/+P3+1kFKpkNj
u7sFpW1PHS74zJvvbUDptbdKZnvqcq79y/ub9Mvj+0tus9Ub9i5GeiGw9S0o
7XjmSMFnApSK354C+20LStueLrnNfnbHM/bMN4rWC2L73dYGlP745KGCz7yh
BaXX3yp89gWGdLHduAs+E6BUtl5Ql3PtW9qc8CNPv1HkabArfv3kP8BBAEpl
t9nq3z5VvKAWGwpVDz5RcpsBlMoW1GJDoer+XbMFnwlQKu4ggSFdfO/OVwo+
E6BUtqBWl3Nt5IQfeuL1Ik+D/ejWPY2DlE4vBIZC1QO7S26zK1tQKlsKjA2F
qnt3vlrwmQClsqXA2ABKd+84WPCZAKWyNZrYAEp2oSj4TIBS2VJgXY5oivTL
5sdLbrPL/+NPi5FeCAzpl7LbDKD02iI7CNIvdxbdZgClg0cW9+xDTtjC8oLP
/GkLSmWLmLGhUGVXoYLPvOZ3+4oXMetypzbSL5seLbnN/v2W3YuRXggMoGSB
VsFnApReWWQHQfrFzpGCz/xxC0qL7SAAJTu7Cz7zJ7/ZW7z8GhvSxXaJK/hM
gFLZ8mtdzrURVJTdZt9bu+sf4CC46ZTdZgCllw8vroMg/WJhecFnXv7LJ+yZ
Lyyyg9zSgpJdhQo+E6D0/KuFHSQwZGbs+lnwmQClsoXjupxrI6iwQKvI02Df
XbOzdZDFvT0BlOwcKfjMFTc1oPRC6dtTYDfc9WzxbQZQev7VwsFhYGtbULJ4
qeAzAUp/PljYQQIDKF1/57MFnwlQevqlkgy3upxrI6iwe2uRp8H+/xseW4z0
QmDXtqBUdpsBlIrfngK7/s4GlOwqVPCZAKX9Bxf37LvxruYSdN3t+wo+8wfr
mkvQvqIU0NjWtuniqzc+XfCZK1tQ2luUE1KXc20EFTcU3WaX/Gz7P8BBrrqt
ASU7uws+E6BUliMd27UtMabsNvu3Xzz+D3AQUIhXb9hb8Jnfb0Fpb1HyamzI
zFzx6ycLPhOg9MRfhpGmTm9ft6JNhK/YcmDs6lrKta9Y/2TxbXbxtY/+Axxk
VUuMWf3bpwo+85LrdxRvIojtqtuacs+VRbcZQKksuzs2sPV+dOuegs8EKJWl
3caGdPFl//Gngs8EKO1+bgjt9szspqmpNcfO1sf3rJua2qTEzVKu/cNfNfcF
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
G+ZcQdY=
              "], {{0, 213}, {329, 0}}, {0, 255}, ColorFunction -> 
              RGBColor], 
             BoxForm`ImageTag[
             "Byte", ColorSpace -> "RGB", Interleaving -> True], Selectable -> 
             False], DefaultBaseStyle -> "ImageGraphics", ImageSize -> 
            Magnification[1], ImageSizeRaw -> {329, 213}, 
            PlotRange -> {{0, 329}, {0, 213}}]], "ExerciseOutput", 
          Magnification -> 1, CellFrameColor -> GrayLevel[0], Selectable -> 
          False, Copyable -> False, Editable -> False, ShowCellBracket -> 
          False, CellLabel -> "Out[]=", CellFrame -> False]]],
       FrameMargins->{{10, 0}, {10, 12}},
       ImageMargins->0,
       ImageSize->Full], 
      ButtonBox[
       PaneBox[
        StyleBox["\[Times]",
         FontFamily->"MathematicaMono",
         FontSize->18,
         FontWeight->"Bold",
         FontColor->GrayLevel[0.75]],
        Alignment->Right,
        FrameMargins->{{0, 6}, {0, 0}},
        ImageMargins->0],
       Appearance->None,
       ButtonFunction:>(SelectionMove[
          ButtonNotebook[], All, ButtonCell, AutoScroll -> False]; 
        NotebookFind[
          EvaluationNotebook[], "Exercise", Previous, CellStyle, WrapAround -> 
          False, AutoScroll -> False]; FrontEndExecute[
          FrontEndToken[
           ButtonNotebook[], "OpenCloseGroup"]])]}
    },
    GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {Top}},
    GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
   "Grid"],
  FrameMargins->0,
  FrameStyle->GrayLevel[0.7],
  StripOnInput->False]], "ExerciseOutput",
 Editable->False,
 Selectable->False,
 Deletable->False,
 CellFrame->{{1, 1}, {1, 1}},
 ShowCellBracket->False,
 CellFrameMargins->{{0, 0}, {0, 0}},
 CellFrameColor->GrayLevel[1],
 LineBreakWithin->Automatic]
}, Closed]],

Cell[CellGroupData[{

Cell[BoxData[
 StyleBox[
  DynamicBox[ToBoxes[
    $CellContext`SolutionResponseText["31.4"], StandardForm],
   ImageSizeCache->{140., {3., 9.}}], "SolutionResponseText"]], "Subsection",
 Editable->False,
 Selectable->False,
 Deletable->False,
 ShowCellBracket->False,
 CellMargins->{{24, 25}, {3, 0}},
 CellFrameMargins->{{8, 0}, {0, 0}},
 TextAlignment->Right,
 ShowStringCharacters->False,
 FontFamily->"Source Sans Pro",
 FontSize->12,
 FontWeight->"Plain",
 FontSlant->"Plain",
 Background->GrayLevel[1]],

Cell[BoxData[
 ButtonBox[
  PaneBox[
   StyleBox[
    RowBox[{"[", " ", 
     RowBox[{"Click", " ", "to", " ", "enter", " ", "code"}], " ", "]"}],
    Selectable->False,
    StripOnInput->False,
    FontFamily->"Source Sans Pro",
    FontSize->14,
    FontWeight->Plain,
    FontColor->GrayLevel[0.6]],
   ImageSize->Full],
  Appearance->None,
  ButtonFunction:>(SelectionMove[
     InputNotebook[], All, ButtonCell]; NotebookWrite[
     InputNotebook[], 
     Cell[
      BoxData[""], "Input"]]; SelectionMove[
     InputNotebook[], Before, CellContents]; Null),
  Evaluator->Automatic,
  Method->"Preemptive"]], "Input",
 CellFrameLabels->{{None, None}, {None, None}},
 ShowSyntaxStyles->False,
 ShowStringCharacters->False,
 CellTags->"FirstInputCell"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 PaneBox["\[ThickSpace]",
  ImageSize->Full]], "CodeSectionDividerCloud",
 Editable->False,
 Selectable->False,
 Deletable->False,
 CellMargins->{{0, 0}, {0, 35}},
 CellBracketOptions->{"OverlapContent"->True}],

Cell["\<\
Junte las listas de los 20 primeros cuadrados y cubos, y obtenga los 10 \
elementos m\[AAcute]s peque\[NTilde]os de la lista combinada.\
\>", "Exercise",
 Editable->False,
 Selectable->False,
 Deletable->False,
 CellDingbat->Cell[
  "31.5", "ExerciseNumber", FontColor -> 
   RGBColor[0.9019607843137255, 0.4117647058823529, 0.027450980392156862`]],
 ShowCellBracket->False,
 CounterAssignments->{{"SectionNumber", 31}, {"ExerciseNumber", 5}, {
   "WebOnly", 0}}],

Cell[CellGroupData[{

Cell[BoxData[
 TagBox[
  ButtonBox[
   StyleBox[
    RowBox[{"EXPECTED", " ", "OUTPUT", " ", "\[RightGuillemet]"}],
    FontFamily->"Source Sans Pro",
    FontSize->12,
    FontColor->GrayLevel[0.6]],
   Appearance->None,
   ButtonFunction:>(SelectionMove[
      ButtonNotebook[], All, ButtonCell, AutoScroll -> False]; FrontEndExecute[
      FrontEndToken[
       ButtonNotebook[], "OpenCloseGroup"]]),
   Evaluator->Automatic,
   Method->"Preemptive"],
  MouseAppearanceTag["LinkHand"]]], "ExerciseExpectedResult",
 Editable->False,
 Deletable->False,
 ShowCellBracket->False],

Cell[BoxData[
 FrameBox[
  TagBox[GridBox[{
     {
      PaneBox[
       InterpretationBox[Cell[BoxData[
         GraphicsBox[
          TagBox[RasterBox[CompressedData["
1:eJztWCGvrEYUJq2pbNJf0D+ArkVWkbymDvNeenmpuSX3NWmwOCRuHIpUoFAo
DGoMZirGIDAYBE3GjBhxO2eGXeAysNzbJ16bPcludtlz5nzznTPnnNnvP/z2
zv/KsqxP38i3d+//cJ6e3oc/fSu//Pz46dePjw+//Pj4+8PHh6cfPnwtH34n
X3/KF3x+vstd7nKXu9zlLv8fGcvYt+2AcP2VtYR0TNyyOqkG69Om6UZ+oNET
XOR5iemR0jNrKtCSa70B20CbMs+LqhkPILMel9JFgemwXOoqtGfnbYelpbLe
ZYsPWG6tkAT0r8Y8yYpkMbZ6vQtelvmO40V4mBZiBMmJzo+LXjy3eWgpifER
sSfVtODElZp2jHd+51XsSAXHhXcrKMxxF53Ssmwb3sOyexU2jDxrlrA1cTiS
XK1t6fcgpwpd4ywsrZ1dmGxZYltrsWtTyoi+che2blyL05jnDS5I5lSDmdar
IdCClqm3iAJrEstKNNVdlUUBmKPmKJon1QBAm2vQLmrMGgxLVqMKMnzEEomN
Tcz0FYQyh52LIpTbCfaibsDWl1cyRV/HqDby12aSlVidNHkuIMAD6BcyH4E3
ocXs1Gh7MZE2fSwh+7kxn0VfOnakY6ry3wEGzmHWsiaZZy5EF8AwIrHYUa3V
aOpadqJJ4QSCvmCaSqPkVjTPqanNOp5nW06yF3Q4SmGt1hHE2Ql6kzhXwJqQ
lO5X2jW2Npdb9+jtCsnGS/0dcazJVyfCJW+yvcoIi1hlb7ZcylhH2vY05ucN
yQwBVRPbFM53pD0T+AFpXJClVz6fp4J2O+gn1Ah4tMquz9wZxkYGVXf8inY4
lTsNO9NOIehWPDkb6xuuV9hEGchsrzpapQjJieAgV9bugCvd+2wvCIIQ5cZ8
3LW9CETBCqtjKzb0pM6BLz9jr8G8IXlE9sx2X0XXDKQq0PKjbPiBfLpsVZ8p
6KIrVPOF3aeO5SC6p9kVwbV1uVlr9tZmivwIoUj3KnTAxAobQ+60dhgpR256
vDeN3M+o8ps7lpvkRZGqUWGnRBttpyeq9ubGVJ5FJYYSBfssZiPJjTIOYpRE
eirwNFUaSVzQWHX8arni5wk6SxXsIE6SJHJ1w6kMfZjTVP6WkUGwNgtBsdjh
Z2zrJArDCNW4gGN/9qQrPv1s+gIn1zk6sSMGprxsq6KS89W2ywJ7LIIPZeIp
Bv4+h3mPZE7KTFIVp2VTyQi7zZSpHKkDI0YKJydaFB9BoCGSW5XshhqvM5Qg
lIDErq2StTYEvZEzrpNewjxCO9xtBJelVYuEy8Y5bFBvHaT3Lbr8KHADhinM
Sa4XNsFnL8OiVJ6xVaLiEpaH55zP1QOmGrh3nMN8m2SYf51Ur6PPV4ohAVvo
JLqnc7hZ1vBTmNWUkJ7DsC+HZScqF2XtpNq8E1V5iPr4Uk0xKWsOGRlra2ig
MR62amKoAy+qadc2uSpehTCtZsSmW0OQ4XFsYWqwAnUJeGnL+0pXQ1Q1pGkw
xu3wl3ziJWU3DC3OHEUqM/k12E5Xa6gzqzTe2Mr2bdlhRftx6IoYNpe1/CRm
I8k0j+QFvO27OoOWFNdTGqrhbUqkeXrnjWutJJHNgBPYjr0Y70+qzQIbd1Oi
nW3URI3861K+vpts1IQ8R5drr+2jqQOcxCZ5KKLLA7fQY//GlqAXppB+tELz
Pd2NpuJxylbX5i58Ubs2trxvIu96pbeTcppqzmA2kkyL+AojzGbXy+ld3Uri
g2oOpeCifCD/Sk1wzhjjN9QYWyuddqpcsHFcGZ+2FeCVryr0K/xuxGgrYP+b
f+zejNm0HIWiM9nqUu9cj89aeqg+ctC6Mdd9yWp3WxlkrG4fi5rDcRb7fmT+
45sN3XB8Tfni1e62z7yMgyBK27fVprvc5S7/QfkHd6r5EA==
            "], {{0, 19}, {
            167, 0}}, {0, 255},
            ColorFunction->RGBColor],
           BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
           Selectable->False],
          DefaultBaseStyle->"ImageGraphics",
          ImageSize->Magnification[1],
          ImageSizeRaw->{167, 19},
          PlotRange->{{0, 167}, {0, 19}}]], "ExerciseOutput",
         ImageSize->{171, 19},
         ImageMargins->{{0, 0}, {0, 0}},
         ImageRegion->{{0, 1}, {0, 1}},
         Magnification->1],
        Apply[TextCell, 
         Cell[
          BoxData[
           GraphicsBox[
            TagBox[
             RasterBox[CompressedData["
1:eJztWCGvrEYUJq2pbNJf0D+ArkVWkbymDvNeenmpuSX3NWmwOCRuHIpUoFAo
DGoMZirGIDAYBE3GjBhxO2eGXeAysNzbJ16bPcludtlz5nzznTPnnNnvP/z2
zv/KsqxP38i3d+//cJ6e3oc/fSu//Pz46dePjw+//Pj4+8PHh6cfPnwtH34n
X3/KF3x+vstd7nKXu9zlLv8fGcvYt+2AcP2VtYR0TNyyOqkG69Om6UZ+oNET
XOR5iemR0jNrKtCSa70B20CbMs+LqhkPILMel9JFgemwXOoqtGfnbYelpbLe
ZYsPWG6tkAT0r8Y8yYpkMbZ6vQtelvmO40V4mBZiBMmJzo+LXjy3eWgpifER
sSfVtODElZp2jHd+51XsSAXHhXcrKMxxF53Ssmwb3sOyexU2jDxrlrA1cTiS
XK1t6fcgpwpd4ywsrZ1dmGxZYltrsWtTyoi+che2blyL05jnDS5I5lSDmdar
IdCClqm3iAJrEstKNNVdlUUBmKPmKJon1QBAm2vQLmrMGgxLVqMKMnzEEomN
Tcz0FYQyh52LIpTbCfaibsDWl1cyRV/HqDby12aSlVidNHkuIMAD6BcyH4E3
ocXs1Gh7MZE2fSwh+7kxn0VfOnakY6ry3wEGzmHWsiaZZy5EF8AwIrHYUa3V
aOpadqJJ4QSCvmCaSqPkVjTPqanNOp5nW06yF3Q4SmGt1hHE2Ql6kzhXwJqQ
lO5X2jW2Npdb9+jtCsnGS/0dcazJVyfCJW+yvcoIi1hlb7ZcylhH2vY05ucN
yQwBVRPbFM53pD0T+AFpXJClVz6fp4J2O+gn1Ah4tMquz9wZxkYGVXf8inY4
lTsNO9NOIehWPDkb6xuuV9hEGchsrzpapQjJieAgV9bugCvd+2wvCIIQ5cZ8
3LW9CETBCqtjKzb0pM6BLz9jr8G8IXlE9sx2X0XXDKQq0PKjbPiBfLpsVZ8p
6KIrVPOF3aeO5SC6p9kVwbV1uVlr9tZmivwIoUj3KnTAxAobQ+60dhgpR256
vDeN3M+o8ps7lpvkRZGqUWGnRBttpyeq9ubGVJ5FJYYSBfssZiPJjTIOYpRE
eirwNFUaSVzQWHX8arni5wk6SxXsIE6SJHJ1w6kMfZjTVP6WkUGwNgtBsdjh
Z2zrJArDCNW4gGN/9qQrPv1s+gIn1zk6sSMGprxsq6KS89W2ywJ7LIIPZeIp
Bv4+h3mPZE7KTFIVp2VTyQi7zZSpHKkDI0YKJydaFB9BoCGSW5XshhqvM5Qg
lIDErq2StTYEvZEzrpNewjxCO9xtBJelVYuEy8Y5bFBvHaT3Lbr8KHADhinM
Sa4XNsFnL8OiVJ6xVaLiEpaH55zP1QOmGrh3nMN8m2SYf51Ur6PPV4ohAVvo
JLqnc7hZ1vBTmNWUkJ7DsC+HZScqF2XtpNq8E1V5iPr4Uk0xKWsOGRlra2ig
MR62amKoAy+qadc2uSpehTCtZsSmW0OQ4XFsYWqwAnUJeGnL+0pXQ1Q1pGkw
xu3wl3ziJWU3DC3OHEUqM/k12E5Xa6gzqzTe2Mr2bdlhRftx6IoYNpe1/CRm
I8k0j+QFvO27OoOWFNdTGqrhbUqkeXrnjWutJJHNgBPYjr0Y70+qzQIbd1Oi
nW3URI3861K+vpts1IQ8R5drr+2jqQOcxCZ5KKLLA7fQY//GlqAXppB+tELz
Pd2NpuJxylbX5i58Ubs2trxvIu96pbeTcppqzmA2kkyL+AojzGbXy+ld3Uri
g2oOpeCifCD/Sk1wzhjjN9QYWyuddqpcsHFcGZ+2FeCVryr0K/xuxGgrYP+b
f+zejNm0HIWiM9nqUu9cj89aeqg+ctC6Mdd9yWp3WxlkrG4fi5rDcRb7fmT+
45sN3XB8Tfni1e62z7yMgyBK27fVprvc5S7/QfkHd6r5EA==
              "], {{0, 19}, {
              167, 0}}, {0, 255}, ColorFunction -> RGBColor], 
             BoxForm`ImageTag[
             "Byte", ColorSpace -> "RGB", Interleaving -> True], Selectable -> 
             False], DefaultBaseStyle -> "ImageGraphics", ImageSize -> 
            Magnification[1], ImageSizeRaw -> {167, 19}, 
            PlotRange -> {{0, 167}, {0, 19}}]], "ExerciseOutput", 
          Magnification -> 1, CellFrameColor -> GrayLevel[0], Selectable -> 
          False, Copyable -> False, Editable -> False, ShowCellBracket -> 
          False, CellLabel -> "Out[]=", CellFrame -> False]]],
       FrameMargins->{{10, 0}, {10, 12}},
       ImageMargins->0,
       ImageSize->Full], 
      ButtonBox[
       PaneBox[
        StyleBox["\[Times]",
         FontFamily->"MathematicaMono",
         FontSize->18,
         FontWeight->"Bold",
         FontColor->GrayLevel[0.75]],
        Alignment->Right,
        FrameMargins->{{0, 6}, {0, 0}},
        ImageMargins->0],
       Appearance->None,
       ButtonFunction:>(SelectionMove[
          ButtonNotebook[], All, ButtonCell, AutoScroll -> False]; 
        NotebookFind[
          EvaluationNotebook[], "Exercise", Previous, CellStyle, WrapAround -> 
          False, AutoScroll -> False]; FrontEndExecute[
          FrontEndToken[
           ButtonNotebook[], "OpenCloseGroup"]])]}
    },
    GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {Top}},
    GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
   "Grid"],
  FrameMargins->0,
  FrameStyle->GrayLevel[0.7],
  StripOnInput->False]], "ExerciseOutput",
 Editable->False,
 Selectable->False,
 Deletable->False,
 CellFrame->{{1, 1}, {1, 1}},
 ShowCellBracket->False,
 CellFrameMargins->{{0, 0}, {0, 0}},
 CellFrameColor->GrayLevel[1],
 LineBreakWithin->Automatic]
}, Closed]],

Cell[CellGroupData[{

Cell[BoxData[
 StyleBox[
  DynamicBox[ToBoxes[
    $CellContext`SolutionResponseText["31.5"], StandardForm],
   ImageSizeCache->{140., {3., 9.}}], "SolutionResponseText"]], "Subsection",
 Editable->False,
 Selectable->False,
 Deletable->False,
 ShowCellBracket->False,
 CellMargins->{{24, 25}, {3, 0}},
 CellFrameMargins->{{8, 0}, {0, 0}},
 TextAlignment->Right,
 ShowStringCharacters->False,
 FontFamily->"Source Sans Pro",
 FontSize->12,
 FontWeight->"Plain",
 FontSlant->"Plain",
 Background->GrayLevel[1]],

Cell[BoxData[
 ButtonBox[
  PaneBox[
   StyleBox[
    RowBox[{"[", " ", 
     RowBox[{"Click", " ", "to", " ", "enter", " ", "code"}], " ", "]"}],
    Selectable->False,
    StripOnInput->False,
    FontFamily->"Source Sans Pro",
    FontSize->14,
    FontWeight->Plain,
    FontColor->GrayLevel[0.6]],
   ImageSize->Full],
  Appearance->None,
  ButtonFunction:>(SelectionMove[
     InputNotebook[], All, ButtonCell]; NotebookWrite[
     InputNotebook[], 
     Cell[
      BoxData[""], "Input"]]; SelectionMove[
     InputNotebook[], Before, CellContents]; Null),
  Evaluator->Automatic,
  Method->"Preemptive"]], "Input",
 CellFrameLabels->{{None, None}, {None, None}},
 ShowSyntaxStyles->False,
 ShowStringCharacters->False,
 CellTags->"FirstInputCell"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 PaneBox["\[ThickSpace]",
  ImageSize->Full]], "CodeSectionDividerCloud",
 Editable->False,
 Selectable->False,
 Deletable->False,
 CellMargins->{{0, 0}, {0, 35}},
 CellBracketOptions->{"OverlapContent"->True}],

Cell["\<\
Encuentre las posiciones de la palabra \[OpenCurlyDoubleQuote]software\
\[CloseCurlyDoubleQuote] en el art\[IAcute]culo \
\[OpenCurlyDoubleQuote]computers\[CloseCurlyDoubleQuote] en Wikipedia.\
\>", "Exercise",
 Editable->False,
 Selectable->False,
 Deletable->False,
 CellDingbat->Cell[
  "31.6", "ExerciseNumber", FontColor -> 
   RGBColor[0.9019607843137255, 0.4117647058823529, 0.027450980392156862`]],
 ShowCellBracket->False,
 TaggingRules->{"MultipleSolutions" -> "True"},
 CounterAssignments->{{"SectionNumber", 31}, {"ExerciseNumber", 6}, {
   "WebOnly", 0}}],

Cell[CellGroupData[{

Cell[BoxData[
 TagBox[
  ButtonBox[
   StyleBox[
    RowBox[{
    "SAMPLE", " ", "EXPECTED", " ", "OUTPUT", " ", "\[RightGuillemet]"}],
    FontFamily->"Source Sans Pro",
    FontSize->12,
    FontColor->GrayLevel[0.6]],
   Appearance->None,
   ButtonFunction:>(SelectionMove[
      ButtonNotebook[], All, ButtonCell, AutoScroll -> False]; FrontEndExecute[
      FrontEndToken[
       ButtonNotebook[], "OpenCloseGroup"]]),
   Evaluator->Automatic,
   Method->"Preemptive"],
  MouseAppearanceTag["LinkHand"]]], "ExerciseExpectedResult",
 Editable->False,
 Deletable->False,
 ShowCellBracket->False],

Cell[BoxData[
 FrameBox[
  TagBox[GridBox[{
     {
      PaneBox[
       InterpretationBox[Cell[BoxData[
         GraphicsBox[
          TagBox[RasterBox[CompressedData["
1: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
            "], {{0, 19}, {376, 
            0}}, {0, 255},
            ColorFunction->RGBColor],
           BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
           Selectable->False],
          DefaultBaseStyle->"ImageGraphics",
          ImageSize->Magnification[1],
          ImageSizeRaw->{376, 19},
          PlotRange->{{0, 376}, {0, 19}}]], "ExerciseOutput",
         ImageSize->{380, 19},
         ImageMargins->{{0, 0}, {0, 0}},
         ImageRegion->{{0, 1}, {0, 1}},
         Magnification->1],
        Apply[TextCell, 
         Cell[
          BoxData[
           GraphicsBox[
            TagBox[
             RasterBox[CompressedData["
1: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
              "], {{0, 19}, {376,
               0}}, {0, 255}, ColorFunction -> RGBColor], 
             BoxForm`ImageTag[
             "Byte", ColorSpace -> "RGB", Interleaving -> True], Selectable -> 
             False], DefaultBaseStyle -> "ImageGraphics", ImageSize -> 
            Magnification[1], ImageSizeRaw -> {376, 19}, 
            PlotRange -> {{0, 376}, {0, 19}}]], "ExerciseOutput", 
          Magnification -> 1, CellFrameColor -> GrayLevel[0], Selectable -> 
          False, Copyable -> False, Editable -> False, ShowCellBracket -> 
          False, CellLabel -> "Out[]=", CellFrame -> False]]],
       FrameMargins->{{10, 0}, {10, 12}},
       ImageMargins->0,
       ImageSize->Full], 
      ButtonBox[
       PaneBox[
        StyleBox["\[Times]",
         FontFamily->"MathematicaMono",
         FontSize->18,
         FontWeight->"Bold",
         FontColor->GrayLevel[0.75]],
        Alignment->Right,
        FrameMargins->{{0, 6}, {0, 0}},
        ImageMargins->0],
       Appearance->None,
       ButtonFunction:>(SelectionMove[
          ButtonNotebook[], All, ButtonCell, AutoScroll -> False]; 
        NotebookFind[
          EvaluationNotebook[], "Exercise", Previous, CellStyle, WrapAround -> 
          False, AutoScroll -> False]; FrontEndExecute[
          FrontEndToken[
           ButtonNotebook[], "OpenCloseGroup"]])]}
    },
    GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {Top}},
    GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
   "Grid"],
  FrameMargins->0,
  FrameStyle->GrayLevel[0.7],
  StripOnInput->False]], "ExerciseOutput",
 Editable->False,
 Selectable->False,
 Deletable->False,
 CellFrame->{{1, 1}, {1, 1}},
 ShowCellBracket->False,
 CellFrameMargins->{{0, 0}, {0, 0}},
 CellFrameColor->GrayLevel[1],
 LineBreakWithin->Automatic]
}, Closed]],

Cell[CellGroupData[{

Cell[BoxData[
 StyleBox[
  DynamicBox[ToBoxes[
    $CellContext`SolutionResponseText["31.6"], StandardForm],
   ImageSizeCache->{140., {3., 9.}}], "SolutionResponseText"]], "Subsection",
 Editable->False,
 Selectable->False,
 Deletable->False,
 ShowCellBracket->False,
 CellMargins->{{24, 25}, {3, 0}},
 CellFrameMargins->{{8, 0}, {0, 0}},
 TextAlignment->Right,
 ShowStringCharacters->False,
 FontFamily->"Source Sans Pro",
 FontSize->12,
 FontWeight->"Plain",
 FontSlant->"Plain",
 Background->GrayLevel[1]],

Cell[BoxData[
 ButtonBox[
  PaneBox[
   StyleBox[
    RowBox[{"[", " ", 
     RowBox[{"Click", " ", "to", " ", "enter", " ", "code"}], " ", "]"}],
    Selectable->False,
    StripOnInput->False,
    FontFamily->"Source Sans Pro",
    FontSize->14,
    FontWeight->Plain,
    FontColor->GrayLevel[0.6]],
   ImageSize->Full],
  Appearance->None,
  ButtonFunction:>(SelectionMove[
     InputNotebook[], All, ButtonCell]; NotebookWrite[
     InputNotebook[], 
     Cell[
      BoxData[""], "Input"]]; SelectionMove[
     InputNotebook[], Before, CellContents]; Null),
  Evaluator->Automatic,
  Method->"Preemptive"]], "Input",
 CellFrameLabels->{{None, None}, {None, None}},
 ShowSyntaxStyles->False,
 ShowStringCharacters->False,
 CellTags->"FirstInputCell"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 PaneBox["\[ThickSpace]",
  ImageSize->Full]], "CodeSectionDividerCloud",
 Editable->False,
 Selectable->False,
 Deletable->False,
 CellMargins->{{0, 0}, {0, 35}},
 CellBracketOptions->{"OverlapContent"->True}],

Cell[TextData[{
 "Produzca el histograma de las posiciones donde aparece la letra \
\[OpenCurlyDoubleQuote]e\[CloseCurlyDoubleQuote] en las palabras de ",
 Cell[BoxData[
  RowBox[{
   StyleBox["WordList",
    FontFamily->"Source Sans Pro"], "[", " ", "]"}]], "InlineCode"],
 "."
}], "Exercise",
 Editable->False,
 Selectable->False,
 Deletable->False,
 CellDingbat->Cell[
  "31.7", "ExerciseNumber", FontColor -> 
   RGBColor[0.9019607843137255, 0.4117647058823529, 0.027450980392156862`]],
 ShowCellBracket->False,
 TaggingRules->{"MultipleSolutions" -> "True"},
 CounterAssignments->{{"SectionNumber", 31}, {"ExerciseNumber", 7}, {
   "WebOnly", 0}}],

Cell[CellGroupData[{

Cell[BoxData[
 TagBox[
  ButtonBox[
   StyleBox[
    RowBox[{
    "SAMPLE", " ", "EXPECTED", " ", "OUTPUT", " ", "\[RightGuillemet]"}],
    FontFamily->"Source Sans Pro",
    FontSize->12,
    FontColor->GrayLevel[0.6]],
   Appearance->None,
   ButtonFunction:>(SelectionMove[
      ButtonNotebook[], All, ButtonCell, AutoScroll -> False]; FrontEndExecute[
      FrontEndToken[
       ButtonNotebook[], "OpenCloseGroup"]]),
   Evaluator->Automatic,
   Method->"Preemptive"],
  MouseAppearanceTag["LinkHand"]]], "ExerciseExpectedResult",
 Editable->False,
 Deletable->False,
 ShowCellBracket->False],

Cell[BoxData[
 FrameBox[
  TagBox[GridBox[{
     {
      PaneBox[
       InterpretationBox[Cell[BoxData[
         GraphicsBox[
          TagBox[RasterBox[CompressedData["
1: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
9HoBAAAAAADe8Te1uKH4
            "], {{0, 220}, {360, 0}}, {0, 255},
            ColorFunction->RGBColor],
           BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
           Selectable->False],
          DefaultBaseStyle->"ImageGraphics",
          ImageSize->Magnification[1],
          ImageSizeRaw->{360, 220},
          PlotRange->{{0, 360}, {0, 220}}]], "ExerciseOutput",
         ImageSize->{364, 220},
         ImageMargins->{{0, 0}, {0, 0}},
         ImageRegion->{{0, 1}, {0, 1}},
         Magnification->1],
        Apply[TextCell, 
         Cell[
          BoxData[
           GraphicsBox[
            TagBox[
             RasterBox[CompressedData["
1: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
9HoBAAAAAADe8Te1uKH4
              "], {{0, 220}, {360, 0}}, {0, 255}, 
              ColorFunction -> RGBColor], 
             BoxForm`ImageTag[
             "Byte", ColorSpace -> "RGB", Interleaving -> True], Selectable -> 
             False], DefaultBaseStyle -> "ImageGraphics", ImageSize -> 
            Magnification[1], ImageSizeRaw -> {360, 220}, 
            PlotRange -> {{0, 360}, {0, 220}}]], "ExerciseOutput", 
          Magnification -> 1, CellFrameColor -> GrayLevel[0], Selectable -> 
          False, Copyable -> False, Editable -> False, ShowCellBracket -> 
          False, CellLabel -> "Out[]=", CellFrame -> False]]],
       FrameMargins->{{10, 0}, {10, 12}},
       ImageMargins->0,
       ImageSize->Full], 
      ButtonBox[
       PaneBox[
        StyleBox["\[Times]",
         FontFamily->"MathematicaMono",
         FontSize->18,
         FontWeight->"Bold",
         FontColor->GrayLevel[0.75]],
        Alignment->Right,
        FrameMargins->{{0, 6}, {0, 0}},
        ImageMargins->0],
       Appearance->None,
       ButtonFunction:>(SelectionMove[
          ButtonNotebook[], All, ButtonCell, AutoScroll -> False]; 
        NotebookFind[
          EvaluationNotebook[], "Exercise", Previous, CellStyle, WrapAround -> 
          False, AutoScroll -> False]; FrontEndExecute[
          FrontEndToken[
           ButtonNotebook[], "OpenCloseGroup"]])]}
    },
    GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {Top}},
    GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
   "Grid"],
  FrameMargins->0,
  FrameStyle->GrayLevel[0.7],
  StripOnInput->False]], "ExerciseOutput",
 Editable->False,
 Selectable->False,
 Deletable->False,
 CellFrame->{{1, 1}, {1, 1}},
 ShowCellBracket->False,
 CellFrameMargins->{{0, 0}, {0, 0}},
 CellFrameColor->GrayLevel[1],
 LineBreakWithin->Automatic]
}, Closed]],

Cell[CellGroupData[{

Cell[BoxData[
 StyleBox[
  DynamicBox[ToBoxes[
    $CellContext`SolutionResponseText["31.7"], StandardForm],
   ImageSizeCache->{140., {3., 9.}}], "SolutionResponseText"]], "Subsection",
 Editable->False,
 Selectable->False,
 Deletable->False,
 ShowCellBracket->False,
 CellMargins->{{24, 25}, {3, 0}},
 CellFrameMargins->{{8, 0}, {0, 0}},
 TextAlignment->Right,
 ShowStringCharacters->False,
 FontFamily->"Source Sans Pro",
 FontSize->12,
 FontWeight->"Plain",
 FontSlant->"Plain",
 Background->GrayLevel[1]],

Cell[BoxData[
 ButtonBox[
  PaneBox[
   StyleBox[
    RowBox[{"[", " ", 
     RowBox[{"Click", " ", "to", " ", "enter", " ", "code"}], " ", "]"}],
    Selectable->False,
    StripOnInput->False,
    FontFamily->"Source Sans Pro",
    FontSize->14,
    FontWeight->Plain,
    FontColor->GrayLevel[0.6]],
   ImageSize->Full],
  Appearance->None,
  ButtonFunction:>(SelectionMove[
     InputNotebook[], All, ButtonCell]; NotebookWrite[
     InputNotebook[], 
     Cell[
      BoxData[""], "Input"]]; SelectionMove[
     InputNotebook[], Before, CellContents]; Null),
  Evaluator->Automatic,
  Method->"Preemptive"]], "Input",
 CellFrameLabels->{{None, None}, {None, None}},
 ShowSyntaxStyles->False,
 ShowStringCharacters->False,
 CellTags->"FirstInputCell"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 PaneBox["\[ThickSpace]",
  ImageSize->Full]], "CodeSectionDividerCloud",
 Editable->False,
 Selectable->False,
 Deletable->False,
 CellMargins->{{0, 0}, {0, 35}},
 CellBracketOptions->{"OverlapContent"->True}],

Cell[TextData[{
 "Construya la lista de los 100 primeros cubos, sustituyendo con rojo (",
 Cell[BoxData[
  FormBox[
   StyleBox["Red",
    FontFamily->"Source Sans Pro"], TextForm]]],
 " en ingl\[EAcute]s) aquellos cuya posici\[OAcute]n sea un cuadrado."
}], "Exercise",
 Editable->False,
 Selectable->False,
 Deletable->False,
 CellDingbat->Cell[
  "31.8", "ExerciseNumber", FontColor -> 
   RGBColor[0.9019607843137255, 0.4117647058823529, 0.027450980392156862`]],
 ShowCellBracket->False,
 CounterAssignments->{{"SectionNumber", 31}, {"ExerciseNumber", 8}, {
   "WebOnly", 0}}],

Cell[CellGroupData[{

Cell[BoxData[
 TagBox[
  ButtonBox[
   StyleBox[
    RowBox[{"EXPECTED", " ", "OUTPUT", " ", "\[RightGuillemet]"}],
    FontFamily->"Source Sans Pro",
    FontSize->12,
    FontColor->GrayLevel[0.6]],
   Appearance->None,
   ButtonFunction:>(SelectionMove[
      ButtonNotebook[], All, ButtonCell, AutoScroll -> False]; FrontEndExecute[
      FrontEndToken[
       ButtonNotebook[], "OpenCloseGroup"]]),
   Evaluator->Automatic,
   Method->"Preemptive"],
  MouseAppearanceTag["LinkHand"]]], "ExerciseExpectedResult",
 Editable->False,
 Deletable->False,
 ShowCellBracket->False],

Cell[BoxData[
 FrameBox[
  TagBox[GridBox[{
     {
      PaneBox[
       InterpretationBox[Cell[BoxData[
         GraphicsBox[
          TagBox[RasterBox[CompressedData["
1:eJztnU+rM0mW3mV746W/gj/AaO2tlt7MhTHe3c0M0xq8aV96DEZbwVAIZqNZ
DNrdlXrR1/RYMCAwFmVkv4MoWtBoulAtRKEuUDdoQAVZCy20kDMi/ygy4jkn
Tqby1qu33vNQ3VRJqTjPOXEilJnS1e/f/8V//bP+v+50On/9b9P/+7M//++9
X/zizwf/6d+l//Gff/7X/+Wvfv6zv/yPP/9vP/urn/3iP/zFv0kf/H/p/47/
qtMx/35VqVQqlUqlUqlUKpVKpVKpVCqV6qem03zU73ZfNufmQxw2q9nb23y1
5cZIDqt5etRstT1mDxx3m6q2yaW5BypqGmTvjHvab+ZvqYvF/nRxj7mZOCTy
FDJd0kE3O+9lx+16buKsT0xS5+NqMXubpZU7eM9cjrv1+laQ5LCZmwOXuyNT
48th62ayLw8NHaI6tCu/8mlKy/nb9G22OZybPCiLAgtFVQ9OXDQK1be4pJfT
emkaYb0/sRGkrXU57bKWKfu0xjqquQa9JmQerAh1dTgFRGjxYrxLp+06nZDc
SVjS4nG/+HctQ9QJcED52kw2k06n0x/NftXp8P8QA5wXo146Qu/J/H/nZQaz
Om3euubpTvb/L2/bNPI4+4+buks0V02NXXdvg2zc0Sov1/q1b+NkgXuLgy3O
ed1zXYxWcDSUgnnx7CV7dXflmF9Nnp0RBzs0CZfD4skZ8Gm0dI7aD29jXtav
L86BndcNtQ94Je2tE+wQ1yFQi5VPMxrdqtyd7c41H5REgYWiqocnThAF9y3R
Wlv74m62OIaLPQwhb63zNjsyb5nl8SJfR/XXoNuE/IM3oa6GU0CEli3Gxp2Z
aTU2Hrt2cFRSWPz7liHoBDygcG3mkdbjTmd8tgW50v+QBUlWPWPGvMmeVmNq
WnfTdDcb2XfiZGrcjcx7/yVXevI+Ss323+BCbWgs7bPFdPhipmmyzhfsa6/z
NFlfrdfUUG9s/v1ymKX/amattIOEU0jfvF5Hg37q/mldJn6YF32bDr4cTZZw
yMth3usOs43dvgP2brtrvvnnY25f+09j28aXnemBwYLIOJmkCb5uispmD4YO
cR1CtVf562FhjL+ZbPfm3/qzS50HhVFgoYjqoYmTRUF9i0tqF1cv2/VNWt0x
XPDi1jpPn8ymY45MNumB3eGS8COOQr/Wa0LmQVewq/EUoNDCxdi4M00Rd2/Z
bmnniygpao97liHsBDSgdG3muWzM7p00373Ne+VgaW1dNj3yTTk5Fddap9XI
3anMIya1zty/eZDrnplKK5ROzrhYd5ekuFhK3x8rS+xpE79/QKZw2b4WJ7pG
u7e0C563dW5InJbDcsCL7a6nwSCdxqCYSRq48zwlzkeP6bMTFNhzCOsQqr3K
X2bpWUZvksXfmm2kvz3LHxRGcQUL5T/olaVuFLdv6dYaZjcpjmbR4t1b3Fpm
W+gWk7V9TYszdBcNv45qrUHYhGxnArldXXoI58UNLVyMd3SmfafoPT93szni
Skq3R+1lGOuE24DCtZnJvCPbN4KmBTmajLv9xXa/Muf8g32s8utxr9p1poD0
G9l9e4i9EEOr+zDs5LOW3TvqPr+8vAwmb5Ku9FOwI5SzfJm/pO/gi/128TqZ
vM0je0NyPGyWb+aEpj+1Rx5Nd3XHx2Tz5Hb+JTnud4tX+xY92xFjrZ+yTPr9
4Xi6PTp3gysOcR1CtVf5ZNK99eHZmlkl8geFUaxgoYjq0WWJRcmSwn17K6k5
EU0DvEx3h016HtobLWOR+NY6pcUpJ+uw8PbGyDpiogSvhU1IdCZS0NVMA1dC
Cxdj487cmN2qM98f0lNuW0mupKA9mi5DshO4Abm1meq0W5gzHXv/p/ll8uyl
vMXzNCUyKrPfz+yUbm+P2Df0N3rTf4/d205id27vKaVXUum5xPhtNrM1pC48
mRSqs5xMnvJiDIa2Mk+v9OdVtnWtMpPWWHZik17I9MqTEPvenemFPBe97Ia9
bn/0Op9PzTVfOk4RmNqm3DqEanP37t325MKM/EFhFPsSVCiqevfs3lTfVkua
vDr38BfHK69Ya13XtrdeRpPxMLuD8byunhgz64iJ4r0WNiHVmUh+V1/pKfBC
Cxdjs87MEh/Ys/x0XnoTUwGmpGF73LEMcScwA/JrM9UoG+rUvCBnc3HRmW6O
l2Q3HZg6zJj+sXdy0gsEd7mEF4CeWt+9D4sR9dZp34nY8wqUgr9798zaODlP
8Scql/NxPjaj/vrDP2Tb/ngyHtmdvz8YLZxvjiSH9bB7u7HA6bTsOh8awm2K
qUOmT/Lc2wgWCjx4z+4N+9Yr6TKN1x3tzpfjdv5iTly5Phe0lrGymU+Hg0G6
N6xNrKd10R3RdcREcV+bbXFeE/6vD/+D7UygsqudDQFMAWObWYyNOjN5tadV
L6PxeDy0//o0MZ8ekiUl2qPJMmQ7AQwYXZvmZaetedVw0bQg6SVYuthei+k5
jZgbNceV+aikN66egNiSDubMO/lde8hlY+5YbpzP0W1Z+uYzheKQ8y340b8a
laSQvoXZWS4m3VyW9ibZf132b/SA51v3m48MOl/Mv5yMx5NJ+n/j8ShfI8v9
+eIceJwP6AGdD3nsp8mjYsPxHMI6hGqv8uZuUtonWfyd+cysv73IHxRGucJC
MdULyyKJYgX6NijpKV0c5dXoZTO+v7VcmbunRaEk64iOUnnt5bgOm/DL9T/B
zkQx/K5O9y56CnzbwsXYqDPPy+lknKUwHj3Zs+LXZeVbQNWS+sW/Yxl+CzuB
GlCyNjPtzN0p8X3vy3aQ7tbDeRnVVrgzmm1OSbJbmntWo9UxPOx8WGSXJZPF
erNer1arXf5VxsqVMgzRzJi5CNtsNktzaTCYLrcb893h3WyYXaQsN5mLzem8
TY09j+f743G3mvbslCZoQJhC+q652WyX07Sfu6/L9WZrrnPOu6mJMV2dTjv7
9Z8X8xF8MKDZprqDxfZwOu5nI3MuMHW/HWc6v7e2LzSXrKO33fF02C0HPfMR
+RE5tKcqw9XucNyv7VmPueyCDkEdkMMWK5/dzxzONsedKWP2yb78QVGUH1Ch
iOrBsghzgX2LSno2H193+ovdMUkOczPFz+avKu5ore3bsD+a7Q775dTcWBgt
y204vo5qrMGwCakHJV39zW9xA4ehL9LF2LQzbznYOydme4QlBcW/axn+ADoB
tqt4beZzWus7J+eNtTN2L0iXk355Q6effTsuOGxT3AsuVVzUm2+FVToneG1D
Y+e1F3K8/m7S81ykb3aX7cJ5+GmYn2HJUnBuW1kVXwnb5lNgRpxtEzjgOb1c
eu7eXjmvXiWZq/XivXjp3DPrvSyzHSQYMNkvBzePvdeVaS7k8ITq8K6VN0/m
X2Q1JRmXF9PSB2VRYKHgg3jixLkEfUuVdDe6vf7pLfuG8B2ttZ2NygcGU3e/
ja+jGmsQNSF+UNbVuIFBaOlibLpZlSq/1IdLCot/zzKEnYAGlK5Nx+dI/o1B
c67eDW74pNcASZI4bwz4MJm8195lTKqLsX+unGTcN6D96s/JLQke8GIKJ/kb
U3Pg+Vx57yUH9DIR670rf05LcvKTFT4ojgIKRTwIdO+kU4aSZrnIhiP0HrkI
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
frd+s/ePZheCvS4hzgNLx38GTcji3eHEobyExPnHE8Aon2jUNcadOzL9XN4Q
8Mnm1bgU6p0iO8PRqBCQwI5SEPHfadi0YDRHIf+aYqY3hMID1DVrCQ2CCOzN
ofBotNqWUJVEUPjNxBssP/sKmOOcJXEvIXh9UCVoSdoGjlokziNL31JwecrS
JT1VLorU7U9IkjvseVmVQBMSIeiJQ22TyIjzn5JqU92pYVyyOVQNjDIcjQ4h
A4lfw2TfkRKO+NfUgc2g8JA7X282ceGaQuGJ0dppsKrkVULMcc6StJeC4+6l
hDMr6N2J87UtJQkgqUtKJ7bkN2E0hHgTaJk4/znoATHKakkitSSRWpJILX2q
ekCMslqSSC1JpJYkUksqlUqlUqlUKpVKpVKpVCqVSqVSqVQqlUqlUqlUKpVK
pVKpVCqVSqVSqVQqleqjC7CbCb42C6cGhOv8RTd8vAxM31oifDiKax9i3xGE
Wkaix0Bzn14tK8tpu05fcS7GwOzyOIkeUbZrscjPx71nt/yrtDC6iEQPLV1J
7Dg1cVaVKsHoIhJ9Cyzyy2HrTmnxU8ioqiISPVGlsCB8zdsk0QNLYF3E2huR
6InZj5PoA0tUdK5KcNnmVan23kcl0WPCNeZrc3BqRLjO5OLjRWD6X3U6/D/i
RPhwmGsfYt8JCHWcRE/UNqRXi8qyGpsfQevaQBS7PEqih5Ttuizyzdj/mbbs
h8qD6CISPWGJwY7jiQuqhKNLSPQtsci9ac1IBKCqEhI9UaWwIJGat0iix5bA
umDbG5Lo8ezHSfTIEozOVQkvW1Dqj0+ih+xmyNfm4NSIcJ3Jx8fHwPRXu3tf
6X+o3RujuulwBNc+xL5jCLWERA8tYXp1rCxnS+Dq5EUm2OUCEj3Eo9dnkV8u
5zznjeET2Bqi6BISPSa209hxYuLCKsHoIhJ9Syzy8teS+UUkItETVQIF4Wre
KokeWsLrgm5vSKInZj9OosdVQtGZKuGdBJX6AUj0gN2M+NocnBoRru15AI2P
J8D0Rs12bx5C7YWjjEHsOw2hjiLIqdqS9GqiLLbres/POeUKs8vrkOhtrJyy
DWdWxiLPoAaWORiLHiXRu5bK4X3sONNRQZVwdBmJHliqzyI/pkEnlYrAqgpJ
9MBSrCB+zdsm0QNL/LoI2xuS6PNiIeh8jEQPLDHRrcLOxDtJWOqHItGX7GbE
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
            "], {{0, 196}, {
            490, 0}}, {0, 255},
            ColorFunction->RGBColor],
           BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
           Selectable->False],
          DefaultBaseStyle->"ImageGraphics",
          ImageSize->Magnification[1],
          ImageSizeRaw->{490, 196},
          PlotRange->{{0, 490}, {0, 196}}]], "ExerciseOutput",
         ImageSize->{494, 196},
         ImageMargins->{{0, 0}, {0, 0}},
         ImageRegion->{{0, 1}, {0, 1}},
         Magnification->1],
        Apply[TextCell, 
         Cell[
          BoxData[
           GraphicsBox[
            TagBox[
             RasterBox[CompressedData["
1:eJztnU+rM0mW3mV746W/gj/AaO2tlt7MhTHe3c0M0xq8aV96DEZbwVAIZqNZ
DNrdlXrR1/RYMCAwFmVkv4MoWtBoulAtRKEuUDdoQAVZCy20kDMi/ygy4jkn
Tqby1qu33vNQ3VRJqTjPOXEilJnS1e/f/8V//bP+v+50On/9b9P/+7M//++9
X/zizwf/6d+l//Gff/7X/+Wvfv6zv/yPP/9vP/urn/3iP/zFv0kf/H/p/47/
qtMx/35VqVQqlUqlUqlUKpVKpVKpVCqV6qem03zU73ZfNufmQxw2q9nb23y1
5cZIDqt5etRstT1mDxx3m6q2yaW5BypqGmTvjHvab+ZvqYvF/nRxj7mZOCTy
FDJd0kE3O+9lx+16buKsT0xS5+NqMXubpZU7eM9cjrv1+laQ5LCZmwOXuyNT
48th62ayLw8NHaI6tCu/8mlKy/nb9G22OZybPCiLAgtFVQ9OXDQK1be4pJfT
emkaYb0/sRGkrXU57bKWKfu0xjqquQa9JmQerAh1dTgFRGjxYrxLp+06nZDc
SVjS4nG/+HctQ9QJcED52kw2k06n0x/NftXp8P8QA5wXo146Qu/J/H/nZQaz
Om3euubpTvb/L2/bNPI4+4+buks0V02NXXdvg2zc0Sov1/q1b+NkgXuLgy3O
ed1zXYxWcDSUgnnx7CV7dXflmF9Nnp0RBzs0CZfD4skZ8Gm0dI7aD29jXtav
L86BndcNtQ94Je2tE+wQ1yFQi5VPMxrdqtyd7c41H5REgYWiqocnThAF9y3R
Wlv74m62OIaLPQwhb63zNjsyb5nl8SJfR/XXoNuE/IM3oa6GU0CEli3Gxp2Z
aTU2Hrt2cFRSWPz7liHoBDygcG3mkdbjTmd8tgW50v+QBUlWPWPGvMmeVmNq
WnfTdDcb2XfiZGrcjcx7/yVXevI+Ss323+BCbWgs7bPFdPhipmmyzhfsa6/z
NFlfrdfUUG9s/v1ymKX/amattIOEU0jfvF5Hg37q/mldJn6YF32bDr4cTZZw
yMth3usOs43dvgP2brtrvvnnY25f+09j28aXnemBwYLIOJmkCb5uispmD4YO
cR1CtVf562FhjL+ZbPfm3/qzS50HhVFgoYjqoYmTRUF9i0tqF1cv2/VNWt0x
XPDi1jpPn8ymY45MNumB3eGS8COOQr/Wa0LmQVewq/EUoNDCxdi4M00Rd2/Z
bmnniygpao97liHsBDSgdG3muWzM7p00373Ne+VgaW1dNj3yTTk5Fddap9XI
3anMIya1zty/eZDrnplKK5ROzrhYd5ekuFhK3x8rS+xpE79/QKZw2b4WJ7pG
u7e0C563dW5InJbDcsCL7a6nwSCdxqCYSRq48zwlzkeP6bMTFNhzCOsQqr3K
X2bpWUZvksXfmm2kvz3LHxRGcQUL5T/olaVuFLdv6dYaZjcpjmbR4t1b3Fpm
W+gWk7V9TYszdBcNv45qrUHYhGxnArldXXoI58UNLVyMd3SmfafoPT93szni
Skq3R+1lGOuE24DCtZnJvCPbN4KmBTmajLv9xXa/Muf8g32s8utxr9p1poD0
G9l9e4i9EEOr+zDs5LOW3TvqPr+8vAwmb5Ku9FOwI5SzfJm/pO/gi/128TqZ
vM0je0NyPGyWb+aEpj+1Rx5Nd3XHx2Tz5Hb+JTnud4tX+xY92xFjrZ+yTPr9
4Xi6PTp3gysOcR1CtVf5ZNK99eHZmlkl8geFUaxgoYjq0WWJRcmSwn17K6k5
EU0DvEx3h016HtobLWOR+NY6pcUpJ+uw8PbGyDpiogSvhU1IdCZS0NVMA1dC
Cxdj487cmN2qM98f0lNuW0mupKA9mi5DshO4Abm1meq0W5gzHXv/p/ll8uyl
vMXzNCUyKrPfz+yUbm+P2Df0N3rTf4/d205id27vKaVXUum5xPhtNrM1pC48
mRSqs5xMnvJiDIa2Mk+v9OdVtnWtMpPWWHZik17I9MqTEPvenemFPBe97Ia9
bn/0Op9PzTVfOk4RmNqm3DqEanP37t325MKM/EFhFPsSVCiqevfs3lTfVkua
vDr38BfHK69Ya13XtrdeRpPxMLuD8byunhgz64iJ4r0WNiHVmUh+V1/pKfBC
Cxdjs87MEh/Ys/x0XnoTUwGmpGF73LEMcScwA/JrM9UoG+rUvCBnc3HRmW6O
l2Q3HZg6zJj+sXdy0gsEd7mEF4CeWt+9D4sR9dZp34nY8wqUgr9798zaODlP
8Scql/NxPjaj/vrDP2Tb/ngyHtmdvz8YLZxvjiSH9bB7u7HA6bTsOh8awm2K
qUOmT/Lc2wgWCjx4z+4N+9Yr6TKN1x3tzpfjdv5iTly5Phe0lrGymU+Hg0G6
N6xNrKd10R3RdcREcV+bbXFeE/6vD/+D7UygsqudDQFMAWObWYyNOjN5tadV
L6PxeDy0//o0MZ8ekiUl2qPJMmQ7AQwYXZvmZaetedVw0bQg6SVYuthei+k5
jZgbNceV+aikN66egNiSDubMO/lde8hlY+5YbpzP0W1Z+uYzheKQ8y340b8a
laSQvoXZWS4m3VyW9ibZf132b/SA51v3m48MOl/Mv5yMx5NJ+n/j8ShfI8v9
+eIceJwP6AGdD3nsp8mjYsPxHMI6hGqv8uZuUtonWfyd+cysv73IHxRGucJC
MdULyyKJYgX6NijpKV0c5dXoZTO+v7VcmbunRaEk64iOUnnt5bgOm/DL9T/B
zkQx/K5O9y56CnzbwsXYqDPPy+lknKUwHj3Zs+LXZeVbQNWS+sW/Yxl+CzuB
GlCyNjPtzN0p8X3vy3aQ7tbDeRnVVrgzmm1OSbJbmntWo9UxPOx8WGSXJZPF
erNer1arXf5VxsqVMgzRzJi5CNtsNktzaTCYLrcb893h3WyYXaQsN5mLzem8
TY09j+f743G3mvbslCZoQJhC+q652WyX07Sfu6/L9WZrrnPOu6mJMV2dTjv7
9Z8X8xF8MKDZprqDxfZwOu5nI3MuMHW/HWc6v7e2LzSXrKO33fF02C0HPfMR
+RE5tKcqw9XucNyv7VmPueyCDkEdkMMWK5/dzxzONsedKWP2yb78QVGUH1Ch
iOrBsghzgX2LSno2H193+ovdMUkOczPFz+avKu5ore3bsD+a7Q775dTcWBgt
y204vo5qrMGwCakHJV39zW9xA4ehL9LF2LQzbznYOydme4QlBcW/axn+ADoB
tqt4beZzWus7J+eNtTN2L0iXk355Q6effTsuOGxT3AsuVVzUm2+FVToneG1D
Y+e1F3K8/m7S81ykb3aX7cJ5+GmYn2HJUnBuW1kVXwnb5lNgRpxtEzjgOb1c
eu7eXjmvXiWZq/XivXjp3DPrvSyzHSQYMNkvBzePvdeVaS7k8ITq8K6VN0/m
X2Q1JRmXF9PSB2VRYKHgg3jixLkEfUuVdDe6vf7pLfuG8B2ttZ2NygcGU3e/
ja+jGmsQNSF+UNbVuIFBaOlibLpZlSq/1IdLCot/zzKEnYAGlK5Nx+dI/o1B
c67eDW74pNcASZI4bwz4MJm8195lTKqLsX+unGTcN6D96s/JLQke8GIKJ/kb
U3Pg+Vx57yUH9DIR670rf05LcvKTFT4ojgIKRTwIdO+kU4aSZrnIhiP0HrkI
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
frd+s/ePZheCvS4hzgNLx38GTcji3eHEobyExPnHE8Aon2jUNcadOzL9XN4Q
8Mnm1bgU6p0iO8PRqBCQwI5SEPHfadi0YDRHIf+aYqY3hMID1DVrCQ2CCOzN
ofBotNqWUJVEUPjNxBssP/sKmOOcJXEvIXh9UCVoSdoGjlokziNL31JwecrS
JT1VLorU7U9IkjvseVmVQBMSIeiJQ22TyIjzn5JqU92pYVyyOVQNjDIcjQ4h
A4lfw2TfkRKO+NfUgc2g8JA7X282ceGaQuGJ0dppsKrkVULMcc6StJeC4+6l
hDMr6N2J87UtJQkgqUtKJ7bkN2E0hHgTaJk4/znoATHKakkitSSRWpJILX2q
ekCMslqSSC1JpJYkUksqlUqlUqlUKpVKpVKpVCqVSqVSqVQqlUqlUqlUKpVK
pVKpVCqVSqVSqVQqleqjC7CbCb42C6cGhOv8RTd8vAxM31oifDiKax9i3xGE
Wkaix0Bzn14tK8tpu05fcS7GwOzyOIkeUbZrscjPx71nt/yrtDC6iEQPLV1J
7Dg1cVaVKsHoIhJ9Cyzyy2HrTmnxU8ioqiISPVGlsCB8zdsk0QNLYF3E2huR
6InZj5PoA0tUdK5KcNnmVan23kcl0WPCNeZrc3BqRLjO5OLjRWD6X3U6/D/i
RPhwmGsfYt8JCHWcRE/UNqRXi8qyGpsfQevaQBS7PEqih5Ttuizyzdj/mbbs
h8qD6CISPWGJwY7jiQuqhKNLSPQtsci9ac1IBKCqEhI9UaWwIJGat0iix5bA
umDbG5Lo8ezHSfTIEozOVQkvW1Dqj0+ih+xmyNfm4NSIcJ3Jx8fHwPRXu3tf
6X+o3RujuulwBNc+xL5jCLWERA8tYXp1rCxnS+Dq5EUm2OUCEj3Eo9dnkV8u
5zznjeET2Bqi6BISPSa209hxYuLCKsHoIhJ9Syzy8teS+UUkItETVQIF4Wre
KokeWsLrgm5vSKInZj9OosdVQtGZKuGdBJX6AUj0gN2M+NocnBoRru15AI2P
J8D0Rs12bx5C7YWjjEHsOw2hjiLIqdqS9GqiLLbres/POeUKs8vrkOhtrJyy
DWdWxiLPoAaWORiLHiXRu5bK4X3sONNRQZVwdBmJHliqzyI/pkEnlYrAqgpJ
9MBSrCB+zdsm0QNL/LoI2xuS6PNiIeh8jEQPLDHRrcLOxDtJWOqHItGX7GbE
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
              "], {{0, 
              196}, {490, 0}}, {0, 255}, ColorFunction -> RGBColor], 
             BoxForm`ImageTag[
             "Byte", ColorSpace -> "RGB", Interleaving -> True], Selectable -> 
             False], DefaultBaseStyle -> "ImageGraphics", ImageSize -> 
            Magnification[1], ImageSizeRaw -> {490, 196}, 
            PlotRange -> {{0, 490}, {0, 196}}]], "ExerciseOutput", 
          Magnification -> 1, CellFrameColor -> GrayLevel[0], Selectable -> 
          False, Copyable -> False, Editable -> False, ShowCellBracket -> 
          False, CellLabel -> "Out[]=", CellFrame -> False]]],
       FrameMargins->{{10, 0}, {10, 12}},
       ImageMargins->0,
       ImageSize->Full], 
      ButtonBox[
       PaneBox[
        StyleBox["\[Times]",
         FontFamily->"MathematicaMono",
         FontSize->18,
         FontWeight->"Bold",
         FontColor->GrayLevel[0.75]],
        Alignment->Right,
        FrameMargins->{{0, 6}, {0, 0}},
        ImageMargins->0],
       Appearance->None,
       ButtonFunction:>(SelectionMove[
          ButtonNotebook[], All, ButtonCell, AutoScroll -> False]; 
        NotebookFind[
          EvaluationNotebook[], "Exercise", Previous, CellStyle, WrapAround -> 
          False, AutoScroll -> False]; FrontEndExecute[
          FrontEndToken[
           ButtonNotebook[], "OpenCloseGroup"]])]}
    },
    GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {Top}},
    GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
   "Grid"],
  FrameMargins->0,
  FrameStyle->GrayLevel[0.7],
  StripOnInput->False]], "ExerciseOutput",
 Editable->False,
 Selectable->False,
 Deletable->False,
 CellFrame->{{1, 1}, {1, 1}},
 ShowCellBracket->False,
 CellFrameMargins->{{0, 0}, {0, 0}},
 CellFrameColor->GrayLevel[1],
 LineBreakWithin->Automatic]
}, Closed]],

Cell[CellGroupData[{

Cell[BoxData[
 StyleBox[
  DynamicBox[ToBoxes[
    $CellContext`SolutionResponseText["31.8"], StandardForm],
   ImageSizeCache->{140., {3., 9.}}], "SolutionResponseText"]], "Subsection",
 Editable->False,
 Selectable->False,
 Deletable->False,
 ShowCellBracket->False,
 CellMargins->{{24, 25}, {3, 0}},
 CellFrameMargins->{{8, 0}, {0, 0}},
 TextAlignment->Right,
 ShowStringCharacters->False,
 FontFamily->"Source Sans Pro",
 FontSize->12,
 FontWeight->"Plain",
 FontSlant->"Plain",
 Background->GrayLevel[1]],

Cell[BoxData[
 ButtonBox[
  PaneBox[
   StyleBox[
    RowBox[{"[", " ", 
     RowBox[{"Click", " ", "to", " ", "enter", " ", "code"}], " ", "]"}],
    Selectable->False,
    StripOnInput->False,
    FontFamily->"Source Sans Pro",
    FontSize->14,
    FontWeight->Plain,
    FontColor->GrayLevel[0.6]],
   ImageSize->Full],
  Appearance->None,
  ButtonFunction:>(SelectionMove[
     InputNotebook[], All, ButtonCell]; NotebookWrite[
     InputNotebook[], 
     Cell[
      BoxData[""], "Input"]]; SelectionMove[
     InputNotebook[], Before, CellContents]; Null),
  Evaluator->Automatic,
  Method->"Preemptive"]], "Input",
 CellFrameLabels->{{None, None}, {None, None}},
 ShowSyntaxStyles->False,
 ShowStringCharacters->False,
 CellTags->"FirstInputCell"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 PaneBox["\[ThickSpace]",
  ImageSize->Full]], "CodeSectionDividerCloud",
 Editable->False,
 Selectable->False,
 Deletable->False,
 CellMargins->{{0, 0}, {0, 35}},
 CellBracketOptions->{"OverlapContent"->True}],

Cell["\<\
Forme la lista de los 100 primeros primos, eliminando aquellos cuyo primer d\
\[IAcute]gito sea menor que 5.\
\>", "Exercise",
 Editable->False,
 Selectable->False,
 Deletable->False,
 CellDingbat->Cell[
  "31.9", "ExerciseNumber", FontColor -> 
   RGBColor[0.9019607843137255, 0.4117647058823529, 0.027450980392156862`]],
 ShowCellBracket->False,
 CounterAssignments->{{"SectionNumber", 31}, {"ExerciseNumber", 9}, {
   "WebOnly", 0}}],

Cell[CellGroupData[{

Cell[BoxData[
 TagBox[
  ButtonBox[
   StyleBox[
    RowBox[{"EXPECTED", " ", "OUTPUT", " ", "\[RightGuillemet]"}],
    FontFamily->"Source Sans Pro",
    FontSize->12,
    FontColor->GrayLevel[0.6]],
   Appearance->None,
   ButtonFunction:>(SelectionMove[
      ButtonNotebook[], All, ButtonCell, AutoScroll -> False]; FrontEndExecute[
      FrontEndToken[
       ButtonNotebook[], "OpenCloseGroup"]]),
   Evaluator->Automatic,
   Method->"Preemptive"],
  MouseAppearanceTag["LinkHand"]]], "ExerciseExpectedResult",
 Editable->False,
 Deletable->False,
 ShowCellBracket->False],

Cell[BoxData[
 FrameBox[
  TagBox[GridBox[{
     {
      PaneBox[
       InterpretationBox[Cell[BoxData[
         GraphicsBox[
          TagBox[RasterBox[CompressedData["
1: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
bLMPY/8H6OULJw==
            "], {{0, 19}, {363, 0}}, {0, 255},
            ColorFunction->RGBColor],
           BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
           Selectable->False],
          DefaultBaseStyle->"ImageGraphics",
          ImageSize->Magnification[1],
          ImageSizeRaw->{363, 19},
          PlotRange->{{0, 363}, {0, 19}}]], "ExerciseOutput",
         ImageSize->{367, 19},
         ImageMargins->{{0, 0}, {0, 0}},
         ImageRegion->{{0, 1}, {0, 1}},
         Magnification->1],
        Apply[TextCell, 
         Cell[
          BoxData[
           GraphicsBox[
            TagBox[
             RasterBox[CompressedData["
1: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
bLMPY/8H6OULJw==
              "], {{0, 19}, {363, 0}}, {0, 255}, 
              ColorFunction -> RGBColor], 
             BoxForm`ImageTag[
             "Byte", ColorSpace -> "RGB", Interleaving -> True], Selectable -> 
             False], DefaultBaseStyle -> "ImageGraphics", ImageSize -> 
            Magnification[1], ImageSizeRaw -> {363, 19}, 
            PlotRange -> {{0, 363}, {0, 19}}]], "ExerciseOutput", 
          Magnification -> 1, CellFrameColor -> GrayLevel[0], Selectable -> 
          False, Copyable -> False, Editable -> False, ShowCellBracket -> 
          False, CellLabel -> "Out[]=", CellFrame -> False]]],
       FrameMargins->{{10, 0}, {10, 12}},
       ImageMargins->0,
       ImageSize->Full], 
      ButtonBox[
       PaneBox[
        StyleBox["\[Times]",
         FontFamily->"MathematicaMono",
         FontSize->18,
         FontWeight->"Bold",
         FontColor->GrayLevel[0.75]],
        Alignment->Right,
        FrameMargins->{{0, 6}, {0, 0}},
        ImageMargins->0],
       Appearance->None,
       ButtonFunction:>(SelectionMove[
          ButtonNotebook[], All, ButtonCell, AutoScroll -> False]; 
        NotebookFind[
          EvaluationNotebook[], "Exercise", Previous, CellStyle, WrapAround -> 
          False, AutoScroll -> False]; FrontEndExecute[
          FrontEndToken[
           ButtonNotebook[], "OpenCloseGroup"]])]}
    },
    GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {Top}},
    GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
   "Grid"],
  FrameMargins->0,
  FrameStyle->GrayLevel[0.7],
  StripOnInput->False]], "ExerciseOutput",
 Editable->False,
 Selectable->False,
 Deletable->False,
 CellFrame->{{1, 1}, {1, 1}},
 ShowCellBracket->False,
 CellFrameMargins->{{0, 0}, {0, 0}},
 CellFrameColor->GrayLevel[1],
 LineBreakWithin->Automatic]
}, Closed]],

Cell[CellGroupData[{

Cell[BoxData[
 StyleBox[
  DynamicBox[ToBoxes[
    $CellContext`SolutionResponseText["31.9"], StandardForm],
   ImageSizeCache->{140., {3., 9.}}], "SolutionResponseText"]], "Subsection",
 Editable->False,
 Selectable->False,
 Deletable->False,
 ShowCellBracket->False,
 CellMargins->{{24, 25}, {3, 0}},
 CellFrameMargins->{{8, 0}, {0, 0}},
 TextAlignment->Right,
 ShowStringCharacters->False,
 FontFamily->"Source Sans Pro",
 FontSize->12,
 FontWeight->"Plain",
 FontSlant->"Plain",
 Background->GrayLevel[1]],

Cell[BoxData[
 ButtonBox[
  PaneBox[
   StyleBox[
    RowBox[{"[", " ", 
     RowBox[{"Click", " ", "to", " ", "enter", " ", "code"}], " ", "]"}],
    Selectable->False,
    StripOnInput->False,
    FontFamily->"Source Sans Pro",
    FontSize->14,
    FontWeight->Plain,
    FontColor->GrayLevel[0.6]],
   ImageSize->Full],
  Appearance->None,
  ButtonFunction:>(SelectionMove[
     InputNotebook[], All, ButtonCell]; NotebookWrite[
     InputNotebook[], 
     Cell[
      BoxData[""], "Input"]]; SelectionMove[
     InputNotebook[], Before, CellContents]; Null),
  Evaluator->Automatic,
  Method->"Preemptive"]], "Input",
 CellFrameLabels->{{None, None}, {None, None}},
 ShowSyntaxStyles->False,
 ShowStringCharacters->False,
 CellTags->"FirstInputCell"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 PaneBox["\[ThickSpace]",
  ImageSize->Full]], "CodeSectionDividerCloud",
 Editable->False,
 Selectable->False,
 Deletable->False,
 CellMargins->{{0, 0}, {0, 35}},
 CellBracketOptions->{"OverlapContent"->True}],

Cell[TextData[{
 "Construya una rejilla, comenzando con ",
 Cell[BoxData[
  RowBox[{
   StyleBox["Range",
    FontFamily->"Source Sans Pro"], "[", "10", "]"}]], "InlineCode"],
 " y, entonces, en cada uno de 9 pasos seguidos, eliminar un elemento al azar."
}], "Exercise",
 Editable->False,
 Selectable->False,
 Deletable->False,
 CellDingbat->Cell[
  "31.10", "ExerciseNumber", FontColor -> 
   RGBColor[0.9019607843137255, 0.4117647058823529, 0.027450980392156862`]],
 ShowCellBracket->False,
 TaggingRules->{"MultipleSolutions" -> "True"},
 CounterAssignments->{{"SectionNumber", 31}, {"ExerciseNumber", 10}, {
   "WebOnly", 0}}],

Cell[CellGroupData[{

Cell[BoxData[
 TagBox[
  ButtonBox[
   StyleBox[
    RowBox[{
    "SAMPLE", " ", "EXPECTED", " ", "OUTPUT", " ", "\[RightGuillemet]"}],
    FontFamily->"Source Sans Pro",
    FontSize->12,
    FontColor->GrayLevel[0.6]],
   Appearance->None,
   ButtonFunction:>(SelectionMove[
      ButtonNotebook[], All, ButtonCell, AutoScroll -> False]; FrontEndExecute[
      FrontEndToken[
       ButtonNotebook[], "OpenCloseGroup"]]),
   Evaluator->Automatic,
   Method->"Preemptive"],
  MouseAppearanceTag["LinkHand"]]], "ExerciseExpectedResult",
 Editable->False,
 Deletable->False,
 ShowCellBracket->False],

Cell[BoxData[
 FrameBox[
  TagBox[GridBox[{
     {
      PaneBox[
       InterpretationBox[Cell[BoxData[
         GraphicsBox[
          TagBox[RasterBox[CompressedData["
1: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
            "], {{0, 
            187}, {202, 0}}, {0, 255},
            ColorFunction->RGBColor],
           BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
           Selectable->False],
          DefaultBaseStyle->"ImageGraphics",
          ImageSize->Magnification[1],
          ImageSizeRaw->{202, 187},
          PlotRange->{{0, 202}, {0, 187}}]], "ExerciseOutput",
         ImageSize->{206, 187},
         ImageMargins->{{0, 0}, {0, 0}},
         ImageRegion->{{0, 1}, {0, 1}},
         Magnification->1],
        Apply[TextCell, 
         Cell[
          BoxData[
           GraphicsBox[
            TagBox[
             RasterBox[CompressedData["
1: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
              "], {{0, 
              187}, {202, 0}}, {0, 255}, ColorFunction -> RGBColor], 
             BoxForm`ImageTag[
             "Byte", ColorSpace -> "RGB", Interleaving -> True], Selectable -> 
             False], DefaultBaseStyle -> "ImageGraphics", ImageSize -> 
            Magnification[1], ImageSizeRaw -> {202, 187}, 
            PlotRange -> {{0, 202}, {0, 187}}]], "ExerciseOutput", 
          Magnification -> 1, CellFrameColor -> GrayLevel[0], Selectable -> 
          False, Copyable -> False, Editable -> False, ShowCellBracket -> 
          False, CellLabel -> "Out[]=", CellFrame -> False]]],
       FrameMargins->{{10, 0}, {10, 12}},
       ImageMargins->0,
       ImageSize->Full], 
      ButtonBox[
       PaneBox[
        StyleBox["\[Times]",
         FontFamily->"MathematicaMono",
         FontSize->18,
         FontWeight->"Bold",
         FontColor->GrayLevel[0.75]],
        Alignment->Right,
        FrameMargins->{{0, 6}, {0, 0}},
        ImageMargins->0],
       Appearance->None,
       ButtonFunction:>(SelectionMove[
          ButtonNotebook[], All, ButtonCell, AutoScroll -> False]; 
        NotebookFind[
          EvaluationNotebook[], "Exercise", Previous, CellStyle, WrapAround -> 
          False, AutoScroll -> False]; FrontEndExecute[
          FrontEndToken[
           ButtonNotebook[], "OpenCloseGroup"]])]}
    },
    GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {Top}},
    GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
   "Grid"],
  FrameMargins->0,
  FrameStyle->GrayLevel[0.7],
  StripOnInput->False]], "ExerciseOutput",
 Editable->False,
 Selectable->False,
 Deletable->False,
 CellFrame->{{1, 1}, {1, 1}},
 ShowCellBracket->False,
 CellFrameMargins->{{0, 0}, {0, 0}},
 CellFrameColor->GrayLevel[1],
 LineBreakWithin->Automatic]
}, Closed]],

Cell[CellGroupData[{

Cell[BoxData[
 StyleBox[
  DynamicBox[ToBoxes[
    $CellContext`SolutionResponseText["31.10"], StandardForm],
   ImageSizeCache->{146., {3., 9.}}], "SolutionResponseText"]], "Subsection",
 Editable->False,
 Selectable->False,
 Deletable->False,
 ShowCellBracket->False,
 CellMargins->{{24, 25}, {3, 0}},
 CellFrameMargins->{{8, 0}, {0, 0}},
 TextAlignment->Right,
 ShowStringCharacters->False,
 FontFamily->"Source Sans Pro",
 FontSize->12,
 FontWeight->"Plain",
 FontSlant->"Plain",
 Background->GrayLevel[1]],

Cell[BoxData[
 ButtonBox[
  PaneBox[
   StyleBox[
    RowBox[{"[", " ", 
     RowBox[{"Click", " ", "to", " ", "enter", " ", "code"}], " ", "]"}],
    Selectable->False,
    StripOnInput->False,
    FontFamily->"Source Sans Pro",
    FontSize->14,
    FontWeight->Plain,
    FontColor->GrayLevel[0.6]],
   ImageSize->Full],
  Appearance->None,
  ButtonFunction:>(SelectionMove[
     InputNotebook[], All, ButtonCell]; NotebookWrite[
     InputNotebook[], 
     Cell[
      BoxData[""], "Input"]]; SelectionMove[
     InputNotebook[], Before, CellContents]; Null),
  Evaluator->Automatic,
  Method->"Preemptive"]], "Input",
 CellFrameLabels->{{None, None}, {None, None}},
 ShowSyntaxStyles->False,
 ShowStringCharacters->False,
 CellTags->"FirstInputCell"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 PaneBox["\[ThickSpace]",
  ImageSize->Full]], "CodeSectionDividerCloud",
 Editable->False,
 Selectable->False,
 Deletable->False,
 CellMargins->{{0, 0}, {0, 35}},
 CellBracketOptions->{"OverlapContent"->True}],

Cell[TextData[{
 "Encuentre las 10 palabras m\[AAcute]s largas en ",
 Cell[BoxData[
  RowBox[{
   StyleBox["WordList",
    FontFamily->"Source Sans Pro"], "[", " ", "]"}]], "InlineCode"],
 "."
}], "Exercise",
 Editable->False,
 Selectable->False,
 Deletable->False,
 CellDingbat->Cell[
  "31.11", "ExerciseNumber", FontColor -> 
   RGBColor[0.9019607843137255, 0.4117647058823529, 0.027450980392156862`]],
 ShowCellBracket->False,
 TaggingRules->{"MultipleSolutions" -> "True"},
 CounterAssignments->{{"SectionNumber", 31}, {"ExerciseNumber", 11}, {
   "WebOnly", 0}}],

Cell[CellGroupData[{

Cell[BoxData[
 TagBox[
  ButtonBox[
   StyleBox[
    RowBox[{
    "SAMPLE", " ", "EXPECTED", " ", "OUTPUT", " ", "\[RightGuillemet]"}],
    FontFamily->"Source Sans Pro",
    FontSize->12,
    FontColor->GrayLevel[0.6]],
   Appearance->None,
   ButtonFunction:>(SelectionMove[
      ButtonNotebook[], All, ButtonCell, AutoScroll -> False]; FrontEndExecute[
      FrontEndToken[
       ButtonNotebook[], "OpenCloseGroup"]]),
   Evaluator->Automatic,
   Method->"Preemptive"],
  MouseAppearanceTag["LinkHand"]]], "ExerciseExpectedResult",
 Editable->False,
 Deletable->False,
 ShowCellBracket->False],

Cell[BoxData[
 FrameBox[
  TagBox[GridBox[{
     {
      PaneBox[
       InterpretationBox[Cell[BoxData[
         GraphicsBox[
          TagBox[RasterBox[CompressedData["
1:eJztnbvL+0x2x5WkSZl/IXVAdYo0KlMJNiSQ4GaXrJY0G/NuILg1adxFnUmj
ShBQ5cpp3KhSQtRoCxEQQVnwW7jQgrZQocKZiy5zOaOLH/t5/Pvt+cL7/h7L
0lzOmRnNjOTz+dOf/eNPvD+0LOtXf0z+95Of/rPzww8/3f3Vn5APf/3LX/3D
L37587//y1/+089/8fMf/vxnf0QO/g3579/+wLLo33cUCoVCoVAoFAqFQqE+
WfU1TbK6/epiPFFralSXWZrfXlwgUU2RpmUFFK5pPuwDdOV7uBL1SlXng2fb
26wBvqvTg2VZSb0uxfYJfe9VWlWj9GBb1qF6cZFG1QnJb5+oGRbRlpT5mK10
g5I2uvINXIl6qersSJqEdzhdoVbLvnXSVV2gLUnfO6Rv6sdVNcqOjmUfPzSI
rFKTupbla6ar0nCz2cWghxYLXfkOrkS9VHXqE6uL87KmqYePQIMhd2v9dt02
9XBRmzkkRW2qJ6TKzofu+Y10kniydljMce5yscC8RlnLS6Se3jZSwbQu0Jpy
AAca8WQlZTjFJh1MR6o3NXhB1QcKgK7s9b6uRD1PTUZHs87LVXbYkAkyke2f
i7vaBerLccu+tdx91N916jjY8YPW5pD/+OutbfXyyIV5uPX8U7ijR9ldfkzE
8Y750Ly0rJsidDd+fDl2J+9ONZgj35oALo9cUspw3xf4xAvMamQfQ9+Wk73l
l32XAkn1zA+KXeCahC7/2t5Eab8D05RHr7vK3bi25YR5rVQZTJmcszmEwc7p
ynwpWGr0hr4Lo313eJveWl4XZ9wKgKqvC135lq5EvVRFuCEeoM2jLWjDcvZJ
UaYRbTlR2YhdID4Qx9hBnJfZ2SNH/ZQcTOhBaxucs/Sy22zjH2/JibaujX+K
44Q4MDuyhuP5lzgpa56ItY/iLIk21Mv761TWtNWc0oz3Gr5xpOZI8pi43N6e
0zwO6fdukN37lbWebLwnA8YxLYqEpeCzOg9doM4C1l+CNEt4m48KMrg0ETGE
vUuvt/zs00SD+NZoVYZTdlmCYVakPMFT2ZIusGGF21H70B7HjVzTO47DN4iA
6utCV76rK1GvU1VcSCNwDsm9bxtRUdPJdlsSbznHdOwC7F6zCbOWfZ0SD5Ix
kB10/URKtM1c2q66mQTz9a7kH3gix6z7xNqVn1bmrO24GtOkuxBQjhMlH7aI
z1uLD9r8uJrskNStzOLI7ftL3wVYU7dYb6UqdzQx0jjrI7mFH3N+0KMri6F5
91WeSrmfEvNKEbOwP/YXPlto6RjhRY04rQINrgld+bauRL1OB3bPu7AmkAUb
S5YrdwH965ptDhxz2Ut8x6BvV9J+BT8/G7dleAucyVpME8px/nKyHAjc/tYM
JUtXHwFfE2w8en912Z20L3xN/z3EfYbVnlf/3pzpGsS75EUSbvu7vLpFM5ly
lyCZA9E+1ZWn7k3nit2WewEwuCZ05du6EvU6tVW+pw+SL/fucUB/A+01Npia
emd7km9T7OAmzKWD3f7n4EfB1+x8Lyq63MvIYtsRM1nfhbYK5Thxedatw5rQ
s9SRQUy2zT3aOGPetQKH36/HGzpZjpM+0Odw29NPdFJRnui93SEN2PWi5ApU
eTLlridXsc0rZRg9FC+oBteErnxbV6JeqoJOgtldo87ofdE9pOXtds3CY0ju
Trx1nUu6sXCitywnTIqquiZREFFP8Xm75Z+z6zUPdl6YdSsIL4ivV/ryoDQP
7xKxgzgr85jtrW6LxpA1fOeFcjReTt88Ka7lJaC5bk/aZvg4T8hYmZNbdT37
LLGuodLlQtneq4TtpfjnosyjPd0nOWa0P5HKkTt7WVW3262qKv6kS156TKRs
Hy/ZtUwP9DBbMdV6F1C6LVT9NieWdPbncZaDrnxXVwLOQj1P4jPNujiPE33b
oy843S50at054hp4zvD94cJu7k3he8Ojr80pJye2sd8l49NVgms5wXhXascn
RySLS9k/qNOyZm3V7dsqbeRd2wByNF0+anPo2o8h2bHM9mZHknfZjlDB+huf
gaThbkhtf+pmFKnvWJI2SXWXqwynLC+p7GN8VavJu4kb1GqZteqzq4RxBl35
vq4EnYV6ltgt+yC+h1NTiW/XSB8b5WvhYKsc0d8sMp8PZj0hKAXpct7Us4Yc
rapl7/s0UO6sIv3lrfSpe0OS9De2Z026IX3dHHr9W0+Z3qxZNxmmAaukVJ9O
sIGFDLpSO/gGrjQ4C/UENTl7YO0dy+/rdRjlQdhr8kgc+gg+JZ297lcfp3JR
Fx6XHh/WlT7ks+gy7TvV9+TK795ZX60mCQ+et597UPaNqclD2/LAH58+T20W
7YVVhhv2u8ezykPPftYj+/pW3r4v58n6rlz5vTsL9Y2L/t6mMa/FUN+O0JUo
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
+v3S/wOg/wRG
            "], {{0, 86}, {410, 0}}, {0, 255},
            ColorFunction->RGBColor],
           BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
           Selectable->False],
          DefaultBaseStyle->"ImageGraphics",
          ImageSize->Magnification[1],
          ImageSizeRaw->{410, 86},
          PlotRange->{{0, 410}, {0, 86}}]], "ExerciseOutput",
         ImageSize->{414, 86},
         ImageMargins->{{0, 0}, {0, 0}},
         ImageRegion->{{0, 1}, {0, 1}},
         Magnification->1],
        Apply[TextCell, 
         Cell[
          BoxData[
           GraphicsBox[
            TagBox[
             RasterBox[CompressedData["
1:eJztnbvL+0x2x5WkSZl/IXVAdYo0KlMJNiSQ4GaXrJY0G/NuILg1adxFnUmj
ShBQ5cpp3KhSQtRoCxEQQVnwW7jQgrZQocKZiy5zOaOLH/t5/Pvt+cL7/h7L
0lzOmRnNjOTz+dOf/eNPvD+0LOtXf0z+95Of/rPzww8/3f3Vn5APf/3LX/3D
L37587//y1/+089/8fMf/vxnf0QO/g3579/+wLLo33cUCoVCoVAoFAqFQqE+
WfU1TbK6/epiPFFralSXWZrfXlwgUU2RpmUFFK5pPuwDdOV7uBL1SlXng2fb
26wBvqvTg2VZSb0uxfYJfe9VWlWj9GBb1qF6cZFG1QnJb5+oGRbRlpT5mK10
g5I2uvINXIl6qersSJqEdzhdoVbLvnXSVV2gLUnfO6Rv6sdVNcqOjmUfPzSI
rFKTupbla6ar0nCz2cWghxYLXfkOrkS9VHXqE6uL87KmqYePQIMhd2v9dt02
9XBRmzkkRW2qJ6TKzofu+Y10kniydljMce5yscC8RlnLS6Se3jZSwbQu0Jpy
AAca8WQlZTjFJh1MR6o3NXhB1QcKgK7s9b6uRD1PTUZHs87LVXbYkAkyke2f
i7vaBerLccu+tdx91N916jjY8YPW5pD/+OutbfXyyIV5uPX8U7ijR9ldfkzE
8Y750Ly0rJsidDd+fDl2J+9ONZgj35oALo9cUspw3xf4xAvMamQfQ9+Wk73l
l32XAkn1zA+KXeCahC7/2t5Eab8D05RHr7vK3bi25YR5rVQZTJmcszmEwc7p
ynwpWGr0hr4Lo313eJveWl4XZ9wKgKqvC135lq5EvVRFuCEeoM2jLWjDcvZJ
UaYRbTlR2YhdID4Qx9hBnJfZ2SNH/ZQcTOhBaxucs/Sy22zjH2/JibaujX+K
44Q4MDuyhuP5lzgpa56ItY/iLIk21Mv761TWtNWc0oz3Gr5xpOZI8pi43N6e
0zwO6fdukN37lbWebLwnA8YxLYqEpeCzOg9doM4C1l+CNEt4m48KMrg0ETGE
vUuvt/zs00SD+NZoVYZTdlmCYVakPMFT2ZIusGGF21H70B7HjVzTO47DN4iA
6utCV76rK1GvU1VcSCNwDsm9bxtRUdPJdlsSbznHdOwC7F6zCbOWfZ0SD5Ix
kB10/URKtM1c2q66mQTz9a7kH3gix6z7xNqVn1bmrO24GtOkuxBQjhMlH7aI
z1uLD9r8uJrskNStzOLI7ftL3wVYU7dYb6UqdzQx0jjrI7mFH3N+0KMri6F5
91WeSrmfEvNKEbOwP/YXPlto6RjhRY04rQINrgld+bauRL1OB3bPu7AmkAUb
S5YrdwH965ptDhxz2Ut8x6BvV9J+BT8/G7dleAucyVpME8px/nKyHAjc/tYM
JUtXHwFfE2w8en912Z20L3xN/z3EfYbVnlf/3pzpGsS75EUSbvu7vLpFM5ly
lyCZA9E+1ZWn7k3nit2WewEwuCZ05du6EvU6tVW+pw+SL/fucUB/A+01Npia
emd7km9T7OAmzKWD3f7n4EfB1+x8Lyq63MvIYtsRM1nfhbYK5Thxedatw5rQ
s9SRQUy2zT3aOGPetQKH36/HGzpZjpM+0Odw29NPdFJRnui93SEN2PWi5ApU
eTLlridXsc0rZRg9FC+oBteErnxbV6JeqoJOgtldo87ofdE9pOXtds3CY0ju
Trx1nUu6sXCitywnTIqquiZREFFP8Xm75Z+z6zUPdl6YdSsIL4ivV/ryoDQP
7xKxgzgr85jtrW6LxpA1fOeFcjReTt88Ka7lJaC5bk/aZvg4T8hYmZNbdT37
LLGuodLlQtneq4TtpfjnosyjPd0nOWa0P5HKkTt7WVW3262qKv6kS156TKRs
Hy/ZtUwP9DBbMdV6F1C6LVT9NieWdPbncZaDrnxXVwLOQj1P4jPNujiPE33b
oy843S50at054hp4zvD94cJu7k3he8Ojr80pJye2sd8l49NVgms5wXhXascn
RySLS9k/qNOyZm3V7dsqbeRd2wByNF0+anPo2o8h2bHM9mZHknfZjlDB+huf
gaThbkhtf+pmFKnvWJI2SXWXqwynLC+p7GN8VavJu4kb1GqZteqzq4RxBl35
vq4EnYV6ltgt+yC+h1NTiW/XSB8b5WvhYKsc0d8sMp8PZj0hKAXpct7Us4Yc
rapl7/s0UO6sIv3lrfSpe0OS9De2Z026IX3dHHr9W0+Z3qxZNxmmAaukVJ9O
sIGFDLpSO/gGrjQ4C/UENTl7YO0dy+/rdRjlQdhr8kgc+gg+JZ297lcfp3JR
Fx6XHh/WlT7ks+gy7TvV9+TK795ZX60mCQ+et597UPaNqclD2/LAH58+T20W
7YVVhhv2u8ezykPPftYj+/pW3r4v58n6rlz5vTsL9Y2L/t6mMa/FUN+O0JUo
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
+v3S/wOg/wRG
              "], {{0, 86}, {410, 0}}, {0, 255}, ColorFunction -> 
              RGBColor], 
             BoxForm`ImageTag[
             "Byte", ColorSpace -> "RGB", Interleaving -> True], Selectable -> 
             False], DefaultBaseStyle -> "ImageGraphics", ImageSize -> 
            Magnification[1], ImageSizeRaw -> {410, 86}, 
            PlotRange -> {{0, 410}, {0, 86}}]], "ExerciseOutput", 
          Magnification -> 1, CellFrameColor -> GrayLevel[0], Selectable -> 
          False, Copyable -> False, Editable -> False, ShowCellBracket -> 
          False, CellLabel -> "Out[]=", CellFrame -> False]]],
       FrameMargins->{{10, 0}, {10, 12}},
       ImageMargins->0,
       ImageSize->Full], 
      ButtonBox[
       PaneBox[
        StyleBox["\[Times]",
         FontFamily->"MathematicaMono",
         FontSize->18,
         FontWeight->"Bold",
         FontColor->GrayLevel[0.75]],
        Alignment->Right,
        FrameMargins->{{0, 6}, {0, 0}},
        ImageMargins->0],
       Appearance->None,
       ButtonFunction:>(SelectionMove[
          ButtonNotebook[], All, ButtonCell, AutoScroll -> False]; 
        NotebookFind[
          EvaluationNotebook[], "Exercise", Previous, CellStyle, WrapAround -> 
          False, AutoScroll -> False]; FrontEndExecute[
          FrontEndToken[
           ButtonNotebook[], "OpenCloseGroup"]])]}
    },
    GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {Top}},
    GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
   "Grid"],
  FrameMargins->0,
  FrameStyle->GrayLevel[0.7],
  StripOnInput->False]], "ExerciseOutput",
 Editable->False,
 Selectable->False,
 Deletable->False,
 CellFrame->{{1, 1}, {1, 1}},
 ShowCellBracket->False,
 CellFrameMargins->{{0, 0}, {0, 0}},
 CellFrameColor->GrayLevel[1],
 LineBreakWithin->Automatic]
}, Closed]],

Cell[CellGroupData[{

Cell[BoxData[
 StyleBox[
  DynamicBox[ToBoxes[
    $CellContext`SolutionResponseText["31.11"], StandardForm],
   ImageSizeCache->{146., {3., 9.}}], "SolutionResponseText"]], "Subsection",
 Editable->False,
 Selectable->False,
 Deletable->False,
 ShowCellBracket->False,
 CellMargins->{{24, 25}, {3, 0}},
 CellFrameMargins->{{8, 0}, {0, 0}},
 TextAlignment->Right,
 ShowStringCharacters->False,
 FontFamily->"Source Sans Pro",
 FontSize->12,
 FontWeight->"Plain",
 FontSlant->"Plain",
 Background->GrayLevel[1]],

Cell[BoxData[
 ButtonBox[
  PaneBox[
   StyleBox[
    RowBox[{"[", " ", 
     RowBox[{"Click", " ", "to", " ", "enter", " ", "code"}], " ", "]"}],
    Selectable->False,
    StripOnInput->False,
    FontFamily->"Source Sans Pro",
    FontSize->14,
    FontWeight->Plain,
    FontColor->GrayLevel[0.6]],
   ImageSize->Full],
  Appearance->None,
  ButtonFunction:>(SelectionMove[
     InputNotebook[], All, ButtonCell]; NotebookWrite[
     InputNotebook[], 
     Cell[
      BoxData[""], "Input"]]; SelectionMove[
     InputNotebook[], Before, CellContents]; Null),
  Evaluator->Automatic,
  Method->"Preemptive"]], "Input",
 CellFrameLabels->{{None, None}, {None, None}},
 ShowSyntaxStyles->False,
 ShowStringCharacters->False,
 CellTags->"FirstInputCell"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 PaneBox["\[ThickSpace]",
  ImageSize->Full]], "CodeSectionDividerCloud",
 Editable->False,
 Selectable->False,
 Deletable->False,
 CellMargins->{{0, 0}, {0, 35}},
 CellBracketOptions->{"OverlapContent"->True}],

Cell["\<\
Encuentre los nombres en ingl\[EAcute]s m\[AAcute]s largos de los \
n\[UAcute]meros enteros del 1 al 100.\
\>", "Exercise",
 Editable->False,
 Selectable->False,
 Deletable->False,
 CellDingbat->Cell[
  "31.12", "ExerciseNumber", FontColor -> 
   RGBColor[0.9019607843137255, 0.4117647058823529, 0.027450980392156862`]],
 ShowCellBracket->False,
 CounterAssignments->{{"SectionNumber", 31}, {"ExerciseNumber", 12}, {
   "WebOnly", 0}}],

Cell[CellGroupData[{

Cell[BoxData[
 TagBox[
  ButtonBox[
   StyleBox[
    RowBox[{"EXPECTED", " ", "OUTPUT", " ", "\[RightGuillemet]"}],
    FontFamily->"Source Sans Pro",
    FontSize->12,
    FontColor->GrayLevel[0.6]],
   Appearance->None,
   ButtonFunction:>(SelectionMove[
      ButtonNotebook[], All, ButtonCell, AutoScroll -> False]; FrontEndExecute[
      FrontEndToken[
       ButtonNotebook[], "OpenCloseGroup"]]),
   Evaluator->Automatic,
   Method->"Preemptive"],
  MouseAppearanceTag["LinkHand"]]], "ExerciseExpectedResult",
 Editable->False,
 Deletable->False,
 ShowCellBracket->False],

Cell[BoxData[
 FrameBox[
  TagBox[GridBox[{
     {
      PaneBox[
       InterpretationBox[Cell[BoxData[
         GraphicsBox[
          TagBox[RasterBox[CompressedData["
1:eJztWzGvpEYSxnbi8CT/Av8B4ksJL0KydRmJLS/WJXtofZJFSkZIRmIREVhE
REQk6AJ0J3QSCTqJoHUSCQEBSQcdzFV1wwOGnvfevPUwzC6ftCteq+iu+qq7
uqqb+fbHv39nfqkoyi9fw3/f/fCr9uHDD/b3f4I//vr+l7/9/P7dT395/493
P7/78Ocfv4LGb+Df718oCj6fDhw4cODAgQMHDhw4cODAgQMH9oO+KfKyZ/dW
Yweg9DkWelIWVbuZMrfF5+30Gzi6S1xTVa2SfoxeV4A9b8PnhKuoAOEn8b5w
FUXJ+xvptR0+cjLUkQU8+OVFIgpXVRS3k437/MgvCrwRjPbXdLux03di9Rp/
hKP70NQ0w8nbkc/Shz5NN262iUeMgA1usdbx88OVVKBznVw8c69pxaOHvo+e
DF0RGoadXZ67pa8pqr/maU6mFC8KvA194V3luI2dvhOr1/gjHM2qJDAURXVH
PlErb8r42DrsY8h+lX6SdxG0nyXprNRgvKtSzFurdK9xr6QCnKh6pXgWq6Bk
vEsq6WGuJ5UpLW08x84YGHp4VoOzNFKsCLpSZ06mFC8KSEaW6sUWDmIVD1+v
tnhjp+/EaoFbOLoKdEX1xF5LSwx9PFrSzDcVDs3ya97U5KE+NmUNZU2iK1pU
Dxr1ZaAqJk9C+9S3hKDuRNgzqx1N8+LY0XirahWQZ9LKUpUR5r/+m2JvVT/2
Fo69TdbfXKULrO+Mij6yhpfhJQvkcBWofuiJPjQ7FrJVaJleHNrYjNlUV7qG
EFG9pB46kzbunQG55rSOtKezGkp8c+hRN3RV0ULkCVQ2PNcQ7V5ar8lc2b4U
CGNLVf2cnyPREp7tWJDWerrqps2aGa5YqBtelvrKzEFVZD8ZrJq//Waqhl8M
YzLiaKqXtRfVuLnTd2L1bR09Tw7r0BBhUFS+QV6TKnVMGyikVaBgdwlpgF14
dJoTATNUJxN6J9Co+fBu5sIQapBVpExgwWheAdmkoMUOs5JThI2sy2N0nOHF
WQY1d+OgRCLMTR107Lz42UIl6STYHxVNEWOubvlplhakFxrC23FRijgjjkH4
BIBA4qVZTroa55zmgB1FhN1HhEIUkjQ+AgNSzXvcuDV+/EUjGEy1i6atEg9V
DbKWnsqArwUzKKrcRSWcdkXm2vylwP9QSztFWgpOux4gZU0Cj2FFZcycpA7q
myrmz26UZkX9H3SWWfHtV/ScLAu6jZ2+E6tv6uiKhzt46uoUJywvfoXadph3
gyJ8CMUlDFPLnsTQBwxd4RBWzXAvgBGshJwoTmwjLLkgK3yeUvJGJxXxnEXw
khkhdQzf8scah8Qwvo6HAKyC0awYeus7gZ5upNKFhb8rKmCMQIOIsah9MhEa
eD8ePzHjq8AmMyuiuue6EAcjUyFtfAgGLpsjDpF6H7Z/X6RwxMQ6WoQFTUz1
03jiJJbPnEwZFgLcTLvB6glaNVSSnVqM9Ra5wIzI0NYO4qWfXgpWu0wdaUnt
Mbbcz+k7sfqmjmZ1hHrHlcuzwXTYXBnEWJFH6nbUwhC6soSBQ7epws9n+twd
JiotjDNB3e9pgcc448lm6Y8l9tA+7ue0xMWTtJSfBoC2pTeOivKbqCTBDqno
fW1KUxcn3rN+5vn8sA8udCmkjQ/BwD9lms94oAlWfGZa1TnPQkQlPidksXy0
izm/kJ0LsDqEDhNCwEig0EWdG1y2VnK6wMwlBy2vKniqrIeML2E7wSryrk7f
hdU3djT1+bRmXeXwEDyf83UWahhp/w25oaIFq7yIQsWiOlE0kIBBVhN79EJq
MasnxUT77BAnd1VFdwMwx4wvHL3dWKWL2BUV3In+IgF4fhXwvW/cgp96kTU+
BANyc2Y8kBjrb01VVN2M8uZ8rPWKGMmU4UwAb6INB9QyINvIHVW1HHNIXaiU
mReCwCjNy0YtCB3cOGQHD9s6fRdW39TRok4P+Fs1lh+4BZehpdth3UJtnhtY
s9QdbuWK6adN15Ei8cNczMY2c0U0Hj+zoVipKFqY113X5FEQgb39erYPGz2W
+kHWNGQopppEZBdefu6bjVRiFXhXcxK68bjXUDEecThlQ+qmf3YVeE9XBbh9
6m5B2rYpQz/E7VHa+BAMyDQ/m+SQH5Cua9sWKidxzbeog2aZw5zMtfnnAnj2
yA/MjRBkutwTyYhYnlJmLgYBXNdKWNSEiDu2zhMn8eMh5x2dvherb+fo4WrD
H25LxhtekgVTDmt4RHTIjxkFJpZYhbNbdaatnTWBqT1JuikRxctstutQ1HPF
WOaNtzAjR/zcgB8ZLbGRSrx9mjy7pII7NBTCqptz5+rjS1P/2LkWPBnS18lU
PKim+CxK0vgoDKw0n/NQeNOgQm8In3NC5sJzMtfmnwuMC9+K+C1nnyM5+nQL
s2bmkoNOtB7OESCV4ja2eKMDFaW8/tjS6Tuy+kaOlmTI7qgB6wFnn2MxKmmU
gcu96qsvlJw+++k8dfrOcIUtVMLU97z43SEV/FOn13yRuACT6XLe+DAMyM0Z
EkgPFgk/HIe1gx/3S5Ln+SsTmTLzr2T71cwIE0BJ8QfeOeLFwav0fDXe7PTd
WH0bR1e8AB5iMy9+NdMnd/h1GSuzxLfxW4jzC+4N0eCpqxKW9/2ByT2p+BQY
6HN4044KiKJ91yQ8mYxln3CscS/z2zKLAkx+zOjS15U3xKNa/XZH0zzgX81M
tx40D13TdKqtfsM7gdV4V6PqYX7XH5j3LWm3N36J+1LxKTDA5vUX3iCOB+Av
407ml4EpPjq7D/WPavWbHU0T17KcoH72avPAgccE/7W67EdeBz4tHI4+cODA
gavxf7tP4Xk=
            "], {{0, 19}, {425, 0}}, {0, 255},
            ColorFunction->RGBColor],
           BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
           Selectable->False],
          DefaultBaseStyle->"ImageGraphics",
          ImageSize->Magnification[1],
          ImageSizeRaw->{425, 19},
          PlotRange->{{0, 425}, {0, 19}}]], "ExerciseOutput",
         ImageSize->{429, 19},
         ImageMargins->{{0, 0}, {0, 0}},
         ImageRegion->{{0, 1}, {0, 1}},
         Magnification->1],
        Apply[TextCell, 
         Cell[
          BoxData[
           GraphicsBox[
            TagBox[
             RasterBox[CompressedData["
1:eJztWzGvpEYSxnbi8CT/Av8B4ksJL0KydRmJLS/WJXtofZJFSkZIRmIREVhE
REQk6AJ0J3QSCTqJoHUSCQEBSQcdzFV1wwOGnvfevPUwzC6ftCteq+iu+qq7
uqqb+fbHv39nfqkoyi9fw3/f/fCr9uHDD/b3f4I//vr+l7/9/P7dT395/493
P7/78Ocfv4LGb+Df718oCj6fDhw4cODAgQMHDhw4cODAgQMH9oO+KfKyZ/dW
Yweg9DkWelIWVbuZMrfF5+30Gzi6S1xTVa2SfoxeV4A9b8PnhKuoAOEn8b5w
FUXJ+xvptR0+cjLUkQU8+OVFIgpXVRS3k437/MgvCrwRjPbXdLux03di9Rp/
hKP70NQ0w8nbkc/Shz5NN262iUeMgA1usdbx88OVVKBznVw8c69pxaOHvo+e
DF0RGoadXZ67pa8pqr/maU6mFC8KvA194V3luI2dvhOr1/gjHM2qJDAURXVH
PlErb8r42DrsY8h+lX6SdxG0nyXprNRgvKtSzFurdK9xr6QCnKh6pXgWq6Bk
vEsq6WGuJ5UpLW08x84YGHp4VoOzNFKsCLpSZ06mFC8KSEaW6sUWDmIVD1+v
tnhjp+/EaoFbOLoKdEX1xF5LSwx9PFrSzDcVDs3ya97U5KE+NmUNZU2iK1pU
Dxr1ZaAqJk9C+9S3hKDuRNgzqx1N8+LY0XirahWQZ9LKUpUR5r/+m2JvVT/2
Fo69TdbfXKULrO+Mij6yhpfhJQvkcBWofuiJPjQ7FrJVaJleHNrYjNlUV7qG
EFG9pB46kzbunQG55rSOtKezGkp8c+hRN3RV0ULkCVQ2PNcQ7V5ar8lc2b4U
CGNLVf2cnyPREp7tWJDWerrqps2aGa5YqBtelvrKzEFVZD8ZrJq//Waqhl8M
YzLiaKqXtRfVuLnTd2L1bR09Tw7r0BBhUFS+QV6TKnVMGyikVaBgdwlpgF14
dJoTATNUJxN6J9Co+fBu5sIQapBVpExgwWheAdmkoMUOs5JThI2sy2N0nOHF
WQY1d+OgRCLMTR107Lz42UIl6STYHxVNEWOubvlplhakFxrC23FRijgjjkH4
BIBA4qVZTroa55zmgB1FhN1HhEIUkjQ+AgNSzXvcuDV+/EUjGEy1i6atEg9V
DbKWnsqArwUzKKrcRSWcdkXm2vylwP9QSztFWgpOux4gZU0Cj2FFZcycpA7q
myrmz26UZkX9H3SWWfHtV/ScLAu6jZ2+E6tv6uiKhzt46uoUJywvfoXadph3
gyJ8CMUlDFPLnsTQBwxd4RBWzXAvgBGshJwoTmwjLLkgK3yeUvJGJxXxnEXw
khkhdQzf8scah8Qwvo6HAKyC0awYeus7gZ5upNKFhb8rKmCMQIOIsah9MhEa
eD8ePzHjq8AmMyuiuue6EAcjUyFtfAgGLpsjDpF6H7Z/X6RwxMQ6WoQFTUz1
03jiJJbPnEwZFgLcTLvB6glaNVSSnVqM9Ra5wIzI0NYO4qWfXgpWu0wdaUnt
Mbbcz+k7sfqmjmZ1hHrHlcuzwXTYXBnEWJFH6nbUwhC6soSBQ7epws9n+twd
JiotjDNB3e9pgcc448lm6Y8l9tA+7ue0xMWTtJSfBoC2pTeOivKbqCTBDqno
fW1KUxcn3rN+5vn8sA8udCmkjQ/BwD9lms94oAlWfGZa1TnPQkQlPidksXy0
izm/kJ0LsDqEDhNCwEig0EWdG1y2VnK6wMwlBy2vKniqrIeML2E7wSryrk7f
hdU3djT1+bRmXeXwEDyf83UWahhp/w25oaIFq7yIQsWiOlE0kIBBVhN79EJq
MasnxUT77BAnd1VFdwMwx4wvHL3dWKWL2BUV3In+IgF4fhXwvW/cgp96kTU+
BANyc2Y8kBjrb01VVN2M8uZ8rPWKGMmU4UwAb6INB9QyINvIHVW1HHNIXaiU
mReCwCjNy0YtCB3cOGQHD9s6fRdW39TRok4P+Fs1lh+4BZehpdth3UJtnhtY
s9QdbuWK6adN15Ei8cNczMY2c0U0Hj+zoVipKFqY113X5FEQgb39erYPGz2W
+kHWNGQopppEZBdefu6bjVRiFXhXcxK68bjXUDEecThlQ+qmf3YVeE9XBbh9
6m5B2rYpQz/E7VHa+BAMyDQ/m+SQH5Cua9sWKidxzbeog2aZw5zMtfnnAnj2
yA/MjRBkutwTyYhYnlJmLgYBXNdKWNSEiDu2zhMn8eMh5x2dvherb+fo4WrD
H25LxhtekgVTDmt4RHTIjxkFJpZYhbNbdaatnTWBqT1JuikRxctstutQ1HPF
WOaNtzAjR/zcgB8ZLbGRSrx9mjy7pII7NBTCqptz5+rjS1P/2LkWPBnS18lU
PKim+CxK0vgoDKw0n/NQeNOgQm8In3NC5sJzMtfmnwuMC9+K+C1nnyM5+nQL
s2bmkoNOtB7OESCV4ja2eKMDFaW8/tjS6Tuy+kaOlmTI7qgB6wFnn2MxKmmU
gcu96qsvlJw+++k8dfrOcIUtVMLU97z43SEV/FOn13yRuACT6XLe+DAMyM0Z
EkgPFgk/HIe1gx/3S5Ln+SsTmTLzr2T71cwIE0BJ8QfeOeLFwav0fDXe7PTd
WH0bR1e8AB5iMy9+NdMnd/h1GSuzxLfxW4jzC+4N0eCpqxKW9/2ByT2p+BQY
6HN4044KiKJ91yQ8mYxln3CscS/z2zKLAkx+zOjS15U3xKNa/XZH0zzgX81M
tx40D13TdKqtfsM7gdV4V6PqYX7XH5j3LWm3N36J+1LxKTDA5vUX3iCOB+Av
407ml4EpPjq7D/WPavWbHU0T17KcoH72avPAgccE/7W67EdeBz4tHI4+cODA
gavxf7tP4Xk=
              "], {{0, 19}, {425, 0}}, {0, 255}, ColorFunction -> 
              RGBColor], 
             BoxForm`ImageTag[
             "Byte", ColorSpace -> "RGB", Interleaving -> True], Selectable -> 
             False], DefaultBaseStyle -> "ImageGraphics", ImageSize -> 
            Magnification[1], ImageSizeRaw -> {425, 19}, 
            PlotRange -> {{0, 425}, {0, 19}}]], "ExerciseOutput", 
          Magnification -> 1, CellFrameColor -> GrayLevel[0], Selectable -> 
          False, Copyable -> False, Editable -> False, ShowCellBracket -> 
          False, CellLabel -> "Out[]=", CellFrame -> False]]],
       FrameMargins->{{10, 0}, {10, 12}},
       ImageMargins->0,
       ImageSize->Full], 
      ButtonBox[
       PaneBox[
        StyleBox["\[Times]",
         FontFamily->"MathematicaMono",
         FontSize->18,
         FontWeight->"Bold",
         FontColor->GrayLevel[0.75]],
        Alignment->Right,
        FrameMargins->{{0, 6}, {0, 0}},
        ImageMargins->0],
       Appearance->None,
       ButtonFunction:>(SelectionMove[
          ButtonNotebook[], All, ButtonCell, AutoScroll -> False]; 
        NotebookFind[
          EvaluationNotebook[], "Exercise", Previous, CellStyle, WrapAround -> 
          False, AutoScroll -> False]; FrontEndExecute[
          FrontEndToken[
           ButtonNotebook[], "OpenCloseGroup"]])]}
    },
    GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {Top}},
    GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
   "Grid"],
  FrameMargins->0,
  FrameStyle->GrayLevel[0.7],
  StripOnInput->False]], "ExerciseOutput",
 Editable->False,
 Selectable->False,
 Deletable->False,
 CellFrame->{{1, 1}, {1, 1}},
 ShowCellBracket->False,
 CellFrameMargins->{{0, 0}, {0, 0}},
 CellFrameColor->GrayLevel[1],
 LineBreakWithin->Automatic]
}, Closed]],

Cell[CellGroupData[{

Cell[BoxData[
 StyleBox[
  DynamicBox[ToBoxes[
    $CellContext`SolutionResponseText["31.12"], StandardForm],
   ImageSizeCache->{146., {3., 9.}}], "SolutionResponseText"]], "Subsection",
 Editable->False,
 Selectable->False,
 Deletable->False,
 ShowCellBracket->False,
 CellMargins->{{24, 25}, {3, 0}},
 CellFrameMargins->{{8, 0}, {0, 0}},
 TextAlignment->Right,
 ShowStringCharacters->False,
 FontFamily->"Source Sans Pro",
 FontSize->12,
 FontWeight->"Plain",
 FontSlant->"Plain",
 Background->GrayLevel[1]],

Cell[BoxData[
 ButtonBox[
  PaneBox[
   StyleBox[
    RowBox[{"[", " ", 
     RowBox[{"Click", " ", "to", " ", "enter", " ", "code"}], " ", "]"}],
    Selectable->False,
    StripOnInput->False,
    FontFamily->"Source Sans Pro",
    FontSize->14,
    FontWeight->Plain,
    FontColor->GrayLevel[0.6]],
   ImageSize->Full],
  Appearance->None,
  ButtonFunction:>(SelectionMove[
     InputNotebook[], All, ButtonCell]; NotebookWrite[
     InputNotebook[], 
     Cell[
      BoxData[""], "Input"]]; SelectionMove[
     InputNotebook[], Before, CellContents]; Null),
  Evaluator->Automatic,
  Method->"Preemptive"]], "Input",
 CellFrameLabels->{{None, None}, {None, None}},
 ShowSyntaxStyles->False,
 ShowStringCharacters->False,
 CellTags->"FirstInputCell"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 PaneBox["\[ThickSpace]",
  ImageSize->Full]], "CodeSectionDividerCloud",
 Editable->False,
 Selectable->False,
 Deletable->False,
 CellMargins->{{0, 0}, {0, 35}},
 CellBracketOptions->{"OverlapContent"->True}],

Cell["\<\
Encuentre los 5 nombres en ingl\[EAcute]s de los enteros hasta el 100, que \
contengan en ellos la mayor cantidad de \[OpenCurlyDoubleQuote]e\
\[CloseCurlyDoubleQuote]s.\
\>", "Exercise",
 Editable->False,
 Selectable->False,
 Deletable->False,
 CellDingbat->Cell[
  "31.13", "ExerciseNumber", FontColor -> 
   RGBColor[0.9019607843137255, 0.4117647058823529, 0.027450980392156862`]],
 ShowCellBracket->False,
 CounterAssignments->{{"SectionNumber", 31}, {"ExerciseNumber", 13}, {
   "WebOnly", 0}}],

Cell[CellGroupData[{

Cell[BoxData[
 TagBox[
  ButtonBox[
   StyleBox[
    RowBox[{"EXPECTED", " ", "OUTPUT", " ", "\[RightGuillemet]"}],
    FontFamily->"Source Sans Pro",
    FontSize->12,
    FontColor->GrayLevel[0.6]],
   Appearance->None,
   ButtonFunction:>(SelectionMove[
      ButtonNotebook[], All, ButtonCell, AutoScroll -> False]; FrontEndExecute[
      FrontEndToken[
       ButtonNotebook[], "OpenCloseGroup"]]),
   Evaluator->Automatic,
   Method->"Preemptive"],
  MouseAppearanceTag["LinkHand"]]], "ExerciseExpectedResult",
 Editable->False,
 Deletable->False,
 ShowCellBracket->False],

Cell[BoxData[
 FrameBox[
  TagBox[GridBox[{
     {
      PaneBox[
       InterpretationBox[Cell[BoxData[
         GraphicsBox[
          TagBox[RasterBox[CompressedData["
1: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
O3bs2PEK+Bd6uFu9
            "], {{0, 19}, {346, 0}}, {0, 255},
            ColorFunction->RGBColor],
           BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
           Selectable->False],
          DefaultBaseStyle->"ImageGraphics",
          ImageSize->Magnification[1],
          ImageSizeRaw->{346, 19},
          PlotRange->{{0, 346}, {0, 19}}]], "ExerciseOutput",
         ImageSize->{350, 19},
         ImageMargins->{{0, 0}, {0, 0}},
         ImageRegion->{{0, 1}, {0, 1}},
         Magnification->1],
        Apply[TextCell, 
         Cell[
          BoxData[
           GraphicsBox[
            TagBox[
             RasterBox[CompressedData["
1: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
O3bs2PEK+Bd6uFu9
              "], {{0, 19}, {346, 0}}, {0, 255}, 
              ColorFunction -> RGBColor], 
             BoxForm`ImageTag[
             "Byte", ColorSpace -> "RGB", Interleaving -> True], Selectable -> 
             False], DefaultBaseStyle -> "ImageGraphics", ImageSize -> 
            Magnification[1], ImageSizeRaw -> {346, 19}, 
            PlotRange -> {{0, 346}, {0, 19}}]], "ExerciseOutput", 
          Magnification -> 1, CellFrameColor -> GrayLevel[0], Selectable -> 
          False, Copyable -> False, Editable -> False, ShowCellBracket -> 
          False, CellLabel -> "Out[]=", CellFrame -> False]]],
       FrameMargins->{{10, 0}, {10, 12}},
       ImageMargins->0,
       ImageSize->Full], 
      ButtonBox[
       PaneBox[
        StyleBox["\[Times]",
         FontFamily->"MathematicaMono",
         FontSize->18,
         FontWeight->"Bold",
         FontColor->GrayLevel[0.75]],
        Alignment->Right,
        FrameMargins->{{0, 6}, {0, 0}},
        ImageMargins->0],
       Appearance->None,
       ButtonFunction:>(SelectionMove[
          ButtonNotebook[], All, ButtonCell, AutoScroll -> False]; 
        NotebookFind[
          EvaluationNotebook[], "Exercise", Previous, CellStyle, WrapAround -> 
          False, AutoScroll -> False]; FrontEndExecute[
          FrontEndToken[
           ButtonNotebook[], "OpenCloseGroup"]])]}
    },
    GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {Top}},
    GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
   "Grid"],
  FrameMargins->0,
  FrameStyle->GrayLevel[0.7],
  StripOnInput->False]], "ExerciseOutput",
 Editable->False,
 Selectable->False,
 Deletable->False,
 CellFrame->{{1, 1}, {1, 1}},
 ShowCellBracket->False,
 CellFrameMargins->{{0, 0}, {0, 0}},
 CellFrameColor->GrayLevel[1],
 LineBreakWithin->Automatic]
}, Closed]],

Cell[CellGroupData[{

Cell[BoxData[
 StyleBox[
  DynamicBox[ToBoxes[
    $CellContext`SolutionResponseText["31.13"], StandardForm],
   ImageSizeCache->{146., {3., 9.}}], "SolutionResponseText"]], "Subsection",
 Editable->False,
 Selectable->False,
 Deletable->False,
 ShowCellBracket->False,
 CellMargins->{{24, 25}, {3, 0}},
 CellFrameMargins->{{8, 0}, {0, 0}},
 TextAlignment->Right,
 ShowStringCharacters->False,
 FontFamily->"Source Sans Pro",
 FontSize->12,
 FontWeight->"Plain",
 FontSlant->"Plain",
 Background->GrayLevel[1]],

Cell[BoxData[
 ButtonBox[
  PaneBox[
   StyleBox[
    RowBox[{"[", " ", 
     RowBox[{"Click", " ", "to", " ", "enter", " ", "code"}], " ", "]"}],
    Selectable->False,
    StripOnInput->False,
    FontFamily->"Source Sans Pro",
    FontSize->14,
    FontWeight->Plain,
    FontColor->GrayLevel[0.6]],
   ImageSize->Full],
  Appearance->None,
  ButtonFunction:>(SelectionMove[
     InputNotebook[], All, ButtonCell]; NotebookWrite[
     InputNotebook[], 
     Cell[
      BoxData[""], "Input"]]; SelectionMove[
     InputNotebook[], Before, CellContents]; Null),
  Evaluator->Automatic,
  Method->"Preemptive"]], "Input",
 CellFrameLabels->{{None, None}, {None, None}},
 ShowSyntaxStyles->False,
 ShowStringCharacters->False,
 CellTags->"FirstInputCell"]
}, Open  ]]
}, Open  ]],

Cell[BoxData[
 PaneBox["\[ThickSpace]",
  ImageSize->Full]], "CodeSectionDividerCloud",
 Editable->False,
 Selectable->False,
 Deletable->False,
 CellMargins->{{0, 0}, {0, 35}},
 CellBracketOptions->{"OverlapContent"->True}]
},
WindowSize->{808, 911},
WindowMargins->{{554, Automatic}, {Automatic, 62}},
WindowTitle->"Partes de listas: Una introducci\[OAcute]n elemental a Wolfram \
Language",
DockedCells->{
  Cell[
   BoxData[
    DynamicModuleBox[{}, 
     TagBox[
      GridBox[{{
         TagBox[
          ButtonBox[
           PaneBox[
            GraphicsBox[
             TagBox[
              RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFAEiEGSIPafvQ3/iQM/qxmAiEjFmOohXKwIouDvuQXEGw4xENM6POaT5Hiq
qP97c+uvfvWfDVy/59j/ahX5Pdfx3/sHuNSDFE/UBpI/G3l+TTP9vS7p7+nZ
QBG4FjT1QJOBin+vCAcpaxcHWgEU/HOk7/ciHzzqgSYD2b/XJQO5UPFueezq
J+sDFf/qVQY64PeSgN8b0n5NMfz34DAu9T+beIFm/upV+jXF4PcC9z87K4C6
fk3SwaUeGBq/18QDDQQ5e2f5rw6pP0f7gd4BCmJVD3QG0HygBxHO61UG6sIV
nhAtwNAAOgCEgOEPMxmXevyAEvV4EidaQiU+P0IAAEIjNUM=
               "], {{0, 
               20}, {16, 0}}, {0, 255}, ColorFunction -> RGBColor], 
              BoxForm`ImageTag[
              "Byte", ColorSpace -> ColorProfileData[CompressedData["
1:eJydlndcFNcWx+/MbC+0XZYiZem9twVEehOQXkVh2V1gKQsuuxTFhogKRBQR
EWwgQQEDRkORWBHFQkCw14AEASUGo9hQyax8PokvL++9vPz+uJ/vnHvOnXvP
OXc+o5GQEZIIAwCyCOgQws5xFQrZeaEy6EO4IIufJOBxfQUiXhJPyEqAUKMP
BR0AxcefL8iAUa90gUgY4u3GjIqOYeL7AQyIAAcsAGBzsjIDQr3CJN6+nu7M
LNQJ/Ite3wKSBcF1E58gJhP8f5LlZApFAEBBKFtxeVkclAtRTssRZUrs0yjT
E1IlDGMkLEQ3iLKihJPm2fizzzy7SJibLuCiLNlzJjedK+EelDdni3koI/4o
F2XzeTko30BZO02czkf5rSQ2ncfOAgAjyY62iMdJRtlckihhWIg7ygsBIFCS
vuCEL1jEyxVJDuWekZkn5Ccli5j6HAOmhb09i+nDy0njiUQmQWxOKlvIZbpn
pGeyBXkAzJ/5s+QkuWWiSba1sLe1NbE0tfgiUf918m9KUtt5ehn8uWYQo+8P
21/5ZdQBwJpBc7PtD1vCbgA6NgKgeO8Pm/YBAKTRurUPfHEehqRfkkWiTAcz
s5ycHFM+j2MqSejv+p8Of0NfvM9Ustzv6WF68BLZ4jQRU5I3TkZahljIzMpk
c3hMkz838T8O/Ot9GIfwEnlCngCNiEC7jC9IQsst4PJF/AwBky/4T0X8h2F/
0nxfo6LVfwL0OFMgM0AHyM99AEMjAyR2HzoD/V43f2IEkNy8SPXx+b7/LOjf
V4XLJAP6Gfkc5x4SxuSIhdnzc5JrCbCABKQBHSgBNaAF9IEJsAR2wBG4AE+w
GASCMBANlgMOSAbpQAhyQD5YD4pACdgGdoJqsB/Ug0bQAo6BDnASnAMXwVVw
DdwE98EwGAPPwDR4DWYhCMJDVIgGKUHqkA5kBFlCLGgR5An5QyFQNBQPJUEC
SAzlQxugEqgcqoZqoUboW+gEdA66DA1Cd6ERaBL6FXoPIzAFpsOqsC5sBrNg
V9gPDoOXwUnwCnglXAhvhavgOvgI3A6fg6/CN+Fh+Bk8gwCEjDAQDcQEYSHu
SCASgyQiQmQNUoxUInVIC9KF9CLXkWFkCnmHwWFoGCbGBOOI8cGEYziYFZg1
mFJMNeYwph3Tg7mOGcFMYz5hqVgVrBHWAeuLjcImYXOwRdhKbAO2DXsBexM7
hn2Nw+EYOD2cHc4HF41Lwa3CleL24lpxZ3GDuFHcDB6PV8Ib4Z3wgXg2XoQv
wu/GH8GfwQ/hx/BvCWSCOsGS4EWIIQgIBYRKQhPhNGGIME6YJcoQdYgOxEAi
l5hHLCPWE7uIA8Qx4ixJlqRHciKFkVJI60lVpBbSBdID0ksymaxJticHk/nk
deQq8lHyJfII+R1FjmJIcafEUsSUrZRDlLOUu5SXVCpVl+pCjaGKqFupjdTz
1EfUt1I0KVMpXymu1FqpGql2qSGp59JEaR1pV+nl0iulK6WPSw9IT8kQZXRl
3GXYMmtkamROyNyWmZGlyVrIBsqmy5bKNslelp2Qw8vpynnKceUK5Q7KnZcb
pSE0LZo7jUPbQKunXaCN0XF0PbovPYVeQv+G3k+flpeTt5aPkM+Vr5E/JT/M
QBi6DF9GGqOMcYxxi/FeQVXBVYGnsEWhRWFI4Y3iAkUXRZ5isWKr4k3F90pM
JU+lVKXtSh1KD5UxyobKwco5yvuULyhPLaAvcFzAWVC84NiCeyqwiqFKiMoq
lYMqfSozqmqq3qqZqrtVz6tOqTHUXNRS1CrUTqtNqtPUF6nz1SvUz6g/Zcoz
XZlpzCpmD3NaQ0XDR0OsUavRrzGrqacZrlmg2ar5UIukxdJK1KrQ6taa1lbX
DtDO127WvqdD1GHpJOvs0unVeaOrpxupu0m3Q3dCT1HPV2+lXrPeA32qvrP+
Cv06/RsGOAOWQarBXoNrhrChjWGyYY3hgBFsZGvEN9prNGiMNbY3FhjXGd82
oZi4mmSbNJuMmDJM/U0LTDtMn5tpm8WYbTfrNftkbmOeZl5vft9CzmKxRYFF
l8WvloaWHMsayxtWVCsvq7VWnVYvrI2sedb7rO/Y0GwCbDbZdNt8tLWzFdq2
2E7aadvF2+2xu82is4JYpaxL9lh7N/u19ift3znYOogcjjn84mjimOrY5Dix
UG8hb2H9wlEnTSe2U63T8CLmovhFBxYNO2s4s53rnB+7aLlwXRpcxl0NXFNc
j7g+dzN3E7q1ub1xd3Bf7X7WA/Hw9ij26PeU8wz3rPZ85KXpleTV7DXtbeO9
yvusD9bHz2e7z21fVV+Ob6Pv9GK7xasX9/hR/EL9qv0e+xv6C/27AuCAxQE7
Ah4s0VkiWNIRCAJ9A3cEPgzSC1oR9H0wLjgouCb4SYhFSH5IbygtNC60KfR1
mFtYWdj9cP1wcXh3hHREbERjxJtIj8jyyOEos6jVUVejlaP50Z0x+JiImIaY
maWeS3cuHYu1iS2KvbVMb1nussvLlZenLT8VJx3Hjjsej42PjG+K/8AOZNex
ZxJ8E/YkTHPcObs4z7gu3AruJM+JV84bT3RKLE+cSHJK2pE0meycXJk8xXfn
V/NfpPik7E95kxqYeih1Li0yrTWdkB6ffkIgJ0gV9GSoZeRmDGYaZRZlDq9w
WLFzxbTQT9iQBWUty+oU0dGfqT6xvnijeCR7UXZN9tuciJzjubK5gty+PMO8
LXnjK71Wfr0Ks4qzqjtfI399/shq19W1a6A1CWu612qtLVw7ts573eH1pPWp
638oMC8oL3i1IXJDV6Fq4brC0Y3eG5uLpIqERbc3OW7avxmzmb+5f4vVlt1b
PhVzi6+UmJdUlnwo5ZRe+criq6qv5rYmbu0vsy3btw23TbDt1nbn7YfLZctX
lo/uCNjRXsGsKK54tTNu5+VK68r9u0i7xLuGq/yrOndr7962+0N1cvXNGrea
1j0qe7bsebOXu3don8u+lv2q+0v2vz/AP3Cn1ru2vU63rvIg7mD2wSf1EfW9
X7O+bmxQbihp+HhIcGj4cMjhnka7xsYmlaayZrhZ3Dx5JPbItW88vulsMWmp
bWW0lhwFR8VHn34b/+2tY37Huo+zjrd8p/PdnjZaW3E71J7XPt2R3DHcGd05
eGLxie4ux662702/P3RS42TNKflTZadJpwtPz51ZeWbmbObZqXNJ50a747rv
n486f6MnuKf/gt+FSxe9Lp7vde09c8np0snLDpdPXGFd6bhqe7W9z6av7Qeb
H9r6bfvbB+wGOq/ZX+saXDh4esh56Nx1j+sXb/jeuHpzyc3BW+G37tyOvT18
h3tn4m7a3Rf3su/N3l/3APug+KHMw8pHKo/qfjT4sXXYdvjUiMdI3+PQx/dH
OaPPfsr66cNY4RPqk8px9fHGCcuJk5Nek9eeLn069izz2exU0c+yP+95rv/8
u19cfumbjpoeeyF8Mfdr6Uull4deWb/qngmaefQ6/fXsm+K3Sm8Pv2O9630f
+X58NucD/kPVR4OPXZ/8Pj2YS5+b+w0AsgC3
                 "], "RGB", "XYZ"], 
               Interleaving -> True], Selectable -> False], DefaultBaseStyle -> 
             "ImageGraphics", ImageSizeRaw -> {16, 20}, 
             PlotRange -> {{0, 16}, {0, 20}}], Alignment -> {Center, Center}, 
            ImageMargins -> {{15, 10}, {4, 0}}], Appearance -> None, 
           ButtonFunction :> NotebookLocate[{
              URL[
               StringJoin[
               ElementaryIntroToWLWeb`Private`baseUrl$73165, "index", 
                ElementaryIntroToWLWeb`Private`langext$73165, ".html"]], 
              None}], Evaluator -> Automatic, Method -> "Preemptive"], 
          MouseAppearanceTag["LinkHand"]], 
         ItemBox[
          TagBox[
           GridBox[{{
              TagBox[
               ButtonBox[
                StyleBox[
                 StringJoin["STEPHEN WOLFRAM\[NonBreakingSpace]", 
                  ElementaryIntroToWLWeb`Private`translation[
                  "Elementary Introduction to the Wolfram Language", 
                   ElementaryIntroToWLWeb`Private`language$73165]], 
                 "DockedCellAuthorName"], Appearance -> None, ButtonFunction :> 
                NotebookLocate[{
                   URL[
                    StringJoin[
                    ElementaryIntroToWLWeb`Private`baseUrl$73165, "index", 
                    ElementaryIntroToWLWeb`Private`langext$73165, ".html"]], 
                   None}], Evaluator -> Automatic, Method -> "Preemptive"], 
               MouseAppearanceTag["LinkHand"]]}, {
              TagBox[
               ButtonBox[
                TemplateBox[{
                  StyleBox["Exercises ", "DockedCellSectionTitle"], 
                  StyleBox["|", "DockedCellSectionTitleDivider"], 
                  StyleBox[
                  " 31  Partes de listas", "DockedCellSectionTitle"]}, 
                 "RowDefault"], Appearance -> None, ButtonFunction :> 
                NotebookLocate[{
                   URL[
                   "http://www.wolfram.com/language/elementary-introduction/\
31-parts-of-lists.html"], None}], Evaluator -> Automatic, Method -> 
                "Preemptive"], 
               MouseAppearanceTag["LinkHand"]]}}, DefaultBaseStyle -> 
            "Column", GridBoxAlignment -> {"Columns" -> {{Left}}}, 
            GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{0}}}], 
           "Column"], Alignment -> Left, ItemSize -> 30]}}, AutoDelete -> 
       False, GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{0}}}, 
       GridBoxAlignment -> {"Columns" -> {Left}, "Rows" -> {Center}}, 
       GridBoxItemSize -> {
        "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Grid"], 
     DynamicModuleValues :> {}, 
     Initialization :> (
      Clear[$CellContext`SolutionResponseText]; \
$CellContext`SolutionResponseText[
         Pattern[ElementaryIntroToWLWeb`Private`a, 
          BlankNullSequence[]]] := " "; 
      Map[($CellContext`SolutionResponseText[#] := " ")& , {
        "31.1", "31.10", "31.11", "31.12", "31.13", "31.2", "31.3", "31.4", 
         "31.5", "31.6", "31.7", "31.8", "31.9"}]; 
      Clear[$CellContext`SolutionResponseDetails]; \
$CellContext`SolutionResponseDetails[
         Pattern[ElementaryIntroToWLWeb`Private`str, 
          Blank[String]], True] := 
       Style[ElementaryIntroToWLWeb`Private`str, 
         "SolutionTrue"]; $CellContext`SolutionResponseDetails[
         Pattern[ElementaryIntroToWLWeb`Private`str, 
          Blank[String]], False] := 
       Style[ElementaryIntroToWLWeb`Private`str, 
         "SolutionFalse"]; $CellContext`SolutionResponseDetails[
         Pattern[ElementaryIntroToWLWeb`Private`str, 
          Blank[String]]] := 
       ElementaryIntroToWLWeb`Private`str; \
$CellContext`SolutionResponseDetails[
         Missing[
          BlankSequence[]]] := " "; $CellContext`SolutionResponseDetails[
         BlankNullSequence[]] := " "; 
      Clear[$CellContext`GetUserSolutions]; $CellContext`GetUserSolutions[] := 
       Flatten[
         Cases[
          Options[
           EvaluationNotebook[], TaggingRules], ("EIWLExercises" -> 
           Pattern[ElementaryIntroToWLWeb`Private`ex, 
             Blank[]]) :> ElementaryIntroToWLWeb`Private`ex, Infinity]]; 
      Clear[$CellContext`GetUserSolutionsTotal]; \
$CellContext`GetUserSolutionsTotal[] := Length[
         Union[
          Flatten[
           Cases[
            Cases[
             Options[
              EvaluationNotebook[], TaggingRules], ("EIWLExercises" -> 
              Pattern[ElementaryIntroToWLWeb`Private`ex, 
                Blank[]]) :> ElementaryIntroToWLWeb`Private`ex, Infinity], (
             "ExercisesTotal" -> Pattern[ElementaryIntroToWLWeb`Private`t, 
               Blank[]]) :> ElementaryIntroToWLWeb`Private`t, Infinity]]]]; 
      Clear[$CellContext`GetUserSolutionsTried]; \
$CellContext`GetUserSolutionsTried[] := Length[
         Union[
          Flatten[
           Cases[
            Cases[
             Options[
              EvaluationNotebook[], TaggingRules], ("EIWLExercises" -> 
              Pattern[ElementaryIntroToWLWeb`Private`ex, 
                Blank[]]) :> ElementaryIntroToWLWeb`Private`ex, Infinity], (
             "ExercisesTried" -> Pattern[ElementaryIntroToWLWeb`Private`t, 
               Blank[]]) :> ElementaryIntroToWLWeb`Private`t, Infinity]]]]; 
      Clear[$CellContext`GetUserSolutionsCorrect]; \
$CellContext`GetUserSolutionsCorrect[] := Length[
         Union[
          Flatten[
           Cases[
            Cases[
             Options[
              EvaluationNotebook[], TaggingRules], ("EIWLExercises" -> 
              Pattern[ElementaryIntroToWLWeb`Private`ex, 
                Blank[]]) :> ElementaryIntroToWLWeb`Private`ex, Infinity], (
             "ExercisesCorrect" -> Pattern[ElementaryIntroToWLWeb`Private`t, 
               Blank[]]) :> ElementaryIntroToWLWeb`Private`t, 
            Infinity]]]]; $CellContext`EIWLExerciseSolutionsTotal = \
$CellContext`GetUserSolutionsTotal[]; $CellContext`EIWLExerciseSolutionsTried = \
$CellContext`GetUserSolutionsTried[]; \
$CellContext`EIWLExerciseSolutionsCorrect = \
$CellContext`GetUserSolutionsCorrect[]; 
      Clear[$CellContext`SetUserSolutionsTried]; \
$CellContext`SetUserSolutionsTried[
         Pattern[ElementaryIntroToWLWeb`Private`value, 
          Blank[]]] := 
       Module[{ElementaryIntroToWLWeb`Private`data, 
          ElementaryIntroToWLWeb`Private`tr}, 
         ElementaryIntroToWLWeb`Private`data = Flatten[
            Cases[
             Options[
              EvaluationNotebook[], TaggingRules], ("EIWLExercises" -> 
              Pattern[ElementaryIntroToWLWeb`Private`ex, 
                Blank[]]) :> ElementaryIntroToWLWeb`Private`ex, Infinity]]; 
         ElementaryIntroToWLWeb`Private`tr = ReplaceAll[TaggingRules, 
            Options[
             EvaluationNotebook[], TaggingRules]]; 
         ElementaryIntroToWLWeb`Private`tr = 
          DeleteCases[
           ElementaryIntroToWLWeb`Private`tr, "EIWLExercises" -> Blank[], 
            Infinity]; 
         AppendTo[
          ElementaryIntroToWLWeb`Private`tr, 
           "EIWLExercises" -> {
            "ExercisesTotal" -> 
             ReplaceAll[
              "ExercisesTotal", ElementaryIntroToWLWeb`Private`data], 
             "ExercisesTried" -> Append[
               Flatten[
                Cases[
                ElementaryIntroToWLWeb`Private`data, ("ExercisesTried" -> 
                  Pattern[ElementaryIntroToWLWeb`Private`t, 
                    Blank[]]) :> ElementaryIntroToWLWeb`Private`t, Infinity]],
                ElementaryIntroToWLWeb`Private`value], "ExercisesCorrect" -> 
             ReplaceAll[
              "ExercisesCorrect", ElementaryIntroToWLWeb`Private`data]}]; 
         SetOptions[
           EvaluationNotebook[], TaggingRules -> 
           ElementaryIntroToWLWeb`Private`tr]; \
$CellContext`EIWLExerciseSolutionsTried = \
$CellContext`GetUserSolutionsTried[]; Null]; 
      Clear[$CellContext`SetUserSolutionsCorrect]; \
$CellContext`SetUserSolutionsCorrect[
         Pattern[ElementaryIntroToWLWeb`Private`value, 
          Blank[]]] := 
       Module[{ElementaryIntroToWLWeb`Private`data, 
          ElementaryIntroToWLWeb`Private`tr}, 
         ElementaryIntroToWLWeb`Private`data = Flatten[
            Cases[
             Options[
              EvaluationNotebook[], TaggingRules], ("EIWLExercises" -> 
              Pattern[ElementaryIntroToWLWeb`Private`ex, 
                Blank[]]) :> ElementaryIntroToWLWeb`Private`ex, Infinity]]; 
         ElementaryIntroToWLWeb`Private`tr = ReplaceAll[TaggingRules, 
            Options[
             EvaluationNotebook[], TaggingRules]]; 
         ElementaryIntroToWLWeb`Private`tr = 
          DeleteCases[
           ElementaryIntroToWLWeb`Private`tr, "EIWLExercises" -> Blank[], 
            Infinity]; 
         AppendTo[
          ElementaryIntroToWLWeb`Private`tr, 
           "EIWLExercises" -> {
            "ExercisesTotal" -> 
             ReplaceAll[
              "ExercisesTotal", ElementaryIntroToWLWeb`Private`data], 
             "ExercisesTried" -> 
             ReplaceAll[
              "ExercisesTried", ElementaryIntroToWLWeb`Private`data], 
             "ExercisesCorrect" -> Append[
               Flatten[
                Cases[
                ElementaryIntroToWLWeb`Private`data, ("ExercisesCorrect" -> 
                  Pattern[ElementaryIntroToWLWeb`Private`t, 
                    Blank[]]) :> ElementaryIntroToWLWeb`Private`t, Infinity]],
                ElementaryIntroToWLWeb`Private`value]}]; SetOptions[
           EvaluationNotebook[], TaggingRules -> 
           ElementaryIntroToWLWeb`Private`tr]; \
$CellContext`EIWLExerciseSolutionsCorrect = \
$CellContext`GetUserSolutionsCorrect[]; Null]; 
      Clear[ElementaryIntroToWLWeb`Private`GetCurrentTallyCell]; \
$CellContext`GetCurrentTallyCell[] := Module[{}, 
         With[{
          ElementaryIntroToWLWeb`Private`solutionsTried = \
$CellContext`GetUserSolutionsTried[], 
           ElementaryIntroToWLWeb`Private`solutionsTotal = \
$CellContext`GetUserSolutionsTotal[], 
           ElementaryIntroToWLWeb`Private`solutionsCorrect = \
$CellContext`GetUserSolutionsCorrect[]}, 
          Cell[
           BoxData[
            PaneBox[
             TemplateBox[{
               StyleBox[
               "COMPLETED\[ThickSpace]\[ThickSpace]", 
                "DockedCellCompletedExerciseText"], 
               StyleBox[
               ElementaryIntroToWLWeb`Private`solutionsTried, 
                "DockedCellCompletedExerciseText"], 
               StyleBox["/", "DockedCellSolutionDivider"], 
               StyleBox[
               ElementaryIntroToWLWeb`Private`solutionsTotal, 
                "DockedCellCompletedExerciseText"], 
               StyleBox[
               "\[ThinSpace]|\[ThinSpace]", "DockedCellSolutionDivider"], 
               StyleBox[
               ElementaryIntroToWLWeb`Private`solutionsCorrect, 
                "DockedCellCorrectExerciseText"], 
               StyleBox[
               "\[ThickSpace]\[ThickSpace]CORRECT", 
                "DockedCellCorrectExerciseText"]}, "RowDefault"], Alignment -> 
             Right, ImageSize -> Full]], "Output", TextAlignment -> Right, 
           CellFrame -> 1, CellMargins -> {{0, 0}, {10, 0}}, 
           CellFrameMargins -> {{14, 24}, {4, 7}}, CellFrameColor -> 
           RGBColor[1, 0.956862, 0.878431], MenuSortingValue -> 10000, 
           Background -> RGBColor[1, 0.956862, 0.878431], CellTags -> 
           "SolutionTallyCell"]]])]], "Output", CellMargins -> 0, 
   CellFrameMargins -> {{0, 24}, {3, 6}}, Background -> 
   RGBColor[0.97647, 0.482352, 0], CellFrame -> 1, CellFrameColor -> 
   RGBColor[0.97647, 0.482352, 0]], 
  Cell["SECOND EDITION", "Text", FontFamily -> "Source Sans Pro", 
   CellFrame -> {{0, 0}, {3, 0}}, ShowCellBracket -> False, 
   CellMargins -> {{0, 0}, {-1, -1}}, CellFrameMargins -> {{44, 0}, {2, 4}}, 
   CellFrameColor -> RGBColor[0.952941, 0.509804, 0], FontSize -> 10, 
   FontTracking -> "Extended", FontColor -> RGBColor[1, 0.929412, 0.721569], 
   Background -> RGBColor[0.862745, 0.309804, 0], CellTags -> 
   "DockedCellLogoCell"]},
TaggingRules->{
 "EIWLExercises" -> {
   "ExercisesTotal" -> {
     "31.1", "31.10", "31.11", "31.12", "31.13", "31.2", "31.3", "31.4", 
      "31.5", "31.6", "31.7", "31.8", "31.9"}, "ExercisesTried" -> {}, 
    "ExercisesCorrect" -> {}}},
ShowAutoSpellCheck->False,
AutoStyleOptions->{"HighlightMisspelledWords"->False},
FrontEndVersion->"11.3 for Mac OS X x86 (32-bit, 64-bit Kernel) (March 5, \
2018)",
StyleDefinitions->Notebook[{
   Cell[
    StyleData[StyleDefinitions -> "Default.nb"]], 
   Cell[
    CellGroupData[{
      Cell[
      "Style Environments", "Section", 
       CellChangeTimes -> {{3.64661165091824*^9, 3.646611654013329*^9}, 
         3.6485723794335403`*^9, 3.651347081728628*^9, 3.651347179462186*^9, 
         3.651347384135805*^9, 3.651348171662589*^9, {3.662385415502224*^9, 
         3.662385415587447*^9}, {3.662385986094821*^9, 
         3.662385986340312*^9}, {3.662386515144682*^9, 
         3.662386515438078*^9}, {3.662386561676188*^9, 
         3.662386561889332*^9}, {3.668356126688795*^9, 
         3.6683561270120687`*^9}, {3.670169943059537*^9, 
         3.670169943254141*^9}}], 
      Cell[
       StyleData[All, "Working"]], 
      Cell[
       StyleData[All, "Printout"], 
       PrintingOptions -> {
        "PageSize" -> {504, 720}, "PrintRegistrationMarks" -> True}, 
       Magnification -> 0.6]}, Closed]], 
   Cell[
    CellGroupData[{
      Cell[
      "Custom Styles", "Section", 
       CellChangeTimes -> {{3.646611660445352*^9, 3.646611669493331*^9}}], 
      Cell[
       StyleData["Notebook"], CreateCellID -> True, CellContext -> Notebook, 
       CellLabelAutoDelete -> False, DefaultNewCellStyle -> "Input", 
       ShowSyntaxStyles -> True, MenuSortingValue -> None], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["Title"], CellMargins -> {{64, Inherited}, {50, 72}}, 
          MenuCommandKey -> None, FontFamily -> "Verdana", FontSize -> 42, 
          FontWeight -> "Bold", FontColor -> GrayLevel[0.4]], 
         Cell[
          StyleData["Title", "Printout"], 
          CellMargins -> {{64, Inherited}, {50, 72}}]}, Closed]], 
      Cell[
       StyleData["Chapter"], MenuCommandKey -> None], 
      Cell[
       StyleData["Subchapter"], MenuCommandKey -> None], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["Section"], CellFrame -> {{0, 0}, {0, 0}}, CellDingbat -> 
          Cell[
            TextData[
             CounterBox["Section"], 
             StyleBox[
             "|\[NegativeThinSpace]", FontColor -> 
              RGBColor[
               0.9019607843137255, 0.4117647058823529, 0.027450980392156862`],
               FontFamily -> "Courier", FontSize -> 36, FontWeight -> Plain]],
             "SectionNumber"], CellMargins -> {{96, Inherited}, {12, 64}}, 
          Evaluatable -> True, CellGroupingRules -> {"SectionGrouping", 60}, 
          PageBreakAbove -> True, ShowCellLabel -> False, 
          CellFrameLabelMargins -> {{2, Inherited}, {Inherited, Inherited}}, 
          CellChangeTimes -> {3.652728456208679*^9, 3.652728527108994*^9}, 
          CounterIncrements -> "Section", 
          CounterAssignments -> {{"Subsection", 0}, {"Subsubsection", 0}, {
            "Exercise", 0}}, FontFamily -> "Source Sans Pro Semibold", 
          FontSize -> 26, FontSlant -> "Plain", FontColor -> 
          RGBColor[
           0.9019607843137255, 0.4117647058823529, 0.027450980392156862`], 
          InterpretationBoxOptions -> {Editable -> True}], 
         Cell[
          StyleData["Section", "Printout"], 
          CellMargins -> {{96, Inherited}, {12, 2}}]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["SectionDoubleDigit"], CellFrame -> {{0, 0}, {0, 0}}, 
          CellDingbat -> Cell[
            TextData[
             CounterBox["Section"], 
             StyleBox[
             "|\[NegativeThinSpace]", FontColor -> 
              RGBColor[
               0.9019607843137255, 0.4117647058823529, 0.027450980392156862`],
               FontFamily -> "Courier", FontSize -> 36, FontWeight -> Plain]],
             "SectionNumber"], CellMargins -> {{112, Inherited}, {12, 64}}, 
          Evaluatable -> True, CellGroupingRules -> {"SectionGrouping", 60}, 
          PageBreakAbove -> True, ShowCellLabel -> False, 
          CellFrameLabelMargins -> {{2, Inherited}, {Inherited, Inherited}}, 
          CellChangeTimes -> {3.652728456208679*^9, 3.652728527108994*^9}, 
          CounterIncrements -> "Section", 
          CounterAssignments -> {{"Subsection", 0}, {"Subsubsection", 0}, {
            "Exercise", 0}}, FontFamily -> "Source Sans Pro Semibold", 
          FontSize -> 26, FontSlant -> "Plain", FontColor -> 
          RGBColor[
           0.9019607843137255, 0.4117647058823529, 0.027450980392156862`], 
          InterpretationBoxOptions -> {Editable -> True}], 
         Cell[
          StyleData["SectionDoubleDigit", "Printout"], 
          CellMargins -> {{112, Inherited}, {12, 2}}]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["SectionNumber"], CellBaseline -> Baseline, FontFamily -> 
          "Source Sans Pro Semibold", FontSize -> 26, FontColor -> 
          RGBColor[
           0.9019607843137255, 0.4117647058823529, 0.027450980392156862`]], 
         Cell[
          StyleData["SectionNumber", "Printout"]]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["SectionInline"], FontFamily -> 
          "Source Sans Pro Semibold", FontColor -> 
          RGBColor[
           0.9019607843137255, 0.4117647058823529, 0.027450980392156862`]], 
         Cell[
          StyleData["SectionInline", "Printout"]]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["SectionNoDingbat"], 
          CellMargins -> {{64, Inherited}, {12, 64}}, Evaluatable -> True, 
          CellGroupingRules -> {"SectionGrouping", 60}, PageBreakAbove -> 
          True, ShowCellLabel -> False, 
          CellFrameLabelMargins -> {{2, Inherited}, {Inherited, Inherited}}, 
          CellChangeTimes -> {3.652728456208679*^9, 3.652728527108994*^9}, 
          CounterIncrements -> "Section", 
          CounterAssignments -> {{"Subsection", 0}, {"Subsubsection", 0}, {
            "Exercise", 0}}, FontFamily -> "Source Sans Pro Semibold", 
          FontSize -> 26, FontSlant -> "Plain", FontColor -> 
          RGBColor[
           0.9019607843137255, 0.4117647058823529, 0.027450980392156862`], 
          InterpretationBoxOptions -> {Editable -> True}], 
         Cell[
          StyleData["SectionNoDingbat", "Printout"], 
          CellMargins -> {{64, Inherited}, {12, 2}}]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["Exercise"], CellDingbat -> Cell[
            TextData[{"  ", 
              CounterBox["Section"], ".", 
              CounterBox["Exercise"]}], "ExerciseNumber", FontColor -> 
            RGBColor[
             0.9019607843137255, 0.4117647058823529, 0.027450980392156862`]], 
          ShowGroupOpener -> True, CellMargins -> {{90, 40}, {4, 18}}, 
          CellGroupingRules -> "InputGrouping", CounterIncrements -> 
          "Exercise", MenuSortingValue -> 10020, MenuCommandKey -> "2", 
          FontFamily -> "Source Sans Pro", FontSize -> 16, FontWeight -> 
          "Plain", FontSlant -> "Plain", FontColor -> GrayLevel[0.25]], 
         Cell[
          StyleData["Exercise", "Printout"], ShowGroupOpener -> False, 
          CellMargins -> {{110, Inherited}, {4, 8}}]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["ExerciseNumber"], FontFamily -> "Source Sans Pro", 
          FontSize -> 16, FontWeight -> "Bold", FontColor -> GrayLevel[0.25]], 
         Cell[
          StyleData["ExerciseNumber", "Printout"]]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["ExerciseInput", StyleDefinitions -> StyleData["Input"]], 
          CellMargins -> {{70, 30}, {4, 7}}, ShowCellLabel -> False, 
          CellFrameLabels -> {{None, None}, {None, None}}, SpanMaxSize -> 1, 
          FontSize -> 
          14, $CellContext`GeneratedCellStyles -> {
           "Output" -> "ExerciseOutput"}], 
         Cell[
          StyleData["ExerciseInput", "Printout"], 
          CellMargins -> {{88, 10}, {4, 7}}]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData[
          "ExerciseOutput", StyleDefinitions -> StyleData["Output"]], 
          CellMargins -> {{90, 40}, {0, 6}}, CellGroupingRules -> 
          "OutputGrouping", ShowCellLabel -> False, FontSize -> 14], 
         Cell[
          StyleData["ExerciseOutput", "Printout"], 
          CellMargins -> {{88, 10}, {10, 4}}]}, Closed]], 
      Cell[
       StyleData["ExerciseExpectedResult"], ShowCellBracket -> False, 
       ShowGroupOpener -> False, CellMargins -> {{90, 40}, {3, 9}}, 
       CellGroupingRules -> "InputGrouping", CounterIncrements -> "Exercise", 
       MenuSortingValue -> 10000, FontFamily -> "Source Sans Pro", FontSize -> 
       12, FontWeight -> "Plain", FontSlant -> "Plain"], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["Picture"], CellMargins -> {{66, 10}, {10, 10}}, 
          CellGroupingRules -> "GraphicsGrouping", StyleMenuListing -> None], 
         
         Cell[
          StyleData["Picture", "Printout"], 
          CellMargins -> {{66, 10}, {8, 8}}]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["Tentative"], 
          CellBracketOptions -> {
           "Color" -> RGBColor[
             0.30000000000000016`, 0.6000000000000003, 0.7000000000000003], 
            "Thickness" -> 5}, Evaluatable -> False, CellFrameMargins -> 4, 
          StyleMenuListing -> None, Background -> 
          RGBColor[0.8500000000000003, 0.9500000000000003, 1]], 
         Cell[
          StyleData["Tentative", "Printout"], 
          CellElementSpacings -> {"CellMinHeight" -> 0.1}, CellOpen -> False, 
          CellFrameMargins -> 0, FontSize -> 0.1, Magnification -> 0.01]}, 
        Closed]], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["WebOnly"], 
          CellBracketOptions -> {
           "Color" -> RGBColor[0.91, 0.92, 0.9], "Thickness" -> 5}, 
          CellFrameMargins -> 4, StyleMenuListing -> None, Background -> 
          RGBColor[0.91, 0.92, 0.86]], 
         Cell[
          StyleData["WebOnly", "Printout"], 
          CellElementSpacings -> {"CellMinHeight" -> 0.1}, CellOpen -> False, 
          CellFrameMargins -> 0, FontSize -> 0.1, Magnification -> 0.01]}, 
        Closed]], 
      Cell[
       StyleData["Lockdown"], 
       CellBracketOptions -> {
        "Color" -> RGBColor[0.8, 0.5, 0.4], "Thickness" -> 3}, Evaluatable -> 
       False, StyleMenuListing -> None], 
      Cell[
       StyleData["InlineCode"], SpanMaxSize -> 0, FontColor -> GrayLevel[0]], 
      
      Cell[
       StyleData["ExpectedOutputNote"], Selectable -> False, FontFamily -> 
       "Source Sans Pro", FontColor -> GrayLevel[0.3]], 
      Cell[
       StyleData["EIWLTextLink"], LineBreakWithin -> False, 
       TemplateBoxOptions -> {DisplayFunction :> (TagBox[
           
           ButtonBox[#, Appearance -> None, ButtonData -> #2, 
            BaseStyle -> {
             "Hyperlink", FontWeight -> Bold, FontSize -> 16, FontFamily -> 
              "Source Sans Pro"}], 
           MouseAppearanceTag["LinkHand"]]& )}, 
       ButtonBoxOptions -> {Appearance -> None, BaseStyle -> "Link"}], 
      Cell[
       StyleData["CheckAnswerDividerCloud"], ShowCellBracket -> False, 
       CellMargins -> {{40, 40}, {3, 6}}, 
       CellBracketOptions -> {"OverlapContent" -> True}, 
       CellGroupingRules -> {"SectionGrouping", 40}, 
       CellFrameMargins -> {{20, 20}, {2, 2}}, TextAlignment -> Right], 
      Cell[
       StyleData["CodeSectionDividerCloud"], Editable -> False, Selectable -> 
       False, ShowCellBracket -> False, CellMargins -> {{0, 0}, {0, 35}}, 
       CellBracketOptions -> {"OverlapContent" -> True}, 
       CellElementSpacings -> {"CellMinHeight" -> 6}, 
       CellGroupingRules -> {"SectionGrouping", -5}, 
       CellFrameMargins -> {{20, 20}, {2, 2}}, DefaultNewCellStyle -> "Input",
        FontSize -> 6, Background -> GrayLevel[0.95]], 
      Cell[
       StyleData["InlineCode"], SpanMaxSize -> 0, FontColor -> GrayLevel[0]], 
      
      Cell[
       StyleData["InlineCodeText"], SpanMaxSize -> 0, FontFamily -> 
       "Source Sans Pro"], 
      Cell[
       StyleData["Input"], CellMargins -> {{92, 20}, {5, 8}}, 
       CellFrameLabels -> {{None, 
          DynamicModuleBox[{$CellContext`EIWLExerciseCheck = 
            Automatic, $CellContext`buttonLabel = " CHECK MY SOLUTION "}, 
           DynamicBox[
            ToBoxes[
             If[
              TrueQ[$CellContext`EIWLExerciseCheck == Automatic], 
              MouseAppearance[
               Tooltip[
                Button[
                 Framed[
                  Panel[
                   
                   Style[$CellContext`buttonLabel, FontFamily -> 
                    "Source Sans Pro", FontSize -> 10, FontColor -> 
                    RGBColor[0.953948, 0.305638, 0.0285344]], Appearance -> 
                   None, Background -> GrayLevel[1], 
                   FrameMargins -> {{2, 2}, {0, 0}}, ImageMargins -> 0], 
                  FrameStyle -> {
                    Thickness[Tiny], 
                    RGBColor[0.953948, 0.305638, 0.0285344]}, RoundingRadius -> 
                  3], 
                 
                 Block[{$CellContext`usersCell, $CellContext`solutionResult, \
$CellContext`exerciseNumber, $CellContext`exerciseSwitchResult}, \
$CellContext`exerciseNumber = StringJoin[
                    If[
                    TrueQ[CurrentValue[{"CounterValue", "WebOnly"}] == 1], 
                    "x", ""], 
                    ToString[
                    CurrentValue[{"CounterValue", "SectionNumber"}]], ".", 
                    ToString[
                    
                    CurrentValue[{
                    "CounterValue", 
                    "ExerciseNumber"}]]]; $CellContext`buttonLabel = 
                   Row[{" CHECKING ", 
                    ProgressIndicator[Appearance -> "Percolate"]}]; 
                  SelectionMove[
                    ButtonNotebook[], All, ButtonCell, AutoScroll -> 
                    False]; $CellContext`usersCell = NotebookRead[
                    InputNotebook[]]; If[
                    TrueQ[Length[
                    Flatten[{$CellContext`usersCell}]] == 
                    1], $CellContext`solutionResult = ToExpression[
                    URLFetch[
                    "https://www.wolframcloud.com/objects/user-9b23d046-b2a9-\
4a5c-8723-08465cce25ed/EIWLGradingAPI", "Method" -> "POST", 
                    "Parameters" -> {
                    "exNum" -> $CellContext`exerciseNumber, "answer" -> 
                    ToString[$CellContext`usersCell, InputForm, 
                    CharacterEncoding -> "ASCII"], "user" -> 
                    ToString[$WolframID], "referer" -> "eiwl-nb", "uuid" -> 
                    ToString[$WolframUUID]}]]; \
$CellContext`SolutionResponseText[$CellContext`exerciseNumber] = \
$CellContext`SolutionResponseDetails[
                    $CellContext`solutionResult["Text"], 
                    $CellContext`solutionResult[
                    "CorrectQ"]]; $CellContext`exerciseSwitchResult = Switch[
                    $CellContext`solutionResult["CorrectQ"], 
                    True, $CellContext`EIWLExerciseCheck = 
                    True; $CellContext`SetUserSolutionsCorrect[$CellContext`\
exerciseNumber]; \
$CellContext`SetUserSolutionsTried[$CellContext`exerciseNumber]; Null, 
                    
                    Blank[], $CellContext`EIWLExerciseCheck = 
                    False; $CellContext`SetUserSolutionsTried[$CellContext`\
exerciseNumber]], 
                    CloudSystem`CreateCloudDialog[
                    StyleBox[
                    "Select a cell to be checked.", Selectable -> False], 
                    WindowTitle -> " "]]], Appearance -> None, Evaluator -> 
                 Automatic, Method -> "Queued"], 
                "Click to check your solution.", TooltipDelay -> 0.15], 
               "LinkHand"], 
              If[
               TrueQ[$CellContext`EIWLExerciseCheck], 
               MouseAppearance[
                Button[
                 Framed[
                  Row[{
                    Panel[
                    Style[
                    ToExpression[
                    "\!\(\* GraphicsBox[ TagBox[RasterBox[CompressedData[\" \
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBLECOU2VJahIzkCECxFJADGKrbtYa \
RUMUpZzMcNnnQRWjMk5lf/vzDWggtYwCkgNiFDBAsPqCPFcBjcLURYkH0fRS \
HlZwE6gV7EATfvz98f3Pd6rEIBClncpMPZlJFaNGEd0QANRpOvM= \"], {{0, 20}, { 26, \
0}}, {0, 255}, ColorFunction->RGBColor], BoxForm`ImageTag[ \"Byte\", \
Interleaving -> True, Magnification -> 1], Selectable->False], \
BaseStyle->\"ImageGraphics\", ImageSize->Magnification[1], ImageSizeRaw->{26, \
20}, PlotRange->{{0, 26}, {0, 20}}]\)"], Selectable -> False], Background -> 
                    RGBColor[0.146944, 0.70164, 0.16466], 
                    FrameMargins -> {{5, 5}, {0, 0}}, ImageMargins -> 0, 
                    Appearance -> None], 
                    Panel[
                    Style[
                    " CORRECT ", FontSize -> 10, FontColor -> 
                    RGBColor[0.146944, 0.70164, 0.16466], FontFamily -> 
                    "Source Sans Pro"], Background -> White, 
                    FrameMargins -> {{5, 5}, {0, 0}}, Appearance -> None]}], 
                  FrameStyle -> {
                    Thickness[Tiny], 
                    RGBColor[0.146944, 0.70164, 0.16466]}, FrameMargins -> 0, 
                  RoundingRadius -> 3], $CellContext`buttonLabel = 
                  " CHECK MY SOLUTION "; $CellContext`EIWLExerciseCheck = 
                  Automatic, Appearance -> None], "LinkHand"], 
               MouseAppearance[
                Button[
                 Framed[
                  Row[{
                    Panel[
                    Style[
                    ToExpression[
                    "\!\(\* GraphicsBox[ TagBox[RasterBox[CompressedData[\" \
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBLECOU2VJahIzkCECxGJADGK/YtAZ \
RTRCb1W8PnhlYooDBYFSxJgAVPnvy7cPfrkogn65IEFsJmM3BKIeZggal1RD \
yNOOMOT7DyAiTzvlJlDoCwpDkvLYpDxFjSLyEAAHORZk \"], {{0, 20}, {22, 0}}, { 0, \
255}, ColorFunction->RGBColor], BoxForm`ImageTag[ \"Byte\", Interleaving -> \
True, Magnification -> 1], Selectable->False], BaseStyle->\"ImageGraphics\", \
ImageSize->Magnification[1], ImageSizeRaw->{22, 20}, PlotRange->{{0, 22}, {0, \
20}}]\)"], Selectable -> False], Background -> 
                    RGBColor[0.918257, 0, 0.172488], 
                    FrameMargins -> {{5, 5}, {0, 0}}, ImageMargins -> 0, 
                    Appearance -> None], 
                    Panel[
                    Style[
                    " TRY AGAIN ", FontSize -> 10, FontColor -> 
                    RGBColor[0.918257, 0, 0.172488], FontFamily -> 
                    "Source Sans Pro"], Background -> White, 
                    FrameMargins -> {{5, 5}, {0, 0}}, Appearance -> None]}], 
                  FrameStyle -> {
                    Thickness[Tiny], 
                    RGBColor[0.918257, 0, 0.172488]}, FrameMargins -> 0, 
                  RoundingRadius -> 3], $CellContext`buttonLabel = 
                  " CHECK MY SOLUTION "; $CellContext`EIWLExerciseCheck = 
                  Automatic, Appearance -> None], "LinkHand"]]], 
             StandardForm], ImageSizeCache -> {109., {9., 16.}}], 
           DynamicModuleValues :> {}]}, {None, None}}, 
       CellChangeTimes -> {{3.6688095471029243`*^9, 3.66880959932793*^9}}, 
       MenuSortingValue -> 10000, FontSize -> 15], 
      Cell[
       StyleData["Output"], Deletable -> True, ShowCellBracket -> True, 
       CellMargins -> {{92, 50}, {10, 5}}, 
       CellBracketOptions -> {"OverlapContent" -> True}, CellEditDuplicate -> 
       True, GeneratedCell -> True, CellAutoOverwrite -> True, 
       LinebreakAdjustments -> {1, 2., 12., 1.25, 1.}, MenuSortingValue -> 
       None, FontSize -> 15], 
      Cell[
       StyleData["Message"], 
       CellMargins -> {{92, Inherited}, {Inherited, Inherited}}], 
      Cell[
       StyleData["EmptyCell"], Editable -> False, Selectable -> False, 
       CellMargins -> {{0, 0}, {-2, 0}}, 
       CellElementSpacings -> {"CellMinHeight" -> 1}, MenuSortingValue -> 
       10000, FontSize -> 1], 
      Cell[
       StyleData["CellLabel"], MenuSortingValue -> 10000, FontColor -> 
       GrayLevel[0.6]], 
      Cell[
       StyleData["Link"], LineBreakWithin -> False, 
       TemplateBoxOptions -> {DisplayFunction :> (TagBox[
           
           ButtonBox[#, Appearance -> None, ButtonData -> #2, 
            BaseStyle -> {
             "Hyperlink", FontSize -> 15, FontFamily -> "Source Sans Pro"}], 
           MouseAppearanceTag["LinkHand"]]& )}, 
       ButtonBoxOptions -> {Appearance -> None, BaseStyle -> "Link"}], 
      Cell[
       StyleData["ExpectedOutputText"], FontFamily -> "Arial", FontSize -> 13,
        FontColor -> RGBColor[0.8579079880979629, 0.4263828488593881, 0.]], 
      Cell[
       StyleData["CodeSectionDividerCloud"], Selectable -> False, 
       ShowCellBracket -> False, CellMargins -> {{0, 0}, {0, 35}}, 
       CellBracketOptions -> {"OverlapContent" -> True}, 
       CellElementSpacings -> {"CellMinHeight" -> 6}, 
       CellGroupingRules -> {"SectionGrouping", -5}, 
       CellFrameMargins -> {{20, 20}, {2, 2}}, DefaultNewCellStyle -> 
       "EmptyCell", FontSize -> 6, Background -> GrayLevel[0.95]], 
      Cell[
       StyleData["DockedCellAuthorName"], MenuSortingValue -> 10000, 
       FontFamily -> "Source Sans Pro", FontSize -> 12, FontColor -> 
       RGBColor[1, 0.929411, 0.721568]], 
      Cell[
       StyleData["DockedCellSectionTitle"], MenuSortingValue -> 10000, 
       FontFamily -> "Source Sans Pro", FontSize -> 18, FontColor -> 
       GrayLevel[1]], 
      Cell[
       StyleData["DockedCellSecondCell"], CellFrame -> 1, 
       CellMargins -> {{0, 0}, {0, 0}}, 
       CellFrameMargins -> {{10, 10}, {10, 10}}, CellFrameColor -> 
       RGBColor[1, 0.956862, 0.878431], MenuSortingValue -> 10000, Background -> 
       RGBColor[1, 0.956862, 0.878431]], 
      Cell[
       StyleData["CompletedExerciseHeader"], MenuSortingValue -> 10000, 
       FontFamily -> "Source Sans Pro", FontSize -> 14, FontColor -> 
       GrayLevel[0.5]], 
      Cell[
       StyleData["DockedCellShareButton"], MenuSortingValue -> 10000, 
       FontFamily -> "Source Sans Pro", FontSize -> 13, FontColor -> 
       GrayLevel[1]], 
      Cell[
       StyleData["DockedCellLinksSections"], MenuSortingValue -> 10000, 
       FontFamily -> "Source Sans Pro", FontSize -> 14, FontWeight -> "Plain",
        FontSlant -> "Plain", FontColor -> RGBColor[0.97647, 0.482352, 0]], 
      Cell[
       StyleData["DockedCellLinksDivider"], MenuSortingValue -> 10000, 
       FontFamily -> "Courier", FontSize -> 18, FontWeight -> "Plain", 
       FontSlant -> "Plain", FontColor -> RGBColor[0.97647, 0.482352, 0]], 
      Cell[
       StyleData["DockedCellSectionTitleDivider"], MenuSortingValue -> 10000, 
       FontFamily -> "Courier", FontSize -> 24, FontWeight -> "Plain", 
       FontSlant -> "Plain", FontColor -> GrayLevel[1]], 
      Cell[
       StyleData["SolutionTrue"], MenuSortingValue -> 10000, FontFamily -> 
       "Source Sans Pro", FontSize -> 12, FontWeight -> "Plain", FontSlant -> 
       "Plain", FontColor -> RGBColor[0.12, 0.7, 0.22]], 
      Cell[
       StyleData["SolutionFalse"], MenuSortingValue -> 10000, FontFamily -> 
       "Source Sans Pro", FontSize -> 12, FontWeight -> "Plain", FontSlant -> 
       "Plain", FontColor -> RGBColor[0.94, 0.08, 0.2]], 
      Cell[
       StyleData["SolutionResponseText"], ShowStringCharacters -> False, 
       FontFamily -> "Source Sans Pro", FontSize -> 12, FontWeight -> "Plain",
        FontSlant -> "Plain", FontColor -> GrayLevel[1]], 
      Cell[
       StyleData["SolutionResponse"], ShowCellBracket -> False, 
       CellMargins -> {{24, 25}, {6, 0}}, 
       CellFrameMargins -> {{8, 0}, {0, 12}}, TextAlignment -> Right, 
       ShowStringCharacters -> False, FontFamily -> "Source Sans Pro", 
       FontSize -> 12, FontWeight -> "Plain", FontSlant -> "Plain", 
       Background -> GrayLevel[1]], 
      Cell[
       StyleData["DockedCellCompletedExerciseText"], MenuSortingValue -> 
       10000, FontFamily -> "Source Sans Pro", FontSize -> 12, FontWeight -> 
       "Plain", FontSlant -> "Plain", FontColor -> GrayLevel[0.4]], 
      Cell[
       StyleData["DockedCellSolutionDivider"], MenuSortingValue -> 10000, 
       FontFamily -> "Courier", FontSize -> 16, FontWeight -> "Plain", 
       FontSlant -> "Plain", FontColor -> GrayLevel[0.6]], 
      Cell[
       StyleData["DockedCellCorrectExerciseText"], MenuSortingValue -> 10000, 
       FontFamily -> "Source Sans Pro", FontSize -> 12, FontWeight -> "Plain",
        FontSlant -> "Plain", FontColor -> RGBColor[0.12, 0.7, 0.22]], 
      Cell[
       CellGroupData[{
         Cell[
         "EIWL Cloud Link styles", "Subsubsection", 
          CellChangeTimes -> {{3.663512229965006*^9, 3.66351224118613*^9}}], 
         Cell[
          StyleData["EIWLTextLink"], LineBreakWithin -> False, 
          TemplateBoxOptions -> {DisplayFunction :> (TagBox[
              
              ButtonBox[#, Appearance -> None, ButtonData -> #2, 
               BaseStyle -> {
                "Hyperlink", FontSize -> 16, FontFamily -> 
                 "Source Sans Pro"}], 
              MouseAppearanceTag["LinkHand"]]& )}, 
          ButtonBoxOptions -> {Appearance -> None, BaseStyle -> "Link"}], 
         Cell[
          StyleData["EIWLTextLinkAnswer"], LineBreakWithin -> False, 
          TemplateBoxOptions -> {DisplayFunction :> (TagBox[
              
              ButtonBox[#, Appearance -> None, ButtonData -> #2, 
               BaseStyle -> {
                "Hyperlink", FontSize -> 13, FontColor -> GrayLevel[0.25], 
                 FontFamily -> "Source Sans Pro"}], 
              MouseAppearanceTag["LinkHand"]]& )}, 
          ButtonBoxOptions -> {Appearance -> None, BaseStyle -> "Link"}], 
         Cell[
          StyleData["EIWLTextLinkCodeCaption"], LineBreakWithin -> False, 
          TemplateBoxOptions -> {DisplayFunction :> (TagBox[
              
              ButtonBox[#, Appearance -> None, ButtonData -> #2, 
               BaseStyle -> {
                "Hyperlink", FontSize -> 14, FontColor -> GrayLevel[0.6], 
                 FontFamily -> "Source Sans Pro"}], 
              MouseAppearanceTag["LinkHand"]]& )}, 
          ButtonBoxOptions -> {Appearance -> None, BaseStyle -> "Link"}], 
         Cell[
          StyleData["EIWLTextLinkExercise"], LineBreakWithin -> False, 
          TemplateBoxOptions -> {DisplayFunction :> (TagBox[
              
              ButtonBox[#, Appearance -> None, ButtonData -> #2, 
               BaseStyle -> {
                "Hyperlink", FontSize -> 13, FontColor -> GrayLevel[0.25], 
                 FontFamily -> "Source Sans Pro"}], 
              MouseAppearanceTag["LinkHand"]]& )}, 
          ButtonBoxOptions -> {Appearance -> None, BaseStyle -> "Link"}], 
         Cell[
          StyleData["EIWLTextLinkExerciseNote"], LineBreakWithin -> False, 
          TemplateBoxOptions -> {DisplayFunction :> (TagBox[
              
              ButtonBox[#, Appearance -> None, ButtonData -> #2, 
               BaseStyle -> {
                "Hyperlink", FontSize -> 13, FontColor -> GrayLevel[0.25], 
                 FontFamily -> "Source Sans Pro"}], 
              MouseAppearanceTag["LinkHand"]]& )}, 
          ButtonBoxOptions -> {Appearance -> None, BaseStyle -> "Link"}], 
         Cell[
          StyleData["EIWLTextLinkInlineCode"], LineBreakWithin -> False, 
          TemplateBoxOptions -> {DisplayFunction :> (TagBox[
              
              ButtonBox[#, Appearance -> None, ButtonData -> #2, 
               BaseStyle -> {
                "Hyperlink", FontSize -> 13, FontColor -> GrayLevel[0], 
                 FontFamily -> "Source Sans Pro"}], 
              MouseAppearanceTag["LinkHand"]]& )}, 
          ButtonBoxOptions -> {Appearance -> None, BaseStyle -> "Link"}], 
         Cell[
          StyleData["EIWLTextLinkMoreExplore"], LineBreakWithin -> False, 
          TemplateBoxOptions -> {DisplayFunction :> (TagBox[
              
              ButtonBox[#, Appearance -> None, ButtonData -> #2, 
               BaseStyle -> {
                "Hyperlink", FontSize -> 13, FontFamily -> 
                 "Source Sans Pro"}], 
              MouseAppearanceTag["LinkHand"]]& )}, 
          ButtonBoxOptions -> {Appearance -> None, BaseStyle -> "Link"}], 
         Cell[
          StyleData["EIWLTextLinkQuestion"], LineBreakWithin -> False, 
          TemplateBoxOptions -> {DisplayFunction :> (TagBox[
              
              ButtonBox[#, Appearance -> None, ButtonData -> #2, 
               BaseStyle -> {
                "Hyperlink", FontSize -> 13, FontWeight -> Bold, FontFamily -> 
                 "Source Sans Pro"}], 
              MouseAppearanceTag["LinkHand"]]& )}, 
          ButtonBoxOptions -> {Appearance -> None, BaseStyle -> "Link"}], 
         Cell[
          StyleData["EIWLTextLinkTechNote"], LineBreakWithin -> False, 
          TemplateBoxOptions -> {DisplayFunction :> (TagBox[
              
              ButtonBox[#, Appearance -> None, ButtonData -> #2, 
               BaseStyle -> {
                "Hyperlink", FontSize -> 13, FontColor -> GrayLevel[0.25], 
                 FontFamily -> "Source Sans Pro"}], 
              MouseAppearanceTag["LinkHand"]]& )}, 
          ButtonBoxOptions -> {Appearance -> None, BaseStyle -> "Link"}], 
         Cell[
          StyleData["EIWLTextLinkText"], LineBreakWithin -> False, 
          TemplateBoxOptions -> {DisplayFunction :> (TagBox[
              
              ButtonBox[#, Appearance -> None, ButtonData -> #2, 
               BaseStyle -> {
                "Hyperlink", FontSize -> 17, FontFamily -> 
                 "Source Sans Pro"}], 
              MouseAppearanceTag["LinkHand"]]& )}, 
          ButtonBoxOptions -> {Appearance -> None, BaseStyle -> "Link"}], 
         Cell[
          StyleData["EIWLTextLinkInlineCodeLink"], LineBreakWithin -> False, 
          TemplateBoxOptions -> {DisplayFunction :> (TagBox[
              
              ButtonBox[#, Appearance -> None, ButtonData -> #2, 
               BaseStyle -> {
                "Hyperlink", FontSize -> 17, FontFamily -> 
                 "Source Sans Pro"}], 
              MouseAppearanceTag["LinkHand"]]& )}, 
          ButtonBoxOptions -> {Appearance -> None, BaseStyle -> "Link"}], 
         Cell[
          StyleData["EIWLTextLinkVocabularyTable"], LineBreakWithin -> False, 
          TemplateBoxOptions -> {DisplayFunction :> (TagBox[
              
              ButtonBox[#, Appearance -> None, ButtonData -> #2, 
               BaseStyle -> {
                "Hyperlink", FontSize -> 13, FontFamily -> 
                 "Source Sans Pro"}], 
              MouseAppearanceTag["LinkHand"]]& )}, 
          ButtonBoxOptions -> {Appearance -> None, BaseStyle -> "Link"}]}, 
        Closed]], 
      Cell[
       CellGroupData[{
         Cell[
         "EIWL Cloud Link", "Subsubsection", 
          CellChangeTimes -> {{3.664234597774767*^9, 3.664234605661516*^9}}], 
         
         Cell[
          StyleData["CodeLinkAnswer"], LineBreakWithin -> False, 
          TemplateBoxOptions -> {DisplayFunction :> (TagBox[
              
              ButtonBox[#, Appearance -> None, ButtonData -> #2, 
               BaseStyle -> {
                "Hyperlink", FontSize -> 13, FontColor -> GrayLevel[0.25], 
                 FontFamily -> "Source Sans Pro"}], 
              MouseAppearanceTag["LinkHand"]]& )}, 
          ButtonBoxOptions -> {Appearance -> None, BaseStyle -> "Link"}], 
         Cell[
          StyleData["CodeLinkCodeCaption"], LineBreakWithin -> False, 
          TemplateBoxOptions -> {DisplayFunction :> (TagBox[
              
              ButtonBox[#, Appearance -> None, ButtonData -> #2, 
               BaseStyle -> {
                "Hyperlink", FontSize -> 14, FontColor -> GrayLevel[0.6], 
                 FontFamily -> "Source Sans Pro"}], 
              MouseAppearanceTag["LinkHand"]]& )}, 
          ButtonBoxOptions -> {Appearance -> None, BaseStyle -> "Link"}], 
         Cell[
          StyleData["CodeLinkExercise"], LineBreakWithin -> False, 
          TemplateBoxOptions -> {DisplayFunction :> (TagBox[
              
              ButtonBox[#, Appearance -> None, ButtonData -> #2, 
               BaseStyle -> {
                "Hyperlink", FontSize -> 13, FontColor -> GrayLevel[0.25], 
                 FontFamily -> "Source Sans Pro"}], 
              MouseAppearanceTag["LinkHand"]]& )}, 
          ButtonBoxOptions -> {Appearance -> None, BaseStyle -> "Link"}], 
         Cell[
          StyleData["CodeLinkQuestion"], LineBreakWithin -> False, 
          TemplateBoxOptions -> {DisplayFunction :> (TagBox[
              
              ButtonBox[#, Appearance -> None, ButtonData -> #2, 
               BaseStyle -> {
                "Hyperlink", FontSize -> 13, FontWeight -> Bold, FontFamily -> 
                 "Source Sans Pro"}], 
              MouseAppearanceTag["LinkHand"]]& )}, 
          ButtonBoxOptions -> {Appearance -> None, BaseStyle -> "Link"}], 
         Cell[
          StyleData["CodeLinkTechNote"], LineBreakWithin -> False, 
          TemplateBoxOptions -> {DisplayFunction :> (TagBox[
              
              ButtonBox[#, Appearance -> None, ButtonData -> #2, 
               BaseStyle -> {
                "Hyperlink", FontSize -> 14, FontColor -> GrayLevel[0.25], 
                 FontFamily -> "Source Sans Pro"}], 
              MouseAppearanceTag["LinkHand"]]& )}, 
          ButtonBoxOptions -> {Appearance -> None, BaseStyle -> "Link"}], 
         Cell[
          StyleData["CodeLinkText"], LineBreakWithin -> False, 
          TemplateBoxOptions -> {DisplayFunction :> (TagBox[
              
              ButtonBox[#, Appearance -> None, ButtonData -> #2, 
               BaseStyle -> {
                "Hyperlink", FontSize -> 17, FontFamily -> 
                 "Source Sans Pro"}], 
              MouseAppearanceTag["LinkHand"]]& )}, 
          ButtonBoxOptions -> {Appearance -> None, BaseStyle -> "Link"}], 
         Cell[
          StyleData["CodeLinkVocabularyTable"], LineBreakWithin -> False, 
          TemplateBoxOptions -> {DisplayFunction :> (TagBox[
              ButtonBox[#, Appearance -> None, ButtonData -> #2, 
               BaseStyle -> {
                "Hyperlink", FontSize -> 14, FontFamily -> 
                 "Source Sans Pro"}], 
              MouseAppearanceTag["LinkHand"]]& )}, 
          ButtonBoxOptions -> {Appearance -> None, BaseStyle -> "Link"}], 
         Cell[
          StyleData["CodeLinkVocabularyTable3Column"], LineBreakWithin -> 
          False, TemplateBoxOptions -> {DisplayFunction :> (TagBox[
              
              ButtonBox[#, Appearance -> None, ButtonData -> #2, 
               BaseStyle -> {
                "Hyperlink", FontSize -> 14, FontFamily -> 
                 "Source Sans Pro"}], 
              MouseAppearanceTag["LinkHand"]]& )}, 
          ButtonBoxOptions -> {Appearance -> None, BaseStyle -> "Link"}], 
         Cell[
          StyleData["LinkAnswer"], LineBreakWithin -> False, 
          TemplateBoxOptions -> {DisplayFunction :> (TagBox[
              
              ButtonBox[#, Appearance -> None, ButtonData -> #2, 
               BaseStyle -> {
                "Hyperlink", FontSize -> 13, FontColor -> GrayLevel[0.25], 
                 FontFamily -> "Source Sans Pro"}], 
              MouseAppearanceTag["LinkHand"]]& )}, 
          ButtonBoxOptions -> {Appearance -> None, BaseStyle -> "Link"}], 
         Cell[
          StyleData["LinkCodeCaption"], LineBreakWithin -> False, 
          TemplateBoxOptions -> {DisplayFunction :> (TagBox[
              
              ButtonBox[#, Appearance -> None, ButtonData -> #2, 
               BaseStyle -> {
                "Hyperlink", FontSize -> 14, FontColor -> GrayLevel[0.6], 
                 FontFamily -> "Source Sans Pro"}], 
              MouseAppearanceTag["LinkHand"]]& )}, 
          ButtonBoxOptions -> {Appearance -> None, BaseStyle -> "Link"}], 
         Cell[
          StyleData["LinkExercise"], LineBreakWithin -> False, 
          TemplateBoxOptions -> {DisplayFunction :> (TagBox[
              
              ButtonBox[#, Appearance -> None, ButtonData -> #2, 
               BaseStyle -> {
                "Hyperlink", FontSize -> 13, FontColor -> GrayLevel[0.25], 
                 FontFamily -> "Source Sans Pro"}], 
              MouseAppearanceTag["LinkHand"]]& )}, 
          ButtonBoxOptions -> {Appearance -> None, BaseStyle -> "Link"}], 
         Cell[
          StyleData["LinkExerciseNote"], LineBreakWithin -> False, 
          TemplateBoxOptions -> {DisplayFunction :> (TagBox[
              
              ButtonBox[#, Appearance -> None, ButtonData -> #2, 
               BaseStyle -> {
                "Hyperlink", FontSize -> 13, FontColor -> GrayLevel[0.25], 
                 FontFamily -> "Source Sans Pro"}], 
              MouseAppearanceTag["LinkHand"]]& )}, 
          ButtonBoxOptions -> {Appearance -> None, BaseStyle -> "Link"}], 
         Cell[
          StyleData["LinkIndex"], LineBreakWithin -> False, 
          TemplateBoxOptions -> {DisplayFunction :> (TagBox[
              
              ButtonBox[#, Appearance -> None, ButtonData -> #2, 
               BaseStyle -> {
                "Hyperlink", FontSize -> 13, FontColor -> GrayLevel[0.25], 
                 FontFamily -> "Source Sans Pro"}], 
              MouseAppearanceTag["LinkHand"]]& )}, 
          ButtonBoxOptions -> {Appearance -> None, BaseStyle -> "Link"}], 
         Cell[
          StyleData["LinkIndexSubentry"], LineBreakWithin -> False, 
          TemplateBoxOptions -> {DisplayFunction :> (TagBox[
              
              ButtonBox[#, Appearance -> None, ButtonData -> #2, 
               BaseStyle -> {
                "Hyperlink", FontSize -> 13, FontColor -> GrayLevel[0.25], 
                 FontFamily -> "Source Sans Pro"}], 
              MouseAppearanceTag["LinkHand"]]& )}, 
          ButtonBoxOptions -> {Appearance -> None, BaseStyle -> "Link"}], 
         Cell[
          StyleData["LinkMoreExplore"], LineBreakWithin -> False, 
          TemplateBoxOptions -> {DisplayFunction :> (TagBox[
              
              ButtonBox[#, Appearance -> None, ButtonData -> #2, 
               BaseStyle -> {
                "Hyperlink", FontSize -> 13, FontFamily -> 
                 "Source Sans Pro"}], 
              MouseAppearanceTag["LinkHand"]]& )}, 
          ButtonBoxOptions -> {Appearance -> None, BaseStyle -> "Link"}], 
         Cell[
          StyleData["LinkQuestion"], LineBreakWithin -> False, 
          TemplateBoxOptions -> {DisplayFunction :> (TagBox[
              
              ButtonBox[#, Appearance -> None, ButtonData -> #2, 
               BaseStyle -> {
                "Hyperlink", FontSize -> 14, FontWeight -> Bold, FontColor -> 
                 GrayLevel[0], FontFamily -> "Source Sans Pro"}], 
              MouseAppearanceTag["LinkHand"]]& )}, 
          ButtonBoxOptions -> {Appearance -> None, BaseStyle -> "Link"}], 
         Cell[
          StyleData["LinkTechNote"], LineBreakWithin -> False, 
          TemplateBoxOptions -> {DisplayFunction :> (TagBox[
              
              ButtonBox[#, Appearance -> None, ButtonData -> #2, 
               BaseStyle -> {
                "Hyperlink", FontSize -> 13, FontColor -> GrayLevel[0.25], 
                 FontFamily -> "Source Sans Pro"}], 
              MouseAppearanceTag["LinkHand"]]& )}, 
          ButtonBoxOptions -> {Appearance -> None, BaseStyle -> "Link"}], 
         Cell[
          StyleData["LinkText"], LineBreakWithin -> False, 
          TemplateBoxOptions -> {DisplayFunction :> (TagBox[
              
              ButtonBox[#, Appearance -> None, ButtonData -> #2, 
               BaseStyle -> {
                "Hyperlink", FontSize -> 16, FontFamily -> 
                 "Source Sans Pro"}], 
              MouseAppearanceTag["LinkHand"]]& )}, 
          ButtonBoxOptions -> {Appearance -> None, BaseStyle -> "Link"}], 
         Cell[
          StyleData["LinkVocabularyTable"], LineBreakWithin -> False, 
          TemplateBoxOptions -> {DisplayFunction :> (TagBox[
              
              ButtonBox[#, Appearance -> None, ButtonData -> #2, 
               BaseStyle -> {
                "Hyperlink", FontSize -> 13, FontFamily -> 
                 "Source Sans Pro"}], 
              MouseAppearanceTag["LinkHand"]]& )}, 
          ButtonBoxOptions -> {Appearance -> None, BaseStyle -> "Link"}]}, 
        Closed]]}, Open]]}, Visible -> False, FrontEndVersion -> 
  "11.3 for Mac OS X x86 (32-bit, 64-bit Kernel) (March 5, 2018)", 
  StyleDefinitions -> "Default.nb"]
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{
 "FirstInputCell"->{
  Cell[6893, 184, 755, 25, 70, "Input",ExpressionUUID->"8c015bcc-4162-4d1e-ae8a-1e763aa9532f",
   CellTags->"FirstInputCell"],
  Cell[15465, 408, 755, 25, 70, "Input",ExpressionUUID->"741ead20-e4ab-4e16-a5c4-2d2550a55e01",
   CellTags->"FirstInputCell"],
  Cell[24172, 637, 755, 25, 70, "Input",ExpressionUUID->"80807107-753a-41d1-8ac0-f6818145b74a",
   CellTags->"FirstInputCell"],
  Cell[105997, 2064, 755, 25, 70, "Input",ExpressionUUID->"635323c7-acf8-47a6-a811-f609b6468a53",
   CellTags->"FirstInputCell"],
  Cell[115207, 2300, 755, 25, 70, "Input",ExpressionUUID->"7161fe74-8477-4fd9-a540-ca5541dcf0a1",
   CellTags->"FirstInputCell"],
  Cell[126486, 2571, 755, 25, 70, "Input",ExpressionUUID->"e63effe7-e67c-46a0-8b86-68311a0a0491",
   CellTags->"FirstInputCell"],
  Cell[142543, 2923, 755, 25, 70, "Input",ExpressionUUID->"b3c228a0-b545-4386-ba67-a4d70a2607cc",
   CellTags->"FirstInputCell"],
  Cell[191029, 3805, 755, 25, 70, "Input",ExpressionUUID->"7d955167-df1b-4f23-a92e-62327a879f03",
   CellTags->"FirstInputCell"],
  Cell[201965, 4070, 755, 25, 70, "Input",ExpressionUUID->"b981acda-a27e-466b-b906-effcd7609347",
   CellTags->"FirstInputCell"],
  Cell[213321, 4344, 755, 25, 70, "Input",ExpressionUUID->"b56e5477-6c7e-4dec-86ba-ebf823e58402",
   CellTags->"FirstInputCell"],
  Cell[238300, 4843, 755, 25, 70, "Input",ExpressionUUID->"1dce2f94-4b21-4a8e-8f1a-c51edeea12d8",
   CellTags->"FirstInputCell"],
  Cell[249350, 5110, 755, 25, 70, "Input",ExpressionUUID->"6df7a806-e4d7-494d-a9f1-8993f53d7575",
   CellTags->"FirstInputCell"],
  Cell[259618, 5364, 755, 25, 70, "Input",ExpressionUUID->"2f7164ee-2c91-4d08-b625-eec3420f583e",
   CellTags->"FirstInputCell"]}
 }
*)
(*CellTagsIndex
CellTagsIndex->{
 {"FirstInputCell", 318913, 6590}
 }
*)
(*NotebookFileOutline
Notebook[{
Cell[638, 21, 388, 9, 70, "Exercise",ExpressionUUID->"df9a01cd-ce3c-4bb2-99d1-8a4aa260a713",
 CounterAssignments->{{"SectionNumber", 31}, {"ExerciseNumber", 1}, {"WebOnly", 0}}],
Cell[CellGroupData[{
Cell[1051, 34, 578, 18, 70, "ExerciseExpectedResult",ExpressionUUID->"a4ee5fdf-a52f-4925-9ce0-34976267e29c"],
Cell[1632, 54, 4712, 106, 70, "ExerciseOutput",ExpressionUUID->"f691c9b1-808e-43eb-9411-853bf72e5080"]
}, Closed]],
Cell[CellGroupData[{
Cell[6381, 165, 509, 17, 70, "Subsection",ExpressionUUID->"fb1d9dcd-332c-444d-bb82-c9d0ba524882"],
Cell[6893, 184, 755, 25, 70, "Input",ExpressionUUID->"8c015bcc-4162-4d1e-ae8a-1e763aa9532f",
 CellTags->"FirstInputCell"]
}, Open  ]],
Cell[CellGroupData[{
Cell[7685, 214, 224, 7, 70, "CodeSectionDividerCloud",ExpressionUUID->"f6045c86-73c5-4706-a689-e47f332745bc"],
Cell[7912, 223, 396, 10, 70, "Exercise",ExpressionUUID->"bfd7a1e1-b495-41c7-93bf-c5e17d358aa6",
 CounterAssignments->{{"SectionNumber", 31}, {"ExerciseNumber", 2}, {"WebOnly", 0}}],
Cell[CellGroupData[{
Cell[8333, 237, 578, 18, 70, "ExerciseExpectedResult",ExpressionUUID->"0a9c6576-3033-4fda-9c60-5a10ffb8bcc8"],
Cell[8914, 257, 6002, 127, 70, "ExerciseOutput",ExpressionUUID->"d863cbe6-1772-4565-80cb-8d9fa642b0e8"]
}, Closed]],
Cell[CellGroupData[{
Cell[14953, 389, 509, 17, 70, "Subsection",ExpressionUUID->"ae46d6af-7ded-46e7-9b67-01e5d45f715d"],
Cell[15465, 408, 755, 25, 70, "Input",ExpressionUUID->"741ead20-e4ab-4e16-a5c4-2d2550a55e01",
 CellTags->"FirstInputCell"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[16269, 439, 224, 7, 70, "CodeSectionDividerCloud",ExpressionUUID->"a47169bc-97c3-46a7-ab11-88535c59e44f"],
Cell[16496, 448, 421, 12, 70, "Exercise",ExpressionUUID->"51d0f2cb-1172-4cce-8b91-532cc4be4045",
 CounterAssignments->{{"SectionNumber", 31}, {"ExerciseNumber", 3}, {"WebOnly", 0}}],
Cell[CellGroupData[{
Cell[16942, 464, 578, 18, 70, "ExerciseExpectedResult",ExpressionUUID->"61f234f0-492d-4253-b5a8-13e5c0313dc7"],
Cell[17523, 484, 6100, 129, 70, "ExerciseOutput",ExpressionUUID->"1e70e59e-35ae-4fa3-a617-b816ad1b08d8"]
}, Closed]],
Cell[CellGroupData[{
Cell[23660, 618, 509, 17, 70, "Subsection",ExpressionUUID->"3efc518d-c127-47d2-8d06-e7be474d525c"],
Cell[24172, 637, 755, 25, 70, "Input",ExpressionUUID->"80807107-753a-41d1-8ac0-f6818145b74a",
 CellTags->"FirstInputCell"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[24976, 668, 224, 7, 70, "CodeSectionDividerCloud",ExpressionUUID->"50a0dd80-7778-4ed8-98f6-3b6184b634dd"],
Cell[25203, 677, 462, 12, 70, "Exercise",ExpressionUUID->"10f824a5-1601-42d1-803e-ff918f613329",
 CounterAssignments->{{"SectionNumber", 31}, {"ExerciseNumber", 4}, {"WebOnly", 0}}],
Cell[CellGroupData[{
Cell[25690, 693, 578, 18, 70, "ExerciseExpectedResult",ExpressionUUID->"500e359f-8a01-4ee9-8050-65ccc649f91f"],
Cell[26271, 713, 79177, 1327, 70, "ExerciseOutput",ExpressionUUID->"616cafb4-82f3-47a3-a1d2-94c5607eebda"]
}, Closed]],
Cell[CellGroupData[{
Cell[105485, 2045, 509, 17, 70, "Subsection",ExpressionUUID->"a9e6695c-6731-47b6-a8b1-44a7e37f7e67"],
Cell[105997, 2064, 755, 25, 70, "Input",ExpressionUUID->"635323c7-acf8-47a6-a811-f609b6468a53",
 CellTags->"FirstInputCell"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[106801, 2095, 224, 7, 70, "CodeSectionDividerCloud",ExpressionUUID->"647d9c56-cd37-45af-af77-6d86bbed9596"],
Cell[107028, 2104, 473, 12, 70, "Exercise",ExpressionUUID->"bda4cf68-3068-4f71-8517-8ec675eef6a9",
 CounterAssignments->{{"SectionNumber", 31}, {"ExerciseNumber", 5}, {"WebOnly", 0}}],
Cell[CellGroupData[{
Cell[107526, 2120, 578, 18, 70, "ExerciseExpectedResult",ExpressionUUID->"2353ebdc-4658-4342-879f-b1a3f94ed194"],
Cell[108107, 2140, 6551, 136, 70, "ExerciseOutput",ExpressionUUID->"95141760-3d02-40b2-8176-af77c2f18e9d"]
}, Closed]],
Cell[CellGroupData[{
Cell[114695, 2281, 509, 17, 70, "Subsection",ExpressionUUID->"59f0e7d4-715a-4db2-8cf8-c0f93ef6ca18"],
Cell[115207, 2300, 755, 25, 70, "Input",ExpressionUUID->"7161fe74-8477-4fd9-a540-ca5541dcf0a1",
 CellTags->"FirstInputCell"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[116011, 2331, 224, 7, 70, "CodeSectionDividerCloud",ExpressionUUID->"f8df55cd-eca8-425e-b160-f6b5a1bf0222"],
Cell[116238, 2340, 578, 14, 70, "Exercise",ExpressionUUID->"3b84d577-d08f-48b8-99b2-c69d952fa4ec",
 CounterAssignments->{{"SectionNumber", 31}, {"ExerciseNumber", 6}, {"WebOnly", 0}}],
Cell[CellGroupData[{
Cell[116841, 2358, 598, 19, 70, "ExerciseExpectedResult",ExpressionUUID->"e3a0db8b-8601-49e4-b469-1f31ac73cb39"],
Cell[117442, 2379, 8495, 168, 70, "ExerciseOutput",ExpressionUUID->"4224f5e4-f6de-4417-a71d-f7d8ca9c49bc"]
}, Closed]],
Cell[CellGroupData[{
Cell[125974, 2552, 509, 17, 70, "Subsection",ExpressionUUID->"528fd572-f9fe-4367-b110-58690c9b3f8c"],
Cell[126486, 2571, 755, 25, 70, "Input",ExpressionUUID->"e63effe7-e67c-46a0-8b86-68311a0a0491",
 CellTags->"FirstInputCell"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[127290, 2602, 224, 7, 70, "CodeSectionDividerCloud",ExpressionUUID->"72767e41-5a2c-4761-8769-72e9a75a7b0e"],
Cell[127517, 2611, 652, 18, 70, "Exercise",ExpressionUUID->"8daea436-4c86-4825-ab9b-673480e5e706",
 CounterAssignments->{{"SectionNumber", 31}, {"ExerciseNumber", 7}, {"WebOnly", 0}}],
Cell[CellGroupData[{
Cell[128194, 2633, 598, 19, 70, "ExerciseExpectedResult",ExpressionUUID->"3516d8ed-acfa-4897-bb3d-08b5b5f67978"],
Cell[128795, 2654, 13199, 245, 70, "ExerciseOutput",ExpressionUUID->"af0dbb05-494f-4934-84c5-a0a08f01a08f"]
}, Closed]],
Cell[CellGroupData[{
Cell[142031, 2904, 509, 17, 70, "Subsection",ExpressionUUID->"134a86a8-f64e-4a05-84ce-8d3bfae90046"],
Cell[142543, 2923, 755, 25, 70, "Input",ExpressionUUID->"b3c228a0-b545-4386-ba67-a4d70a2607cc",
 CellTags->"FirstInputCell"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[143347, 2954, 224, 7, 70, "CodeSectionDividerCloud",ExpressionUUID->"0a39177b-4974-4217-b5e3-bfc72bfbee7a"],
Cell[143574, 2963, 580, 16, 70, "Exercise",ExpressionUUID->"44de2ff3-b630-4ad1-a628-35e190c12fa8",
 CounterAssignments->{{"SectionNumber", 31}, {"ExerciseNumber", 8}, {"WebOnly", 0}}],
Cell[CellGroupData[{
Cell[144179, 2983, 578, 18, 70, "ExerciseExpectedResult",ExpressionUUID->"a52c922c-88d5-4338-bace-cef43e061153"],
Cell[144760, 3003, 45720, 778, 70, "ExerciseOutput",ExpressionUUID->"23df1b12-6268-4956-8a2a-77fffc25ec85"]
}, Closed]],
Cell[CellGroupData[{
Cell[190517, 3786, 509, 17, 70, "Subsection",ExpressionUUID->"74db466f-b331-44b5-a363-850947403d05"],
Cell[191029, 3805, 755, 25, 70, "Input",ExpressionUUID->"7d955167-df1b-4f23-a92e-62327a879f03",
 CellTags->"FirstInputCell"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[191833, 3836, 224, 7, 70, "CodeSectionDividerCloud",ExpressionUUID->"4333624a-75fd-4438-9333-1c63641c4f19"],
Cell[192060, 3845, 446, 12, 70, "Exercise",ExpressionUUID->"221bbe58-8528-4568-af1f-52176ee4c446",
 CounterAssignments->{{"SectionNumber", 31}, {"ExerciseNumber", 9}, {"WebOnly", 0}}],
Cell[CellGroupData[{
Cell[192531, 3861, 578, 18, 70, "ExerciseExpectedResult",ExpressionUUID->"5cb93d76-7153-4cc7-837a-91dcb41a51ae"],
Cell[193112, 3881, 8304, 165, 70, "ExerciseOutput",ExpressionUUID->"1b81fd1e-8ea7-42e0-94c9-efd957c155df"]
}, Closed]],
Cell[CellGroupData[{
Cell[201453, 4051, 509, 17, 70, "Subsection",ExpressionUUID->"df56ad3a-8d1a-4b16-8367-7b00e2b263b5"],
Cell[201965, 4070, 755, 25, 70, "Input",ExpressionUUID->"b981acda-a27e-466b-b906-effcd7609347",
 CellTags->"FirstInputCell"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[202769, 4101, 224, 7, 70, "CodeSectionDividerCloud",ExpressionUUID->"1b1f5f6a-f070-4561-87ac-a9d3a1390265"],
Cell[202996, 4110, 631, 17, 70, "Exercise",ExpressionUUID->"1f2a7063-19c0-4d43-b5d6-e7de79e9bd61",
 CounterAssignments->{{"SectionNumber", 31}, {"ExerciseNumber", 10}, {"WebOnly", 0}}],
Cell[CellGroupData[{
Cell[203652, 4131, 598, 19, 70, "ExerciseExpectedResult",ExpressionUUID->"d0be6b2b-4686-4560-b24f-c1b2341655b0"],
Cell[204253, 4152, 8518, 168, 70, "ExerciseOutput",ExpressionUUID->"dbbeac43-e1af-443c-be5d-8842856cc6e3"]
}, Closed]],
Cell[CellGroupData[{
Cell[212808, 4325, 510, 17, 70, "Subsection",ExpressionUUID->"13fada17-a77c-4849-bed6-e178d2253036"],
Cell[213321, 4344, 755, 25, 70, "Input",ExpressionUUID->"b56e5477-6c7e-4dec-86ba-ebf823e58402",
 CellTags->"FirstInputCell"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[214125, 4375, 224, 7, 70, "CodeSectionDividerCloud",ExpressionUUID->"913e3ee7-8ae1-40ba-b178-4b1ce3931c4c"],
Cell[214352, 4384, 568, 17, 70, "Exercise",ExpressionUUID->"852e127e-1fc3-4095-9080-852d8d0c48b5",
 CounterAssignments->{{"SectionNumber", 31}, {"ExerciseNumber", 11}, {"WebOnly", 0}}],
Cell[CellGroupData[{
Cell[214945, 4405, 598, 19, 70, "ExerciseExpectedResult",ExpressionUUID->"72c9135d-4c83-493a-ba79-131bafd59252"],
Cell[215546, 4426, 22204, 393, 70, "ExerciseOutput",ExpressionUUID->"34a59765-698e-4cd0-bd02-5a49f08205c7"]
}, Closed]],
Cell[CellGroupData[{
Cell[237787, 4824, 510, 17, 70, "Subsection",ExpressionUUID->"c6df65f5-39ee-47d7-8ad7-1ceb9d0052ac"],
Cell[238300, 4843, 755, 25, 70, "Input",ExpressionUUID->"1dce2f94-4b21-4a8e-8f1a-c51edeea12d8",
 CellTags->"FirstInputCell"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[239104, 4874, 224, 7, 70, "CodeSectionDividerCloud",ExpressionUUID->"d442801a-c2e3-4307-b40b-aa9b7db41acc"],
Cell[239331, 4883, 445, 12, 70, "Exercise",ExpressionUUID->"6a9482ee-c76c-4734-be31-40ba6b749e95",
 CounterAssignments->{{"SectionNumber", 31}, {"ExerciseNumber", 12}, {"WebOnly", 0}}],
Cell[CellGroupData[{
Cell[239801, 4899, 578, 18, 70, "ExerciseExpectedResult",ExpressionUUID->"e4aadbdb-9681-4775-aa50-84cff7fc12b2"],
Cell[240382, 4919, 8418, 167, 70, "ExerciseOutput",ExpressionUUID->"4173d4e1-01f3-45c6-90ad-7e73128d5d6d"]
}, Closed]],
Cell[CellGroupData[{
Cell[248837, 5091, 510, 17, 70, "Subsection",ExpressionUUID->"d470d7f9-e739-414c-8809-2178486110ec"],
Cell[249350, 5110, 755, 25, 70, "Input",ExpressionUUID->"6df7a806-e4d7-494d-a9f1-8993f53d7575",
 CellTags->"FirstInputCell"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[250154, 5141, 224, 7, 70, "CodeSectionDividerCloud",ExpressionUUID->"9c26fc69-4758-436d-873d-14a4d49a28af"],
Cell[250381, 5150, 509, 13, 70, "Exercise",ExpressionUUID->"e69d981d-215d-4f1b-935b-63d44007dd46",
 CounterAssignments->{{"SectionNumber", 31}, {"ExerciseNumber", 13}, {"WebOnly", 0}}],
Cell[CellGroupData[{
Cell[250915, 5167, 578, 18, 70, "ExerciseExpectedResult",ExpressionUUID->"bc24a142-e4f7-4bd1-a6f7-9d8530de92c3"],
Cell[251496, 5187, 7572, 153, 70, "ExerciseOutput",ExpressionUUID->"5568b5fe-a712-4bc4-9bfc-da39eec56ee8"]
}, Closed]],
Cell[CellGroupData[{
Cell[259105, 5345, 510, 17, 70, "Subsection",ExpressionUUID->"331d2b61-134c-46da-9360-c1cd5f80983a"],
Cell[259618, 5364, 755, 25, 70, "Input",ExpressionUUID->"2f7164ee-2c91-4d08-b625-eec3420f583e",
 CellTags->"FirstInputCell"]
}, Open  ]]
}, Open  ]],
Cell[260400, 5393, 224, 7, 70, "CodeSectionDividerCloud",ExpressionUUID->"4b237906-6bd3-4afd-b3cb-4d20b0b70058"]
}
]
*)

(* End of internal cache information *)
(* NotebookSignature xRc#hHJzj8J7PjYdeGn5IG2H *)
