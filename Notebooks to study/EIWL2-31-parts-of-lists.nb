(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 11.3' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    248187,       6129]
NotebookOptionsPosition[    137786,       3915]
NotebookOutlinePosition[    233458,       5868]
CellTagsIndexPosition[    232807,       5840]
WindowTitle->Partes de listas: Una introducci\363n elemental a Wolfram Language
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell[BoxData[
 InterpretationBox[Cell["Partes de listas", "SectionInline"],
  $Line = 0; Null]], "SectionDoubleDigit",
 Editable->False,
 Deletable->False,
 ShowCellBracket->False,
 CounterAssignments->{{"Section", 30}, {"Subsection", 0}, {
   "Subsubsection", 0}, {"Exercise", 0}},
 CellTags->"p:187",
 CellLabel->"In[1]:="],

Cell[TextData[{
 ButtonBox["Part",
  BaseStyle->"Link"],
 " elige un elemento de una lista."
}], "Text",
 Editable->False,
 Deletable->False,
 ShowCellBracket->False,
 CellTags->"i:1"],

Cell["Elija el elemento 2 de una lista:", "CodeCaption",
 Editable->False,
 Deletable->False,
 ShowCellBracket->False,
 CellTags->"i:2"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Part", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"a", ",", "b", ",", "c", ",", "d", ",", "e", ",", "f", ",", "g"}],
     "}"}], ",", "2"}], "]"}]], "Input",
 Deletable->False,
 CellLabel->"In[1]:="],

Cell[BoxData["b"], "Output",
 Editable->False,
 CellEditDuplicate->False,
 Evaluatable->False,
 CellLabel->"Out[1]="]
}, Open  ]],

Cell[TextData[{
 ButtonBox["[[\[ThinSpace]",
  BaseStyle->"Link",
  ButtonData->"Part"],
 StyleBox[ButtonBox["...\[ThinSpace]",
  BaseStyle->"Link",
  ButtonData->"Part"],
  FontColor->GrayLevel[0.6]],
 ButtonBox["]]",
  BaseStyle->"Link",
  ButtonData->"Part"],
 " es una notaci\[OAcute]n alternativa."
}], "Text",
 Editable->False,
 Deletable->False,
 ShowCellBracket->False],

Cell[TextData[{
 "Use ",
 Cell[BoxData[
  RowBox[{"[", 
   RowBox[{"[", "2", "]"}], "]"}]], "InlineCode"],
 " para elegir el elemento n\[UAcute]mero 2 de una lista:"
}], "CodeCaption",
 Editable->False,
 Deletable->False,
 ShowCellBracket->False],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{"a", ",", "b", ",", "c", ",", "d", ",", "e", ",", "f", ",", "g"}], 
   "}"}], "[", 
  RowBox[{"[", "2", "]"}], "]"}]], "Input",
 Deletable->False,
 CellLabel->"In[2]:="],

Cell[BoxData["b"], "Output",
 Editable->False,
 CellEditDuplicate->False,
 Evaluatable->False,
 CellLabel->"Out[2]="]
}, Open  ]],

Cell["\<\
Los n\[UAcute]meros de parte negativos cuentan a partir del final de una \
lista:\
\>", "CodeCaption",
 Editable->False,
 Deletable->False,
 ShowCellBracket->False,
 CellTags->"i:3"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{"a", ",", "b", ",", "c", ",", "d", ",", "e", ",", "f", ",", "g"}], 
   "}"}], "[", 
  RowBox[{"[", 
   RowBox[{"-", "2"}], "]"}], "]"}]], "Input",
 Deletable->False,
 CellLabel->"In[3]:="],

Cell[BoxData["f"], "Output",
 Editable->False,
 CellEditDuplicate->False,
 Evaluatable->False,
 CellLabel->"Out[3]="]
}, Open  ]],

Cell["\<\
Puede pedirse una lista de partes mediante la lista de los n\[UAcute]meros de \
parte.\
\>", "Text",
 Editable->False,
 Deletable->False,
 ShowCellBracket->False],

Cell["Elija las partes 2, 4 y 5:", "CodeCaption",
 Editable->False,
 Deletable->False,
 ShowCellBracket->False],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{"a", ",", "b", ",", "c", ",", "d", ",", "e", ",", "f", ",", "g"}], 
   "}"}], "[", 
  RowBox[{"[", 
   RowBox[{"{", 
    RowBox[{"2", ",", "4", ",", "5"}], "}"}], "]"}], "]"}]], "Input",
 Deletable->False,
 CellLabel->"In[4]:="],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"b", ",", "d", ",", "e"}], "}"}]], "Output",
 Editable->False,
 CellEditDuplicate->False,
 Evaluatable->False,
 CellLabel->"Out[4]="]
}, Open  ]],

Cell[TextData[{
 Cell[BoxData[
  ButtonBox[";;",
   BaseStyle->"Link",
   ButtonData->"Span"]], "InlineCodeText"],
 " sirve para obtener un ",
 StyleBox["tramo",
  FontSlant->"Italic"],
 " o secuencia de partes."
}], "Text",
 Editable->False,
 Deletable->False,
 ShowCellBracket->False,
 CellTags->"i:4"],

Cell["Elija las partes, de la 2 a la 5:", "CodeCaption",
 Editable->False,
 Deletable->False,
 ShowCellBracket->False],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{"a", ",", "b", ",", "c", ",", "d", ",", "e", ",", "f", ",", "g"}], 
   "}"}], "[", 
  RowBox[{"[", 
   RowBox[{"2", ";;", "5"}], "]"}], "]"}]], "Input",
 Deletable->False,
 CellLabel->"In[5]:="],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"b", ",", "c", ",", "d", ",", "e"}], "}"}]], "Output",
 Editable->False,
 CellEditDuplicate->False,
 Evaluatable->False,
 CellLabel->"Out[5]="]
}, Open  ]],

Cell["Tome los 4 primeros elementos de una lista:", "CodeCaption",
 Editable->False,
 Deletable->False,
 ShowCellBracket->False,
 CellTags->"i:5"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Take", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"a", ",", "b", ",", "c", ",", "d", ",", "e", ",", "f", ",", "g"}],
     "}"}], ",", "4"}], "]"}]], "Input",
 Deletable->False,
 CellLabel->"In[6]:="],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"a", ",", "b", ",", "c", ",", "d"}], "}"}]], "Output",
 Editable->False,
 CellEditDuplicate->False,
 Evaluatable->False,
 CellLabel->"Out[6]="]
}, Open  ]],

Cell["Tome los 2 \[UAcute]ltimos elementos de una lista:", "CodeCaption",
 Editable->False,
 Deletable->False,
 ShowCellBracket->False],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Take", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"a", ",", "b", ",", "c", ",", "d", ",", "e", ",", "f", ",", "g"}],
     "}"}], ",", 
   RowBox[{"-", "2"}]}], "]"}]], "Input",
 Deletable->False,
 CellLabel->"In[7]:="],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"f", ",", "g"}], "}"}]], "Output",
 Editable->False,
 CellEditDuplicate->False,
 Evaluatable->False,
 CellLabel->"Out[7]="]
}, Open  ]],

Cell["La lista sin sus 2 \[UAcute]ltimos elementos:", "CodeCaption",
 Editable->False,
 Deletable->False,
 ShowCellBracket->False],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Drop", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"a", ",", "b", ",", "c", ",", "d", ",", "e", ",", "f", ",", "g"}],
     "}"}], ",", 
   RowBox[{"-", "2"}]}], "]"}]], "Input",
 Deletable->False,
 CellLabel->"In[8]:="],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"a", ",", "b", ",", "c", ",", "d", ",", "e"}], "}"}]], "Output",
 Editable->False,
 CellEditDuplicate->False,
 Evaluatable->False,
 CellTags->"LastCellOfAPage",
 CellLabel->"Out[8]="]
}, Open  ]],

Cell[TextData[{
 "Ahora se consideran listas de listas, o arreglos. Cada sublista juega el \
papel de una ",
 StyleBox["fila",
  FontSlant->"Italic"],
 " en el arreglo. "
}], "Text",
 Editable->False,
 Deletable->False,
 ShowCellBracket->False,
 CellTags->{"p:188", "i:6"}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"a", ",", "b", ",", "c"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"d", ",", "e", ",", "f"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"g", ",", "h", ",", "i"}], "}"}]}], "}"}], "//", 
  "Grid"}]], "Input",
 Deletable->False,
 CellLabel->"In[9]:="],

Cell[BoxData[
 TagBox[GridBox[{
    {"a", "b", "c"},
    {"d", "e", "f"},
    {"g", "h", "i"}
   },
   AutoDelete->False,
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",
 Editable->False,
 CellEditDuplicate->False,
 Evaluatable->False,
 CellLabel->"Out[9]="]
}, Open  ]],

Cell["\<\
Elija la segunda sublista, que corresponde a la segunda fila del arreglo:\
\>", "CodeCaption",
 Editable->False,
 Deletable->False,
 ShowCellBracket->False],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"a", ",", "b", ",", "c"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"d", ",", "e", ",", "f"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"g", ",", "h", ",", "i"}], "}"}]}], "}"}], "[", 
  RowBox[{"[", "2", "]"}], "]"}]], "Input",
 Deletable->False,
 CellLabel->"In[10]:="],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"d", ",", "e", ",", "f"}], "}"}]], "Output",
 Editable->False,
 CellEditDuplicate->False,
 Evaluatable->False,
 CellLabel->"Out[10]="]
}, Open  ]],

Cell["Aqu\[IAcute] se va a elegir el elemento 1 de la fila 2:", "CodeCaption",
 Editable->False,
 Deletable->False,
 ShowCellBracket->False],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"a", ",", "b", ",", "c"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"d", ",", "e", ",", "f"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"g", ",", "h", ",", "i"}], "}"}]}], "}"}], "[", 
  RowBox[{"[", 
   RowBox[{"2", ",", "1"}], "]"}], "]"}]], "Input",
 Deletable->False,
 CellLabel->"In[11]:="],

Cell[BoxData["d"], "Output",
 Editable->False,
 CellEditDuplicate->False,
 Evaluatable->False,
 CellLabel->"Out[11]="]
}, Open  ]],

Cell[TextData[{
 "Tambi\[EAcute]n se pueden elegir ",
 StyleBox["columnas",
  FontSlant->"Italic"],
 " de un arreglo. "
}], "Text",
 Editable->False,
 Deletable->False,
 ShowCellBracket->False,
 CellTags->"i:7"],

Cell["\<\
Ahora se elige la primera columna, tomando el elemento 1 de cada fila:\
\>", "CodeCaption",
 Editable->False,
 Deletable->False,
 ShowCellBracket->False],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"a", ",", "b", ",", "c"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"d", ",", "e", ",", "f"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"g", ",", "h", ",", "i"}], "}"}]}], "}"}], "[", 
  RowBox[{"[", 
   RowBox[{"All", ",", "1"}], "]"}], "]"}]], "Input",
 Deletable->False,
 CellLabel->"In[12]:="],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"a", ",", "d", ",", "g"}], "}"}]], "Output",
 Editable->False,
 CellEditDuplicate->False,
 Evaluatable->False,
 CellLabel->"Out[12]="]
}, Open  ]],

Cell[TextData[{
 "La funci\[OAcute]n ",
 ButtonBox["Position",
  BaseStyle->"Link"],
 " obtiene la lista de las posiciones donde se ubica alguna cosa."
}], "Text",
 Editable->False,
 Deletable->False,
 ShowCellBracket->False,
 CellTags->"i:8"],

Cell[TextData[{
 "En lo que sigue hay solamente una d, que aparece en la posici\[OAcute]n ",
 Cell[BoxData[
  RowBox[{"2", ",", "1"}]], "InlineCode"],
 ":"
}], "CodeCaption",
 Editable->False,
 Deletable->False,
 ShowCellBracket->False,
 CellTags->"i:9"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Position", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"a", ",", "b", ",", "c"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"d", ",", "e", ",", "f"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"g", ",", "h", ",", "i"}], "}"}]}], "}"}], ",", "d"}], 
  "]"}]], "Input",
 Deletable->False,
 CellLabel->"In[13]:="],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{"2", ",", "1"}], "}"}], "}"}]], "Output",
 Editable->False,
 CellEditDuplicate->False,
 Evaluatable->False,
 CellLabel->"Out[13]="]
}, Open  ]],

Cell[TextData[{
 "Aqu\[IAcute] se obtiene la lista de todas las posiciones donde aparece ",
 Cell[BoxData["x"], "InlineCode"],
 ":"
}], "CodeCaption",
 Editable->False,
 Deletable->False,
 ShowCellBracket->False],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Position", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"x", ",", "y", ",", "x"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"y", ",", "y", ",", "x"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "y", ",", "y"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "x", ",", "y"}], "}"}]}], "}"}], ",", "x"}], 
  "]"}]], "Input",
 Deletable->False,
 CellLabel->"In[14]:="],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4", ",", "2"}], "}"}]}], "}"}]], "Output",
 Editable->False,
 CellEditDuplicate->False,
 Evaluatable->False,
 CellLabel->"Out[14]="]
}, Open  ]],

Cell["\<\
En una lista de caracteres, las posiciones donde aparece la \
\[OpenCurlyDoubleQuote]a\[CloseCurlyDoubleQuote]:\
\>", "CodeCaption",
 Editable->False,
 Deletable->False,
 ShowCellBracket->False],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Position", "[", 
  RowBox[{
   RowBox[{"Characters", "[", "\"\<The Wolfram Language\>\"", "]"}], ",", 
   "\"\<a\>\""}], "]"}]], "Input",
 Deletable->False,
 CellTags->"i:10",
 CellLabel->"In[15]:="],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", "10", "}"}], ",", 
   RowBox[{"{", "14", "}"}], ",", 
   RowBox[{"{", "18", "}"}]}], "}"}]], "Output",
 Editable->False,
 CellEditDuplicate->False,
 Evaluatable->False,
 CellLabel->"Out[15]="]
}, Open  ]],

Cell["\<\
En la secuencia de d\[IAcute]gitos de 2^500, encontrar las posiciones donde \
aparece 0 :\
\>", "CodeCaption",
 Editable->False,
 Deletable->False,
 ShowCellBracket->False,
 CellTags->"i:11"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Flatten", "[", 
  RowBox[{"Position", "[", 
   RowBox[{
    RowBox[{"IntegerDigits", "[", 
     RowBox[{"2", "^", "500"}], "]"}], ",", "0"}], "]"}], "]"}]], "Input",
 Deletable->False,
 CellLabel->"In[16]:="],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "7", ",", "9", ",", "19", ",", "20", ",", "44", ",", "47", ",", "50", ",", 
   "65", ",", "75", ",", "88", ",", "89", ",", "96", ",", "103", ",", "115", 
   ",", "116", ",", "119", ",", "120", ",", "137"}], "}"}]], "Output",
 Editable->False,
 CellEditDuplicate->False,
 Evaluatable->False,
 CellTags->"LastCellOfAPage",
 CellLabel->"Out[16]="]
}, Open  ]],

Cell[TextData[{
 "La funci\[OAcute]n ",
 ButtonBox["ReplacePart",
  BaseStyle->"Link"],
 " efect\[UAcute]a la sustituci\[OAcute]n de partes de una lista:"
}], "Text",
 Editable->False,
 Deletable->False,
 ShowCellBracket->False,
 CellTags->{"p:189", "i:12"}],

Cell[TextData[{
 "Sustituya la parte 3 con ",
 Cell[BoxData["x"], "InlineCode"],
 ":"
}], "CodeCaption",
 Editable->False,
 Deletable->False,
 ShowCellBracket->False],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ReplacePart", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"a", ",", "b", ",", "c", ",", "d", ",", "e", ",", "f", ",", "g"}],
     "}"}], ",", 
   RowBox[{"3", "\[Rule]", "x"}]}], "]"}]], "Input",
 Deletable->False,
 CellLabel->"In[17]:="],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"a", ",", "b", ",", "x", ",", "d", ",", "e", ",", "f", ",", "g"}], 
  "}"}]], "Output",
 Editable->False,
 CellEditDuplicate->False,
 Evaluatable->False,
 CellLabel->"Out[17]="]
}, Open  ]],

Cell["Sustituya en dos partes:", "CodeCaption",
 Editable->False,
 Deletable->False,
 ShowCellBracket->False],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ReplacePart", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"a", ",", "b", ",", "c", ",", "d", ",", "e", ",", "f", ",", "g"}],
     "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"3", "\[Rule]", "x"}], ",", 
     RowBox[{"5", "\[Rule]", "y"}]}], "}"}]}], "]"}]], "Input",
 Deletable->False,
 CellLabel->"In[18]:="],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"a", ",", "b", ",", "x", ",", "d", ",", "y", ",", "f", ",", "g"}], 
  "}"}]], "Output",
 Editable->False,
 CellEditDuplicate->False,
 Evaluatable->False,
 CellLabel->"Out[18]="]
}, Open  ]],

Cell[TextData[{
 "Sustituya 5 partes con \[OpenCurlyDoubleQuote]",
 Cell[BoxData["--"], "InlineCode"],
 "\[CloseCurlyDoubleQuote] , elegidas al azar:"
}], "CodeCaption",
 Editable->False,
 Deletable->False,
 ShowCellBracket->False,
 CellTags->"i:13"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ReplacePart", "[", 
  RowBox[{
   RowBox[{"Characters", "[", "\"\<The Wolfram Language\>\"", "]"}], ",", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"RandomInteger", "[", 
       RowBox[{"{", 
        RowBox[{"1", ",", "20"}], "}"}], "]"}], "\[Rule]", "\"\<--\>\""}], 
     ",", "5"}], "]"}]}], "]"}]], "Input",
 Deletable->False,
 CellLabel->"In[19]:="],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"T\"\>", ",", "\<\"h\"\>", ",", "\<\"e\"\>", ",", "\<\" \"\>", 
   ",", "\<\"W\"\>", ",", "\<\"--\"\>", ",", "\<\"l\"\>", ",", "\<\"f\"\>", 
   ",", "\<\"r\"\>", ",", "\<\"a\"\>", ",", "\<\"m\"\>", ",", "\<\"--\"\>", 
   ",", "\<\"--\"\>", ",", "\<\"--\"\>", ",", "\<\"n\"\>", ",", "\<\"g\"\>", 
   ",", "\<\"u\"\>", ",", "\<\"a\"\>", ",", "\<\"g\"\>", ",", "\<\"--\"\>"}], 
  "}"}]], "Output",
 Editable->False,
 CellEditDuplicate->False,
 Evaluatable->False,
 CellLabel->"Out[19]="]
}, Open  ]],

Cell[TextData[{
 "A veces se desea que desaparezcan de una lista ciertas partes dadas. Esto \
puede hacerse sustituy\[EAcute]ndolas con ",
 ButtonBox["Nothing",
  BaseStyle->"Link"],
 ". "
}], "Text",
 Editable->False,
 Deletable->False,
 ShowCellBracket->False,
 CellTags->"i:14"],

Cell[TextData[{
 ButtonBox["Nothing",
  BaseStyle->"Link"],
 " sencillamente borra:"
}], "CodeCaption",
 Editable->False,
 Deletable->False,
 ShowCellBracket->False],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1", ",", "2", ",", "Nothing", ",", "4", ",", "5", ",", "Nothing"}],
   "}"}]], "Input",
 Deletable->False,
 CellLabel->"In[20]:="],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1", ",", "2", ",", "4", ",", "5"}], "}"}]], "Output",
 Editable->False,
 CellEditDuplicate->False,
 Evaluatable->False,
 CellLabel->"Out[20]="]
}, Open  ]],

Cell[TextData[{
 "Sustituya las partes 1 y 3 con ",
 ButtonBox["Nothing",
  BaseStyle->"Link"],
 ":"
}], "CodeCaption",
 Editable->False,
 Deletable->False,
 ShowCellBracket->False],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ReplacePart", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"a", ",", "b", ",", "c", ",", "d", ",", "e", ",", "f", ",", "g"}],
     "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"1", "\[Rule]", "Nothing"}], ",", 
     RowBox[{"3", "\[Rule]", "Nothing"}]}], "}"}]}], "]"}]], "Input",
 Deletable->False,
 CellLabel->"In[21]:="],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"b", ",", "d", ",", "e", ",", "f", ",", "g"}], "}"}]], "Output",
 Editable->False,
 CellEditDuplicate->False,
 Evaluatable->False,
 CellLabel->"Out[21]="]
}, Open  ]],

Cell["\<\
Tome 50 palabras del ingl\[EAcute]s al azar, eliminando aquellas que tengan m\
\[AAcute]s de 5 caracteres e invierta el orden de las que queden:\
\>", "CodeCaption",
 Editable->False,
 Deletable->False,
 ShowCellBracket->False],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"If", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"StringLength", "[", "#", "]"}], ">", "5"}], ",", "Nothing", 
     ",", 
     RowBox[{"StringReverse", "[", "#", "]"}]}], "]"}], "&"}], "/@", 
  RowBox[{"RandomSample", "[", 
   RowBox[{
    RowBox[{"WordList", "[", "\[ThinSpace]", "]"}], ",", "50"}], 
   "]"}]}]], "Input",
 Deletable->False,
 CellLabel->"In[22]:="],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"yllud\"\>", ",", "\<\"yciuj\"\>", ",", "\<\"poons\"\>", 
   ",", "\<\"tsioh\"\>"}], "}"}]], "Output",
 Editable->False,
 CellEditDuplicate->False,
 Evaluatable->False,
 CellLabel->"Out[22]="]
}, Open  ]],

Cell[TextData[{
 ButtonBox["Take",
  BaseStyle->"Link"],
 " elige un n\[UAcute]mero especificado de los elementos de una lista con \
base en sus posiciones. ",
 ButtonBox["TakeLargest",
  BaseStyle->"Link"],
 " y ",
 ButtonBox["TakeSmallest",
  BaseStyle->"Link"],
 " elige los elementos con base en sus tama\[NTilde]os."
}], "Text",
 Editable->False,
 Deletable->False,
 ShowCellBracket->False,
 CellTags->"i:15"],

Cell["Obtener los 5 elementos m\[AAcute]s grandes de una lista: ", \
"CodeCaption",
 Editable->False,
 Deletable->False,
 ShowCellBracket->False],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"TakeLargest", "[", 
  RowBox[{
   RowBox[{"Range", "[", "20", "]"}], ",", "5"}], "]"}]], "Input",
 Deletable->False,
 CellLabel->"In[23]:="],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"20", ",", "19", ",", "18", ",", "17", ",", "16"}], "}"}]], "Output",\

 Editable->False,
 CellEditDuplicate->False,
 Evaluatable->False,
 CellLabel->"Out[23]="]
}, Open  ]],

Cell[TextData[{
 ButtonBox["TakeLargestBy",
  BaseStyle->"Link"],
 " y ",
 ButtonBox["TakeSmallestBy",
  BaseStyle->"Link"],
 " elige los elementos de acuerdo con la aplicaci\[OAcute]n de alguna funci\
\[OAcute]n."
}], "Text",
 Editable->False,
 Deletable->False,
 ShowCellBracket->False],

Cell["\<\
Proporcione los 100 primeros n\[UAcute]meros romanos, tome los 5 que tengan \
las mayores longitudes de cadena de sus caracteres:\
\>", "CodeCaption",
 Editable->False,
 Deletable->False,
 ShowCellBracket->False,
 CellTags->"i:16"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"TakeLargestBy", "[", 
  RowBox[{
   RowBox[{"Array", "[", 
    RowBox[{"RomanNumeral", ",", "100"}], "]"}], ",", "StringLength", ",", 
   "5"}], "]"}]], "Input",
 Deletable->False,
 CellLabel->"In[24]:="],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"LXXXVIII\"\>", ",", "\<\"LXXXIII\"\>", ",", "\<\"XXXVIII\"\>", 
   ",", "\<\"LXXVIII\"\>", ",", "\<\"LXXXVII\"\>"}], "}"}]], "Output",
 Editable->False,
 CellEditDuplicate->False,
 Evaluatable->False,
 CellTags->"LastCellOfAPage",
 CellLabel->"Out[24]="]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Vocabulario", "VocabularySection",
 Editable->False,
 Deletable->False,
 ShowCellBracket->False,
 CellTags->"p:190"],

Cell[BoxData[GridBox[{
   {
    RowBox[{
     ButtonBox["Part",
      BaseStyle->"CodeLink"], "[", 
     RowBox[{
      StyleBox["lista", "CodeVariableLrg"], ",", 
      StyleBox["n", "CodeVariableLrg"]}], "]"}], " ", Cell[TextData[{
     "parte ",
     Cell[BoxData[
      StyleBox["n", "CodeVariable"]], "InlineCode"],
     " de una lista"
    }], "VocabularyText"]},
   {
    RowBox[{
     StyleBox["lista", "CodeVariableLrg"], "[", 
     RowBox[{"[", 
      StyleBox["n", "CodeVariableLrg"], "]"}], "]"}], " ", Cell[TextData[{
     "notaci\[OAcute]n abreviada para la parte ",
     StyleBox["n",
      FontSlant->"Italic"],
     " de una lista"
    }], "VocabularyText"]},
   {
    RowBox[{
     StyleBox["lista", "CodeVariableLrg"], "[", 
     RowBox[{"[", 
      RowBox[{"{", 
       RowBox[{
        SubscriptBox[
         StyleBox["n", "CodeVariableLrg"], "1"], 
        StyleBox[",", "CodeVariableLrg"], 
        SubscriptBox[
         StyleBox["n", "CodeVariableLrg"], "2"], 
        StyleBox[",", "CodeVariableLrg"], 
        StyleBox["...", "GrayPointSix"]}], "}"}], "]"}], "]"}], " ", Cell[
    TextData[{
     "lista de las partes ",
     Cell[BoxData[
      FormBox[
       StyleBox[
        SubscriptBox[
         StyleBox["n", "CodeVariable"], "1"],
        FontColor->GrayLevel[0]], TraditionalForm]]],
     ", ",
     Cell[BoxData[
      FormBox[
       SubscriptBox[
        StyleBox["n", "CodeVariable"], "2"], TraditionalForm]],
      FontColor->GrayLevel[0]],
     ", ",
     StyleBox["...", "GrayPointSix"]
    }], "VocabularyText"]},
   {
    RowBox[{
     StyleBox["lista", "CodeVariableLrg"], "[", 
     RowBox[{"[", 
      RowBox[{
       SubscriptBox[
        StyleBox["n", "CodeVariableLrg"], "1"], 
       ButtonBox[";;",
        BaseStyle->"CodeLink",
        ButtonData->"Span"], 
       SubscriptBox[
        StyleBox["n", "CodeVariableLrg"], "2"]}], "]"}], "]"}], " ", Cell[
    TextData[{
     "extensi\[OAcute]n (secuencia) de las partes ",
     Cell[BoxData[
      FormBox[
       SubscriptBox[
        StyleBox["n", "CodeVariable"], "1"], TraditionalForm]],
      FontColor->GrayLevel[0]],
     " hasta",
     StyleBox[" ",
      FontColor->GrayLevel[0]],
     Cell[BoxData[
      FormBox[
       SubscriptBox[
        StyleBox["n", "CodeVariable"], "2"], TraditionalForm]],
      FontColor->GrayLevel[0]]
    }], "VocabularyText"]},
   {
    RowBox[{
     StyleBox["lista", "CodeVariableLrg"], "[", 
     RowBox[{"[", 
      RowBox[{
       StyleBox["m", "CodeVariableLrg"], ",", 
       StyleBox["n", "CodeVariableLrg"]}], "]"}], "]"}], " ", Cell[TextData[{
     "elemento en la fila ",
     Cell[BoxData[
      StyleBox["m", "CodeVariable"]], "InlineCode"],
     ", columna ",
     Cell[BoxData[
      StyleBox["n", "CodeVariable"]], "InlineCode"],
     " de un arreglo"
    }], "VocabularyText"]},
   {
    RowBox[{
     StyleBox["lista", "CodeVariableLrg"], "[", 
     RowBox[{"[", 
      RowBox[{
       ButtonBox["All",
        BaseStyle->"CodeLink"], ",", 
       StyleBox["n", "CodeVariableLrg"]}], "]"}], "]"}], " ", Cell[TextData[{
     "todos los elementos de la columna ",
     Cell[BoxData[
      StyleBox["n", "CodeVariable"]], "InlineCode"]
    }], "VocabularyText"]},
   {
    RowBox[{
     ButtonBox["Take",
      BaseStyle->"CodeLink"], "[", 
     RowBox[{
      StyleBox["lista", "CodeVariableLrg"], ",", 
      StyleBox["n", "CodeVariableLrg"]}], "]"}], " ", Cell[TextData[{
     "toma los ",
     StyleBox["n",
      FontSlant->"Italic"],
     " primeros elementos de una lista"
    }], "VocabularyText"]},
   {
    RowBox[{
     ButtonBox["TakeLargest",
      BaseStyle->"CodeLink"], "[", 
     RowBox[{
      StyleBox["lista", "CodeVariableLrg"], ",", 
      StyleBox["n", "CodeVariableLrg"]}], "]"}], " ", Cell[TextData[{
     "toma los ",
     StyleBox["n",
      FontSlant->"Italic"],
     " elementos m\[AAcute]s grandes de una lista"
    }], "VocabularyText"]},
   {
    RowBox[{
     ButtonBox["TakeSmallest",
      BaseStyle->"CodeLink"], "[", 
     RowBox[{
      StyleBox["lista", "CodeVariableLrg"], ",", 
      StyleBox["n", "CodeVariableLrg"]}], "]"}], " ", Cell[TextData[{
     "toma los ",
     StyleBox["n",
      FontSlant->"Italic"],
     " elementos m\[AAcute]s peque\[NTilde]os de una lista"
    }], "VocabularyText"]},
   {
    RowBox[{
     ButtonBox["TakeLargestBy",
      BaseStyle->"CodeLink"], "[", 
     RowBox[{
      StyleBox["lista", "CodeVariableLrg"], ",", 
      StyleBox["f", "CodeVariableLrg"], ",", 
      StyleBox["n", "CodeVariableLrg"]}], "]"}], " ", Cell[TextData[{
     "toma los elementos m\[AAcute]s grandes al aplicar ",
     Cell[BoxData[
      StyleBox["f", "CodeVariable"]], "InlineCode"]
    }], "VocabularyText"]},
   {
    RowBox[{
     ButtonBox["TakeSmallestBy",
      BaseStyle->"CodeLink"], "[", 
     RowBox[{
      StyleBox["lista", "CodeVariableLrg"], ",", 
      StyleBox["f", "CodeVariableLrg"], ",", 
      StyleBox["n", "CodeVariableLrg"]}], "]"}], " ", Cell[TextData[{
     "toma los elementos m\[AAcute]s peque\[NTilde]os al aplicar ",
     Cell[BoxData[
      StyleBox["f", "CodeVariable"]], "InlineCode"]
    }], "VocabularyText"]},
   {
    RowBox[{
     ButtonBox["Position",
      BaseStyle->"CodeLink"], "[", 
     RowBox[{
      StyleBox["lista", "CodeVariableLrg"], ",", 
      StyleBox["x", "CodeVariableLrg"]}], "]"}], " ", Cell[TextData[{
     "todas las posiciones en que se encuentra ",
     Cell[BoxData[
      StyleBox["x", "CodeVariable"]], "InlineCode"],
     " en ",
     Cell[BoxData[
      StyleBox["lista", "CodeVariable"]], "InlineCode"]
    }], "VocabularyText"]},
   {
    RowBox[{
     ButtonBox["ReplacePart",
      BaseStyle->"CodeLink"], "[", 
     RowBox[{
      StyleBox["lista", "CodeVariableLrg"], ",", 
      RowBox[{
       StyleBox["n", "CodeVariableLrg"], "\[Rule]", 
       StyleBox["x", "CodeVariableLrg"]}]}], "]"}], " ", Cell[TextData[{
     "sustituye con ",
     Cell[BoxData[
      StyleBox["x", "CodeVariable"]], "InlineCode"],
     " la parte ",
     Cell[BoxData[
      StyleBox["n", "CodeVariable"]], "InlineCode"],
     " de ",
     Cell[BoxData[
      StyleBox["lista", "CodeVariable"]], "InlineCode"]
    }], "VocabularyText"]},
   {
    ButtonBox["Nothing",
     BaseStyle->"CodeLink"], " ", Cell[
    "elemento que se elimina autom\[AAcute]ticamente en una lista", 
     "VocabularyText"]}
  }]], "VocabularyTable",
 Editable->False,
 Deletable->False,
 ShowCellBracket->False,
 GridBoxOptions->{
 GridBoxDividers->{
  "Columns" -> {{False}}, "Rows" -> {False, {True, True, True, 
      Directive[
       Thickness[1.5], "VocabDivColor"], True, 
      Directive[
       Thickness[1.5], "VocabDivColor"], True, True, True, True, 
      Directive[
       Thickness[1.5], "VocabDivColor"], True, True, True}, False}}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 DynamicModuleBox[{$CellContext`open$$ = False}, 
  TagBox[GridBox[{
     {
      StyleBox["\<\"Exercises\"\>",
       StripOnInput->False,
       FontSlant->"Italic"], 
      PaneBox[
       TagBox[
        ButtonBox[
         DynamicBox[ToBoxes[
           If[$CellContext`open$$, 
            Row[{
              Style["-", "ExercisePreviewButtonTextHighlight"], 
              Style[" Preview Exercises", "ExercisePreviewButtonText"]}], 
            Row[{
              Style["+", "ExercisePreviewButtonTextHighlight"], 
              Style[" Preview Exercises", "ExercisePreviewButtonText"]}]], 
           StandardForm],
          ImageSizeCache->{115., {1., 10.}}],
         Appearance->None,
         ButtonFunction:>(
          If[$CellContext`open$$, $CellContext`open$$ = 
            False, $CellContext`open$$ = True]; NotebookFind[
            EvaluationNotebook[], "ExerciseSummaryCell", Next, CellStyle, 
            WrapAround -> True, AutoScroll -> False]; FrontEndTokenExecute[
            EvaluationNotebook[], "ExpandSelection"]; FrontEndExecute[
            FrontEndToken[
             EvaluationNotebook[], "OpenCloseGroup"]]),
         Evaluator->Automatic,
         Method->"Preemptive"],
        MouseAppearanceTag["LinkHand"]],
       Alignment->Right,
       ImageSize->Full]}
    },
    AutoDelete->False,
    GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
    GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
   "Grid"],
  DynamicModuleValues:>{}]], "ExerciseSection",
 Editable->False,
 ShowCellBracket->False,
 GeneratedCell->True,
 CellAutoOverwrite->True,
 CellChangeTimes->{3.669991951589675*^9},
 ShowStringCharacters->False],

Cell[CellGroupData[{

Cell[BoxData[
 TagBox[GridBox[{
    {
     TagBox[GridBox[{
        {
         PaneBox[
          
          StyleBox["\<\"13 Exercises Available\"\>", "ExerciseSummaryHeading",
           
           StripOnInput->False],
          ImageMargins->{{20, 0}, {0, 10}}]}
       },
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
       
       GridBoxSpacings->{"Columns" -> {{Automatic}}, "Rows" -> {{0}}}],
      "Column"], 
     PaneBox[
      ButtonBox[
       StyleBox["\<\"Get Started \[RightGuillemet]\"\>", 
        "ExerciseSummaryHeading",
        StripOnInput->False],
       Appearance->None,
       ButtonFunction:>
        NotebookLocate[{"EIWL2-31-parts-of-lists-exercises.nb", ""}],
       Evaluator->Automatic,
       Method->"Preemptive"],
      FrameMargins->{{10, 0}, {10, 10}},
      ImageSize->Full]}
   },
   AutoDelete->False,
   GridBoxAlignment->{"Columns" -> {{Left}}},
   GridBoxItemSize->{"Columns" -> {
       Scaled[0.7], 
       Scaled[0.3]}, "Rows" -> {{Automatic}}}],
  "Grid"]], "ExerciseSummaryCell",
 Editable->False,
 Deletable->False,
 ShowCellBracket->False],

Cell[CellGroupData[{

Cell[TextData[{
 "Encuentre los 5 \[UAcute]ltimos d\[IAcute]gitos de 2^1000.",
 StyleBox[ButtonBox["\[NonBreakingSpace]\[RightGuillemet]",
  Appearance->None,
  Evaluator->Automatic,
  Method->"Preemptive",
  ButtonFunction:>(SelectionMove[
     ButtonNotebook[], All, ButtonCell, AutoScroll -> False]; 
   FrontEndExecute[
     FrontEndToken[
      ButtonNotebook[], "OpenCloseGroup"]])],
  FontColor->RGBColor[1, 0.501961, 0]]
}], "Exercise",
 Editable->False,
 Selectable->False,
 Deletable->False,
 CellDingbat->Cell[
  "31.1", "ExerciseNumber", FontColor -> 
   RGBColor[0.9019607843137255, 0.4117647058823529, 0.027450980392156862`]],
 ShowCellBracket->False],

Cell[BoxData[
 PaneBox[GridBox[{
    {" ", 
     StyleBox[
      RowBox[{"Expected", " ", 
       RowBox[{"output", ":"}]}],
      Editable->False,
      Selectable->False,
      StripOnInput->False,
      FontColor->RGBColor[0.45, 0.45, 0.45]], " "},
    {" ", 
     InterpretationBox[Cell[BoxData[
       RowBox[{"{", 
        RowBox[{"6", ",", "9", ",", "3", ",", "7", ",", "6"}], "}"}]], 
       "ExerciseOutput"],
      Apply[TextCell, 
       Cell[
        BoxData[
         RowBox[{"{", 
           RowBox[{"6", ",", "9", ",", "3", ",", "7", ",", "6"}], "}"}]], 
        "ExerciseOutput", Selectable -> False, Copyable -> False, Editable -> 
        False, ShowCellBracket -> False]]], " "}
   },
   GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Center}}},
   GridBoxBackground->{"Columns" -> {{
        RGBColor[1, 1, 1]}}},
   GridBoxSpacings->{"Columns" -> {{Automatic}}, "Rows" -> {{1}}}],
  FrameMargins->0]], "ExerciseOutput",
 Editable->False,
 Selectable->False,
 Deletable->False,
 CellFrame->{{1, 1}, {1, 1}},
 ShowCellBracket->False,
 CellFrameColor->RGBColor[0.85, 0.85, 0.85],
 LineBreakWithin->Automatic]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 "Obtenga las letras de la 10 a la 20 del alfabeto ingl\[EAcute]s.",
 StyleBox[ButtonBox["\[NonBreakingSpace]\[RightGuillemet]",
  Appearance->None,
  Evaluator->Automatic,
  Method->"Preemptive",
  ButtonFunction:>(SelectionMove[
     ButtonNotebook[], All, ButtonCell, AutoScroll -> False]; 
   FrontEndExecute[
     FrontEndToken[
      ButtonNotebook[], "OpenCloseGroup"]])],
  FontColor->RGBColor[1, 0.501961, 0]]
}], "Exercise",
 Editable->False,
 Selectable->False,
 Deletable->False,
 CellDingbat->Cell[
  "31.2", "ExerciseNumber", FontColor -> 
   RGBColor[0.9019607843137255, 0.4117647058823529, 0.027450980392156862`]],
 ShowCellBracket->False],

Cell[BoxData[
 PaneBox[GridBox[{
    {" ", 
     StyleBox[
      RowBox[{"Expected", " ", 
       RowBox[{"output", ":"}]}],
      Editable->False,
      Selectable->False,
      StripOnInput->False,
      FontColor->RGBColor[0.45, 0.45, 0.45]], " "},
    {" ", 
     InterpretationBox[Cell[BoxData[
       RowBox[{"{", 
        RowBox[{"\<\"j\"\>", ",", "\<\"k\"\>", ",", "\<\"l\"\>", 
         ",", "\<\"m\"\>", ",", "\<\"n\"\>", ",", "\<\"o\"\>", 
         ",", "\<\"p\"\>", ",", "\<\"q\"\>", ",", "\<\"r\"\>", 
         ",", "\<\"s\"\>", ",", "\<\"t\"\>"}], "}"}]], "ExerciseOutput"],
      Apply[TextCell, 
       Cell[
        BoxData[
         RowBox[{"{", 
           
           RowBox[{"\"j\"", ",", "\"k\"", ",", "\"l\"", ",", "\"m\"", ",", 
             "\"n\"", ",", "\"o\"", ",", "\"p\"", ",", "\"q\"", ",", "\"r\"", 
             ",", "\"s\"", ",", "\"t\""}], "}"}]], "ExerciseOutput", 
        Selectable -> False, Copyable -> False, Editable -> False, 
        ShowCellBracket -> False]]], " "}
   },
   GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Center}}},
   GridBoxBackground->{"Columns" -> {{
        RGBColor[1, 1, 1]}}},
   GridBoxSpacings->{"Columns" -> {{Automatic}}, "Rows" -> {{1}}}],
  FrameMargins->0]], "ExerciseOutput",
 Editable->False,
 Selectable->False,
 Deletable->False,
 CellFrame->{{1, 1}, {1, 1}},
 ShowCellBracket->False,
 CellFrameColor->RGBColor[0.85, 0.85, 0.85],
 LineBreakWithin->Automatic]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 "Forme la lista de las letras en las posiciones pares del alfabeto ingl\
\[EAcute]s.",
 StyleBox[ButtonBox["\[NonBreakingSpace]\[RightGuillemet]",
  Appearance->None,
  Evaluator->Automatic,
  Method->"Preemptive",
  ButtonFunction:>(SelectionMove[
     ButtonNotebook[], All, ButtonCell, AutoScroll -> False]; 
   FrontEndExecute[
     FrontEndToken[
      ButtonNotebook[], "OpenCloseGroup"]])],
  FontColor->RGBColor[1, 0.501961, 0]]
}], "Exercise",
 Editable->False,
 Selectable->False,
 Deletable->False,
 CellDingbat->Cell[
  "31.3", "ExerciseNumber", FontColor -> 
   RGBColor[0.9019607843137255, 0.4117647058823529, 0.027450980392156862`]],
 ShowCellBracket->False],

Cell[BoxData[
 PaneBox[GridBox[{
    {" ", 
     StyleBox[
      RowBox[{"Expected", " ", 
       RowBox[{"output", ":"}]}],
      Editable->False,
      Selectable->False,
      StripOnInput->False,
      FontColor->RGBColor[0.45, 0.45, 0.45]], " "},
    {" ", 
     InterpretationBox[Cell[BoxData[
       RowBox[{"{", 
        RowBox[{"\<\"b\"\>", ",", "\<\"d\"\>", ",", "\<\"f\"\>", 
         ",", "\<\"h\"\>", ",", "\<\"j\"\>", ",", "\<\"l\"\>", 
         ",", "\<\"n\"\>", ",", "\<\"p\"\>", ",", "\<\"r\"\>", 
         ",", "\<\"t\"\>", ",", "\<\"v\"\>", ",", "\<\"x\"\>", 
         ",", "\<\"z\"\>"}], "}"}]], "ExerciseOutput"],
      Apply[TextCell, 
       Cell[
        BoxData[
         RowBox[{"{", 
           
           RowBox[{"\"b\"", ",", "\"d\"", ",", "\"f\"", ",", "\"h\"", ",", 
             "\"j\"", ",", "\"l\"", ",", "\"n\"", ",", "\"p\"", ",", "\"r\"", 
             ",", "\"t\"", ",", "\"v\"", ",", "\"x\"", ",", "\"z\""}], "}"}]],
         "ExerciseOutput", Selectable -> False, Copyable -> False, Editable -> 
        False, ShowCellBracket -> False]]], " "}
   },
   GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Center}}},
   GridBoxBackground->{"Columns" -> {{
        RGBColor[1, 1, 1]}}},
   GridBoxSpacings->{"Columns" -> {{Automatic}}, "Rows" -> {{1}}}],
  FrameMargins->0]], "ExerciseOutput",
 Editable->False,
 Selectable->False,
 Deletable->False,
 CellFrame->{{1, 1}, {1, 1}},
 ShowCellBracket->False,
 CellFrameColor->RGBColor[0.85, 0.85, 0.85],
 LineBreakWithin->Automatic]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 "Obtenga el gr\[AAcute]fico con los puntos unidos del pen\[UAcute]ltimo d\
\[IAcute]gito en las 100 primeras potencias de 12.",
 StyleBox[ButtonBox["\[NonBreakingSpace]\[RightGuillemet]",
  Appearance->None,
  Evaluator->Automatic,
  Method->"Preemptive",
  ButtonFunction:>(SelectionMove[
     ButtonNotebook[], All, ButtonCell, AutoScroll -> False]; 
   FrontEndExecute[
     FrontEndToken[
      ButtonNotebook[], "OpenCloseGroup"]])],
  FontColor->RGBColor[1, 0.501961, 0]]
}], "Exercise",
 Editable->False,
 Selectable->False,
 Deletable->False,
 CellDingbat->Cell[
  "31.4", "ExerciseNumber", FontColor -> 
   RGBColor[0.9019607843137255, 0.4117647058823529, 0.027450980392156862`]],
 ShowCellBracket->False],

Cell[BoxData[
 PaneBox[GridBox[{
    {" ", 
     StyleBox[
      RowBox[{"Expected", " ", 
       RowBox[{"output", ":"}]}],
      Editable->False,
      Selectable->False,
      StripOnInput->False,
      FontColor->RGBColor[0.45, 0.45, 0.45]], " "},
    {" ", 
     InterpretationBox[Cell[BoxData[
       GraphicsBox[{{}, {{}, {}, 
          {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
           0.01388888888888889], AbsoluteThickness[1.6], 
           LineBox[CompressedData["
1:eJx9kblKA1AQRR9WlhYWFhYqIiIi7rvmue9bjFsrWvsL82nvk/IJKrlHmFs4
EC4nTN7MnEy+f3U/h0opHz+f3xxUv5Oz1EGMKIfr/9+PGo8pJ5Tj/L7k76cs
eWfa5s3Ye7PWP2dz5m2PBeNFJfcu2R7Ltu+KmLtXbd6avbdu/Ru8p9xU4mvL
eFvJvTu2z67tu6fEx77N69h7NfcHzD0HSvkK43Ko1L0Bs89R3jdgfBzneQHj
7yT3B8w9p0r5CuNyptS9AVPned+A8XeR5wWMv8vcHzD+rpT4My7XSvzB2qfc
5H0Dxt9tnhcw/u5yf8D4u1fKVzUOWPc2mHrI+1YYH7DmNRh/3dxfYe6B5asZ
l0el7q2w9glY1WD89fK8CvN/9HJ/g/H3pMSfccD4g6nnvG+F8QfjD8bfS+6v
MP5g/BmXVyX+YO0TsKrB+Hv7m/cNFrhx1A==
            "]]}}, {}},
        AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
        Axes->{True, True},
        AxesLabel->{None, None},
        AxesOrigin->{0, 0},
        DisplayFunction->Identity,
        Frame->{{False, False}, {False, False}},
        FrameLabel->{{None, None}, {None, None}},
        FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
        GridLines->{None, None},
        GridLinesStyle->Directive[
          GrayLevel[0.5, 0.4]],
        ImageSize->{328.6015625, Automatic},
        Method->{},
        PlotRange->{{0., 100.}, {0, 9.}},
        PlotRangeClipping->True,
        PlotRangePadding->{{
           Scaled[0.02], 
           Scaled[0.02]}, {
           Scaled[0.02], 
           Scaled[0.05]}},
        Ticks->{Automatic, Automatic}]], "ExerciseOutput"],
      Apply[TextCell, 
       Cell[
        BoxData[
         GraphicsBox[{{}, {{}, {}, {{
              RGBColor[0.368417, 0.506779, 0.709798], 
              PointSize[0.01388888888888889], 
              AbsoluteThickness[1.6], 
              LineBox[CompressedData["
1:eJx9kblKA1AQRR9WlhYWFhYqIiIi7rvmue9bjFsrWvsL82nvk/IJKrlHmFs4
EC4nTN7MnEy+f3U/h0opHz+f3xxUv5Oz1EGMKIfr/9+PGo8pJ5Tj/L7k76cs
eWfa5s3Ye7PWP2dz5m2PBeNFJfcu2R7Ltu+KmLtXbd6avbdu/Ru8p9xU4mvL
eFvJvTu2z67tu6fEx77N69h7NfcHzD0HSvkK43Ko1L0Bs89R3jdgfBzneQHj
7yT3B8w9p0r5CuNyptS9AVPned+A8XeR5wWMv8vcHzD+rpT4My7XSvzB2qfc
5H0Dxt9tnhcw/u5yf8D4u1fKVzUOWPc2mHrI+1YYH7DmNRh/3dxfYe6B5asZ
l0el7q2w9glY1WD89fK8CvN/9HJ/g/H3pMSfccD4g6nnvG+F8QfjD8bfS+6v
MP5g/BmXVyX+YO0TsKrB+Hv7m/cNFrhx1A==
               "]]}}}, {}}, AspectRatio -> 
          NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
          AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction -> 
          Identity, Frame -> {{False, False}, {False, False}}, 
          FrameLabel -> {{None, None}, {None, None}}, 
          FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
          GridLines -> {None, None}, GridLinesStyle -> Directive[
            GrayLevel[0.5, 0.4]], ImageSize -> {328.6015625, Automatic}, 
          Method -> {}, PlotRange -> {{0., 100.}, {0, 9.}}, PlotRangeClipping -> 
          True, PlotRangePadding -> {{
             Scaled[0.02], 
             Scaled[0.02]}, {
             Scaled[0.02], 
             Scaled[0.05]}}, Ticks -> {Automatic, Automatic}]], 
        "ExerciseOutput", Selectable -> False, Copyable -> False, Editable -> 
        False, ShowCellBracket -> False]]], " "}
   },
   GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Center}}},
   GridBoxBackground->{"Columns" -> {{
        RGBColor[1, 1, 1]}}},
   GridBoxSpacings->{"Columns" -> {{Automatic}}, "Rows" -> {{1}}}],
  FrameMargins->0]], "ExerciseOutput",
 Editable->False,
 Selectable->False,
 Deletable->False,
 CellFrame->{{1, 1}, {1, 1}},
 ShowCellBracket->False,
 CellFrameColor->RGBColor[0.85, 0.85, 0.85],
 LineBreakWithin->Automatic]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 "Junte las listas de los 20 primeros cuadrados y cubos, y obtenga los 10 \
elementos m\[AAcute]s peque\[NTilde]os de la lista combinada.",
 StyleBox[ButtonBox["\[NonBreakingSpace]\[RightGuillemet]",
  Appearance->None,
  Evaluator->Automatic,
  Method->"Preemptive",
  ButtonFunction:>(SelectionMove[
     ButtonNotebook[], All, ButtonCell, AutoScroll -> False]; 
   FrontEndExecute[
     FrontEndToken[
      ButtonNotebook[], "OpenCloseGroup"]])],
  FontColor->RGBColor[1, 0.501961, 0]]
}], "Exercise",
 Editable->False,
 Selectable->False,
 Deletable->False,
 CellDingbat->Cell[
  "31.5", "ExerciseNumber", FontColor -> 
   RGBColor[0.9019607843137255, 0.4117647058823529, 0.027450980392156862`]],
 ShowCellBracket->False],

Cell[BoxData[
 PaneBox[GridBox[{
    {" ", 
     StyleBox[
      RowBox[{"Expected", " ", 
       RowBox[{"output", ":"}]}],
      Editable->False,
      Selectable->False,
      StripOnInput->False,
      FontColor->RGBColor[0.45, 0.45, 0.45]], " "},
    {" ", 
     InterpretationBox[Cell[BoxData[
       RowBox[{"{", 
        RowBox[{
        "1", ",", "1", ",", "4", ",", "8", ",", "9", ",", "16", ",", "25", 
         ",", "27", ",", "36", ",", "49"}], "}"}]], "ExerciseOutput"],
      Apply[TextCell, 
       Cell[
        BoxData[
         RowBox[{"{", 
           
           RowBox[{"1", ",", "1", ",", "4", ",", "8", ",", "9", ",", "16", 
             ",", "25", ",", "27", ",", "36", ",", "49"}], "}"}]], 
        "ExerciseOutput", Selectable -> False, Copyable -> False, Editable -> 
        False, ShowCellBracket -> False]]], " "}
   },
   GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Center}}},
   GridBoxBackground->{"Columns" -> {{
        RGBColor[1, 1, 1]}}},
   GridBoxSpacings->{"Columns" -> {{Automatic}}, "Rows" -> {{1}}}],
  FrameMargins->0]], "ExerciseOutput",
 Editable->False,
 Selectable->False,
 Deletable->False,
 CellFrame->{{1, 1}, {1, 1}},
 ShowCellBracket->False,
 CellFrameColor->RGBColor[0.85, 0.85, 0.85],
 LineBreakWithin->Automatic]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 "Encuentre las posiciones de la palabra \[OpenCurlyDoubleQuote]software\
\[CloseCurlyDoubleQuote] en el art\[IAcute]culo \
\[OpenCurlyDoubleQuote]computers\[CloseCurlyDoubleQuote] en Wikipedia.",
 StyleBox[ButtonBox["\[NonBreakingSpace]\[RightGuillemet]",
  Appearance->None,
  Evaluator->Automatic,
  Method->"Preemptive",
  ButtonFunction:>(SelectionMove[
     ButtonNotebook[], All, ButtonCell, AutoScroll -> False]; 
   FrontEndExecute[
     FrontEndToken[
      ButtonNotebook[], "OpenCloseGroup"]])],
  FontColor->RGBColor[1, 0.501961, 0]]
}], "Exercise",
 Editable->False,
 Selectable->False,
 Deletable->False,
 CellDingbat->Cell[
  "31.6", "ExerciseNumber", FontColor -> 
   RGBColor[0.9019607843137255, 0.4117647058823529, 0.027450980392156862`]],
 ShowCellBracket->False],

Cell[BoxData[
 PaneBox[GridBox[{
    {" ", 
     StyleBox[
      RowBox[{"Sample", " ", "expected", " ", 
       RowBox[{"output", ":"}]}],
      Editable->False,
      Selectable->False,
      StripOnInput->False,
      FontColor->RGBColor[0.45, 0.45, 0.45]], " "},
    {" ", 
     InterpretationBox[Cell[BoxData[
       RowBox[{"{", 
        RowBox[{
        "4594", ",", "4732", ",", "4739", ",", "4747", ",", "4769", ",", 
         "6070", ",", "6164", ",", "6186", ",", "7608", ",", "7665", ",", 
         "7687"}], "}"}]], "ExerciseOutput"],
      Apply[TextCell, 
       Cell[
        BoxData[
         RowBox[{"{", 
           
           RowBox[{"4594", ",", "4732", ",", "4739", ",", "4747", ",", "4769",
              ",", "6070", ",", "6164", ",", "6186", ",", "7608", ",", "7665",
              ",", "7687"}], "}"}]], "ExerciseOutput", Selectable -> False, 
        Copyable -> False, Editable -> False, ShowCellBracket -> False]]], " "}
   },
   GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Center}}},
   GridBoxBackground->{"Columns" -> {{
        RGBColor[1, 1, 1]}}},
   GridBoxSpacings->{"Columns" -> {{Automatic}}, "Rows" -> {{1}}}],
  FrameMargins->0]], "ExerciseOutput",
 Editable->False,
 Selectable->False,
 Deletable->False,
 CellFrame->{{1, 1}, {1, 1}},
 ShowCellBracket->False,
 CellFrameColor->RGBColor[0.85, 0.85, 0.85],
 LineBreakWithin->Automatic]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 "Produzca el histograma de las posiciones donde aparece la letra \
\[OpenCurlyDoubleQuote]e\[CloseCurlyDoubleQuote] en las palabras de ",
 Cell[BoxData[
  RowBox[{
   ButtonBox["WordList",
    BaseStyle->"CodeLink"], "[", " ", "]"}]], "InlineCode"],
 ".",
 StyleBox[ButtonBox["\[NonBreakingSpace]\[RightGuillemet]",
  Appearance->None,
  Evaluator->Automatic,
  Method->"Preemptive",
  ButtonFunction:>(SelectionMove[
     ButtonNotebook[], All, ButtonCell, AutoScroll -> False]; 
   FrontEndExecute[
     FrontEndToken[
      ButtonNotebook[], "OpenCloseGroup"]])],
  FontColor->RGBColor[1, 0.501961, 0]]
}], "Exercise",
 Editable->False,
 Selectable->False,
 Deletable->False,
 CellDingbat->Cell[
  "31.7", "ExerciseNumber", FontColor -> 
   RGBColor[0.9019607843137255, 0.4117647058823529, 0.027450980392156862`]],
 ShowCellBracket->False],

Cell[BoxData[
 PaneBox[GridBox[{
    {" ", 
     StyleBox[
      RowBox[{"Expected", " ", 
       RowBox[{"output", ":"}]}],
      Editable->False,
      Selectable->False,
      StripOnInput->False,
      FontColor->RGBColor[0.45, 0.45, 0.45]], " "},
    {" ", 
     InterpretationBox[Cell[BoxData[
       GraphicsBox[{
         {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], 
          EdgeForm[{Opacity[0.5459999999999999], Thickness[Small]}], {}, 
          {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], 
           EdgeForm[{Opacity[0.5459999999999999], Thickness[Small]}], 
           TagBox[
            TooltipBox[
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                RectangleBox[{1., 0}, {2., 1674}, "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{28.85248198558847, 39.60868694955965}, {
                19.519746207292023`, 54.16478329277473}}],
              StatusArea[#, 1674]& ,
              TagBoxNote->"1674"],
             StyleBox["1674", {}, StripOnInput -> False]],
            Annotation[#, 
             Style[1674, {}], "Tooltip"]& ], 
           TagBox[
            TooltipBox[
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                RectangleBox[{2., 0}, {3., 6021}, "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{39.10868694955965, 
                49.864891913530826`}, {-69.14720493404211, 
                54.16478329277473}}],
              StatusArea[#, 6021]& ,
              TagBoxNote->"6021"],
             StyleBox["6021", {}, StripOnInput -> False]],
            Annotation[#, 
             Style[6021, {}], "Tooltip"]& ], 
           TagBox[
            TooltipBox[
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                RectangleBox[{3., 0}, {4., 2743}, "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{49.364891913530826`, 
                60.121096877502}, {-2.2849399601996225`, 54.16478329277473}}],
              
              StatusArea[#, 2743]& ,
              TagBoxNote->"2743"],
             StyleBox["2743", {}, StripOnInput -> False]],
            Annotation[#, 
             Style[2743, {}], "Tooltip"]& ], 
           TagBox[
            TooltipBox[
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                RectangleBox[{4., 0}, {5., 4719}, "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{59.621096877502, 
                70.37730184147318}, {-42.58995386755555, 54.16478329277473}}],
              
              StatusArea[#, 4719]& ,
              TagBoxNote->"4719"],
             StyleBox["4719", {}, StripOnInput -> False]],
            Annotation[#, 
             Style[4719, {}], "Tooltip"]& ], 
           TagBox[
            TooltipBox[
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                RectangleBox[{5., 0}, {6., 4887}, "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{69.87730184147318, 
                80.63350680544436}, {-46.01669594065059, 54.16478329277473}}],
              
              StatusArea[#, 4887]& ,
              TagBoxNote->"4887"],
             StyleBox["4887", {}, StripOnInput -> False]],
            Annotation[#, 
             Style[4887, {}], "Tooltip"]& ], 
           TagBox[
            TooltipBox[
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                RectangleBox[{6., 0}, {7., 4238}, "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{80.13350680544436, 
                90.88971176941554}, {-32.77886495589655, 54.16478329277473}}],
              
              StatusArea[#, 4238]& ,
              TagBoxNote->"4238"],
             StyleBox["4238", {}, StripOnInput -> False]],
            Annotation[#, 
             Style[4238, {}], "Tooltip"]& ], 
           TagBox[
            TooltipBox[
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                RectangleBox[{7., 0}, {8., 3799}, "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{90.38971176941554, 
                101.14591673338671`}, {-23.824461562511303`, 
                54.16478329277473}}],
              StatusArea[#, 3799]& ,
              TagBoxNote->"3799"],
             StyleBox["3799", {}, StripOnInput -> False]],
            Annotation[#, 
             Style[3799, {}], "Tooltip"]& ], 
           TagBox[
            TooltipBox[
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                RectangleBox[{8., 0}, {9., 3013}, "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{100.64591673338671`, 
                111.40212169735788`}, {-7.792204006245221, 
                54.16478329277473}}],
              StatusArea[#, 3013]& ,
              TagBoxNote->"3013"],
             StyleBox["3013", {}, StripOnInput -> False]],
            Annotation[#, 
             Style[3013, {}], "Tooltip"]& ], 
           TagBox[
            TooltipBox[
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                RectangleBox[{9., 0}, {10., 2546}, "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{110.90212169735788`, 121.65832666132907`}, {
                1.7333230659892038`, 54.16478329277473}}],
              StatusArea[#, 2546]& ,
              TagBoxNote->"2546"],
             StyleBox["2546", {}, StripOnInput -> False]],
            Annotation[#, 
             Style[2546, {}], "Tooltip"]& ], 
           TagBox[
            TooltipBox[
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                RectangleBox[{10., 0}, {11., 1821}, "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{121.15832666132907`, 131.91453162530024`}, {
                16.521346893333863`, 54.16478329277473}}],
              StatusArea[#, 1821]& ,
              TagBoxNote->"1821"],
             StyleBox["1821", {}, StripOnInput -> False]],
            Annotation[#, 
             Style[1821, {}], "Tooltip"]& ], 
           TagBox[
            TooltipBox[
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                RectangleBox[{11., 0}, {12., 1122}, "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{131.41453162530024`, 142.1707365892714}, {
                30.779041590318577`, 54.16478329277473}}],
              StatusArea[#, 1122]& ,
              TagBoxNote->"1122"],
             StyleBox["1122", {}, StripOnInput -> False]],
            Annotation[#, 
             Style[1122, {}], "Tooltip"]& ], 
           TagBox[
            TooltipBox[
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                RectangleBox[{12., 0}, {13., 597}, "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{141.6707365892714, 152.42694155324259`}, {
                41.48761056874057, 54.16478329277473}}],
              StatusArea[#, 597]& ,
              TagBoxNote->"597"],
             StyleBox["597", {}, StripOnInput -> False]],
            Annotation[#, 
             Style[597, {}], "Tooltip"]& ], 
           TagBox[
            TooltipBox[
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                RectangleBox[{13., 0}, {14., 321}, "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{151.92694155324259`, 162.68314651721377`}, {
                47.11725826025385, 54.16478329277473}}],
              StatusArea[#, 321]& ,
              TagBoxNote->"321"],
             StyleBox["321", {}, StripOnInput -> False]],
            Annotation[#, 
             Style[321, {}], "Tooltip"]& ], 
           TagBox[
            TooltipBox[
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                RectangleBox[{14., 0}, {15., 139}, "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{162.18314651721377`, 172.93935148118493`}, {
                50.82956217277348, 54.16478329277473}}],
              StatusArea[#, 139]& ,
              TagBoxNote->"139"],
             StyleBox["139", {}, StripOnInput -> False]],
            Annotation[#, 
             Style[139, {}], "Tooltip"]& ], 
           TagBox[
            TooltipBox[
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                RectangleBox[{15., 0}, {16., 48}, "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{172.43935148118493`, 183.19555644515611`}, {
                52.685714129033286`, 54.16478329277473}}],
              StatusArea[#, 48]& ,
              TagBoxNote->"48"],
             StyleBox["48", {}, StripOnInput -> False]],
            Annotation[#, 
             Style[48, {}], "Tooltip"]& ], 
           TagBox[
            TooltipBox[
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                RectangleBox[{16., 0}, {17., 24}, "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{182.69555644515611`, 193.4517614091273}, {
                53.17524871090401, 54.16478329277473}}],
              StatusArea[#, 24]& ,
              TagBoxNote->"24"],
             StyleBox["24", {}, StripOnInput -> False]],
            Annotation[#, 
             Style[24, {}], "Tooltip"]& ], 
           TagBox[
            TooltipBox[
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                RectangleBox[{17., 0}, {18., 5}, "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{192.9517614091273, 203.70796637309846`}, {
                53.562796921551666`, 54.16478329277473}}],
              StatusArea[#, 5]& ,
              TagBoxNote->"5"],
             StyleBox["5", {}, StripOnInput -> False]],
            Annotation[#, 
             Style[5, {}], "Tooltip"]& ], 
           TagBox[
            TooltipBox[
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                RectangleBox[{18., 0}, {19., 2}, "RoundingRadius" -> 0]},
               ImageSizeCache->{{203.20796637309846`, 213.96417133706964`}, {
                53.623988744285505`, 54.16478329277473}}],
              StatusArea[#, 2]& ,
              TagBoxNote->"2"],
             StyleBox["2", {}, StripOnInput -> False]],
            Annotation[#, 
             Style[2, {}], "Tooltip"]& ], 
           TagBox[
            TooltipBox[
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                RectangleBox[{19., 0}, {20., 1}, "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{213.46417133706964`, 224.22037630104083`}, {
                53.64438601853011, 54.16478329277473}}],
              StatusArea[#, 1]& ,
              TagBoxNote->"1"],
             StyleBox["1", {}, StripOnInput -> False]],
            Annotation[#, 
             Style[1, {}], "Tooltip"]& ], 
           TagBox[
            TooltipBox[
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                RectangleBox[{20., 0}, {21., 1}, "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{223.72037630104083`, 234.476581265012}, {
                53.64438601853011, 54.16478329277473}}],
              StatusArea[#, 1]& ,
              TagBoxNote->"1"],
             StyleBox["1", {}, StripOnInput -> False]],
            Annotation[#, 
             Style[1, {}], 
             "Tooltip"]& ]}, {}, {}}, {{}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}}},
        AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
        Axes->{True, True},
        AxesLabel->{None, None},
        AxesOrigin->{0.6, 0},
        FrameLabel->{{None, None}, {None, None}},
        FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
        GridLines->{None, None},
        GridLinesStyle->Directive[
          GrayLevel[0.5, 0.4]],
        PlotRange->{{1., 21.}, {All, All}},
        PlotRangePadding->{{
           Scaled[0.02], 
           Scaled[0.02]}, {
           Scaled[0.02], 
           Scaled[0.05]}},
        Ticks->{Automatic, Automatic}]], "ExerciseOutput"],
      Apply[TextCell, 
       Cell[
        BoxData[
         GraphicsBox[{{
            RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], 
            EdgeForm[{
              Opacity[0.5459999999999999], 
              Thickness[Small]}], {}, {
             RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], 
             EdgeForm[{
               Opacity[0.5459999999999999], 
               Thickness[Small]}], 
             TagBox[
              TooltipBox[
               TagBox[
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  RectangleBox[{1., 0}, {2., 1674}, "RoundingRadius" -> 0]}, 
                 ImageSizeCache -> {{28.85248198558847, 39.60868694955965}, {
                  19.519746207292023`, 54.16478329277473}}], 
                StatusArea[#, 1674]& , TagBoxNote -> "1674"], 
               StyleBox["1674", {}, StripOnInput -> False]], Annotation[#, 
               Style[1674, {}], "Tooltip"]& ], 
             TagBox[
              TooltipBox[
               TagBox[
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  RectangleBox[{2., 0}, {3., 6021}, "RoundingRadius" -> 0]}, 
                 ImageSizeCache -> {{39.10868694955965, 
                  49.864891913530826`}, {-69.14720493404211, 
                  54.16478329277473}}], StatusArea[#, 6021]& , TagBoxNote -> 
                "6021"], 
               StyleBox["6021", {}, StripOnInput -> False]], Annotation[#, 
               Style[6021, {}], "Tooltip"]& ], 
             TagBox[
              TooltipBox[
               TagBox[
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  RectangleBox[{3., 0}, {4., 2743}, "RoundingRadius" -> 0]}, 
                 ImageSizeCache -> {{49.364891913530826`, 
                  60.121096877502}, {-2.2849399601996225`, 
                  54.16478329277473}}], StatusArea[#, 2743]& , TagBoxNote -> 
                "2743"], 
               StyleBox["2743", {}, StripOnInput -> False]], Annotation[#, 
               Style[2743, {}], "Tooltip"]& ], 
             TagBox[
              TooltipBox[
               TagBox[
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  RectangleBox[{4., 0}, {5., 4719}, "RoundingRadius" -> 0]}, 
                 ImageSizeCache -> {{59.621096877502, 
                  70.37730184147318}, {-42.58995386755555, 
                  54.16478329277473}}], StatusArea[#, 4719]& , TagBoxNote -> 
                "4719"], 
               StyleBox["4719", {}, StripOnInput -> False]], Annotation[#, 
               Style[4719, {}], "Tooltip"]& ], 
             TagBox[
              TooltipBox[
               TagBox[
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  RectangleBox[{5., 0}, {6., 4887}, "RoundingRadius" -> 0]}, 
                 ImageSizeCache -> {{69.87730184147318, 
                  80.63350680544436}, {-46.01669594065059, 
                  54.16478329277473}}], StatusArea[#, 4887]& , TagBoxNote -> 
                "4887"], 
               StyleBox["4887", {}, StripOnInput -> False]], Annotation[#, 
               Style[4887, {}], "Tooltip"]& ], 
             TagBox[
              TooltipBox[
               TagBox[
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  RectangleBox[{6., 0}, {7., 4238}, "RoundingRadius" -> 0]}, 
                 ImageSizeCache -> {{80.13350680544436, 
                  90.88971176941554}, {-32.77886495589655, 
                  54.16478329277473}}], StatusArea[#, 4238]& , TagBoxNote -> 
                "4238"], 
               StyleBox["4238", {}, StripOnInput -> False]], Annotation[#, 
               Style[4238, {}], "Tooltip"]& ], 
             TagBox[
              TooltipBox[
               TagBox[
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  RectangleBox[{7., 0}, {8., 3799}, "RoundingRadius" -> 0]}, 
                 ImageSizeCache -> {{90.38971176941554, 
                  101.14591673338671`}, {-23.824461562511303`, 
                  54.16478329277473}}], StatusArea[#, 3799]& , TagBoxNote -> 
                "3799"], 
               StyleBox["3799", {}, StripOnInput -> False]], Annotation[#, 
               Style[3799, {}], "Tooltip"]& ], 
             TagBox[
              TooltipBox[
               TagBox[
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  RectangleBox[{8., 0}, {9., 3013}, "RoundingRadius" -> 0]}, 
                 ImageSizeCache -> {{100.64591673338671`, 
                  111.40212169735788`}, {-7.792204006245221, 
                  54.16478329277473}}], StatusArea[#, 3013]& , TagBoxNote -> 
                "3013"], 
               StyleBox["3013", {}, StripOnInput -> False]], Annotation[#, 
               Style[3013, {}], "Tooltip"]& ], 
             TagBox[
              TooltipBox[
               TagBox[
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  RectangleBox[{9., 0}, {10., 2546}, "RoundingRadius" -> 0]}, 
                 ImageSizeCache -> {{110.90212169735788`, 
                  121.65832666132907`}, {1.7333230659892038`, 
                  54.16478329277473}}], StatusArea[#, 2546]& , TagBoxNote -> 
                "2546"], 
               StyleBox["2546", {}, StripOnInput -> False]], Annotation[#, 
               Style[2546, {}], "Tooltip"]& ], 
             TagBox[
              TooltipBox[
               TagBox[
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  RectangleBox[{10., 0}, {11., 1821}, "RoundingRadius" -> 0]},
                  ImageSizeCache -> {{121.15832666132907`, 
                  131.91453162530024`}, {16.521346893333863`, 
                  54.16478329277473}}], StatusArea[#, 1821]& , TagBoxNote -> 
                "1821"], 
               StyleBox["1821", {}, StripOnInput -> False]], Annotation[#, 
               Style[1821, {}], "Tooltip"]& ], 
             TagBox[
              TooltipBox[
               TagBox[
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  RectangleBox[{11., 0}, {12., 1122}, "RoundingRadius" -> 0]},
                  ImageSizeCache -> {{131.41453162530024`, 
                  142.1707365892714}, {30.779041590318577`, 
                  54.16478329277473}}], StatusArea[#, 1122]& , TagBoxNote -> 
                "1122"], 
               StyleBox["1122", {}, StripOnInput -> False]], Annotation[#, 
               Style[1122, {}], "Tooltip"]& ], 
             TagBox[
              TooltipBox[
               TagBox[
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  RectangleBox[{12., 0}, {13., 597}, "RoundingRadius" -> 0]}, 
                 ImageSizeCache -> {{141.6707365892714, 
                  152.42694155324259`}, {41.48761056874057, 
                  54.16478329277473}}], StatusArea[#, 597]& , TagBoxNote -> 
                "597"], 
               StyleBox["597", {}, StripOnInput -> False]], Annotation[#, 
               Style[597, {}], "Tooltip"]& ], 
             TagBox[
              TooltipBox[
               TagBox[
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  RectangleBox[{13., 0}, {14., 321}, "RoundingRadius" -> 0]}, 
                 ImageSizeCache -> {{151.92694155324259`, 
                  162.68314651721377`}, {47.11725826025385, 
                  54.16478329277473}}], StatusArea[#, 321]& , TagBoxNote -> 
                "321"], 
               StyleBox["321", {}, StripOnInput -> False]], Annotation[#, 
               Style[321, {}], "Tooltip"]& ], 
             TagBox[
              TooltipBox[
               TagBox[
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  RectangleBox[{14., 0}, {15., 139}, "RoundingRadius" -> 0]}, 
                 ImageSizeCache -> {{162.18314651721377`, 
                  172.93935148118493`}, {50.82956217277348, 
                  54.16478329277473}}], StatusArea[#, 139]& , TagBoxNote -> 
                "139"], 
               StyleBox["139", {}, StripOnInput -> False]], Annotation[#, 
               Style[139, {}], "Tooltip"]& ], 
             TagBox[
              TooltipBox[
               TagBox[
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  RectangleBox[{15., 0}, {16., 48}, "RoundingRadius" -> 0]}, 
                 ImageSizeCache -> {{172.43935148118493`, 
                  183.19555644515611`}, {52.685714129033286`, 
                  54.16478329277473}}], StatusArea[#, 48]& , TagBoxNote -> 
                "48"], 
               StyleBox["48", {}, StripOnInput -> False]], Annotation[#, 
               Style[48, {}], "Tooltip"]& ], 
             TagBox[
              TooltipBox[
               TagBox[
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  RectangleBox[{16., 0}, {17., 24}, "RoundingRadius" -> 0]}, 
                 ImageSizeCache -> {{182.69555644515611`, 
                  193.4517614091273}, {53.17524871090401, 
                  54.16478329277473}}], StatusArea[#, 24]& , TagBoxNote -> 
                "24"], 
               StyleBox["24", {}, StripOnInput -> False]], Annotation[#, 
               Style[24, {}], "Tooltip"]& ], 
             TagBox[
              TooltipBox[
               TagBox[
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  RectangleBox[{17., 0}, {18., 5}, "RoundingRadius" -> 0]}, 
                 ImageSizeCache -> {{192.9517614091273, 
                  203.70796637309846`}, {53.562796921551666`, 
                  54.16478329277473}}], StatusArea[#, 5]& , TagBoxNote -> 
                "5"], 
               StyleBox["5", {}, StripOnInput -> False]], Annotation[#, 
               Style[5, {}], "Tooltip"]& ], 
             TagBox[
              TooltipBox[
               TagBox[
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  RectangleBox[{18., 0}, {19., 2}, "RoundingRadius" -> 0]}, 
                 ImageSizeCache -> {{203.20796637309846`, 
                  213.96417133706964`}, {53.623988744285505`, 
                  54.16478329277473}}], StatusArea[#, 2]& , TagBoxNote -> 
                "2"], 
               StyleBox["2", {}, StripOnInput -> False]], Annotation[#, 
               Style[2, {}], "Tooltip"]& ], 
             TagBox[
              TooltipBox[
               TagBox[
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  RectangleBox[{19., 0}, {20., 1}, "RoundingRadius" -> 0]}, 
                 ImageSizeCache -> {{213.46417133706964`, 
                  224.22037630104083`}, {53.64438601853011, 
                  54.16478329277473}}], StatusArea[#, 1]& , TagBoxNote -> 
                "1"], 
               StyleBox["1", {}, StripOnInput -> False]], Annotation[#, 
               Style[1, {}], "Tooltip"]& ], 
             TagBox[
              TooltipBox[
               TagBox[
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  RectangleBox[{20., 0}, {21., 1}, "RoundingRadius" -> 0]}, 
                 ImageSizeCache -> {{223.72037630104083`, 234.476581265012}, {
                  53.64438601853011, 54.16478329277473}}], StatusArea[#, 1]& ,
                 TagBoxNote -> "1"], 
               StyleBox["1", {}, StripOnInput -> False]], Annotation[#, 
               Style[1, {}], 
               "Tooltip"]& ]}, {}, {}}, {{}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}}}, AspectRatio -> 
          NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
          AxesLabel -> {None, None}, AxesOrigin -> {0.6, 0}, 
          FrameLabel -> {{None, None}, {None, None}}, 
          FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
          GridLines -> {None, None}, GridLinesStyle -> Directive[
            GrayLevel[0.5, 0.4]], PlotRange -> {{1., 21.}, {All, All}}, 
          PlotRangePadding -> {{
             Scaled[0.02], 
             Scaled[0.02]}, {
             Scaled[0.02], 
             Scaled[0.05]}}, Ticks -> {Automatic, Automatic}]], 
        "ExerciseOutput", Selectable -> False, Copyable -> False, Editable -> 
        False, ShowCellBracket -> False]]], " "}
   },
   GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Center}}},
   GridBoxBackground->{"Columns" -> {{
        RGBColor[1, 1, 1]}}},
   GridBoxSpacings->{"Columns" -> {{Automatic}}, "Rows" -> {{1}}}],
  FrameMargins->0]], "ExerciseOutput",
 Editable->False,
 Selectable->False,
 Deletable->False,
 CellFrame->{{1, 1}, {1, 1}},
 ShowCellBracket->False,
 CellFrameColor->RGBColor[0.85, 0.85, 0.85],
 LineBreakWithin->Automatic]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 "Construya la lista de los 100 primeros cubos, sustituyendo con rojo (",
 Cell[BoxData[
  FormBox[
   ButtonBox["Red",
    BaseStyle->"Link"], TextForm]]],
 " en ingl\[EAcute]s) aquellos cuya posici\[OAcute]n sea un cuadrado.",
 StyleBox[ButtonBox["\[NonBreakingSpace]\[RightGuillemet]",
  Appearance->None,
  Evaluator->Automatic,
  Method->"Preemptive",
  ButtonFunction:>(SelectionMove[
     ButtonNotebook[], All, ButtonCell, AutoScroll -> False]; 
   FrontEndExecute[
     FrontEndToken[
      ButtonNotebook[], "OpenCloseGroup"]])],
  FontColor->RGBColor[1, 0.501961, 0]]
}], "Exercise",
 Editable->False,
 Selectable->False,
 Deletable->False,
 CellDingbat->Cell[
  "31.8", "ExerciseNumber", FontColor -> 
   RGBColor[0.9019607843137255, 0.4117647058823529, 0.027450980392156862`]],
 ShowCellBracket->False],

Cell[BoxData[
 PaneBox[GridBox[{
    {" ", 
     StyleBox[
      RowBox[{"Expected", " ", 
       RowBox[{"output", ":"}]}],
      Editable->False,
      Selectable->False,
      StripOnInput->False,
      FontColor->RGBColor[0.45, 0.45, 0.45]], " "},
    {" ", 
     InterpretationBox[Cell[BoxData[
       RowBox[{"{", 
        RowBox[{
         InterpretationBox[
          ButtonBox[
           TooltipBox[
            GraphicsBox[{
              {GrayLevel[0], RectangleBox[{0, 0}]}, 
              {GrayLevel[0], RectangleBox[{1, -1}]}, 
              {RGBColor[1, 0, 0], RectangleBox[{0, -1}, {2, 1}]}},
             AspectRatio->1,
             Frame->True,
             FrameStyle->RGBColor[0.6666666666666666, 0., 0.],
             FrameTicks->None,
             
             ImageSize->
              Dynamic[{
               Automatic, 
                1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}],
             PlotRangePadding->None],
            "RGBColor[1, 0, 0]"],
           Appearance->None,
           BaseStyle->{},
           BaselinePosition->Baseline,
           ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
             If[
              Not[
               AbsoluteCurrentValue["Deployed"]], 
              SelectionMove[Typeset`box$, All, Expression]; 
              FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
              FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 0, 0]; 
              FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
              MathLink`CallFrontEnd[
                FrontEnd`AttachCell[Typeset`box$, 
                 FrontEndResource["RGBColorValueSelector"], {
                 0, {Left, Bottom}}, {Left, Top}, 
                 "ClosingActions" -> {
                  "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
           
           DefaultBaseStyle->{},
           Evaluator->Automatic,
           Method->"Preemptive"],
          RGBColor[1, 0, 0],
          Editable->False,
          Selectable->False], ",", "8", ",", "27", ",", 
         InterpretationBox[
          ButtonBox[
           TooltipBox[
            GraphicsBox[{
              {GrayLevel[0], RectangleBox[{0, 0}]}, 
              {GrayLevel[0], RectangleBox[{1, -1}]}, 
              {RGBColor[1, 0, 0], RectangleBox[{0, -1}, {2, 1}]}},
             AspectRatio->1,
             Frame->True,
             FrameStyle->RGBColor[0.6666666666666666, 0., 0.],
             FrameTicks->None,
             
             ImageSize->
              Dynamic[{
               Automatic, 
                1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}],
             PlotRangePadding->None],
            "RGBColor[1, 0, 0]"],
           Appearance->None,
           BaseStyle->{},
           BaselinePosition->Baseline,
           ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
             If[
              Not[
               AbsoluteCurrentValue["Deployed"]], 
              SelectionMove[Typeset`box$, All, Expression]; 
              FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
              FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 0, 0]; 
              FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
              MathLink`CallFrontEnd[
                FrontEnd`AttachCell[Typeset`box$, 
                 FrontEndResource["RGBColorValueSelector"], {
                 0, {Left, Bottom}}, {Left, Top}, 
                 "ClosingActions" -> {
                  "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
           
           DefaultBaseStyle->{},
           Evaluator->Automatic,
           Method->"Preemptive"],
          RGBColor[1, 0, 0],
          Editable->False,
          Selectable->False], ",", "125", ",", "216", ",", "343", ",", "512", 
         ",", 
         InterpretationBox[
          ButtonBox[
           TooltipBox[
            GraphicsBox[{
              {GrayLevel[0], RectangleBox[{0, 0}]}, 
              {GrayLevel[0], RectangleBox[{1, -1}]}, 
              {RGBColor[1, 0, 0], RectangleBox[{0, -1}, {2, 1}]}},
             AspectRatio->1,
             Frame->True,
             FrameStyle->RGBColor[0.6666666666666666, 0., 0.],
             FrameTicks->None,
             
             ImageSize->
              Dynamic[{
               Automatic, 
                1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}],
             PlotRangePadding->None],
            "RGBColor[1, 0, 0]"],
           Appearance->None,
           BaseStyle->{},
           BaselinePosition->Baseline,
           ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
             If[
              Not[
               AbsoluteCurrentValue["Deployed"]], 
              SelectionMove[Typeset`box$, All, Expression]; 
              FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
              FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 0, 0]; 
              FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
              MathLink`CallFrontEnd[
                FrontEnd`AttachCell[Typeset`box$, 
                 FrontEndResource["RGBColorValueSelector"], {
                 0, {Left, Bottom}}, {Left, Top}, 
                 "ClosingActions" -> {
                  "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
           
           DefaultBaseStyle->{},
           Evaluator->Automatic,
           Method->"Preemptive"],
          RGBColor[1, 0, 0],
          Editable->False,
          Selectable->False], ",", "1000", ",", "1331", ",", "1728", ",", 
         "2197", ",", "2744", ",", "3375", ",", 
         InterpretationBox[
          ButtonBox[
           TooltipBox[
            GraphicsBox[{
              {GrayLevel[0], RectangleBox[{0, 0}]}, 
              {GrayLevel[0], RectangleBox[{1, -1}]}, 
              {RGBColor[1, 0, 0], RectangleBox[{0, -1}, {2, 1}]}},
             AspectRatio->1,
             Frame->True,
             FrameStyle->RGBColor[0.6666666666666666, 0., 0.],
             FrameTicks->None,
             
             ImageSize->
              Dynamic[{
               Automatic, 
                1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}],
             PlotRangePadding->None],
            "RGBColor[1, 0, 0]"],
           Appearance->None,
           BaseStyle->{},
           BaselinePosition->Baseline,
           ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
             If[
              Not[
               AbsoluteCurrentValue["Deployed"]], 
              SelectionMove[Typeset`box$, All, Expression]; 
              FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
              FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 0, 0]; 
              FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
              MathLink`CallFrontEnd[
                FrontEnd`AttachCell[Typeset`box$, 
                 FrontEndResource["RGBColorValueSelector"], {
                 0, {Left, Bottom}}, {Left, Top}, 
                 "ClosingActions" -> {
                  "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
           
           DefaultBaseStyle->{},
           Evaluator->Automatic,
           Method->"Preemptive"],
          RGBColor[1, 0, 0],
          Editable->False,
          Selectable->False], ",", "4913", ",", "5832", ",", "6859", ",", 
         "8000", ",", "9261", ",", "10648", ",", "12167", ",", "13824", ",", 
         InterpretationBox[
          ButtonBox[
           TooltipBox[
            GraphicsBox[{
              {GrayLevel[0], RectangleBox[{0, 0}]}, 
              {GrayLevel[0], RectangleBox[{1, -1}]}, 
              {RGBColor[1, 0, 0], RectangleBox[{0, -1}, {2, 1}]}},
             AspectRatio->1,
             Frame->True,
             FrameStyle->RGBColor[0.6666666666666666, 0., 0.],
             FrameTicks->None,
             
             ImageSize->
              Dynamic[{
               Automatic, 
                1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}],
             PlotRangePadding->None],
            "RGBColor[1, 0, 0]"],
           Appearance->None,
           BaseStyle->{},
           BaselinePosition->Baseline,
           ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
             If[
              Not[
               AbsoluteCurrentValue["Deployed"]], 
              SelectionMove[Typeset`box$, All, Expression]; 
              FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
              FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 0, 0]; 
              FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
              MathLink`CallFrontEnd[
                FrontEnd`AttachCell[Typeset`box$, 
                 FrontEndResource["RGBColorValueSelector"], {
                 0, {Left, Bottom}}, {Left, Top}, 
                 "ClosingActions" -> {
                  "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
           
           DefaultBaseStyle->{},
           Evaluator->Automatic,
           Method->"Preemptive"],
          RGBColor[1, 0, 0],
          Editable->False,
          Selectable->False], ",", "17576", ",", "19683", ",", "21952", ",", 
         "24389", ",", "27000", ",", "29791", ",", "32768", ",", "35937", ",",
          "39304", ",", "42875", ",", 
         InterpretationBox[
          ButtonBox[
           TooltipBox[
            GraphicsBox[{
              {GrayLevel[0], RectangleBox[{0, 0}]}, 
              {GrayLevel[0], RectangleBox[{1, -1}]}, 
              {RGBColor[1, 0, 0], RectangleBox[{0, -1}, {2, 1}]}},
             AspectRatio->1,
             Frame->True,
             FrameStyle->RGBColor[0.6666666666666666, 0., 0.],
             FrameTicks->None,
             
             ImageSize->
              Dynamic[{
               Automatic, 
                1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}],
             PlotRangePadding->None],
            "RGBColor[1, 0, 0]"],
           Appearance->None,
           BaseStyle->{},
           BaselinePosition->Baseline,
           ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
             If[
              Not[
               AbsoluteCurrentValue["Deployed"]], 
              SelectionMove[Typeset`box$, All, Expression]; 
              FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
              FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 0, 0]; 
              FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
              MathLink`CallFrontEnd[
                FrontEnd`AttachCell[Typeset`box$, 
                 FrontEndResource["RGBColorValueSelector"], {
                 0, {Left, Bottom}}, {Left, Top}, 
                 "ClosingActions" -> {
                  "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
           
           DefaultBaseStyle->{},
           Evaluator->Automatic,
           Method->"Preemptive"],
          RGBColor[1, 0, 0],
          Editable->False,
          Selectable->False], ",", "50653", ",", "54872", ",", "59319", ",", 
         "64000", ",", "68921", ",", "74088", ",", "79507", ",", "85184", ",",
          "91125", ",", "97336", ",", "103823", ",", "110592", ",", 
         InterpretationBox[
          ButtonBox[
           TooltipBox[
            GraphicsBox[{
              {GrayLevel[0], RectangleBox[{0, 0}]}, 
              {GrayLevel[0], RectangleBox[{1, -1}]}, 
              {RGBColor[1, 0, 0], RectangleBox[{0, -1}, {2, 1}]}},
             AspectRatio->1,
             Frame->True,
             FrameStyle->RGBColor[0.6666666666666666, 0., 0.],
             FrameTicks->None,
             
             ImageSize->
              Dynamic[{
               Automatic, 
                1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}],
             PlotRangePadding->None],
            "RGBColor[1, 0, 0]"],
           Appearance->None,
           BaseStyle->{},
           BaselinePosition->Baseline,
           ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
             If[
              Not[
               AbsoluteCurrentValue["Deployed"]], 
              SelectionMove[Typeset`box$, All, Expression]; 
              FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
              FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 0, 0]; 
              FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
              MathLink`CallFrontEnd[
                FrontEnd`AttachCell[Typeset`box$, 
                 FrontEndResource["RGBColorValueSelector"], {
                 0, {Left, Bottom}}, {Left, Top}, 
                 "ClosingActions" -> {
                  "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
           
           DefaultBaseStyle->{},
           Evaluator->Automatic,
           Method->"Preemptive"],
          RGBColor[1, 0, 0],
          Editable->False,
          Selectable->False], ",", "125000", ",", "132651", ",", "140608", 
         ",", "148877", ",", "157464", ",", "166375", ",", "175616", ",", 
         "185193", ",", "195112", ",", "205379", ",", "216000", ",", "226981",
          ",", "238328", ",", "250047", ",", 
         InterpretationBox[
          ButtonBox[
           TooltipBox[
            GraphicsBox[{
              {GrayLevel[0], RectangleBox[{0, 0}]}, 
              {GrayLevel[0], RectangleBox[{1, -1}]}, 
              {RGBColor[1, 0, 0], RectangleBox[{0, -1}, {2, 1}]}},
             AspectRatio->1,
             Frame->True,
             FrameStyle->RGBColor[0.6666666666666666, 0., 0.],
             FrameTicks->None,
             
             ImageSize->
              Dynamic[{
               Automatic, 
                1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}],
             PlotRangePadding->None],
            "RGBColor[1, 0, 0]"],
           Appearance->None,
           BaseStyle->{},
           BaselinePosition->Baseline,
           ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
             If[
              Not[
               AbsoluteCurrentValue["Deployed"]], 
              SelectionMove[Typeset`box$, All, Expression]; 
              FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
              FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 0, 0]; 
              FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
              MathLink`CallFrontEnd[
                FrontEnd`AttachCell[Typeset`box$, 
                 FrontEndResource["RGBColorValueSelector"], {
                 0, {Left, Bottom}}, {Left, Top}, 
                 "ClosingActions" -> {
                  "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
           
           DefaultBaseStyle->{},
           Evaluator->Automatic,
           Method->"Preemptive"],
          RGBColor[1, 0, 0],
          Editable->False,
          Selectable->False], ",", "274625", ",", "287496", ",", "300763", 
         ",", "314432", ",", "328509", ",", "343000", ",", "357911", ",", 
         "373248", ",", "389017", ",", "405224", ",", "421875", ",", "438976",
          ",", "456533", ",", "474552", ",", "493039", ",", "512000", ",", 
         InterpretationBox[
          ButtonBox[
           TooltipBox[
            GraphicsBox[{
              {GrayLevel[0], RectangleBox[{0, 0}]}, 
              {GrayLevel[0], RectangleBox[{1, -1}]}, 
              {RGBColor[1, 0, 0], RectangleBox[{0, -1}, {2, 1}]}},
             AspectRatio->1,
             Frame->True,
             FrameStyle->RGBColor[0.6666666666666666, 0., 0.],
             FrameTicks->None,
             
             ImageSize->
              Dynamic[{
               Automatic, 
                1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}],
             PlotRangePadding->None],
            "RGBColor[1, 0, 0]"],
           Appearance->None,
           BaseStyle->{},
           BaselinePosition->Baseline,
           ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
             If[
              Not[
               AbsoluteCurrentValue["Deployed"]], 
              SelectionMove[Typeset`box$, All, Expression]; 
              FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
              FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 0, 0]; 
              FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
              MathLink`CallFrontEnd[
                FrontEnd`AttachCell[Typeset`box$, 
                 FrontEndResource["RGBColorValueSelector"], {
                 0, {Left, Bottom}}, {Left, Top}, 
                 "ClosingActions" -> {
                  "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
           
           DefaultBaseStyle->{},
           Evaluator->Automatic,
           Method->"Preemptive"],
          RGBColor[1, 0, 0],
          Editable->False,
          Selectable->False], ",", "551368", ",", "571787", ",", "592704", 
         ",", "614125", ",", "636056", ",", "658503", ",", "681472", ",", 
         "704969", ",", "729000", ",", "753571", ",", "778688", ",", "804357",
          ",", "830584", ",", "857375", ",", "884736", ",", "912673", ",", 
         "941192", ",", "970299", ",", 
         InterpretationBox[
          ButtonBox[
           TooltipBox[
            GraphicsBox[{
              {GrayLevel[0], RectangleBox[{0, 0}]}, 
              {GrayLevel[0], RectangleBox[{1, -1}]}, 
              {RGBColor[1, 0, 0], RectangleBox[{0, -1}, {2, 1}]}},
             AspectRatio->1,
             Frame->True,
             FrameStyle->RGBColor[0.6666666666666666, 0., 0.],
             FrameTicks->None,
             
             ImageSize->
              Dynamic[{
               Automatic, 
                1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}],
             PlotRangePadding->None],
            "RGBColor[1, 0, 0]"],
           Appearance->None,
           BaseStyle->{},
           BaselinePosition->Baseline,
           ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
             If[
              Not[
               AbsoluteCurrentValue["Deployed"]], 
              SelectionMove[Typeset`box$, All, Expression]; 
              FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
              FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 0, 0]; 
              FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
              MathLink`CallFrontEnd[
                FrontEnd`AttachCell[Typeset`box$, 
                 FrontEndResource["RGBColorValueSelector"], {
                 0, {Left, Bottom}}, {Left, Top}, 
                 "ClosingActions" -> {
                  "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
           
           DefaultBaseStyle->{},
           Evaluator->Automatic,
           Method->"Preemptive"],
          RGBColor[1, 0, 0],
          Editable->False,
          Selectable->False]}], "}"}]], "ExerciseOutput"],
      Apply[TextCell, 
       Cell[
        BoxData[
         RowBox[{"{", 
           RowBox[{
             InterpretationBox[
              ButtonBox[
               TooltipBox[
                GraphicsBox[{{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}}, {{
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}}, {{
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}}, AspectRatio -> 1, Frame -> 
                 True, FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                 FrameTicks -> None, ImageSize -> 
                 Dynamic[{
                   Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], PlotRangePadding -> None], 
                "RGBColor[1, 0, 0]"], Appearance -> None, BaseStyle -> {}, 
               BaselinePosition -> Baseline, ButtonFunction :> 
               With[{Typeset`box$ = EvaluationBox[]}, 
                 If[
                  Not[
                   AbsoluteCurrentValue["Deployed"]], 
                  SelectionMove[Typeset`box$, All, Expression]; 
                  FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                  FrontEnd`Private`$ColorSelectorInitialColor = 
                   RGBColor[1, 0, 0]; 
                  FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                  MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], DefaultBaseStyle -> {}, Evaluator -> 
               Automatic, Method -> "Preemptive"], 
              RGBColor[1, 0, 0], Editable -> False, Selectable -> False], ",",
              "8", ",", "27", ",", 
             InterpretationBox[
              ButtonBox[
               TooltipBox[
                GraphicsBox[{{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}}, {{
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}}, {{
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}}, AspectRatio -> 1, Frame -> 
                 True, FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                 FrameTicks -> None, ImageSize -> 
                 Dynamic[{
                   Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], PlotRangePadding -> None], 
                "RGBColor[1, 0, 0]"], Appearance -> None, BaseStyle -> {}, 
               BaselinePosition -> Baseline, ButtonFunction :> 
               With[{Typeset`box$ = EvaluationBox[]}, 
                 If[
                  Not[
                   AbsoluteCurrentValue["Deployed"]], 
                  SelectionMove[Typeset`box$, All, Expression]; 
                  FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                  FrontEnd`Private`$ColorSelectorInitialColor = 
                   RGBColor[1, 0, 0]; 
                  FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                  MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], DefaultBaseStyle -> {}, Evaluator -> 
               Automatic, Method -> "Preemptive"], 
              RGBColor[1, 0, 0], Editable -> False, Selectable -> False], ",",
              "125", ",", "216", ",", "343", ",", "512", ",", 
             InterpretationBox[
              ButtonBox[
               TooltipBox[
                GraphicsBox[{{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}}, {{
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}}, {{
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}}, AspectRatio -> 1, Frame -> 
                 True, FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                 FrameTicks -> None, ImageSize -> 
                 Dynamic[{
                   Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], PlotRangePadding -> None], 
                "RGBColor[1, 0, 0]"], Appearance -> None, BaseStyle -> {}, 
               BaselinePosition -> Baseline, ButtonFunction :> 
               With[{Typeset`box$ = EvaluationBox[]}, 
                 If[
                  Not[
                   AbsoluteCurrentValue["Deployed"]], 
                  SelectionMove[Typeset`box$, All, Expression]; 
                  FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                  FrontEnd`Private`$ColorSelectorInitialColor = 
                   RGBColor[1, 0, 0]; 
                  FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                  MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], DefaultBaseStyle -> {}, Evaluator -> 
               Automatic, Method -> "Preemptive"], 
              RGBColor[1, 0, 0], Editable -> False, Selectable -> False], ",",
              "1000", ",", "1331", ",", "1728", ",", "2197", ",", "2744", ",",
              "3375", ",", 
             InterpretationBox[
              ButtonBox[
               TooltipBox[
                GraphicsBox[{{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}}, {{
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}}, {{
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}}, AspectRatio -> 1, Frame -> 
                 True, FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                 FrameTicks -> None, ImageSize -> 
                 Dynamic[{
                   Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], PlotRangePadding -> None], 
                "RGBColor[1, 0, 0]"], Appearance -> None, BaseStyle -> {}, 
               BaselinePosition -> Baseline, ButtonFunction :> 
               With[{Typeset`box$ = EvaluationBox[]}, 
                 If[
                  Not[
                   AbsoluteCurrentValue["Deployed"]], 
                  SelectionMove[Typeset`box$, All, Expression]; 
                  FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                  FrontEnd`Private`$ColorSelectorInitialColor = 
                   RGBColor[1, 0, 0]; 
                  FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                  MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], DefaultBaseStyle -> {}, Evaluator -> 
               Automatic, Method -> "Preemptive"], 
              RGBColor[1, 0, 0], Editable -> False, Selectable -> False], ",",
              "4913", ",", "5832", ",", "6859", ",", "8000", ",", "9261", ",",
              "10648", ",", "12167", ",", "13824", ",", 
             InterpretationBox[
              ButtonBox[
               TooltipBox[
                GraphicsBox[{{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}}, {{
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}}, {{
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}}, AspectRatio -> 1, Frame -> 
                 True, FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                 FrameTicks -> None, ImageSize -> 
                 Dynamic[{
                   Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], PlotRangePadding -> None], 
                "RGBColor[1, 0, 0]"], Appearance -> None, BaseStyle -> {}, 
               BaselinePosition -> Baseline, ButtonFunction :> 
               With[{Typeset`box$ = EvaluationBox[]}, 
                 If[
                  Not[
                   AbsoluteCurrentValue["Deployed"]], 
                  SelectionMove[Typeset`box$, All, Expression]; 
                  FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                  FrontEnd`Private`$ColorSelectorInitialColor = 
                   RGBColor[1, 0, 0]; 
                  FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                  MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], DefaultBaseStyle -> {}, Evaluator -> 
               Automatic, Method -> "Preemptive"], 
              RGBColor[1, 0, 0], Editable -> False, Selectable -> False], ",",
              "17576", ",", "19683", ",", "21952", ",", "24389", ",", "27000",
              ",", "29791", ",", "32768", ",", "35937", ",", "39304", ",", 
             "42875", ",", 
             InterpretationBox[
              ButtonBox[
               TooltipBox[
                GraphicsBox[{{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}}, {{
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}}, {{
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}}, AspectRatio -> 1, Frame -> 
                 True, FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                 FrameTicks -> None, ImageSize -> 
                 Dynamic[{
                   Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], PlotRangePadding -> None], 
                "RGBColor[1, 0, 0]"], Appearance -> None, BaseStyle -> {}, 
               BaselinePosition -> Baseline, ButtonFunction :> 
               With[{Typeset`box$ = EvaluationBox[]}, 
                 If[
                  Not[
                   AbsoluteCurrentValue["Deployed"]], 
                  SelectionMove[Typeset`box$, All, Expression]; 
                  FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                  FrontEnd`Private`$ColorSelectorInitialColor = 
                   RGBColor[1, 0, 0]; 
                  FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                  MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], DefaultBaseStyle -> {}, Evaluator -> 
               Automatic, Method -> "Preemptive"], 
              RGBColor[1, 0, 0], Editable -> False, Selectable -> False], ",",
              "50653", ",", "54872", ",", "59319", ",", "64000", ",", "68921",
              ",", "74088", ",", "79507", ",", "85184", ",", "91125", ",", 
             "97336", ",", "103823", ",", "110592", ",", 
             InterpretationBox[
              ButtonBox[
               TooltipBox[
                GraphicsBox[{{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}}, {{
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}}, {{
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}}, AspectRatio -> 1, Frame -> 
                 True, FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                 FrameTicks -> None, ImageSize -> 
                 Dynamic[{
                   Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], PlotRangePadding -> None], 
                "RGBColor[1, 0, 0]"], Appearance -> None, BaseStyle -> {}, 
               BaselinePosition -> Baseline, ButtonFunction :> 
               With[{Typeset`box$ = EvaluationBox[]}, 
                 If[
                  Not[
                   AbsoluteCurrentValue["Deployed"]], 
                  SelectionMove[Typeset`box$, All, Expression]; 
                  FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                  FrontEnd`Private`$ColorSelectorInitialColor = 
                   RGBColor[1, 0, 0]; 
                  FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                  MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], DefaultBaseStyle -> {}, Evaluator -> 
               Automatic, Method -> "Preemptive"], 
              RGBColor[1, 0, 0], Editable -> False, Selectable -> False], ",",
              "125000", ",", "132651", ",", "140608", ",", "148877", ",", 
             "157464", ",", "166375", ",", "175616", ",", "185193", ",", 
             "195112", ",", "205379", ",", "216000", ",", "226981", ",", 
             "238328", ",", "250047", ",", 
             InterpretationBox[
              ButtonBox[
               TooltipBox[
                GraphicsBox[{{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}}, {{
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}}, {{
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}}, AspectRatio -> 1, Frame -> 
                 True, FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                 FrameTicks -> None, ImageSize -> 
                 Dynamic[{
                   Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], PlotRangePadding -> None], 
                "RGBColor[1, 0, 0]"], Appearance -> None, BaseStyle -> {}, 
               BaselinePosition -> Baseline, ButtonFunction :> 
               With[{Typeset`box$ = EvaluationBox[]}, 
                 If[
                  Not[
                   AbsoluteCurrentValue["Deployed"]], 
                  SelectionMove[Typeset`box$, All, Expression]; 
                  FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                  FrontEnd`Private`$ColorSelectorInitialColor = 
                   RGBColor[1, 0, 0]; 
                  FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                  MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], DefaultBaseStyle -> {}, Evaluator -> 
               Automatic, Method -> "Preemptive"], 
              RGBColor[1, 0, 0], Editable -> False, Selectable -> False], ",",
              "274625", ",", "287496", ",", "300763", ",", "314432", ",", 
             "328509", ",", "343000", ",", "357911", ",", "373248", ",", 
             "389017", ",", "405224", ",", "421875", ",", "438976", ",", 
             "456533", ",", "474552", ",", "493039", ",", "512000", ",", 
             InterpretationBox[
              ButtonBox[
               TooltipBox[
                GraphicsBox[{{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}}, {{
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}}, {{
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}}, AspectRatio -> 1, Frame -> 
                 True, FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                 FrameTicks -> None, ImageSize -> 
                 Dynamic[{
                   Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], PlotRangePadding -> None], 
                "RGBColor[1, 0, 0]"], Appearance -> None, BaseStyle -> {}, 
               BaselinePosition -> Baseline, ButtonFunction :> 
               With[{Typeset`box$ = EvaluationBox[]}, 
                 If[
                  Not[
                   AbsoluteCurrentValue["Deployed"]], 
                  SelectionMove[Typeset`box$, All, Expression]; 
                  FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                  FrontEnd`Private`$ColorSelectorInitialColor = 
                   RGBColor[1, 0, 0]; 
                  FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                  MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], DefaultBaseStyle -> {}, Evaluator -> 
               Automatic, Method -> "Preemptive"], 
              RGBColor[1, 0, 0], Editable -> False, Selectable -> False], ",",
              "551368", ",", "571787", ",", "592704", ",", "614125", ",", 
             "636056", ",", "658503", ",", "681472", ",", "704969", ",", 
             "729000", ",", "753571", ",", "778688", ",", "804357", ",", 
             "830584", ",", "857375", ",", "884736", ",", "912673", ",", 
             "941192", ",", "970299", ",", 
             InterpretationBox[
              ButtonBox[
               TooltipBox[
                GraphicsBox[{{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}}, {{
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}}, {{
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}}, AspectRatio -> 1, Frame -> 
                 True, FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                 FrameTicks -> None, ImageSize -> 
                 Dynamic[{
                   Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], PlotRangePadding -> None], 
                "RGBColor[1, 0, 0]"], Appearance -> None, BaseStyle -> {}, 
               BaselinePosition -> Baseline, ButtonFunction :> 
               With[{Typeset`box$ = EvaluationBox[]}, 
                 If[
                  Not[
                   AbsoluteCurrentValue["Deployed"]], 
                  SelectionMove[Typeset`box$, All, Expression]; 
                  FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                  FrontEnd`Private`$ColorSelectorInitialColor = 
                   RGBColor[1, 0, 0]; 
                  FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                  MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], DefaultBaseStyle -> {}, Evaluator -> 
               Automatic, Method -> "Preemptive"], 
              RGBColor[1, 0, 0], Editable -> False, Selectable -> False]}], 
           "}"}]], "ExerciseOutput", Selectable -> False, Copyable -> False, 
        Editable -> False, ShowCellBracket -> False]]], " "}
   },
   GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Center}}},
   GridBoxBackground->{"Columns" -> {{
        RGBColor[1, 1, 1]}}},
   GridBoxSpacings->{"Columns" -> {{Automatic}}, "Rows" -> {{1}}}],
  FrameMargins->0]], "ExerciseOutput",
 Editable->False,
 Selectable->False,
 Deletable->False,
 CellFrame->{{1, 1}, {1, 1}},
 ShowCellBracket->False,
 CellFrameColor->RGBColor[0.85, 0.85, 0.85],
 LineBreakWithin->Automatic]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 "Forme la lista de los 100 primeros primos, eliminando aquellos cuyo primer \
d\[IAcute]gito sea menor que 5.",
 StyleBox[ButtonBox["\[NonBreakingSpace]\[RightGuillemet]",
  Appearance->None,
  Evaluator->Automatic,
  Method->"Preemptive",
  ButtonFunction:>(SelectionMove[
     ButtonNotebook[], All, ButtonCell, AutoScroll -> False]; 
   FrontEndExecute[
     FrontEndToken[
      ButtonNotebook[], "OpenCloseGroup"]])],
  FontColor->RGBColor[1, 0.501961, 0]]
}], "Exercise",
 Editable->False,
 Selectable->False,
 Deletable->False,
 CellDingbat->Cell[
  "31.9", "ExerciseNumber", FontColor -> 
   RGBColor[0.9019607843137255, 0.4117647058823529, 0.027450980392156862`]],
 ShowCellBracket->False],

Cell[BoxData[
 PaneBox[GridBox[{
    {" ", 
     StyleBox[
      RowBox[{"Expected", " ", 
       RowBox[{"output", ":"}]}],
      Editable->False,
      Selectable->False,
      StripOnInput->False,
      FontColor->RGBColor[0.45, 0.45, 0.45]], " "},
    {" ", 
     InterpretationBox[Cell[BoxData[
       RowBox[{"{", 
        RowBox[{
        "5", ",", "7", ",", "53", ",", "59", ",", "61", ",", "67", ",", "71", 
         ",", "73", ",", "79", ",", "83", ",", "89", ",", "97", ",", "503", 
         ",", "509", ",", "521", ",", "523", ",", "541"}], "}"}]], 
       "ExerciseOutput"],
      Apply[TextCell, 
       Cell[
        BoxData[
         RowBox[{"{", 
           
           RowBox[{"5", ",", "7", ",", "53", ",", "59", ",", "61", ",", "67", 
             ",", "71", ",", "73", ",", "79", ",", "83", ",", "89", ",", "97",
              ",", "503", ",", "509", ",", "521", ",", "523", ",", "541"}], 
           "}"}]], "ExerciseOutput", Selectable -> False, Copyable -> False, 
        Editable -> False, ShowCellBracket -> False]]], " "}
   },
   GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Center}}},
   GridBoxBackground->{"Columns" -> {{
        RGBColor[1, 1, 1]}}},
   GridBoxSpacings->{"Columns" -> {{Automatic}}, "Rows" -> {{1}}}],
  FrameMargins->0]], "ExerciseOutput",
 Editable->False,
 Selectable->False,
 Deletable->False,
 CellFrame->{{1, 1}, {1, 1}},
 ShowCellBracket->False,
 CellFrameColor->RGBColor[0.85, 0.85, 0.85],
 LineBreakWithin->Automatic]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 "Construya una rejilla, comenzando con ",
 Cell[BoxData[
  RowBox[{
   ButtonBox["Range",
    BaseStyle->"CodeLink"], "[", "10", "]"}]], "InlineCode"],
 " y, entonces, en cada uno de 9 pasos seguidos, eliminar un elemento al \
azar.",
 StyleBox[ButtonBox["\[NonBreakingSpace]\[RightGuillemet]",
  Appearance->None,
  Evaluator->Automatic,
  Method->"Preemptive",
  ButtonFunction:>(SelectionMove[
     ButtonNotebook[], All, ButtonCell, AutoScroll -> False]; 
   FrontEndExecute[
     FrontEndToken[
      ButtonNotebook[], "OpenCloseGroup"]])],
  FontColor->RGBColor[1, 0.501961, 0]]
}], "Exercise",
 Editable->False,
 Selectable->False,
 Deletable->False,
 CellDingbat->Cell[
  "31.10", "ExerciseNumber", FontColor -> 
   RGBColor[0.9019607843137255, 0.4117647058823529, 0.027450980392156862`]],
 ShowCellBracket->False],

Cell[BoxData[
 PaneBox[GridBox[{
    {" ", 
     StyleBox[
      RowBox[{"Sample", " ", "expected", " ", 
       RowBox[{"output", ":"}]}],
      Editable->False,
      Selectable->False,
      StripOnInput->False,
      FontColor->RGBColor[0.45, 0.45, 0.45]], " "},
    {" ", 
     InterpretationBox[Cell[BoxData[
       TagBox[GridBox[{
          {"1", "2", "3", "4", "5", "6", "7", "8", "9", "10"},
          {"1", "2", "3", "5", "6", "7", "8", "9", "10", ""},
          {"1", "3", "5", "6", "7", "8", "9", "10", "", ""},
          {"3", "5", "6", "7", "8", "9", "10", "", "", ""},
          {"3", "6", "7", "8", "9", "10", "", "", "", ""},
          {"3", "6", "7", "9", "10", "", "", "", "", ""},
          {"3", "6", "7", "9", "", "", "", "", "", ""},
          {"6", "7", "9", "", "", "", "", "", "", ""},
          {"7", "9", "", "", "", "", "", "", "", ""},
          {"9", "", "", "", "", "", "", "", "", ""}
         },
         AutoDelete->False,
         GridBoxItemSize->{
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
        "Grid"]], "ExerciseOutput"],
      Apply[TextCell, 
       Cell[
        BoxData[
         TagBox[
          
          GridBox[{{"1", "2", "3", "4", "5", "6", "7", "8", "9", "10"}, {
            "1", "2", "3", "5", "6", "7", "8", "9", "10", ""}, {
            "1", "3", "5", "6", "7", "8", "9", "10", "", ""}, {
            "3", "5", "6", "7", "8", "9", "10", "", "", ""}, {
            "3", "6", "7", "8", "9", "10", "", "", "", ""}, {
            "3", "6", "7", "9", "10", "", "", "", "", ""}, {
            "3", "6", "7", "9", "", "", "", "", "", ""}, {
            "6", "7", "9", "", "", "", "", "", "", ""}, {
            "7", "9", "", "", "", "", "", "", "", ""}, {
            "9", "", "", "", "", "", "", "", "", ""}}, AutoDelete -> False, 
           GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Grid"]], 
        "ExerciseOutput", Selectable -> False, Copyable -> False, Editable -> 
        False, ShowCellBracket -> False]]], " "}
   },
   GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Center}}},
   GridBoxBackground->{"Columns" -> {{
        RGBColor[1, 1, 1]}}},
   GridBoxSpacings->{"Columns" -> {{Automatic}}, "Rows" -> {{1}}}],
  FrameMargins->0]], "ExerciseOutput",
 Editable->False,
 Selectable->False,
 Deletable->False,
 CellFrame->{{1, 1}, {1, 1}},
 ShowCellBracket->False,
 CellFrameColor->RGBColor[0.85, 0.85, 0.85],
 LineBreakWithin->Automatic]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 "Encuentre las 10 palabras m\[AAcute]s largas en ",
 Cell[BoxData[
  RowBox[{
   ButtonBox["WordList",
    BaseStyle->"CodeLink"], "[", " ", "]"}]], "InlineCode"],
 ".",
 StyleBox[ButtonBox["\[NonBreakingSpace]\[RightGuillemet]",
  Appearance->None,
  Evaluator->Automatic,
  Method->"Preemptive",
  ButtonFunction:>(SelectionMove[
     ButtonNotebook[], All, ButtonCell, AutoScroll -> False]; 
   FrontEndExecute[
     FrontEndToken[
      ButtonNotebook[], "OpenCloseGroup"]])],
  FontColor->RGBColor[1, 0.501961, 0]]
}], "Exercise",
 Editable->False,
 Selectable->False,
 Deletable->False,
 CellDingbat->Cell[
  "31.11", "ExerciseNumber", FontColor -> 
   RGBColor[0.9019607843137255, 0.4117647058823529, 0.027450980392156862`]],
 ShowCellBracket->False],

Cell[BoxData[
 PaneBox[GridBox[{
    {" ", 
     StyleBox[
      RowBox[{"Expected", " ", 
       RowBox[{"output", ":"}]}],
      Editable->False,
      Selectable->False,
      StripOnInput->False,
      FontColor->RGBColor[0.45, 0.45, 0.45]], " "},
    {" ", 
     InterpretationBox[Cell[BoxData[
       RowBox[{"{", 
        RowBox[{"\<\"electroencephalographic\"\>", 
         ",", "\<\"electroencephalograph\"\>", 
         ",", "\<\"counterrevolutionary\"\>", 
         ",", "\<\"buckminsterfullerene\"\>", 
         ",", "\<\"compartmentalization\"\>", 
         ",", "\<\"electroencephalogram\"\>", 
         ",", "\<\"internationalization\"\>", 
         ",", "\<\"uncharacteristically\"\>", 
         ",", "\<\"magnetohydrodynamics\"\>", 
         ",", "\<\"incomprehensibility\"\>"}], "}"}]], "ExerciseOutput"],
      Apply[TextCell, 
       Cell[
        BoxData[
         RowBox[{"{", 
           
           RowBox[{"\"electroencephalographic\"", ",", 
             "\"electroencephalograph\"", ",", "\"counterrevolutionary\"", 
             ",", "\"buckminsterfullerene\"", ",", "\"compartmentalization\"",
              ",", "\"electroencephalogram\"", ",", 
             "\"internationalization\"", ",", "\"uncharacteristically\"", ",",
              "\"magnetohydrodynamics\"", ",", "\"incomprehensibility\""}], 
           "}"}]], "ExerciseOutput", Selectable -> False, Copyable -> False, 
        Editable -> False, ShowCellBracket -> False]]], " "}
   },
   GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Center}}},
   GridBoxBackground->{"Columns" -> {{
        RGBColor[1, 1, 1]}}},
   GridBoxSpacings->{"Columns" -> {{Automatic}}, "Rows" -> {{1}}}],
  FrameMargins->0]], "ExerciseOutput",
 Editable->False,
 Selectable->False,
 Deletable->False,
 CellFrame->{{1, 1}, {1, 1}},
 ShowCellBracket->False,
 CellFrameColor->RGBColor[0.85, 0.85, 0.85],
 LineBreakWithin->Automatic]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 "Encuentre los nombres en ingl\[EAcute]s m\[AAcute]s largos de los \
n\[UAcute]meros enteros del 1 al 100.",
 StyleBox[ButtonBox["\[NonBreakingSpace]\[RightGuillemet]",
  Appearance->None,
  Evaluator->Automatic,
  Method->"Preemptive",
  ButtonFunction:>(SelectionMove[
     ButtonNotebook[], All, ButtonCell, AutoScroll -> False]; 
   FrontEndExecute[
     FrontEndToken[
      ButtonNotebook[], "OpenCloseGroup"]])],
  FontColor->RGBColor[1, 0.501961, 0]]
}], "Exercise",
 Editable->False,
 Selectable->False,
 Deletable->False,
 CellDingbat->Cell[
  "31.12", "ExerciseNumber", FontColor -> 
   RGBColor[0.9019607843137255, 0.4117647058823529, 0.027450980392156862`]],
 ShowCellBracket->False],

Cell[BoxData[
 PaneBox[GridBox[{
    {" ", 
     StyleBox[
      RowBox[{"Expected", " ", 
       RowBox[{"output", ":"}]}],
      Editable->False,
      Selectable->False,
      StripOnInput->False,
      FontColor->RGBColor[0.45, 0.45, 0.45]], " "},
    {" ", 
     InterpretationBox[Cell[BoxData[
       RowBox[{"{", 
        RowBox[{"\<\"seventy\[Hyphen]seven\"\>", 
         ",", "\<\"seventy\[Hyphen]three\"\>", 
         ",", "\<\"seventy\[Hyphen]eight\"\>", 
         ",", "\<\"twenty\[Hyphen]three\"\>", 
         ",", "\<\"twenty\[Hyphen]eight\"\>"}], "}"}]], "ExerciseOutput"],
      Apply[TextCell, 
       Cell[
        BoxData[
         RowBox[{"{", 
           
           RowBox[{"\"seventy\[Hyphen]seven\"", ",", 
             "\"seventy\[Hyphen]three\"", ",", "\"seventy\[Hyphen]eight\"", 
             ",", "\"twenty\[Hyphen]three\"", ",", 
             "\"twenty\[Hyphen]eight\""}], "}"}]], "ExerciseOutput", 
        Selectable -> False, Copyable -> False, Editable -> False, 
        ShowCellBracket -> False]]], " "}
   },
   GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Center}}},
   GridBoxBackground->{"Columns" -> {{
        RGBColor[1, 1, 1]}}},
   GridBoxSpacings->{"Columns" -> {{Automatic}}, "Rows" -> {{1}}}],
  FrameMargins->0]], "ExerciseOutput",
 Editable->False,
 Selectable->False,
 Deletable->False,
 CellFrame->{{1, 1}, {1, 1}},
 ShowCellBracket->False,
 CellFrameColor->RGBColor[0.85, 0.85, 0.85],
 LineBreakWithin->Automatic]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 "Encuentre los 5 nombres en ingl\[EAcute]s de los enteros hasta el 100, que \
contengan en ellos la mayor cantidad de \[OpenCurlyDoubleQuote]e\
\[CloseCurlyDoubleQuote]s.",
 StyleBox[ButtonBox["\[NonBreakingSpace]\[RightGuillemet]",
  Appearance->None,
  Evaluator->Automatic,
  Method->"Preemptive",
  ButtonFunction:>(SelectionMove[
     ButtonNotebook[], All, ButtonCell, AutoScroll -> False]; 
   FrontEndExecute[
     FrontEndToken[
      ButtonNotebook[], "OpenCloseGroup"]])],
  FontColor->RGBColor[1, 0.501961, 0]]
}], "Exercise",
 Editable->False,
 Selectable->False,
 Deletable->False,
 CellDingbat->Cell[
  "31.13", "ExerciseNumber", FontColor -> 
   RGBColor[0.9019607843137255, 0.4117647058823529, 0.027450980392156862`]],
 ShowCellBracket->False,
 CellTags->"LastCellOfAPage"],

Cell[BoxData[
 PaneBox[GridBox[{
    {" ", 
     StyleBox[
      RowBox[{"Expected", " ", 
       RowBox[{"output", ":"}]}],
      Editable->False,
      Selectable->False,
      StripOnInput->False,
      FontColor->RGBColor[0.45, 0.45, 0.45]], " "},
    {" ", 
     InterpretationBox[Cell[BoxData[
       RowBox[{"{", 
        RowBox[{"\<\"seventy\[Hyphen]three\"\>", ",", "\<\"seventeen\"\>", 
         ",", "\<\"seventy\[Hyphen]seven\"\>", ",", "\<\"nineteen\"\>", 
         ",", "\<\"eleven\"\>"}], "}"}]], "ExerciseOutput"],
      Apply[TextCell, 
       Cell[
        BoxData[
         RowBox[{"{", 
           
           RowBox[{"\"seventy\[Hyphen]three\"", ",", "\"seventeen\"", ",", 
             "\"seventy\[Hyphen]seven\"", ",", "\"nineteen\"", ",", 
             "\"eleven\""}], "}"}]], "ExerciseOutput", Selectable -> False, 
        Copyable -> False, Editable -> False, ShowCellBracket -> False]]], " "}
   },
   GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Center}}},
   GridBoxBackground->{"Columns" -> {{
        RGBColor[1, 1, 1]}}},
   GridBoxSpacings->{"Columns" -> {{Automatic}}, "Rows" -> {{1}}}],
  FrameMargins->0]], "ExerciseOutput",
 Editable->False,
 Selectable->False,
 Deletable->False,
 CellFrame->{{1, 1}, {1, 1}},
 ShowCellBracket->False,
 CellFrameColor->RGBColor[0.85, 0.85, 0.85],
 LineBreakWithin->Automatic]
}, Closed]]
}, Closed]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Preguntas y respuestas", "QASection",
 Editable->False,
 Deletable->False,
 ShowCellBracket->False,
 CellTags->"p:191"],

Cell[TextData[{
 "\[DownQuestion]C\[OAcute]mo se dice en voz alta ",
 Cell[BoxData[
  RowBox[{
   StyleBox["lista", "CodeVariable"], "[", 
   RowBox[{"[", 
    StyleBox["n", "CodeVariable"], "]"}], "]"}]], "InlineCode"],
 "?"
}], "Question",
 Editable->False,
 Deletable->False,
 ShowCellBracket->False,
 CellTags->"i:17"],

Cell[TextData[{
 "Generalmente, como \[OpenCurlyDoubleQuote]",
 StyleBox["lista",
  FontSlant->"Italic"],
 " parte ",
 StyleBox["n",
  FontSlant->"Italic"],
 "\[CloseCurlyDoubleQuote] o \[OpenCurlyDoubleQuote]",
 StyleBox["lista",
  FontSlant->"Italic"],
 " sub ",
 StyleBox["n",
  FontSlant->"Italic"],
 "\[CloseCurlyDoubleQuote]. La segunda forma (donde \
\[OpenCurlyDoubleQuote]sub\[CloseCurlyDoubleQuote] es la abreviatura de \
\[OpenCurlyDoubleQuote]sub\[IAcute]ndice\[CloseCurlyDoubleQuote]) proviene de \
c\[OAcute]mo se hace referencia a los componentes de vectores en matem\
\[AAcute]ticas. "
}], "Answer",
 Editable->False,
 Deletable->False,
 ShowCellBracket->False],

Cell["\[DownQuestion]Qu\[EAcute] sucede si se pide una parte que no exista en \
una lista?", "Question",
 Editable->False,
 Deletable->False,
 ShowCellBracket->False],

Cell["\<\
Se recibe un mensaje, y la entrada original se regresa tal cual.\
\>", "Answer",
 Editable->False,
 Deletable->False,
 ShowCellBracket->False],

Cell["\<\
\[DownQuestion]Puede obtenerse solamente la primera posici\[OAcute]n donde \
aparece alguna cosa en una lista?\
\>", "Question",
 Editable->False,
 Deletable->False,
 ShowCellBracket->False],

Cell[TextData[{
 "S\[IAcute]. Use ",
 ButtonBox["FirstPosition",
  BaseStyle->"Link"],
 ". "
}], "Answer",
 Editable->False,
 Deletable->False,
 ShowCellBracket->False,
 CellTags->"i:18"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Notas t\[EAcute]cnicas", "TechNoteSection",
 Editable->False,
 Deletable->False,
 ShowCellBracket->False],

Cell[TextData[{
 ButtonBox["First",
  BaseStyle->"Link"],
 " y ",
 ButtonBox["Last",
  BaseStyle->"Link"],
 " equivalen a ",
 Cell[BoxData[
  RowBox[{"[", 
   RowBox[{"[", "1", "]"}], "]"}]], "InlineCode"],
 " y ",
 Cell[BoxData[
  RowBox[{"[", 
   RowBox[{"[", 
    RowBox[{"-", "1"}], "]"}], "]"}]], "InlineCode"],
 "."
}], "TechNote",
 Editable->False,
 Deletable->False,
 ShowCellBracket->False],

Cell[TextData[{
 "Al especificar partes, ",
 Cell[BoxData[
  RowBox[{
   RowBox[{"1", 
    ButtonBox[";;",
     BaseStyle->"Link",
     ButtonData->"Span"]}], "-", "1"}]], "InlineCode"],
 " equivale a ",
 ButtonBox["All",
  BaseStyle->"Link"],
 ". "
}], "TechNote",
 Editable->False,
 Deletable->False,
 ShowCellBracket->False]
}, Open  ]],

Cell[CellGroupData[{

Cell["Para explorar m\[AAcute]s", "MoreExploreSection",
 Editable->False,
 Deletable->False,
 ShowCellBracket->False],

Cell[TextData[ButtonBox["Gu\[IAcute]a para partes de listas en Wolfram \
Language\[NonBreakingSpace]\[RightGuillemet]",
 BaseStyle->"Link",
 ButtonData->"paclet:guide/ElementsOfLists"]], "MoreExplore",
 Editable->False,
 Deletable->False,
 ShowCellBracket->False,
 CellTags->"LastCellOfAPage"]
}, Open  ]]
},
Saveable->False,
WindowToolbars->{},
BlinkingCellInsertionPoint->False,
CellInsertionPointCell->None,
WindowSize->{830, 800},
WindowMargins->Automatic,
WindowPersistentStyles->{
 WindowFrame, WindowMargins, WindowSize, Magnification},
WindowTitle->"Partes de listas: Una introducci\[OAcute]n elemental a Wolfram \
Language",
DockedCells->{
  Cell[
   BoxData[
    TagBox[
     GridBox[{{
        TemplateBox[{
         "\[ThickSpace]\[ThickSpace]\[ThickSpace]\[ThickSpace]", 
          "\"\[ThickSpace]\[ThickSpace]\[ThickSpace]\[ThickSpace]\"", 
          GraphicsBox[
           TagBox[
            RasterBox[CompressedData["
1:eJztl01IVFEUxyctMFzUysjIyUDCTauiIJFM6ENpM4NEtJrBUaSYZMYPhCRm
rYuoICgiW0VEBVIUEbTNEMTAIqRsk6JGCVFBHx7//+4JLo/36DqvB4Ie+Mk7
7+t3733nHpzq9NlEW0ksFsuX4U8i1duQy6X6kpuRtGTzHe3ZTOuxbFemPZPb
ny7FyZ2gEqwHInICfJToguOIReywPVHHlYDzcY4hJHZ486giyBOXtfms5Pms
Bs9zUBDTow6DJOgBT8DP/+B5CepAPbgqZm+zT70Bt9VXCx6H8DwE28Gw5ufB
IT2eA1N6PKquC0V4xtUxqfkE6ARD4BHYAx5Y938Gu8GdZXq4VsNWngIfwDzY
Aa6Bm55nOKYq8NXRw29eb+Uz4JSVd4Nn4IbPs2fARUdPQcfLWAQJ8Mq6Tkdd
gGcEHHT0sHYn9Jg1dcnnnhf6vnee8xzXVkcP9wdr97eY7z0NnlrX74qpxffg
iOZ2VDp6kvqOe6AVXAb7xNQB462YNfsCfoBzoE1MzTEqHD096mgE98WsEec4
Jqamvvk8cx2kwWuw19HDXnIAbNAx03ka9IO8mO+3ScyebRZTi01i1rqguHjY
r3aJWaugOA5O6vEC+K6ebWDW0cNgv6oBnwKus87KwKDmv8BRMOBz77/6G/sV
e8lkwHWuTwm4pQ7WzGIRHgb7FXsJ9/mI5z2si42gXMw8/ByuHgb7FXsJ9yX3
IPfHFjF1xTl5v0exnrCx5gnn+fu7JC7h/z/0Y52+P+rfWX9iCXVYErg=
             "], {{0,
              34}, {26, 0}}, {0, 255}, ColorFunction -> RGBColor], 
            BoxForm`ImageTag[
            "Byte", ColorSpace -> "RGB", Interleaving -> True, Magnification -> 
             1], Selectable -> False], DefaultBaseStyle -> "ImageGraphics", 
           ImageSize -> Magnification[1], ImageSizeRaw -> {26, 34}, 
           PlotRange -> {{0, 26}, {0, 34}}], 
          GraphicsBox[
           TagBox[
            RasterBox[CompressedData["
1:eJztXUuS47gRLX8WXtYRaJ+gl17SS+8U4/CeM+H2hDdtRY8jHF6ZR9AReATt
qrwyj6AjcO+ZaN0gLZCZwEMiQVJqSd2qwYvgdBGf/AF4+LFqfvvd37/56y+f
np5++M3pP998+88/fPz47b/+9Hx6+fOHH/72/Yf3f/njh3+8//79x99/96tT
4u9Oz79/8fT066cY9NNLSz++9uPz0+uOPv3n3Zj+40vj083npZktd5IVdJzk
hvT9pHOq78uc9I75rD/KA31n6/z03+dY1lRX64jkQh3LLpevbWI7t6N/Esv/
vdSJDpcOdpr5M74lvk/tt6VPL1VG3j7v79Qedr2XLlevoKDgsTHx8Cud+OTA
XDKM7yfOijnmlB+XC9zvuGfMm+HhqfwR8sjLY54ddbJuw05yesL7Sp2qHtY1
4+F8VjZ4Xajf2/q6Gd/HuUDH6OTvZOM21jHZmm0TsTvH/d531WZOn5o3x3lL
Ys22pnFN87Bezs6CgoLHhFsnMqd1IW1cz26TsrO8nOdSX8bgO+CwZlmHzf2L
OoXbYE08y/2e80AXcDGkbVEuzEXbIAvmA9S/kvuz+aIL5yeJHbTlVHbcQwzT
/BDncT5l6xXuLyh4k4C1Xfb8wZe9Bfcrnr0J949r43H9vV9bl2Oyn2w88Te/
Yx0+DxmiOiddiSyDk2/B/cEGFWPm/GkOeDmavo5zQ5wnaYX7CwreJvy61HGb
cc7uy63g/rEMPLEeg/tl7cxrZa/DpStZ2TOfFTo1Vy5yP88Zk02vGzkTic54
prjx/JDuFWJ501nXXCwS/Wev+9m+aN/Bdrk8dUYVZE1zv7n/4vScHQUFBY8L
f2fpz99PP1v8vob71ROV8efSruxYfj9xojujVuf92cfg/mWdPf88yDp9ed0f
8uXMZJIxroP5zN3ar6Tn6cGOsK5efd6f8S1/3n/6Nzrbirl7sj852yFuk87P
Zfzzmr1VQUHBY2M6+x/HPJnnCddY9yOXjevmkz7kqhut+xPZS9zv1/juvnvc
N3STTv5+R8XCsi+2Y+Joyy67fLijxifxXbhf5uzkeyZ/zt/yt0ADzrXs06RH
fJ7uKI7TnXfh/oKCnwvgDiD67u8W5/1JmZuc92vOndbus9wvd+D+TEq+ZQ3v
wpNTebkTMO5S4b4gZ5dp9xlnPp7/cR7F73v0g9/K4v7Ff4c17VEK9xcUvE2M
vJR828dcpc/m3wL3e05fvsPktW/0jY7n02m9PSS6FP+infHvJlyZ+4352p/h
671AWi5wv/+2R/Y5hfsLCt4icKzD2cpe3xmOZS8484nuIm/E/efqpJXfLkIc
hihdvtnP7YvcuYq/Ww1nM7EM/v5I2y5zzCV3vXJeF/YCg7Yx8kv2LMj9MofI
7/YV7i8oeJOY1vhwxh+e5JvPS+5643vGG3H/mTr9efYi9/vf5+qUHebc6O0P
c4M8e+Mc3rzLDWcvF3C/P6fnuSdno5xX+d/Lm7mnKNxfUPDmodeeBZdjXD+P
sYw5v6CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoOBr
BxE9n57aPV/aloLr4dSeFbdr9m/CXlmf60fVPXTdGi5mHLvqS9uyhNz45fTm
9LTu3y9jXcFacHu1/NRXktlmnprzXb8ZcQ19Pxdw3K7WTtcG2+bQ30nf4fQc
7zXX3BIuZhy79kryKhl3Kt1K23J6tVK2OX7Bh69mbFv+FkzgeVpg/r9bL5CZ
Q8v5D8n99+S1jP4W43hm3Zvbfivuz/nN6Y7/b/57dCcdwzX6K/T9VqXfgvuj
MYZpBPPluWPRGr9KdkdfyXz8iDxzLzi+5/Ac+d/PHkfQB7bcT+SpOP/huJ+m
PflDcj/Eu7+NZV7PXbn/nrhWf70X97NMGdM1v+M6b8tp0q+T/+/cCh/ISrsG
h1wLj8Yz9wJN5z3C+x3/3KgyY7/g8XeE8vn/z1dAncnP7Rk3xOsrRof9SHiF
6x/gXc4Zxb6dkvuO4v1oT/G6R/JQhvt3w/mNsmuUAbL3Kk/rF50tlNnyv3tV
VvQk8SWDA0HeJba3UFfi2UIbYb2Dtol9HyBf4thr+1a0/Vbpk3bdUYoWZRP0
M8Nu3dai38ntVLmEs9jHAylAvu6zkT4lC9tI+yKx2yt5jZJh6TO5FmQKz6O/
e7DJv4PPOF6cPh1jHweK+4H2S2yUdnT+yzkz1hkobifpmxsK3HNkeysKYy6q
Z8TA25nJrykdv63hK/ogequZmCFqMtZfZI9nHIsSr0bZvKW0H3nZNMW3W5Cx
4bwOftZcRErG0SqXqROt+4146jEkcPZIv+gytmC/ORpp77hOBfk9hfY5gFxs
syPIGYz2OHL5HeftVLqgUXajjcJrggr6j9drxHWO+0XHEWUs2N5COnG5DduB
aVhfbMW4DqT4SNu30PYt1JUz/IEC9+vYNcr3WsVvzu6aYuA4S//+Xcr9PYUx
Vis5EoOR3wxZDZTRvmjewHg+G/51YFevdam4SnsPYOfR6lOUtiv6LmPK4n4d
I91G6HMFaRi33rBdxwPXN6u5aCa/A3nYBtKndH/BdulADtoXjQUK9/g5H1tD
jo59ZdiD+a68tDPOix3EqTb8dn0SuUivtYntdGU8Ry/FWwPyrfEvfjT8/sw2
Hw25so4R3h0otNWg5EgZbCdp43fqfc96fd80bPZtB3Zu4F307SBN0Km6En/x
p9V1Vfk57u8usB25H9dcYheuBSVGnRH7Z1Wvh3o5WzBN+qbEYfTD0O39Vr7X
/C593rJbxoXo92sh8MXkEMtmpa+DNOl/yTyiYq59ETt7CuM8GrOgbwv1RJ81
12xQptgKunCtKjokFr3hp+wVrDbMxUig98IbitcRWp7E6cD5yE/S18W/41MG
lk0q38nG8St9uNV+UeifjREjgV47VUoO1rHGs6uLY1F4sTbigvviDuo74LgU
e5GTxL4NxecoTS52ZLRTLt4cx1YeyLf6jqCH52iVMWKH8Yx4At4PIFfGS63K
1DO6TP6E2O4hntomwbOqJzIP/C7xrzJxneP+s22nzFwDduCYiPq7jrOSl/hu
2ELWe8bvtdwv7Tpn99wYjOKTszmnf6WsJe5vjTTxD/di0RhBG6C+jFVXRniy
ARsaUnMH6MT5Rfw/qvfV3J+xbUfqPG0uTpSO2zV9Zzafy1jjt13ha2/YJnEU
v/ReCetYPjo+30I7aHsiHieY3/l9y++yj+lJ7Q8pPmPRwHVTEjsrzcqnM877
oU6vn5xeupz75dHr/npGV44/8cynA1lZu1V935/Fzpm43or7W5U+GDJ1H/sa
ud/a22q7H5n7BVZfrjL6JCbST/H8we/dDJ1Nzn8rHksxUmm4Lu4hJkvcr+Px
2dxP8ZnPTrfDgq89pAknu7EjXHtYqBP5SBPvH0BOS2EsYhwkrYc4bpRM5H55
RE8H9Vt+pC9k19or4ymoM/lWPMWfjVXH0kvruL/D94zcc7jf2WmdidUzNmXj
BeWlzc2zAlW2hbQk1mfYvsRDuEeMzkUgrp1RJvGdwt5X1iXCI7iX9z5k7OlU
uo69xZ9ipz6vQBuX+BrP2a39eGPo6zKyTF0Z2zXXJby8BKjjoM9PPf/O2a9t
ps/n/tbQoeXdnPspvneQ9brm47Xc731iO7cUjzWpg/OBnKVpXdhOms/ceHHj
WOb/PcVj34/1mZhIu+tvNyIOtmK3Nt6kznwonK/WUEbSJHbjOSyFfdhGyzXi
jW2gY4W6XPmN2GXUqWd04fjvKb3LOpD6bmRNvCjufw7VTFw/l/u17Tnuxz1h
C+W8Hoq/F9zN+C79aU9qH2vE/8i6OoL7UiXb6ZL92pxNObvP5n6ly/nTqnrO
1i3F34HUGTlbKOPHLa3jfvFP4iRjpJmxG2Ng3YNondhXdhS+sSEK/QbHQqPr
WXGbsWlHcDdqlJmLx2rup5iHWq6LY8/Jxn7W5nSQ3YfEhx2F71twnYAxi3y2
dFE6XqSM9IGBfxZdlWGLq79hfXKXKWN7MGIl/nczbZekZeKtgbGaW3MIjmTw
HLwvcr+KF8IaB/Wcj6S+veI0HO/OXpnL+zlZSq7Umf3Gmi7k/hnbTe43/CKr
HKXfkUkc0fdWyfD9GcrgXhfL1Zxfq7x2xnfLbuvs2rLRp62IR2XEQNDMyHG+
JvdCtIL7M3aMZxUz+qJ5PCNno+pY40XfCUXjl87jfjzzIYI7OChzbe7XaJVM
iWVuLb523a8x3skauhyk76CPOA4GsvsFzhsI/J0NXebA6RWpeQnkRnn8c63K
JGlWvvHgPOj0bLUNbJ9LT85+tF7LD8r8XRQu2/Cj71yljt6jJT7SNJYaZccG
5Ro2ZeNFExdI+2bPe5S/FaTVa2ynMOd72y15hj6JWa6MtJfpO5RpQW8utjWX
S3RBf9lQ/O1E5PuS3RT+Fo3ui+Z4UHU3FL5bxnhLDLJxMmwQ+2ScJf3W6pfK
v+z5qOGvtrmy0g0dpk96/KIeVS7X1lK/Ql8N+7LxyOm09BsPyh3HhZJZqXe0
zepDbgwPFP4+hoxpUnWlD1VaF8j2bavjQGHe6Sic0yfraCi7pRV9suC+4H4g
87w/4ygoKHgcUNhb4f2YnMsTLawpztTVa5kUzhH7a+kpuC0o3vc2X9qegoKC
80Hp78Phmr+7si48q5O9hqwdrzbHFNwWFL61rr60LQUFBZeDwt9N7Sl8O1nf
SFdD4XuijtQ3RXP4P6lulfg=
             "], {{0, 34}, {383, 0}}, {0, 255}, 
             ColorFunction -> RGBColor], 
            BoxForm`ImageTag[
            "Byte", ColorSpace -> "RGB", Interleaving -> True, Magnification -> 
             1], Selectable -> False], DefaultBaseStyle -> "ImageGraphics", 
           ImageSize -> Magnification[1], ImageSizeRaw -> {383, 34}, 
           PlotRange -> {{0, 383}, {0, 34}}]}, "RowWithSeparators"], 
        PaneBox[
         StyleBox["\[VeryThinSpace]", ShowStringCharacters -> False], 
         Alignment -> Right, ImageSize -> {174, 47}], 
        PaneBox[
         PaneBox[
          TemplateBox[{"\[ThinSpace]", "\" \"", 
            TagBox[
             TooltipBox[
              PaneSelectorBox[{False -> ButtonBox[
                  PaneBox[
                   GraphicsBox[
                    TagBox[
                    RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UJAPiDmBmIUBO/j//z8jEDcA8W8g3oBFnhmIZ/9HgE9o8mxAvBZJ/hsQuyPJ
8wPxfiT5N0BsjiQvCsTnkOSfALEWkrwSEN9Bkr8OxDJobniAJP8ZZCYWfxCj
RpGQXcS4mVi/ExuGxMYFmlp4nAIAG14fWQ==
                    "], {{0, 14}, {9, 
                    0}}, {0, 255}, ColorFunction -> RGBColor], 
                    BoxForm`ImageTag[
                    "Byte", ColorSpace -> "RGB", Interleaving -> True], 
                    Selectable -> False], DefaultBaseStyle -> "ImageGraphics",
                     ImageSizeRaw -> {9, 14}, PlotRange -> {{0, 9}, {0, 14}}, 
                    ImageSize -> Magnification[1]], ImageSize -> {35, 30}, 
                   Alignment -> Center], 
                  ButtonFunction :> (
                   NotebookLocate[{"EIWL2-30-rearranging-lists.nb", ""}, 
                    FrontEnd`HistoryData :> {
                    EvaluationNotebook[]}]& ), Enabled -> True, Appearance -> 
                  None, Evaluator -> Automatic, Method -> "Preemptive"], True -> 
                ButtonBox[
                  PaneBox[
                   GraphicsBox[
                    TagBox[
                    RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UJAPiDmBmIUBO/j//z8jEDcA8W8g3oBFnhmIZ/9HgE9o8mxAvBZJ/hsQuyPJ
8wPxfiT5N0BsjiQvCsTnkOSfALEWkrwSEN9Bkr8OxDJobniAJP8ZZCYWfxCj
RpGQXcS4mVi/ExuGxMYFmlp4nAIAG14fWQ==
                    "], {{0, 14}, {9, 
                    0}}, {0, 255}, ColorFunction -> RGBColor], 
                    BoxForm`ImageTag[
                    "Byte", ColorSpace -> "RGB", Interleaving -> True], 
                    Selectable -> False], DefaultBaseStyle -> "ImageGraphics",
                     ImageSizeRaw -> {9, 14}, PlotRange -> {{0, 9}, {0, 14}}, 
                    ImageSize -> Magnification[1]], ImageSize -> {35, 30}, 
                   Alignment -> Center], 
                  ButtonFunction :> (
                   NotebookLocate[{"EIWL2-30-rearranging-lists.nb", ""}, 
                    FrontEnd`HistoryData :> {
                    EvaluationNotebook[]}]& ), Enabled -> True, Appearance -> 
                  None, Background -> RGBColor[0.835294, 0.364706, 0.0196078],
                   Evaluator -> Automatic, Method -> "Preemptive"]}, 
               Dynamic[
                CurrentValue["MouseOver"]], ImageSize -> Automatic, 
               FrameMargins -> 0], "\"Reorganizaci\[OAcute]n de listas\"", 
              TooltipDelay -> 0.15, LabelStyle -> "TextStyling"], 
             Annotation[#, "Reorganizaci\[OAcute]n de listas", "Tooltip"]& ], 
            
            TemplateBox[{5}, "Spacer1"], 
            TagBox[
             TooltipBox[
              PaneSelectorBox[{False -> ButtonBox[
                  PaneBox[
                   GraphicsBox[
                    TagBox[
                    RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UJAfiDmBmAWI////vwKIfwFxMQMOAJT7+R8B6nGoSf+PCjpwqMskUl0SEP9F
UtcHxIxY1EWjqZuOQ10Mmr2TcNj7BEnNP1LNIeQeIDsZn78IhQ8x4fwfNb4a
cPgTFu8l2ORBAAC+1hnm
                    "], {{0, 15}, {9, 0}}, {0, 255}, 
                    ColorFunction -> RGBColor], 
                    BoxForm`ImageTag[
                    "Byte", ColorSpace -> "RGB", Interleaving -> True], 
                    Selectable -> False], DefaultBaseStyle -> "ImageGraphics",
                     ImageSizeRaw -> {9, 15}, PlotRange -> {{0, 9}, {0, 15}}, 
                    ImageSize -> Magnification[1]], ImageSize -> {35, 30}, 
                   Alignment -> Center], 
                  ButtonFunction :> (
                   NotebookLocate[{"EIWL2-32-patterns.nb", ""}, 
                    FrontEnd`HistoryData :> {
                    EvaluationNotebook[]}]& ), Appearance -> None, Evaluator -> 
                  Automatic, Method -> "Preemptive"], True -> ButtonBox[
                  PaneBox[
                   GraphicsBox[
                    TagBox[
                    RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UJAfiDmBmAWI////vwKIfwFxMQMOAJT7+R8B6nGoSf+PCjpwqMskUl0SEP9F
UtcHxIxY1EWjqZuOQ10Mmr2TcNj7BEnNP1LNIeQeIDsZn78IhQ8x4fwfNb4a
cPgTFu8l2ORBAAC+1hnm
                    "], {{0, 15}, {9, 0}}, {0, 255}, 
                    ColorFunction -> RGBColor], 
                    BoxForm`ImageTag[
                    "Byte", ColorSpace -> "RGB", Interleaving -> True], 
                    Selectable -> False], DefaultBaseStyle -> "ImageGraphics",
                     ImageSizeRaw -> {9, 15}, PlotRange -> {{0, 9}, {0, 15}}, 
                    ImageSize -> Magnification[1]], ImageSize -> {35, 30}, 
                   Alignment -> Center], 
                  ButtonFunction :> (
                   NotebookLocate[{"EIWL2-32-patterns.nb", ""}, 
                    FrontEnd`HistoryData :> {
                    EvaluationNotebook[]}]& ), Appearance -> None, Background -> 
                  RGBColor[0.835294, 0.364706, 0.0196078], Evaluator -> 
                  Automatic, Method -> "Preemptive"]}, 
               Dynamic[
                CurrentValue["MouseOver"]], ImageSize -> Automatic, 
               FrameMargins -> 0], "\"Patrones\"", TooltipDelay -> 0.15, 
              LabelStyle -> "TextStyling"], 
             Annotation[#, "Patrones", "Tooltip"]& ]}, "RowWithSeparators"], 
          Alignment -> Right], ImageSize -> {100, 30}, 
         FrameMargins -> {{0, 6}, {0, 0}}, Alignment -> Right], 
        ActionMenuBox[
         PaneSelectorBox[{True -> PanelBox[
             GraphicsBox[
              TagBox[
               RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UBAkIQ3ELED8////Jf/pA0D2/KWTXSB7ZtPBPrA9DKOAYgAMR1Eg9gPiABpi
P6g912mcLmAAZM9XOtkFsicKiNcD8QYaYpD5UQOdXoYD+E/HMooO9iDbR7c6
BQDxtyEt
                "], {{0, 16}, {27, 0}}, {0, 255}, ColorFunction -> 
                RGBColor], 
               BoxForm`ImageTag[
               "Byte", ColorSpace -> "RGB", Interleaving -> True, 
                Magnification -> 1], Selectable -> False], DefaultBaseStyle -> 
              "ImageGraphics", ImageSize -> Magnification[1], 
              ImageSizeRaw -> {27, 16}, PlotRange -> {{0, 27}, {0, 16}}], 
             Appearance -> None, Background -> 
             RGBColor[0.835294, 0.364706, 0.0196078], ImageSize -> {35, 30}, 
             Alignment -> Center], False -> PanelBox[
             GraphicsBox[
              TagBox[
               RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UBAkIQ3ELED8////Jf/pA0D2/KWTXSB7ZtPBPrA9DKOAYgAMR1Eg9gPiABpi
P6g912mcLmAAZM9XOtkFsicKiNcD8QYaYpD5UQOdXoYD+E/HMooO9iDbR7c6
BQDxtyEt
                "], {{0, 16}, {27, 0}}, {0, 255}, ColorFunction -> 
                RGBColor], 
               BoxForm`ImageTag[
               "Byte", ColorSpace -> "RGB", Interleaving -> True, 
                Magnification -> 1], Selectable -> False], DefaultBaseStyle -> 
              "ImageGraphics", ImageSize -> Magnification[1], 
              ImageSizeRaw -> {27, 16}, PlotRange -> {{0, 27}, {0, 16}}], 
             Appearance -> None, Background -> 
             RGBColor[0.952941, 0.509804, 0], ImageSize -> {35, 30}, 
             Alignment -> Center]}, 
          Dynamic[
           CurrentValue["MouseOver"]]], {
         "Prefacio" :> 
          NotebookLocate[{"EIWL2-0a-preface.nb", ""}, FrontEnd`HistoryData :> {
              EvaluationNotebook[]}], 
          "\[DownQuestion]Qu\[EAcute] es Wolfram Language?" :> 
          NotebookLocate[{"EIWL2-0b-what-is-the-wolfram-language.nb", ""}, 
            FrontEnd`HistoryData :> {
              EvaluationNotebook[]}], 
          "Aspectos pr\[AAcute]cticos en el uso de Wolfram Language" :> 
          NotebookLocate[{
            "EIWL2-0c-practicalities-of-using-the-wolfram-language.nb", ""}, 
            FrontEnd`HistoryData :> {
              EvaluationNotebook[]}], "Otros recursos" :> 
          NotebookLocate[{"EIWL2-0d-other-resources.nb", ""}, 
            FrontEnd`HistoryData :> {
              EvaluationNotebook[]}], 
          "Sobre la traducci\[OAcute]n al espa\[NTilde]ol" :> 
          NotebookLocate[{"EIWL2-0e-translation-notes.nb", ""}, 
            FrontEnd`HistoryData :> {
              EvaluationNotebook[]}], 
          "\[ThickSpace]\[ThickSpace]\[ThinSpace]1\[ThickSpace]\[ThickSpace]|\
\[ThickSpace]\[ThickSpace]Inicio: aritm\[EAcute]tica elemental" :> 
          NotebookLocate[{
            "EIWL2-01-starting-out-elementary-arithmetic.nb", ""}, 
            FrontEnd`HistoryData :> {
              EvaluationNotebook[]}], 
          "\[ThickSpace]\[ThickSpace]\[ThinSpace]2\[ThickSpace]\[ThickSpace]|\
\[ThickSpace]\[ThickSpace]Introducci\[OAcute]n a las funciones" :> 
          NotebookLocate[{"EIWL2-02-introducing-functions.nb", ""}, 
            FrontEnd`HistoryData :> {
              EvaluationNotebook[]}], 
          "\[ThickSpace]\[ThickSpace]\[ThinSpace]3\[ThickSpace]\[ThickSpace]|\
\[ThickSpace]\[ThickSpace]Un primer vistazo a las listas" :> 
          NotebookLocate[{"EIWL2-03-first-look-at-lists.nb", ""}, 
            FrontEnd`HistoryData :> {
              EvaluationNotebook[]}], 
          "\[ThickSpace]\[ThickSpace]\[ThinSpace]4\[ThickSpace]\[ThickSpace]|\
\[ThickSpace]\[ThickSpace]Visualizaci\[OAcute]n de listas" :> 
          NotebookLocate[{"EIWL2-04-displaying-lists.nb", ""}, 
            FrontEnd`HistoryData :> {
              EvaluationNotebook[]}], 
          "\[ThickSpace]\[ThickSpace]\[ThinSpace]5\[ThickSpace]\[ThickSpace]|\
\[ThickSpace]\[ThickSpace]Operaciones con listas" :> 
          NotebookLocate[{"EIWL2-05-operations-on-lists.nb", ""}, 
            FrontEnd`HistoryData :> {
              EvaluationNotebook[]}], 
          "\[ThickSpace]\[ThickSpace]\[ThinSpace]6\[ThickSpace]\[ThickSpace]|\
\[ThickSpace]\[ThickSpace]Construcci\[OAcute]n de tablas" :> 
          NotebookLocate[{"EIWL2-06-making-tables.nb", ""}, 
            FrontEnd`HistoryData :> {
              EvaluationNotebook[]}], 
          "\[ThickSpace]\[ThickSpace]\[ThinSpace]7\[ThickSpace]\[ThickSpace]|\
\[ThickSpace]\[ThickSpace]Colores y estilos" :> 
          NotebookLocate[{"EIWL2-07-colors-and-styles.nb", ""}, 
            FrontEnd`HistoryData :> {
              EvaluationNotebook[]}], 
          "\[ThickSpace]\[ThickSpace]\[ThinSpace]8\[ThickSpace]\[ThickSpace]|\
\[ThickSpace]\[ThickSpace]Objetos gr\[AAcute]ficos elementales" :> 
          NotebookLocate[{"EIWL2-08-basic-graphics-objects.nb", ""}, 
            FrontEnd`HistoryData :> {
              EvaluationNotebook[]}], 
          "\[ThickSpace]\[ThickSpace]\[ThinSpace]9\[ThickSpace]\[ThickSpace]|\
\[ThickSpace]\[ThickSpace]Manipulaci\[OAcute]n interactiva" :> 
          NotebookLocate[{"EIWL2-09-interactive-manipulation.nb", ""}, 
            FrontEnd`HistoryData :> {
              EvaluationNotebook[]}], 
          "10\[ThickSpace]\[ThickSpace]|\[ThickSpace]\[ThickSpace]Im\[AAcute]\
genes" :> NotebookLocate[{"EIWL2-10-images.nb", ""}, 
            FrontEnd`HistoryData :> {
              EvaluationNotebook[]}], 
          "11\[ThickSpace]\[ThickSpace]|\[ThickSpace]\[ThickSpace]Cadenas de \
caracteres y texto" :> 
          NotebookLocate[{"EIWL2-11-strings-and-text.nb", ""}, 
            FrontEnd`HistoryData :> {
              EvaluationNotebook[]}], 
          "12\[ThickSpace]\[ThickSpace]|\[ThickSpace]\[ThickSpace]Sonido" :> 
          NotebookLocate[{"EIWL2-12-sound.nb", ""}, FrontEnd`HistoryData :> {
              EvaluationNotebook[]}], 
          "13\[ThickSpace]\[ThickSpace]|\[ThickSpace]\[ThickSpace]Arreglos o \
listas de listas" :> 
          NotebookLocate[{"EIWL2-13-arrays-or-lists-of-lists.nb", ""}, 
            FrontEnd`HistoryData :> {
              EvaluationNotebook[]}], 
          "14\[ThickSpace]\[ThickSpace]|\[ThickSpace]\[ThickSpace]Coordenadas \
y gr\[AAcute]ficos" :> 
          NotebookLocate[{"EIWL2-14-coordinates-and-graphics.nb", ""}, 
            FrontEnd`HistoryData :> {
              EvaluationNotebook[]}], 
          "15\[ThickSpace]\[ThickSpace]|\[ThickSpace]\[ThickSpace]El alcance \
de Wolfram Language" :> 
          NotebookLocate[{
            "EIWL2-15-the-scope-of-the-wolfram-language.nb", ""}, 
            FrontEnd`HistoryData :> {
              EvaluationNotebook[]}], 
          "16\[ThickSpace]\[ThickSpace]|\[ThickSpace]\[ThickSpace]Datos del \
mundo real" :> 
          NotebookLocate[{"EIWL2-16-real-world-data.nb", ""}, 
            FrontEnd`HistoryData :> {
              EvaluationNotebook[]}], 
          "17\[ThickSpace]\[ThickSpace]|\[ThickSpace]\[ThickSpace]Unidades" :> 
          NotebookLocate[{"EIWL2-17-units.nb", ""}, FrontEnd`HistoryData :> {
              EvaluationNotebook[]}], 
          "18\[ThickSpace]\[ThickSpace]|\[ThickSpace]\[ThickSpace]\
Geocomputaci\[OAcute]n" :> 
          NotebookLocate[{"EIWL2-18-geocomputation.nb", ""}, 
            FrontEnd`HistoryData :> {
              EvaluationNotebook[]}], 
          "19\[ThickSpace]\[ThickSpace]|\[ThickSpace]\[ThickSpace]Fechas y \
horas" :> NotebookLocate[{"EIWL2-19-dates-and-times.nb", ""}, 
            FrontEnd`HistoryData :> {
              EvaluationNotebook[]}], 
          "20\[ThickSpace]\[ThickSpace]|\[ThickSpace]\[ThickSpace]Opciones" :> 
          NotebookLocate[{"EIWL2-20-options.nb", ""}, FrontEnd`HistoryData :> {
              EvaluationNotebook[]}], 
          "21\[ThickSpace]\[ThickSpace]|\[ThickSpace]\[ThickSpace]Grafos y \
redes" :> NotebookLocate[{"EIWL2-21-graphs-and-networks.nb", ""}, 
            FrontEnd`HistoryData :> {
              EvaluationNotebook[]}], 
          "22\[ThickSpace]\[ThickSpace]|\[ThickSpace]\[ThickSpace]Aprendizaje \
autom\[AAcute]tico" :> 
          NotebookLocate[{"EIWL2-22-machine-learning.nb", ""}, 
            FrontEnd`HistoryData :> {
              EvaluationNotebook[]}], 
          "23\[ThickSpace]\[ThickSpace]|\[ThickSpace]\[ThickSpace]M\[AAcute]s \
sobre n\[UAcute]meros" :> 
          NotebookLocate[{"EIWL2-23-more-about-numbers.nb", ""}, 
            FrontEnd`HistoryData :> {
              EvaluationNotebook[]}], 
          "24\[ThickSpace]\[ThickSpace]|\[ThickSpace]\[ThickSpace]M\[AAcute]s \
formas de visualizaci\[OAcute]n" :> 
          NotebookLocate[{"EIWL2-24-more-forms-of-visualization.nb", ""}, 
            FrontEnd`HistoryData :> {
              EvaluationNotebook[]}], 
          "25\[ThickSpace]\[ThickSpace]|\[ThickSpace]\[ThickSpace]Maneras de \
aplicar funciones" :> 
          NotebookLocate[{"EIWL2-25-ways-to-apply-functions.nb", ""}, 
            FrontEnd`HistoryData :> {
              EvaluationNotebook[]}], 
          "26\[ThickSpace]\[ThickSpace]|\[ThickSpace]\[ThickSpace]Funciones \
puras an\[OAcute]nimas" :> 
          NotebookLocate[{"EIWL2-26-pure-anonymous-functions.nb", ""}, 
            FrontEnd`HistoryData :> {
              EvaluationNotebook[]}], 
          "27\[ThickSpace]\[ThickSpace]|\[ThickSpace]\[ThickSpace]Aplicaci\
\[OAcute]n repetida de funciones " :> 
          NotebookLocate[{"EIWL2-27-applying-functions-repeatedly.nb", ""}, 
            FrontEnd`HistoryData :> {
              EvaluationNotebook[]}], 
          "28\[ThickSpace]\[ThickSpace]|\[ThickSpace]\[ThickSpace]Pruebas y \
condicionales" :> 
          NotebookLocate[{"EIWL2-28-tests-and-conditionals.nb", ""}, 
            FrontEnd`HistoryData :> {
              EvaluationNotebook[]}], 
          "29\[ThickSpace]\[ThickSpace]|\[ThickSpace]\[ThickSpace]M\[AAcute]s \
sobre las funciones puras" :> 
          NotebookLocate[{"EIWL2-29-more-about-pure-functions.nb", ""}, 
            FrontEnd`HistoryData :> {
              EvaluationNotebook[]}], 
          "30\[ThickSpace]\[ThickSpace]|\[ThickSpace]\[ThickSpace]\
Reorganizaci\[OAcute]n de listas" :> 
          NotebookLocate[{"EIWL2-30-rearranging-lists.nb", ""}, 
            FrontEnd`HistoryData :> {
              EvaluationNotebook[]}], 
          "31\[ThickSpace]\[ThickSpace]|\[ThickSpace]\[ThickSpace]Partes de \
listas" :> NotebookLocate[{"EIWL2-31-parts-of-lists.nb", ""}, 
            FrontEnd`HistoryData :> {
              EvaluationNotebook[]}], 
          "32\[ThickSpace]\[ThickSpace]|\[ThickSpace]\[ThickSpace]Patrones" :> 
          NotebookLocate[{"EIWL2-32-patterns.nb", ""}, FrontEnd`HistoryData :> {
              EvaluationNotebook[]}], 
          "33\[ThickSpace]\[ThickSpace]|\[ThickSpace]\[ThickSpace]Expresiones \
y su estructura" :> 
          NotebookLocate[{"EIWL2-33-expressions-and-their-structure.nb", ""}, 
            FrontEnd`HistoryData :> {
              EvaluationNotebook[]}], 
          "34\[ThickSpace]\[ThickSpace]|\[ThickSpace]\[ThickSpace]\
Asociaciones" :> 
          NotebookLocate[{"EIWL2-34-associations.nb", ""}, 
            FrontEnd`HistoryData :> {
              EvaluationNotebook[]}], 
          "35\[ThickSpace]\[ThickSpace]|\[ThickSpace]\[ThickSpace]Comprensi\
\[OAcute]n del lenguaje natural" :> 
          NotebookLocate[{"EIWL2-35-natural-language-understanding.nb", ""}, 
            FrontEnd`HistoryData :> {
              EvaluationNotebook[]}], 
          "36\[ThickSpace]\[ThickSpace]|\[ThickSpace]\[ThickSpace]Construcci\
\[OAcute]n de sitios web y aplicaciones" :> 
          NotebookLocate[{"EIWL2-36-creating-websites-and-apps.nb", ""}, 
            FrontEnd`HistoryData :> {
              EvaluationNotebook[]}], 
          "37\[ThickSpace]\[ThickSpace]|\[ThickSpace]\[ThickSpace]Composici\
\[OAcute]n y visualizaci\[OAcute]n" :> 
          NotebookLocate[{"EIWL2-37-layout-and-display.nb", ""}, 
            FrontEnd`HistoryData :> {
              EvaluationNotebook[]}], 
          "38\[ThickSpace]\[ThickSpace]|\[ThickSpace]\[ThickSpace]Asignaci\
\[OAcute]n de nombres a cosas" :> 
          NotebookLocate[{"EIWL2-38-assigning-names-to-things.nb", ""}, 
            FrontEnd`HistoryData :> {
              EvaluationNotebook[]}], 
          "39\[ThickSpace]\[ThickSpace]|\[ThickSpace]\[ThickSpace]Valores \
inmediatos y diferidos" :> 
          NotebookLocate[{"EIWL2-39-immediate-and-delayed-values.nb", ""}, 
            FrontEnd`HistoryData :> {
              EvaluationNotebook[]}], 
          "40\[ThickSpace]\[ThickSpace]|\[ThickSpace]\[ThickSpace]Funciones \
definidas por el usuario" :> 
          NotebookLocate[{"EIWL2-40-defining-your-own-functions.nb", ""}, 
            FrontEnd`HistoryData :> {
              EvaluationNotebook[]}], 
          "41\[ThickSpace]\[ThickSpace]|\[ThickSpace]\[ThickSpace]M\[AAcute]s \
informaci\[OAcute]n sobre los patrones" :> 
          NotebookLocate[{"EIWL2-41-more-about-patterns.nb", ""}, 
            FrontEnd`HistoryData :> {
              EvaluationNotebook[]}], 
          "42\[ThickSpace]\[ThickSpace]|\[ThickSpace]\[ThickSpace]Cadenas de \
caracteres y plantillas " :> 
          NotebookLocate[{"EIWL2-42-string-patterns-and-templates.nb", ""}, 
            FrontEnd`HistoryData :> {
              EvaluationNotebook[]}], 
          "43\[ThickSpace]\[ThickSpace]|\[ThickSpace]\[ThickSpace]C\[OAcute]\
mo guardar cosas" :> 
          NotebookLocate[{"EIWL2-43-storing-things.nb", ""}, 
            FrontEnd`HistoryData :> {
              EvaluationNotebook[]}], 
          "44\[ThickSpace]\[ThickSpace]|\[ThickSpace]\[ThickSpace]Importar y \
exportar" :> 
          NotebookLocate[{"EIWL2-44-importing-and-exporting.nb", ""}, 
            FrontEnd`HistoryData :> {
              EvaluationNotebook[]}], 
          "45\[ThickSpace]\[ThickSpace]|\[ThickSpace]\[ThickSpace]Conjuntos \
de datos" :> 
          NotebookLocate[{"EIWL2-45-datasets.nb", ""}, FrontEnd`HistoryData :> {
              EvaluationNotebook[]}], 
          "46\[ThickSpace]\[ThickSpace]|\[ThickSpace]\[ThickSpace]C\[OAcute]\
mo escribir c\[OAcute]digo de buena calidad" :> 
          NotebookLocate[{"EIWL2-46-writing-good-code.nb", ""}, 
            FrontEnd`HistoryData :> {
              EvaluationNotebook[]}], 
          "47\[ThickSpace]\[ThickSpace]|\[ThickSpace]\[ThickSpace]Depuraci\
\[OAcute]n de c\[OAcute]digo" :> 
          NotebookLocate[{"EIWL2-47-debugging-your-code.nb", ""}, 
            FrontEnd`HistoryData :> {
              EvaluationNotebook[]}], "Lo que no se vio en el libro" :> 
          NotebookLocate[{"EIWL2-what-we-havent-discussed.nb", ""}, 
            FrontEnd`HistoryData :> {
              EvaluationNotebook[]}], "Ep\[IAcute]logo: ser un programador" :> 
          NotebookLocate[{"EIWL2-being-a-programmer.nb", ""}, 
            FrontEnd`HistoryData :> {
              EvaluationNotebook[]}], "Respuestas a los ejercicios" :> 
          NotebookLocate[{"EIWL2-answers-to-exercises.nb", ""}, 
            FrontEnd`HistoryData :> {
              EvaluationNotebook[]}], "\[CapitalIAcute]ndice" :> 
          NotebookLocate[{"EIWL2-book-index.nb", ""}, FrontEnd`HistoryData :> {
              EvaluationNotebook[]}]}, Appearance -> None]}}, 
      GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Center}}}, 
      GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Grid"]], 
   "Text", ShowCellBracket -> False, CellFrame -> {{0, 0}, {3, 0}}, 
   Selectable -> False, CellFrameColor -> 
   RGBColor[0.835294, 0.364706, 0.0196078], CellMargins -> {{0, 0}, {0, -1}}, 
   CellFrameMargins -> {{27, 0}, {1, 7}}, Background -> 
   RGBColor[0.952941, 0.509804, 0], CellTags -> "DockedCellLogoCell"], 
  Cell["SEGUNDA EDICI\[CapitalOAcute]N", "Text", FontFamily -> 
   "Source Sans Pro", CellFrame -> {{0, 0}, {3, 0}}, ShowCellBracket -> False,
    CellMargins -> {{0, 0}, {-1, -1}}, CellFrameMargins -> {{66, 0}, {2, 4}}, 
   CellFrameColor -> RGBColor[0.952941, 0.509804, 0], FontSize -> 10, 
   FontTracking -> "Extended", FontColor -> RGBColor[1, 0.929412, 0.721569], 
   Background -> RGBColor[0.862745, 0.309804, 0], CellTags -> 
   "DockedCellLogoCell"]},
PrintingStartingPageNumber->267,
PageHeaders->{{
   Cell[
    TextData[{
      StyleBox[
       CounterBox["Page"], "PageNumber"], 
      StyleBox[
      "    An Elementary Introduction to the Wolfram Language", "Header"]}], 
    "Header", CellMargins -> {{37, Inherited}, {Inherited, Inherited}}], None,
    None}, {None, None, 
   Cell[
    TextData[{
      StyleBox[
       CounterBox["Section"], "Header"], 
      StyleBox[" | Parts of Lists \[LongDash] wolfr.am/eiwl-", "Header"], 
      StyleBox[
       CounterBox["Section"], "Header"], 
      StyleBox["    ", "Header"], 
      StyleBox[
       CounterBox["Page"], "PageNumber"]}], "Header", 
    CellMargins -> {{Inherited, 17}, {Inherited, Inherited}}]}},
PrintingOptions->{"FirstPageHeader"->True},
ShowCellBracket->Automatic,
ShowAutoSpellCheck->False,
ShowPredictiveInterface->False,
ShowSyntaxStyles->False,
AutoStyleOptions->{"HighlightMisspelledWords"->False},
FrontEndVersion->"11.3 for Mac OS X x86 (32-bit, 64-bit Kernel) (March 5, \
2018)",
StyleDefinitions->Notebook[{
   Cell[
    StyleData[StyleDefinitions -> "Default.nb"]], 
   Cell[
    CellGroupData[{
      Cell[
      "Style Environments", "Section", 
       CellChangeTimes -> {{3.64661165091824*^9, 3.646611654013329*^9}, 
         3.6485723794335403`*^9, 3.651347081728628*^9, 3.651347179462186*^9, 
         3.651347384135805*^9, 3.651348171662589*^9}], 
      Cell[
       StyleData[All, "Working"], CellInsertionPointCell -> 
       FEPrivate`FrontEndResource["FEExpressions", "CellInsertionMenu"], 
       CreateCellID -> True, $CellContext`GhostCellInEmptyNotebook -> False], 
      
      Cell[
       StyleData[All, "Printout"], 
       PrintingOptions -> {
        "PageSize" -> {504, 720}, "PrintRegistrationMarks" -> True}, 
       Magnification -> 0.6]}, Closed]], 
   Cell[
    CellGroupData[{
      Cell["Styles for Headers and Footers", "Section"], 
      Cell[
       StyleData["Header"], StyleMenuListing -> None, FontFamily -> "Verdana",
        FontSize -> 7, FontSlant -> "Plain", FontColor -> GrayLevel[0.6]], 
      Cell[
       StyleData["PageNumber"], CellMargins -> {{0, 0}, {4, 1}}, 
       StyleMenuListing -> None, FontFamily -> "Verdana", FontSize -> 7, 
       FontWeight -> "Bold", FontSlant -> "Plain", FontColor -> 
       GrayLevel[0]]}, Closed]], 
   Cell[
    CellGroupData[{
      Cell[
      "WPL Specific", "Section", 
       CellChangeTimes -> {{3.6556608433734913`*^9, 3.6556608489412746`*^9}}], 
      Cell[
       StyleData["Link"], FontFamily -> "Source Sans Pro", FontSize :> 
       If[CurrentValue[
           EvaluationCell[], "FontFamily"] === "Source Sans Pro", Inherited, 
         If[CurrentValue[
            EvaluationCell[], "FontFamily"] === "WolframCodeSans", Inherited, 
          Inherited 0.9]], FontColor -> GrayLevel[0]], 
      Cell[
       StyleData["CodeLink"], 
       ButtonBoxOptions -> {
        Appearance -> None, ButtonFunction :> (FEPrivate`FrontEndExecute[
           FrontEndToken["OpenHelpLink", {
             Part[#, 1], Null}]]& ), ButtonSource -> ButtonContents, 
         Evaluator -> None, Method -> "Preemptive"}]}, Closed]], 
   Cell[
    CellGroupData[{
      Cell[
      "Custom Styles", "Section", 
       CellChangeTimes -> {{3.646611660445352*^9, 3.646611669493331*^9}}], 
      Cell[
       StyleData["Notebook"], PageWidth -> 700, 
       PrintingOptions -> {
        "InnerOuterMargins" -> {35, 16}, "PaperOrientation" -> "Portrait", 
         "PaperSize" -> {504, 720}, 
         "PrintingMargins" -> {{20, 20}, {54, 54}}}, CellLabelAutoDelete -> 
       False, ShowSyntaxStyles -> True, 
       AutoStyleOptions -> {
        "FormattingErrorTooltips" -> False, "HighlightComments" -> False, 
         "HighlightEmphasizedSyntaxErrors" -> False, 
         "HighlightExcessArguments" -> False, "HighlightFormattingErrors" -> 
         False, "HighlightGlobalToLocalScopeConflicts" -> False, 
         "HighlightGraphicsCompatibilityProblems" -> False, 
         "HighlightLocalScopeConflicts" -> False, "HighlightMissingArguments" -> 
         False, "HighlightNoKernelPresent" -> False, 
         "HighlightOrderOfEvaluationConflicts" -> False, "HighlightStrings" -> 
         True, "HighlightSymbolContexts" -> False, "HighlightSymbolShadowing" -> 
         False, "HighlightSyntaxErrors" -> False, "HighlightUndefinedSymbols" -> 
         False, "HighlightUnknownOptions" -> False, 
         "HighlightUnwantedAssignments" -> False}, MenuSortingValue -> None, 
       GraphicsBoxOptions -> {ImageSize -> 240}, 
       Graphics3DBoxOptions -> {ImageSize -> 240}], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["Title"], CellMargins -> {{64, Inherited}, {50, 72}}, 
          MenuCommandKey -> None, FontFamily -> "Verdana", FontSize -> 42, 
          FontWeight -> "Bold", FontColor -> GrayLevel[0.4]], 
         Cell[
          StyleData["Title", "Printout"], 
          CellMargins -> {{64, Inherited}, {50, 72}}]}, Closed]], 
      Cell[
       StyleData["Chapter"], MenuCommandKey -> None], 
      Cell[
       StyleData["Subchapter"], MenuCommandKey -> None], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["Section"], CellFrame -> {{0, 0}, {0, 0}}, CellDingbat -> 
          Cell[
            TextData[
             CounterBox["Section"], 
             StyleBox[
             "|\[NegativeThinSpace]", FontColor -> 
              RGBColor[
               0.9019607843137255, 0.4117647058823529, 0.027450980392156862`],
               FontFamily -> "Courier", FontSize -> 36, FontWeight -> Plain]],
             "SectionNumber"], CellMargins -> {{96, Inherited}, {12, 44}}, 
          Evaluatable -> True, CellGroupingRules -> {"SectionGrouping", 60}, 
          PageBreakAbove -> True, ShowCellLabel -> False, 
          CellFrameLabelMargins -> {{2, Inherited}, {Inherited, Inherited}}, 
          CellChangeTimes -> {3.652728456208679*^9, 3.652728527108994*^9}, 
          CounterIncrements -> "Section", 
          CounterAssignments -> {{"Subsection", 0}, {"Subsubsection", 0}, {
            "Exercise", 0}}, FontFamily -> "Source Sans Pro Semibold", 
          FontSize -> 26, FontSlant -> "Plain", FontColor -> 
          RGBColor[
           0.9019607843137255, 0.4117647058823529, 0.027450980392156862`], 
          InterpretationBoxOptions -> {Editable -> True}], 
         Cell[
          StyleData["Section", "Printout"], 
          CellMargins -> {{96, Inherited}, {12, 2}}]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["SectionDoubleDigit"], CellFrame -> {{0, 0}, {0, 0}}, 
          CellDingbat -> Cell[
            TextData[
             CounterBox["Section"], 
             StyleBox[
             "|\[NegativeThinSpace]", FontColor -> 
              RGBColor[
               0.9019607843137255, 0.4117647058823529, 0.027450980392156862`],
               FontFamily -> "Courier", FontSize -> 36, FontWeight -> Plain]],
             "SectionNumber"], CellMargins -> {{112, Inherited}, {12, 44}}, 
          Evaluatable -> True, CellGroupingRules -> {"SectionGrouping", 60}, 
          PageBreakAbove -> True, ShowCellLabel -> False, 
          CellFrameLabelMargins -> {{2, Inherited}, {Inherited, Inherited}}, 
          CellChangeTimes -> {3.652728456208679*^9, 3.652728527108994*^9}, 
          CounterIncrements -> "Section", 
          CounterAssignments -> {{"Subsection", 0}, {"Subsubsection", 0}, {
            "Exercise", 0}}, FontFamily -> "Source Sans Pro Semibold", 
          FontSize -> 26, FontSlant -> "Plain", FontColor -> 
          RGBColor[
           0.9019607843137255, 0.4117647058823529, 0.027450980392156862`], 
          InterpretationBoxOptions -> {Editable -> True}], 
         Cell[
          StyleData["SectionDoubleDigit", "Printout"], 
          CellMargins -> {{112, Inherited}, {12, 2}}]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["SectionNumber"], CellBaseline -> Baseline, FontFamily -> 
          "Source Sans Pro Semibold", FontSize -> 26, FontColor -> 
          RGBColor[
           0.9019607843137255, 0.4117647058823529, 0.027450980392156862`]], 
         Cell[
          StyleData["SectionNumber", "Printout"]]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["SectionInline"], FontFamily -> 
          "Source Sans Pro Semibold", FontColor -> 
          RGBColor[
           0.9019607843137255, 0.4117647058823529, 0.027450980392156862`]], 
         Cell[
          StyleData["SectionInline", "Printout"]]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["SectionNoDingbat"], 
          CellMargins -> {{64, Inherited}, {12, 44}}, Evaluatable -> True, 
          CellGroupingRules -> {"SectionGrouping", 60}, PageBreakAbove -> 
          True, ShowCellLabel -> False, 
          CellFrameLabelMargins -> {{2, Inherited}, {Inherited, Inherited}}, 
          CellChangeTimes -> {3.652728456208679*^9, 3.652728527108994*^9}, 
          CounterIncrements -> "Section", 
          CounterAssignments -> {{"Subsection", 0}, {"Subsubsection", 0}, {
            "Exercise", 0}}, FontFamily -> "Source Sans Pro Semibold", 
          FontSize -> 26, FontSlant -> "Plain", FontColor -> 
          RGBColor[
           0.9019607843137255, 0.4117647058823529, 0.027450980392156862`], 
          InterpretationBoxOptions -> {Editable -> True}], 
         Cell[
          StyleData["SectionNoDingbat", "Printout"], 
          CellMargins -> {{64, Inherited}, {12, 2}}]}, Closed]], 
      Cell[
       StyleData["AnswerKeyNumberedSection"], 
       CellMargins -> {{64, Inherited}, {8, 28}}, Evaluatable -> True, 
       CellGroupingRules -> {"SectionGrouping", 60}, PageBreakAbove -> True, 
       ShowCellLabel -> False, 
       CellFrameLabelMargins -> {{2, Inherited}, {Inherited, Inherited}}, 
       CellChangeTimes -> {3.652728456208679*^9, 3.652728527108994*^9}, 
       CounterIncrements -> "Section", 
       CounterAssignments -> {{"Subsection", 0}, {"Subsubsection", 0}, {
         "Exercise", 0}}, FontFamily -> "Source Sans Pro Semibold", FontSize -> 
       18, FontSlant -> "Plain", FontColor -> 
       RGBColor[
        0.9019607843137255, 0.4117647058823529, 0.027450980392156862`], 
       InterpretationBoxOptions -> {Editable -> True}], 
      Cell[
       StyleData["AnswerKeySectionNumber"], CellBaseline -> Baseline, 
       FontFamily -> "Source Sans Pro Semibold", FontSize -> 18, FontColor -> 
       RGBColor[
        0.9019607843137255, 0.4117647058823529, 0.027450980392156862`]], 
      Cell[
       StyleData["IndexLinkGuide"], 
       CellMargins -> {{64, Inherited}, {48, 28}}, Evaluatable -> True, 
       CellGroupingRules -> {"SectionGrouping", 60}, PageBreakAbove -> True, 
       ShowCellLabel -> False, 
       CellFrameLabelMargins -> {{2, Inherited}, {Inherited, Inherited}}, 
       CellChangeTimes -> {3.652728456208679*^9, 3.652728527108994*^9}, 
       CounterIncrements -> "Section", 
       CounterAssignments -> {{"Subsection", 0}, {"Subsubsection", 0}, {
         "Exercise", 0}}, FontFamily -> "Source Sans Pro", FontSize -> 14, 
       FontSlant -> "Plain", FontColor -> 
       RGBColor[
        0.9019607843137255, 0.4117647058823529, 0.027450980392156862`], 
       InterpretationBoxOptions -> {Editable -> True}], 
      Cell[
       StyleData["Index"], MenuSortingValue -> 10000, FontFamily -> 
       "Source Sans Pro", FontSize -> 11], 
      Cell[
       StyleData["IndexSubentry"], MenuSortingValue -> 10000, FontFamily -> 
       "Source Sans Pro", FontSize -> 11], 
      Cell[
       StyleData["FunctionName"], MenuSortingValue -> 10000, FontFamily -> 
       "Source Sans Pro Semibold", FontWeight -> "Bold"], 
      Cell[
       StyleData["IndexColumn"], 
       CellMargins -> {{66, 0}, {Inherited, Inherited}}, TabSpacings -> {2.}, 
       MenuSortingValue -> 10000, FontFamily -> "Source Sans Pro", 
       GridBoxOptions -> {
        GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
         GridBoxItemSize -> {"Columns" -> {{25}}}, 
         GridBoxSpacings -> {"Columns" -> {{2}}}}], 
      Cell[
       StyleData["IndexSubsection"], 
       CellMargins -> {{64, Inherited}, {9, 28}}, 
       CellGroupingRules -> {"SectionGrouping", 40}, MenuSortingValue -> 
       10000, FontFamily -> "Source Sans Pro", FontSize -> 24], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["Subsection"], CellMargins -> {{64, Inherited}, {12, 32}},
           FontFamily -> "Source Sans Pro Semibold", FontSize -> 18, 
          FontColor -> 
          RGBColor[
           0.9019607843137255, 0.4117647058823529, 0.027450980392156862`]], 
         Cell[
          StyleData["Subsection", "Printout"], 
          CellMargins -> {{64, Inherited}, {12, 32}}]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["ResourcesSubsection"], 
          CellMargins -> {{64, Inherited}, {4, 16}}, FontFamily -> 
          "Source Sans Pro Semibold", FontSize -> 15, FontSlant -> "Plain", 
          FontColor -> GrayLevel[0]], 
         Cell[
          StyleData["ResourcesSubsection", "Printout"], 
          CellMargins -> {{64, Inherited}, {4, 16}}]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["Subsubsection"], 
          CellMargins -> {{64, Inherited}, {6, 12}}, FontFamily -> 
          "Source Sans Pro Semibold", FontSize -> 16, FontColor -> 
          RGBColor[
           0.9019607843137255, 0.4117647058823529, 0.027450980392156862`]], 
         Cell[
          StyleData["Subsubsection", "Printout"], 
          CellMargins -> {{64, Inherited}, {6, 12}}]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["VocabularySection"], PageWidth -> 700, 
          CellFrame -> {{0, 0}, {0, 3}}, 
          CellMargins -> {{64, Inherited}, {8, 24}}, 
          CellGroupingRules -> {"SectionGrouping", 60}, PageBreakBelow -> 
          False, CellFrameMargins -> {{8, 8}, {4, 6}}, CellFrameColor -> 
          RGBColor[0.901961, 0.411765, 0.027451], FontFamily -> 
          "Source Sans Pro", FontSize -> 18, FontSlant -> "Italic", FontColor -> 
          RGBColor[
           0.9019607843137255, 0.4117647058823529, 0.027450980392156862`], 
          GridBoxOptions -> {GridBoxAlignment -> {}}], 
         Cell[
          StyleData["VocabularySection", "Printout"], 
          CellMargins -> {{64, Inherited}, {8, 24}}]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["VocabularyTable", StyleDefinitions -> StyleData["Text"]],
           SpanMaxSize -> 1, FontFamily -> "Source Sans Pro Light", FontColor -> 
          GrayLevel[0.8], 
          GridBoxOptions -> {
           GridBoxAlignment -> {"Columns" -> {{Left}}}, 
            GridBoxDividers -> {"Columns" -> {{False}}, "Rows" -> {False, {
                 Directive[
                  Thickness[0.5], "VocabDivColor"]}, False}}, 
            GridBoxItemStyle -> {
             "Columns" -> {"VocabularyCode", Inherited, Inherited}, 
              "Rows" -> {{Automatic}}}, 
            GridBoxSpacings -> {
             "Columns" -> {{0, 1, 2, 1, 2}}, "Rows" -> {{1}}}}], 
         Cell[
          StyleData["VocabularyTable", "Printout"]]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData[
          "VocabularyTable3Column", StyleDefinitions -> StyleData["Text"]], 
          SpanMaxSize -> 1, FontFamily -> "Source Sans Pro Light", FontColor -> 
          GrayLevel[0.8], 
          GridBoxOptions -> {
           GridBoxAlignment -> {"Columns" -> {{Left}}}, 
            GridBoxDividers -> {"Columns" -> {{False}}, "Rows" -> {False, {
                 Directive[
                  Thickness[0.5], "VocabDivColor"]}, False}}, 
            GridBoxItemStyle -> {
             "Columns" -> {
               "VocabularyCode", Inherited, "VocabularyCode", Inherited, 
                Inherited}, "Rows" -> {{Automatic}}}, 
            GridBoxSpacings -> {
             "Columns" -> {{0, 1, 2, 1, 2}}, "Rows" -> {{1}}}}], 
         Cell[
          StyleData["VocabularyTable3Column", "Printout"]]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["VocabularyText"], FontFamily -> "Source Sans Pro", 
          FontSize -> 14, FontWeight -> "Plain", FontSlant -> "Plain", 
          FontColor -> GrayLevel[0.25]], 
         Cell[
          StyleData["VocabularyText", "Printout"], 
          CellMargins -> {{66, 10}, {7, 7}}]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["VocabularyCode", StyleDefinitions -> StyleData["Text"]], 
          Deletable -> False, FontFamily -> "Source Sans Pro", FontSize -> 14,
           FontWeight -> "Bold", FontColor -> GrayLevel[0.25], 
          GridBoxOptions -> {
           GridBoxAlignment -> {"Columns" -> {{Left}}}, 
            GridBoxDividers -> {
             "Columns" -> {{False}}, "ColumnsIndexed" -> {}, 
              "Rows" -> {True, {True}, True}, "RowsIndexed" -> {}}}], 
         Cell[
          StyleData["VocabularyCode", "Printout"], FontColor -> 
          GrayLevel[0.25]]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["VocabDivColor"], FontColor -> GrayLevel[0.8]], 
         Cell[
          StyleData["VocabDivColor", "Printout"]]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["ExerciseSection"], PageWidth -> 700, 
          CellFrame -> {{0, 0}, {0, 3}}, 
          CellMargins -> {{64, Inherited}, {8, 30}}, Evaluatable -> True, 
          CellGroupingRules -> {"SectionGrouping", 60}, PageBreakBelow -> 
          False, ShowCellLabel -> False, CellFrameMargins -> {{8, 8}, {4, 6}},
           CellFrameColor -> RGBColor[0.901961, 0.411765, 0.027451], 
          CounterAssignments -> {{"Subsection", 0}, {"Subsubsection", 0}, {
            "Exercise", 0}}, FontFamily -> "Source Sans Pro", FontSize -> 18, 
          FontSlant -> "Italic", FontColor -> 
          RGBColor[
           0.9019607843137255, 0.4117647058823529, 0.027450980392156862`], 
          GridBoxOptions -> {GridBoxAlignment -> {}}], 
         Cell[
          StyleData["ExerciseSection", "Printout"], 
          CellMargins -> {{64, Inherited}, {8, 30}}]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["Exercise"], PageWidth -> 700, CellDingbat -> Cell[
            TextData[{"  ", 
              CounterBox["Section"], ".", 
              CounterBox["Exercise"]}], "ExerciseNumber", FontColor -> 
            RGBColor[
             0.9019607843137255, 0.4117647058823529, 0.027450980392156862`]], 
          ShowGroupOpener -> True, CellMargins -> {{108, Inherited}, {4, 8}}, 
          CellGroupingRules -> {"SectionGrouping", 67}, CounterIncrements -> 
          "Exercise", MenuSortingValue -> 10020, MenuCommandKey -> "2", 
          FontFamily -> "Source Sans Pro", FontSize -> 14, FontWeight -> 
          "Plain", FontSlant -> "Plain", FontColor -> GrayLevel[0.25]], 
         Cell[
          StyleData["Exercise", "Printout"], ShowGroupOpener -> False, 
          CellMargins -> {{110, Inherited}, {4, 8}}]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["ExerciseNumber"], FontFamily -> "Source Sans Pro", 
          FontSize -> 14, FontWeight -> "Bold", FontColor -> GrayLevel[0.25]], 
         Cell[
          StyleData["ExerciseNumber", "Printout"]]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["ExerciseSubsection"], PageWidth -> 500, 
          CellFrame -> {{False, False}, {1, False}}, 
          CellMargins -> {{64, Inherited}, {8, 18}}, 
          CellGroupingRules -> {"SectionGrouping", 60}, CellFrameColor -> 
          RGBColor[0.65, 0.6, 0.6], FontFamily -> "Source Sans Pro", FontSize -> 
          18, FontSlant -> "Italic", FontColor -> RGBColor[0.65, 0.6, 0.6]], 
         Cell[
          StyleData["ExerciseSubsection", "Printout"], 
          CellFrame -> {{False, False}, {1, False}}, CellFrameColor -> 
          RGBColor[0.65, 0.6, 0.6]]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["ExerciseNote"], PageWidth -> 700, 
          CellMargins -> {{64, Inherited}, {4, 8}}, PageBreakBelow -> False, 
          MenuSortingValue -> 10050, FontFamily -> "Source Sans Pro", 
          FontSize -> 14, FontWeight -> "Plain", FontSlant -> "Plain", 
          FontColor -> GrayLevel[0.25], $CellContext`ReturnCreatesNewCell -> 
          True], 
         Cell[
          StyleData["ExerciseNote", "Printout"], 
          CellMargins -> {{64, Inherited}, {4, 8}}]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["QASection"], PageWidth -> 700, 
          CellFrame -> {{0, 0}, {0, 3}}, 
          CellMargins -> {{64, Inherited}, {8, 30}}, 
          CellGroupingRules -> {"SectionGrouping", 60}, PageBreakBelow -> 
          False, CellFrameMargins -> {{8, 8}, {4, 6}}, CellFrameColor -> 
          RGBColor[0.901961, 0.411765, 0.027451], 
          CounterAssignments -> {{"Subsection", 0}, {"Subsubsection", 0}, {
            "Question", 0}}, FontFamily -> "Source Sans Pro", FontSize -> 18, 
          FontSlant -> "Italic", FontColor -> 
          RGBColor[
           0.9019607843137255, 0.4117647058823529, 0.027450980392156862`], 
          GridBoxOptions -> {GridBoxAlignment -> {}}], 
         Cell[
          StyleData["QASection", "Printout"], 
          CellMargins -> {{64, Inherited}, {8, 30}}]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["Question"], PageWidth -> 700, 
          CellMargins -> {{64, Inherited}, {2, 12}}, PageBreakBelow -> False, 
          CounterIncrements -> "Question", MenuSortingValue -> 10030, 
          MenuCommandKey -> "3", FontFamily -> "Source Sans Pro", FontSize -> 
          14, FontWeight -> "Bold", FontSlant -> 
          "Plain", $CellContext`ReturnCreatesNewCell -> 
          True, $CellContext`DefaultReturnCreatedCellStyle -> "Answer"], 
         Cell[
          StyleData["Question", "Printout"], 
          CellMargins -> {{65, Inherited}, {2, 12}}]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["Answer"], PageWidth -> 700, 
          CellMargins -> {{66, 10}, {4, 1}}, LineSpacing -> {1.125, 1., 2.}, 
          MenuSortingValue -> 10032, FontFamily -> "Source Sans Pro", 
          FontSize -> 14, FontWeight -> "Plain", FontSlant -> "Plain", 
          FontColor -> GrayLevel[0.25], $CellContext`ReturnCreatesNewCell -> 
          True, $CellContext`DefaultReturnCreatedCellStyle -> "Question"], 
         Cell[
          StyleData["Answer", "Printout"], 
          CellMargins -> {{66, 10}, {4, 1}}]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["QuestionNumber"], FontFamily -> "Source Sans Pro", 
          FontSize -> 14, FontWeight -> "Bold", FontColor -> GrayLevel[0.25]], 
         Cell[
          StyleData["QuestionNumber", "Printout"]]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["TechNoteSection"], PageWidth -> 700, 
          CellFrame -> {{0, 0}, {0, 3}}, 
          CellMargins -> {{64, Inherited}, {8, 30}}, 
          CellGroupingRules -> {"SectionGrouping", 60}, PageBreakBelow -> 
          False, CellFrameMargins -> {{8, 8}, {4, 6}}, CellFrameColor -> 
          RGBColor[0.901961, 0.411765, 0.027451], FontFamily -> 
          "Source Sans Pro", FontSize -> 18, FontSlant -> "Italic", FontColor -> 
          RGBColor[
           0.9019607843137255, 0.4117647058823529, 0.027450980392156862`], 
          GridBoxOptions -> {GridBoxAlignment -> {}}], 
         Cell[
          StyleData["TechNoteSection", "Printout"], 
          CellMargins -> {{64, Inherited}, {8, 30}}]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["TechNote"], PageWidth -> 700, CellDingbat -> Cell[
            TextData[{"\[FilledSmallSquare]"}], FontSize -> 12, FontColor -> 
            GrayLevel[0.5]], CellMargins -> {{78, Inherited}, {4, 8}}, 
          CellChangeTimes -> {{3.651515120816633*^9, 3.651515125814807*^9}, 
            3.6515155174947033`*^9}, LineSpacing -> {1.25, 1., 2.}, 
          MenuSortingValue -> 10040, FontFamily -> "Source Sans Pro", 
          FontSize -> 14, FontWeight -> "Plain", FontSlant -> "Plain", 
          FontColor -> GrayLevel[0.25], $CellContext`ReturnCreatesNewCell -> 
          True], 
         Cell[
          StyleData["TechNote", "Printout"], 
          CellMargins -> {{82, Inherited}, {4, 8}}]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["MoreExploreSection"], PageWidth -> 700, 
          CellFrame -> {{0, 0}, {0, 3}}, 
          CellMargins -> {{64, Inherited}, {8, 30}}, 
          CellGroupingRules -> {"SectionGrouping", 60}, PageBreakBelow -> 
          False, CellFrameMargins -> {{8, 8}, {4, 6}}, CellFrameColor -> 
          RGBColor[0.901961, 0.411765, 0.027451], FontFamily -> 
          "Source Sans Pro", FontSize -> 18, FontSlant -> "Italic", FontColor -> 
          RGBColor[
           0.9019607843137255, 0.4117647058823529, 0.027450980392156862`], 
          GridBoxOptions -> {GridBoxAlignment -> {}}], 
         Cell[
          StyleData["MoreExploreSection", "Printout"], 
          CellMargins -> {{64, Inherited}, {8, 30}}]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["MoreExplore"], PageWidth -> 700, 
          CellMargins -> {{64, Inherited}, {4, 8}}, PageBreakBelow -> False, 
          MenuSortingValue -> 10050, FontFamily -> "Source Sans Pro", 
          FontSize -> 14, FontWeight -> "Plain", FontSlant -> "Plain", 
          FontColor -> GrayLevel[0], $CellContext`ReturnCreatesNewCell -> 
          True], 
         Cell[
          StyleData["MoreExplore", "Printout"], 
          CellMargins -> {{64, Inherited}, {4, 8}}]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["MoreExploreShortURL"], 
          CellMargins -> {{64, Inherited}, {4, 8}}, PageBreakBelow -> False, 
          FontFamily -> "Source Sans Pro Light", FontSize -> 14, FontSlant -> 
          "Plain", FontColor -> GrayLevel[0]], 
         Cell[
          StyleData["MoreExploreShortURL", "Printout"], 
          CellMargins -> {{64, Inherited}, {4, 8}}]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["Text"], CellMargins -> {{66, 10}, {4, 14}}, FontFamily -> 
          "Baskerville", FontSize -> 18, FontColor -> 
          GrayLevel[0], $CellContext`ReturnCreatesNewCell -> True], 
         Cell[
          StyleData["Text", "Printout"], CellMargins -> {{66, 10}, {7, 7}}]}, 
        Closed]], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["ResourcesText"], CellMargins -> {{66, 10}, {2, 0}}, 
          FontFamily -> "Source Sans Pro", FontSize -> 14, FontWeight -> 
          "Plain", FontSlant -> "Plain", FontColor -> 
          GrayLevel[0], $CellContext`ReturnCreatesNewCell -> True], 
         Cell[
          StyleData["ResourcesText", "Printout"], 
          CellMargins -> {{66, 10}, {2, 0}}]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["ResourcesLink"], CellMargins -> {{66, 10}, {2, 0}}, 
          FontFamily -> "Source Sans Pro", FontSize -> 14, FontWeight -> 
          "Plain", FontSlant -> "Italic", FontColor -> 
          GrayLevel[0], $CellContext`ReturnCreatesNewCell -> True], 
         Cell[
          StyleData["ResourcesLink", "Printout"], 
          CellMargins -> {{66, 10}, {2, 0}}]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["CodeCaption"], CellFrame -> {{0, 0}, {0, 0}}, 
          CellMargins -> {{66, 10}, {4, 12}}, PageBreakBelow -> False, 
          CellFrameColor -> GrayLevel[0.4], MenuSortingValue -> 10010, 
          MenuCommandKey -> "1", FontFamily -> "Source Sans Pro", FontSize -> 
          16, FontColor -> GrayLevel[0.25]], 
         Cell[
          StyleData["CodeCaption", "Printout"], 
          CellMargins -> {{66, 10}, {4, 12}}]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["Input"], CellMargins -> {{99, 10}, {3, 7}}, SpanMaxSize -> 
          1, FontSize -> 15], 
         Cell[
          StyleData["Input", "Printout"], CellMargins -> {{99, 10}, {3, 7}}]},
         Closed]], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["Output"], CellMargins -> {{99, 10}, {14, 7}}, FontSize -> 
          15], 
         Cell[
          StyleData["Output", "Printout"], 
          CellMargins -> {{99, 10}, {14, 7}}]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["InputOnly"], CellMargins -> {{99, 10}, {25, 10}}, 
          SpanMaxSize -> 1, MenuSortingValue -> 1500, FontSize -> 15], 
         Cell[
          StyleData["InputOnly", "Printout"], 
          CellMargins -> {{99, 10}, {15, 10}}]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["CellLabel"], 
          CellLabelMargins -> {{12, Inherited}, {Inherited, Inherited}}, 
          LanguageCategory -> None, StyleMenuListing -> None, FontFamily -> 
          "Helvetica Neue", FontSize -> 9, FontWeight -> "Plain", FontSlant -> 
          "Plain", FontColor -> GrayLevel[0.5]], 
         Cell[
          StyleData["CellLabel", "Printout"], FontSize -> 8, FontColor -> 
          GrayLevel[0.5]]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["Message"], Editable -> False, 
          CellMargins -> {{66, Inherited}, {Inherited, Inherited}}, 
          CellGroupingRules -> "OutputGrouping", TextClipboardType -> 
          "PlainText", PageBreakWithin -> False, GroupPageBreakWithin -> 
          False, GeneratedCell -> True, CellAutoOverwrite -> True, 
          ShowCellLabel -> False, DefaultFormatType -> 
          DefaultOutputFormatType, ContextMenu -> 
          FEPrivate`FrontEndResource["ContextMenus", "Output"], 
          ShowAutoStyles -> False, ShowSyntaxStyles -> False, 
          AutoStyleOptions -> {
           "StringStyle" -> None, "SyntaxErrorStyle" -> None}, 
          HyphenationOptions -> {"HyphenationCharacter" -> "\[Continuation]"},
           AutoItalicWords -> {}, AutoQuoteCharacters -> {}, 
          PasteAutoQuoteCharacters -> {}, LanguageCategory -> None, 
          FormatType -> InputForm, ShowStringCharacters -> False, 
          CounterIncrements -> "Message", MenuSortingValue -> 1600, 
          StyleMenuListing -> None, FontFamily :> 
          CurrentValue["PanelFontFamily"], FontSize -> 11, FontColor -> 
          RGBColor[0.5072, 0.16933, 0.15221], $CellContext`StripStyleOnPaste -> 
          True], 
         Cell[
          StyleData["Message", "Printout"], 
          CellMargins -> {{100, Inherited}, {Inherited, Inherited}}, 
          CellFrameLabels -> {{None, None}, {None, None}}, FontColor -> 
          GrayLevel[0]]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["ExerciseInput", StyleDefinitions -> StyleData["Input"]], 
          CellMargins -> {{88, 10}, {4, 7}}, ShowCellLabel -> False, 
          SpanMaxSize -> 1, FontSize -> 
          14, $CellContext`GeneratedCellStyles -> {
           "Output" -> "ExerciseOutput"}], 
         Cell[
          StyleData["ExerciseInput", "Printout"], 
          CellMargins -> {{88, 10}, {4, 7}}]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData[
          "ExerciseOutput", StyleDefinitions -> StyleData["Output"]], 
          CellMargins -> {{88, 10}, {10, 4}}, ShowCellLabel -> False, 
          FontSize -> 14], 
         Cell[
          StyleData["ExerciseOutput", "Printout"], 
          CellMargins -> {{88, 10}, {10, 4}}]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["Picture"], CellMargins -> {{66, 10}, {10, 10}}, 
          CellGroupingRules -> "GraphicsGrouping", StyleMenuListing -> None], 
         
         Cell[
          StyleData["Picture", "Printout"], 
          CellMargins -> {{66, 10}, {8, 8}}]}, Closed]], 
      Cell[
       StyleData["ExerciseSummaryCell"], PageWidth -> 700, CellFrame -> 0, 
       CellMargins -> {{64, Inherited}, {8, 10}}, 
       CellGroupingRules -> {"SectionGrouping", 64}, PageBreakBelow -> False, 
       ShowCellLabel -> False, CellFrameMargins -> 0, ShowStringCharacters -> 
       False, FontFamily -> "Source Sans Pro", FontSize -> 18, FontColor -> 
       RGBColor[1, 1, 1], 
       GridBoxOptions -> {GridBoxBackground -> {"Columns" -> {{
              RGBColor[0.990997, 0.539528, 0.155779], 
              RGBColor[0.989487, 0.434699, 0.0320439]}}, "Rows" -> {{None}}}, 
         GridBoxItemSize -> {"Columns" -> {
             Scaled[0.7], 
             Scaled[0.3]}, "Rows" -> {{Automatic}}}}], 
      Cell[
       StyleData["ExerciseSummaryHeading"], ShowStringCharacters -> False, 
       FontFamily -> "Source Sans Pro", FontSize -> 18, FontColor -> 
       RGBColor[1, 1, 1]], 
      Cell[
       StyleData["ExerciseSummarySubheading"], ShowStringCharacters -> False, 
       FontFamily -> "Source Sans Pro", FontSize -> 15, FontColor -> 
       RGBColor[1., 0.9294117647058824, 0.7215686274509804]], 
      Cell[
       StyleData["ExercisePreviewButtonText"], ShowStringCharacters -> False, 
       FontFamily -> "Source Sans Pro", FontSize -> 14, FontSlant -> "Plain", 
       FontColor -> RGBColor[0.6, 0.6, 0.6]], 
      Cell[
       StyleData["ExercisePreviewButtonTextHighlight"], ShowStringCharacters -> 
       False, FontFamily -> "Source Sans Pro", FontSize -> 14, FontSlant -> 
       "Plain", FontColor -> 
       RGBColor[
        0.9019607843137255, 0.4117647058823529, 0.027450980392156862`]]}, 
     Open]], 
   Cell[
    CellGroupData[{
      Cell[
      "Inline and special formatting", "Section", 
       CellChangeTimes -> {{3.646681732592888*^9, 3.646681749414035*^9}}], 
      Cell[
       StyleData["Graphics"], MenuSortingValue -> None], 
      Cell[
       StyleData["Graphics3D"], MenuSortingValue -> None], 
      Cell[
       StyleData["StandardForm"], 
       InputAutoReplacements -> {
        "->" -> "\[Rule]", ":>" -> "\[RuleDelayed]", "<=" -> "\[LessEqual]", 
         ">=" -> "\[GreaterEqual]", "!=" -> "\[NotEqual]", "==" -> "\[Equal]",
          "@>" -> "\\[InlinePart]", "<->" -> "\[UndirectedEdge]", ParentList},
        LineSpacing -> {1.25, 0, 2}, SingleLetterItalics -> False, 
       StyleMenuListing -> None, FontFamily -> "Source Sans Pro", 
       PrivateFontOptions -> {"OperatorSubstitution" -> True}], 
      Cell[
       StyleData["OutputForm"], PageWidth -> DirectedInfinity[1], 
       TextAlignment -> Left, LineSpacing -> {0.6, 1}, 
       AutoQuoteCharacters -> {}, PasteAutoQuoteCharacters -> {}, 
       StyleMenuListing -> None, FontFamily -> "Source Sans Pro", 
       PrivateFontOptions -> {"OperatorSubstitution" -> True}], 
      Cell[
       StyleData["InputForm"], PageWidth -> DirectedInfinity[1], 
       InputAutoReplacements -> {}, AllowInlineCells -> False, Hyphenation -> 
       False, AutoQuoteCharacters -> {}, PasteAutoQuoteCharacters -> {}, 
       AutoSpacing -> False, NumberMarks -> True, AutoNumberFormatting -> 
       False, StyleMenuListing -> None, FontFamily -> "Source Sans Pro", 
       PrivateFontOptions -> {"OperatorSubstitution" -> True}], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["DetailsLink"], FontFamily -> "Source Sans Pro", FontSize :> 
          If[CurrentValue[
              EvaluationCell[], "FontFamily"] === "Source Sans Pro", 
            Inherited, 
            If[CurrentValue[
               EvaluationCell[], "FontFamily"] === "WolframCodeSans", 
             Inherited, Inherited 0.9]], FontColor -> GrayLevel[0], 
          ButtonBoxOptions -> {
           ButtonFunction :> (
             Function[$CellContext`t, 
              NotebookFind[$CellContext`t, "Notes", All, CellStyle]; 
              NotebookFind[$CellContext`t, "NotesSection", All, CellStyle, 
                AutoScroll -> Top]][
              Documentation`HelpLookup[
               StringJoin["ref/", #]]]& ), ButtonSource -> ButtonContents, 
            Evaluator -> Automatic}], 
         Cell[
          StyleData["DetailsLink", "Printout"], FontFamily -> 
          "Source Sans Pro", FontSize :> If[CurrentValue[
              EvaluationCell[], "FontFamily"] === "Source Sans Pro", 
            Inherited, 
            If[CurrentValue[
               EvaluationCell[], "FontFamily"] === "WolframCodeSans", 
             Inherited, Inherited 0.88]], FontColor -> GrayLevel[0]]}, 
        Closed]], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["LinkAlt"], FontFamily -> "Source Sans Pro", FontSize :> 
          If[CurrentValue[
              EvaluationCell[], "FontFamily"] === "Source Sans Pro", 
            Inherited, 
            If[CurrentValue[
               EvaluationCell[], "FontFamily"] === "WolframCodeSans", 
             Inherited, Inherited 0.9]], FontColor -> GrayLevel[0]], 
         Cell[
          StyleData["LinkAlt", "Printout"], FontFamily -> "Source Sans Pro", 
          FontSize :> If[CurrentValue[
              EvaluationCell[], "FontFamily"] === "Source Sans Pro", 
            Inherited, 
            If[CurrentValue[
               EvaluationCell[], "FontFamily"] === "WolframCodeSans", 
             Inherited, Inherited 0.88]], FontColor -> GrayLevel[0]]}, 
        Closed]], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["Hyperlink"], MenuSortingValue -> None, FontColor -> 
          RGBColor[0.3, 0.35, 0.5]], 
         Cell[
          StyleData["Hyperlink", "Printout"]]}, Closed]], 
      Cell[
       StyleData[
       "IndexNavigationLink", StyleDefinitions -> StyleData["Hyperlink"]], 
       MenuSortingValue -> None, FontColor -> 
       RGBColor[
        0.9019607843137255, 0.4117647058823529, 0.027450980392156862`]], 
      Cell[
       StyleData["Crosslink"], 
       ButtonBoxOptions -> {ButtonFunction :> (FrontEndExecute[{
            
            NotebookLocate[#2, "OpenInNewWindow" -> 
             CurrentValue["HyperlinkModifierKey"]]}]& ), Evaluator -> None, 
         Method -> "Queued"}], 
      Cell[
       StyleData["VocabularyLink"], FontColor -> GrayLevel[0], 
       ButtonBoxOptions -> {ButtonFunction :> (FrontEndExecute[{
            
            NotebookLocate[#2, "OpenInNewWindow" -> 
             CurrentValue["HyperlinkModifierKey"]]}]& ), Evaluator -> None, 
         Method -> "Queued"}], 
      Cell[
       StyleData["InlineCode"], SpanMaxSize -> 1, FontColor -> GrayLevel[0]], 
      
      Cell[
       StyleData["InlineCodeText"], SpanMaxSize -> 1, FontFamily -> 
       "Source Sans Pro", FontSize -> 0.95 Inherited], 
      Cell[
       StyleData["NoLabel"], ShowCellLabel -> 
       False, $CellContext`GeneratedCellStyles -> {
        "Output" -> "ExerciseOutput"}], 
      Cell[
       StyleData["MenuName"], FontFamily -> "Verdana", FontWeight -> "Bold", 
       FontColor -> GrayLevel[0.286275]], 
      Cell[
       StyleData["KeyEvent"], CellFrame -> {{0.5, 0.5}, {0.5, 0.5}}, 
       CellFrameMargins -> {{2, 2}, {2, 2}}, CellFrameColor -> GrayLevel[0.7],
        FontFamily -> "Verdana", FontColor -> GrayLevel[0.4]], 
      Cell[
       StyleData["KeyEventDelimiter"], FontColor -> GrayLevel[0.5]], 
      Cell[
       CellGroupData[{
         Cell["Key Styles", "Subsubsection"], 
         Cell[
          StyleData["Key0"], 
          TemplateBoxOptions -> {DisplayFunction -> (FrameBox[
              TagBox[
               GridBox[{{
                  ItemBox[
                   
                   TemplateBox[{"\[ThickSpace]", #, "\[ThickSpace]"}, 
                    "RowDefault"], Background -> GrayLevel[1], StripOnInput -> 
                   False]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Center}}, "Rows" -> {{Baseline}}}, AutoDelete -> 
                False, GridBoxDividers -> {"Rows" -> {{None}}}, 
                GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{1.45}}},
                 GridBoxSpacings -> {"Columns" -> {{0}}}, 
                BaselinePosition -> {{1, 1}, Baseline}], "Grid"], 
              RoundingRadius -> 4, Background -> 
              GrayLevel[0.9333333333333333], 
              FrameMargins -> {{0, 0}, {-2, -2}}, FrameStyle -> {
                GrayLevel[0.8352941176470589], 
                AbsoluteThickness[1]}, BaselinePosition -> Baseline, 
              StripOnInput -> False]& )}], 
         Cell[
          StyleData["Key1"], 
          TemplateBoxOptions -> {DisplayFunction -> (FrameBox[
              TagBox[
               GridBox[{{
                  ItemBox[
                   
                   TemplateBox[{"\[ThickSpace]", #, "\[ThickSpace]"}, 
                    "RowDefault"], Background -> 
                   GrayLevel[0.9333333333333333], StripOnInput -> False], 
                  ItemBox[
                   
                   TemplateBox[{"\[ThickSpace]", #2, "\[ThickSpace]"}, 
                    "RowDefault"], Background -> GrayLevel[1], StripOnInput -> 
                   False]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Center}}, "Rows" -> {{Baseline}}}, AutoDelete -> 
                False, GridBoxDividers -> {
                 "ColumnsIndexed" -> {2 -> GrayLevel[0.8352941176470589]}, 
                  "Rows" -> {{None}}}, 
                GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{1.45}}},
                 GridBoxSpacings -> {"Columns" -> {{0}}}, 
                BaselinePosition -> {{1, 1}, Baseline}], "Grid"], 
              RoundingRadius -> 4, Background -> 
              GrayLevel[0.9333333333333333], 
              FrameMargins -> {{0, 0}, {-2, -2}}, FrameStyle -> {
                GrayLevel[0.8352941176470589], 
                AbsoluteThickness[1]}, BaselinePosition -> Baseline, 
              StripOnInput -> False]& )}], 
         Cell[
          StyleData["Key2"], 
          TemplateBoxOptions -> {DisplayFunction -> (FrameBox[
              TagBox[
               GridBox[{{
                  ItemBox[
                   
                   TemplateBox[{"\[ThickSpace]", #, "\[ThickSpace]"}, 
                    "RowDefault"], Background -> 
                   GrayLevel[0.9333333333333333], StripOnInput -> False], 
                  ItemBox[
                   
                   TemplateBox[{"\[ThickSpace]", #2, "\[ThickSpace]"}, 
                    "RowDefault"], Background -> 
                   GrayLevel[0.9333333333333333], StripOnInput -> False], 
                  ItemBox[
                   
                   TemplateBox[{"\[ThickSpace]", #3, "\[ThickSpace]"}, 
                    "RowDefault"], Background -> GrayLevel[1], StripOnInput -> 
                   False]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Center}}, "Rows" -> {{Baseline}}}, AutoDelete -> 
                False, GridBoxDividers -> {
                 "ColumnsIndexed" -> {
                   2 -> GrayLevel[0.8352941176470589], 3 -> 
                    GrayLevel[0.8352941176470589]}, "Rows" -> {{None}}}, 
                GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{1.45}}},
                 GridBoxSpacings -> {"Columns" -> {{0}}}, 
                BaselinePosition -> {{1, 1}, Baseline}], "Grid"], 
              RoundingRadius -> 4, Background -> 
              GrayLevel[0.9333333333333333], 
              FrameMargins -> {{0, 0}, {-2, -2}}, FrameStyle -> {
                GrayLevel[0.8352941176470589], 
                AbsoluteThickness[1]}, BaselinePosition -> Baseline, 
              StripOnInput -> False]& )}], 
         Cell[
          StyleData["Key3"], 
          TemplateBoxOptions -> {DisplayFunction -> (FrameBox[
              TagBox[
               GridBox[{{
                  ItemBox[
                   
                   TemplateBox[{"\[ThickSpace]", #, "\[ThickSpace]"}, 
                    "RowDefault"], Background -> 
                   GrayLevel[0.9333333333333333], StripOnInput -> False], 
                  ItemBox[
                   
                   TemplateBox[{"\[ThickSpace]", #2, "\[ThickSpace]"}, 
                    "RowDefault"], Background -> 
                   GrayLevel[0.9333333333333333], StripOnInput -> False], 
                  ItemBox[
                   
                   TemplateBox[{"\[ThickSpace]", #3, "\[ThickSpace]"}, 
                    "RowDefault"], Background -> 
                   GrayLevel[0.9333333333333333], StripOnInput -> False], 
                  ItemBox[
                   
                   TemplateBox[{"\[ThickSpace]", #4, "\[ThickSpace]"}, 
                    "RowDefault"], Background -> GrayLevel[1], StripOnInput -> 
                   False]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Center}}, "Rows" -> {{Baseline}}}, AutoDelete -> 
                False, GridBoxDividers -> {
                 "ColumnsIndexed" -> {
                   2 -> GrayLevel[0.8352941176470589], 3 -> 
                    GrayLevel[0.8352941176470589], 4 -> 
                    GrayLevel[0.8352941176470589]}, "Rows" -> {{None}}}, 
                GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{1.45}}},
                 GridBoxSpacings -> {"Columns" -> {{0}}}, 
                BaselinePosition -> {{1, 1}, Baseline}], "Grid"], 
              RoundingRadius -> 4, Background -> 
              GrayLevel[0.9333333333333333], 
              FrameMargins -> {{0, 0}, {-2, -2}}, FrameStyle -> {
                GrayLevel[0.8352941176470589], 
                AbsoluteThickness[1]}, BaselinePosition -> Baseline, 
              StripOnInput -> False]& )}]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell["Entity styles", "Subsubsection"], 
         Cell[
          StyleData["Entity"], ShowStringCharacters -> False, 
          TemplateBoxOptions -> {DisplayFunction -> (TooltipBox[
              FrameBox[
               PaneSelectorBox[{True -> GridBox[{{
                    
                    StyleBox[#, FontWeight -> "Bold", FontFamily -> 
                    "Source Sans Pro", FontColor -> 
                    RGBColor[0.395437, 0.20595, 0.061158]], 
                    StyleBox[
                    RowBox[{"(", #4, ")"}], FontFamily -> "Source Sans Pro", 
                    FontWeight -> "Plain", FontColor -> GrayLevel[0.65], 
                    Selectable -> False]}}, 
                   GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                   GridBoxSpacings -> {"Columns" -> {{0.2}}, "Rows" -> {{0}}},
                    BaselinePosition -> {1, 1}], False -> 
                 PaneBox[#, 
                   BaseStyle -> {
                    FontColor -> RGBColor[0.395437, 0.20595, 0.061158]}, 
                   BaselinePosition -> Baseline]}, 
                Dynamic[
                 CurrentValue[Evaluatable]], ImageSize -> Automatic, 
                BaselinePosition -> Baseline, 
                BaseStyle -> {FontFamily -> "Helvetica"}], FrameStyle -> 
               RGBColor[1., 0.504768, 0.], Background -> 
               RGBColor[1., 0.980392, 0.921569], 
               FrameMargins -> {{5, 5}, {1.5, 1.5}}, 
               ImageMargins -> {{2, 2}, {2, 2}}, BaselinePosition -> Baseline,
                RoundingRadius -> 4], #3, 
              BaseStyle -> {
               FontWeight -> "Plain", ShowStringCharacters -> False, 
                LineIndent -> 0, 
                PrivateFontOptions -> {"OperatorSubstitution" -> False}}]& ), 
            Editable -> False, InterpretationFunction -> (#2& )}], 
         Cell[
          StyleData["EntityFrameless"], ShowStringCharacters -> False, 
          TemplateBoxOptions -> {DisplayFunction -> (TooltipBox[
              PaneSelectorBox[{True -> GridBox[{{
                    
                    StyleBox[#, FontWeight -> "Bold", FontFamily -> 
                    "Source Sans Pro", FontColor -> 
                    RGBColor[0.395437, 0.20595, 0.061158]], 
                    StyleBox[
                    RowBox[{"(", #4, ")"}], FontFamily -> "Source Sans Pro", 
                    FontWeight -> "Plain", FontColor -> GrayLevel[0.65], 
                    Selectable -> False]}}, 
                  GridBoxItemSize -> {
                   "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                  GridBoxSpacings -> {"Columns" -> {{0.2}}, "Rows" -> {{0}}}, 
                  BaselinePosition -> {1, 1}], False -> 
                PaneBox[#, 
                  BaseStyle -> {
                   FontColor -> RGBColor[0.395437, 0.20595, 0.061158]}, 
                  BaselinePosition -> Baseline]}, 
               Dynamic[
                CurrentValue[Evaluatable]], ImageSize -> Automatic, 
               BaselinePosition -> Baseline, 
               BaseStyle -> {FontFamily -> "Helvetica"}], #3, 
              BaseStyle -> {
               ShowStringCharacters -> False, LineIndent -> 0, 
                PrivateFontOptions -> {
                 FontWeight -> "Plain", "OperatorSubstitution" -> False}}]& ),
             Editable -> False, InterpretationFunction -> (#2& )}], 
         Cell[
          StyleData["EntityFramelessHot"], ShowStringCharacters -> False, 
          TemplateBoxOptions -> {
           DisplayFunction -> (PaneSelectorBox[{True -> GridBox[{{
                   
                   StyleBox[#, FontWeight -> "Bold", FontFamily -> 
                    "Source Sans Pro", FontColor -> GrayLevel[0]], 
                   StyleBox[
                    RowBox[{"(", #4, ")"}], FontWeight -> "Plain", FontFamily -> 
                    "Source Sans Pro", FontColor -> GrayLevel[0], Selectable -> 
                    False]}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {"Columns" -> {{0.2}}, "Rows" -> {{0}}}, 
                 BaselinePosition -> {1, 1}], False -> 
               PaneBox[#, BaseStyle -> {FontColor -> GrayLevel[0]}, 
                 BaselinePosition -> Baseline]}, 
              Dynamic[
               CurrentValue[Evaluatable]], ImageSize -> Automatic, 
              BaselinePosition -> Baseline, 
              BaseStyle -> {
               FontWeight -> "Plain", FontFamily -> "Helvetica", 
                ShowStringCharacters -> False, LineIndent -> 0, 
                PrivateFontOptions -> {"OperatorSubstitution" -> False}}]& ), 
            Editable -> False, InterpretationFunction -> (#2& )}], 
         Cell[
          StyleData["EntityClass"], ShowStringCharacters -> False, 
          TemplateBoxOptions -> {DisplayFunction -> (TooltipBox[
              FrameBox[
               PaneSelectorBox[{True -> GridBox[{{
                    PaneBox[
                    DynamicBox[
                    FEPrivate`ImportImage[
                    
                    FrontEnd`ToFileName[{"Typeset", "Entity"}, 
                    "EntityClass.png"]], ImageSizeCache -> {8., {2., 6.}}], 
                    BaselinePosition -> Bottom], 
                    
                    StyleBox[#, FontWeight -> "Bold", FontFamily -> 
                    "Source Sans Pro", FontColor -> 
                    RGBColor[0.395437, 0.20595, 0.061158]], 
                    StyleBox[
                    RowBox[{"(", #4, ")"}], FontWeight -> "Plain", FontFamily -> 
                    "Source Sans Pro", FontColor -> GrayLevel[0.65], 
                    Selectable -> False]}}, 
                   GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                   GridBoxSpacings -> {"Columns" -> {{0.2}}, "Rows" -> {{0}}},
                    BaselinePosition -> {1, 2}], False -> GridBox[{{
                    PaneBox[
                    DynamicBox[
                    FEPrivate`ImportImage[
                    
                    FrontEnd`ToFileName[{"Typeset", "Entity"}, 
                    "EntityClass.png"]], ImageSizeCache -> {8., {2., 6.}}], 
                    BaselinePosition -> Bottom], 
                    
                    StyleBox[#, FontColor -> 
                    RGBColor[0.395437, 0.20595, 0.061158]]}}, 
                   GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                   GridBoxSpacings -> {"Columns" -> {{0.2}}, "Rows" -> {{0}}},
                    BaselinePosition -> {1, 2}]}, 
                Dynamic[
                 CurrentValue[Evaluatable]], ImageSize -> Automatic, 
                BaselinePosition -> Baseline, 
                BaseStyle -> {FontFamily -> "Helvetica"}], FrameStyle -> 
               RGBColor[1., 0.504768, 0.], Background -> 
               RGBColor[1., 0.980392, 0.921569], 
               FrameMargins -> {{5, 5}, {1.5, 1.5}}, 
               ImageMargins -> {{2, 2}, {2, 2}}, BaselinePosition -> Baseline,
                RoundingRadius -> 4], #3, 
              BaseStyle -> {
               FontWeight -> "Plain", ShowStringCharacters -> False, 
                LineIndent -> 0, 
                PrivateFontOptions -> {"OperatorSubstitution" -> False}}]& ), 
            Editable -> False, InterpretationFunction -> (#2& )}], 
         Cell[
          StyleData["EntityClassFrameless"], ShowStringCharacters -> False, 
          TemplateBoxOptions -> {DisplayFunction -> (TooltipBox[
              PaneSelectorBox[{True -> GridBox[{{
                    PaneBox[
                    DynamicBox[
                    FEPrivate`ImportImage[
                    
                    FrontEnd`ToFileName[{"Typeset", "Entity"}, 
                    "EntityClass.png"]], ImageSizeCache -> {8., {2., 6.}}], 
                    BaselinePosition -> Bottom], 
                    
                    StyleBox[#, FontWeight -> "Bold", FontFamily -> 
                    "Source Sans Pro", FontColor -> 
                    RGBColor[0.395437, 0.20595, 0.061158]], 
                    StyleBox[
                    RowBox[{"(", #4, ")"}], FontWeight -> "Plain", FontFamily -> 
                    "Source Sans Pro", FontColor -> GrayLevel[0.65], 
                    Selectable -> False]}}, 
                  GridBoxItemSize -> {
                   "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                  GridBoxSpacings -> {"Columns" -> {{0.2}}, "Rows" -> {{0}}}, 
                  BaselinePosition -> {1, 2}], False -> GridBox[{{
                    PaneBox[
                    DynamicBox[
                    FEPrivate`ImportImage[
                    
                    FrontEnd`ToFileName[{"Typeset", "Entity"}, 
                    "EntityClass.png"]], ImageSizeCache -> {8., {2., 6.}}], 
                    BaselinePosition -> Bottom], 
                    
                    StyleBox[#, FontColor -> 
                    RGBColor[0.395437, 0.20595, 0.061158]]}}, 
                  GridBoxItemSize -> {
                   "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                  GridBoxSpacings -> {"Columns" -> {{0.2}}, "Rows" -> {{0}}}, 
                  BaselinePosition -> {1, 2}]}, 
               Dynamic[
                CurrentValue[Evaluatable]], ImageSize -> Automatic, 
               BaselinePosition -> Baseline, 
               BaseStyle -> {FontFamily -> "Helvetica"}], #3, 
              BaseStyle -> {
               FontWeight -> "Plain", ShowStringCharacters -> False, 
                LineIndent -> 0, 
                PrivateFontOptions -> {"OperatorSubstitution" -> False}}]& ), 
            Editable -> False, InterpretationFunction -> (#2& )}], 
         Cell[
          StyleData["EntityClassFramelessHot"], ShowStringCharacters -> False,
           TemplateBoxOptions -> {
           DisplayFunction -> (PaneSelectorBox[{True -> GridBox[{{
                   PaneBox[
                    DynamicBox[
                    FEPrivate`ImportImage[
                    
                    FrontEnd`ToFileName[{"Typeset", "Entity"}, 
                    "EntityClass.png"]], ImageSizeCache -> {8., {2., 6.}}], 
                    BaselinePosition -> Bottom], 
                   
                   StyleBox[#, FontWeight -> "Bold", FontFamily -> 
                    "Source Sans Pro", FontColor -> GrayLevel[0]], 
                   StyleBox[
                    RowBox[{"(", #4, ")"}], FontWeight -> "Plain", FontFamily -> 
                    "Source Sans Pro", FontColor -> GrayLevel[0], Selectable -> 
                    False]}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {"Columns" -> {{0.2}}, "Rows" -> {{0}}}, 
                 BaselinePosition -> {1, 2}], False -> GridBox[{{
                   PaneBox[
                    DynamicBox[
                    FEPrivate`ImportImage[
                    
                    FrontEnd`ToFileName[{"Typeset", "Entity"}, 
                    "EntityClass.png"]], ImageSizeCache -> {8., {2., 6.}}], 
                    BaselinePosition -> Bottom], 
                   StyleBox[#, FontColor -> GrayLevel[0]]}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {"Columns" -> {{0.2}}, "Rows" -> {{0}}}, 
                 BaselinePosition -> {1, 2}]}, 
              Dynamic[
               CurrentValue[Evaluatable]], ImageSize -> Automatic, 
              BaselinePosition -> Baseline, 
              BaseStyle -> {
               FontWeight -> "Plain", FontFamily -> "Helvetica", 
                ShowStringCharacters -> False, LineIndent -> 0, 
                PrivateFontOptions -> {"OperatorSubstitution" -> False}}]& ), 
            Editable -> False, InterpretationFunction -> (#2& )}], 
         Cell[
          StyleData["EntityProperty"], ShowStringCharacters -> False, 
          TemplateBoxOptions -> {DisplayFunction -> (TooltipBox[
              FrameBox[
               
               PaneBox[#, 
                BaseStyle -> {
                 FontSlant -> Italic, FontWeight -> Plain, FontFamily -> 
                  "Source Sans Pro", FontColor -> 
                  RGBColor[0.395437, 0.20595, 0.061158]}, BaselinePosition -> 
                Baseline], FrameStyle -> 
               RGBColor[0.94227, 0.703639, 0.033387], Background -> 
               RGBColor[1., 0.980392, 0.921569], 
               FrameMargins -> {{5, 5}, {1.5, 1.5}}, 
               ImageMargins -> {{2, 2}, {2, 2}}, BaselinePosition -> Baseline,
                RoundingRadius -> 4], #3, 
              BaseStyle -> {
               FontWeight -> "Plain", ShowStringCharacters -> False, 
                LineIndent -> 0, 
                PrivateFontOptions -> {"OperatorSubstitution" -> False}}]& ), 
            Editable -> False, InterpretationFunction -> (#2& )}], 
         Cell[
          StyleData["EntityPropertyClass"], ShowStringCharacters -> False, 
          TemplateBoxOptions -> {DisplayFunction -> (TooltipBox[
              FrameBox[
               PaneBox[
                GridBox[{{
                   PaneBox[
                    DynamicBox[
                    FEPrivate`ImportImage[
                    
                    FrontEnd`ToFileName[{"Typeset", "Entity"}, 
                    "EntityClass.png"]], ImageSizeCache -> {8., {2., 6.}}], 
                    BaselinePosition -> Bottom], #}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {"Columns" -> {{0.2}}, "Rows" -> {{0}}}, 
                 BaselinePosition -> {1, 2}], 
                BaseStyle -> {
                 FontSlant -> Italic, FontWeight -> Plain, FontFamily -> 
                  "Source Sans Pro", FontColor -> 
                  RGBColor[0.395437, 0.20595, 0.061158]}, BaselinePosition -> 
                Baseline], FrameStyle -> 
               RGBColor[0.94227, 0.703639, 0.033387], Background -> 
               RGBColor[1., 0.980392, 0.921569], 
               FrameMargins -> {{5, 5}, {1.5, 1.5}}, 
               ImageMargins -> {{2, 2}, {2, 2}}, BaselinePosition -> Baseline,
                RoundingRadius -> 4], #3, 
              BaseStyle -> {
               FontWeight -> "Plain", ShowStringCharacters -> False, 
                LineIndent -> 0, 
                PrivateFontOptions -> {"OperatorSubstitution" -> False}}]& ), 
            Editable -> False, InterpretationFunction -> (#2& )}], 
         Cell[
          StyleData["EntityValue"], ShowStringCharacters -> False, 
          TemplateBoxOptions -> {DisplayFunction -> (FrameBox[
              
              GridBox[{{#, #2}}, GridBoxAlignment -> {"Rows" -> {{Baseline}}},
                GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}}, 
               GridBoxSpacings -> {"Columns" -> {{0}}}, 
               BaselinePosition -> {1, 1}], Background -> 
              RGBColor[{0.9921568627450981, 0.9529411764705882, 
                0.8509803921568627}], BaselinePosition -> Baseline, 
              FrameMargins -> {{1, 1}, {1, 1}}, ImageMargins -> 2, FrameStyle -> 
              RGBColor[{0.9333333333333333, 0.8470588235294118, 
                0.5529411764705883}], RoundingRadius -> 5]& )}]}, Closed]]}, 
     Closed]]}, Visible -> False, FrontEndVersion -> 
  "11.3 for Mac OS X x86 (32-bit, 64-bit Kernel) (March 5, 2018)", 
  StyleDefinitions -> "StylesheetFormatting.nb"]
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{
 "p:187"->{
  Cell[660, 23, 325, 9, 70, "SectionDoubleDigit",ExpressionUUID->"2997ddb2-74b8-4825-a7a3-ae451c10f0fc",
   CounterAssignments->{{"Section", 30}, {"Subsection", 0}, {"Subsubsection", 0}, {"Exercise", 0}},
   CellTags->"p:187"]},
 "i:1"->{
  Cell[988, 34, 184, 8, 70, "Text",ExpressionUUID->"c349b7be-29be-41e7-8512-ad4ad6de6cad",
   CellTags->"i:1"]},
 "i:2"->{
  Cell[1175, 44, 136, 4, 70, "CodeCaption",ExpressionUUID->"8a4ab69e-d53b-4f27-82f5-e4319e693820",
   CellTags->"i:2"]},
 "i:3"->{
  Cell[2703, 114, 192, 7, 70, "CodeCaption",ExpressionUUID->"5ea27f0f-9bd9-4b0a-9918-b3c3601b0c83",
   CellTags->"i:3"]},
 "i:4"->{
  Cell[4074, 177, 304, 13, 70, "Text",ExpressionUUID->"e02c7697-99b4-4f26-9435-b802b9a5a11b",
   CellTags->"i:4"]},
 "i:5"->{
  Cell[4969, 218, 146, 4, 70, "CodeCaption",ExpressionUUID->"41cc0aef-5bcf-462d-ba70-f411d27aa92b",
   CellTags->"i:5"]},
 "LastCellOfAPage"->{
  Cell[6554, 287, 222, 7, 70, "Output",ExpressionUUID->"c9f6c7f6-30fc-4fe0-af89-6b802ab610b5",
   Evaluatable->False,
   CellTags->"LastCellOfAPage"],
  Cell[13649, 594, 386, 10, 70, "Output",ExpressionUUID->"7b5910a8-2859-4429-9492-2067af135ce9",
   Evaluatable->False,
   CellTags->"LastCellOfAPage"],
  Cell[21246, 903, 298, 8, 70, "Output",ExpressionUUID->"dee4019c-38dc-45a6-be3c-41522527194b",
   Evaluatable->False,
   CellTags->"LastCellOfAPage"],
  Cell[132366, 3708, 807, 22, 70, "Exercise",ExpressionUUID->"0e3ce8bc-b65b-4c67-a130-1fcbea1b8334",
   CellTags->"LastCellOfAPage"],
  Cell[137477, 3905, 293, 7, 70, "MoreExplore",ExpressionUUID->"0f4bb148-6852-46f2-99d1-6486f0072160",
   CellTags->"LastCellOfAPage"]},
 "p:188"->{
  Cell[6791, 297, 273, 10, 70, "Text",ExpressionUUID->"8323c4f3-9f8a-422b-829c-91ca30a7a455",
   CellTags->{"p:188", "i:6"}]},
 "i:6"->{
  Cell[6791, 297, 273, 10, 70, "Text",ExpressionUUID->"8323c4f3-9f8a-422b-829c-91ca30a7a455",
   CellTags->{"p:188", "i:6"}]},
 "i:7"->{
  Cell[9180, 401, 211, 9, 70, "Text",ExpressionUUID->"9b135a5c-231b-4556-bace-0ccbd84d63c4",
   CellTags->"i:7"]},
 "i:8"->{
  Cell[10159, 445, 243, 9, 70, "Text",ExpressionUUID->"758f5673-3ea0-4085-81d4-01f422c2c647",
   CellTags->"i:8"]},
 "i:9"->{
  Cell[10405, 456, 254, 9, 70, "CodeCaption",ExpressionUUID->"13bf7385-3aac-4b94-a38b-587d4fa05347",
   CellTags->"i:9"]},
 "i:10"->{
  Cell[12699, 553, 223, 7, 70, "Input",ExpressionUUID->"2e689d23-2096-4985-a695-02a4e99c2629",
   CellTags->"i:10"]},
 "i:11"->{
  Cell[13188, 574, 201, 7, 70, "CodeCaption",ExpressionUUID->"fce369a1-3b4d-40a8-a403-ca27b60747fa",
   CellTags->"i:11"]},
 "p:189"->{
  Cell[14050, 607, 258, 9, 70, "Text",ExpressionUUID->"fea1a8f9-e020-452e-abf9-bea7d93209d4",
   CellTags->{"p:189", "i:12"}]},
 "i:12"->{
  Cell[14050, 607, 258, 9, 70, "Text",ExpressionUUID->"fea1a8f9-e020-452e-abf9-bea7d93209d4",
   CellTags->{"p:189", "i:12"}]},
 "i:13"->{
  Cell[15715, 679, 250, 8, 70, "CodeCaption",ExpressionUUID->"d3cb1516-46cb-4009-9084-7bc1567e61b0",
   CellTags->"i:13"]},
 "i:14"->{
  Cell[16937, 719, 281, 10, 70, "Text",ExpressionUUID->"034391cf-2ab0-4dbb-8498-2e66e69d2538",
   CellTags->"i:14"]},
 "i:15"->{
  Cell[19489, 828, 414, 15, 70, "Text",ExpressionUUID->"10f7ed5e-20ff-44c4-b0e0-e332faec5c33",
   CellTags->"i:15"]},
 "i:16"->{
  Cell[20749, 883, 241, 7, 70, "CodeCaption",ExpressionUUID->"0b332ddc-e8d9-453b-8aa8-2840fd84d819",
   CellTags->"i:16"]},
 "p:190"->{
  Cell[21593, 917, 122, 4, 70, "VocabularySection",ExpressionUUID->"ad26ed23-b702-4154-b6f1-711f16f7c4c5",
   CellTags->"p:190"]},
 "p:191"->{
  Cell[134593, 3776, 125, 4, 70, "QASection",ExpressionUUID->"12e46065-db4f-4faf-8c70-8e123b904b49",
   CellTags->"p:191"]},
 "i:17"->{
  Cell[134721, 3782, 322, 12, 70, "Question",ExpressionUUID->"2e411825-4255-42e4-a6c0-95d62e480d3b",
   CellTags->"i:17"]},
 "i:18"->{
  Cell[136253, 3840, 187, 9, 70, "Answer",ExpressionUUID->"a9ee2c51-a947-44cf-81de-cf18ecd18a97",
   CellTags->"i:18"]}
 }
*)
(*CellTagsIndex
CellTagsIndex->{
 {"p:187", 228884, 5753},
 {"i:1", 229123, 5757},
 {"i:2", 229246, 5760},
 {"i:3", 229377, 5763},
 {"i:4", 229509, 5766},
 {"i:5", 229635, 5769},
 {"LastCellOfAPage", 229779, 5772},
 {"p:188", 230518, 5786},
 {"i:6", 230655, 5789},
 {"i:7", 230792, 5792},
 {"i:8", 230917, 5795},
 {"i:9", 231043, 5798},
 {"i:10", 231177, 5801},
 {"i:11", 231306, 5804},
 {"p:189", 231442, 5807},
 {"i:12", 231581, 5810},
 {"i:13", 231720, 5813},
 {"i:14", 231855, 5816},
 {"i:15", 231984, 5819},
 {"i:16", 232113, 5822},
 {"p:190", 232249, 5825},
 {"p:191", 232392, 5828},
 {"i:17", 232528, 5831},
 {"i:18", 232663, 5834}
 }
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[660, 23, 325, 9, 70, "SectionDoubleDigit",ExpressionUUID->"2997ddb2-74b8-4825-a7a3-ae451c10f0fc",
 CounterAssignments->{{"Section", 30}, {"Subsection", 0}, {"Subsubsection", 0}, {"Exercise", 0}},
 CellTags->"p:187"],
Cell[988, 34, 184, 8, 70, "Text",ExpressionUUID->"c349b7be-29be-41e7-8512-ad4ad6de6cad",
 CellTags->"i:1"],
Cell[1175, 44, 136, 4, 70, "CodeCaption",ExpressionUUID->"8a4ab69e-d53b-4f27-82f5-e4319e693820",
 CellTags->"i:2"],
Cell[CellGroupData[{
Cell[1336, 52, 226, 7, 70, "Input",ExpressionUUID->"239a0a2a-dabc-4a3e-aca5-92d604a520f0"],
Cell[1565, 61, 117, 4, 70, "Output",ExpressionUUID->"5888a733-f1ad-4b8f-b7ff-60cc5cf289e0",
 Evaluatable->False]
}, Open  ]],
Cell[1697, 68, 377, 15, 70, "Text",ExpressionUUID->"5c35d5e8-bbc4-4357-91e7-9c1865330793"],
Cell[2077, 85, 246, 9, 70, "CodeCaption",ExpressionUUID->"bcb53bb9-18cf-4a52-ba12-dffe802348e5"],
Cell[CellGroupData[{
Cell[2348, 98, 220, 7, 70, "Input",ExpressionUUID->"0aba001f-a91a-484f-b7cc-2fba6c90da8a"],
Cell[2571, 107, 117, 4, 70, "Output",ExpressionUUID->"3620e704-9def-4597-ab4c-012c66cfa4b4",
 Evaluatable->False]
}, Open  ]],
Cell[2703, 114, 192, 7, 70, "CodeCaption",ExpressionUUID->"5ea27f0f-9bd9-4b0a-9918-b3c3601b0c83",
 CellTags->"i:3"],
Cell[CellGroupData[{
Cell[2920, 125, 239, 8, 70, "Input",ExpressionUUID->"ed21fc04-25a3-47ca-9ce3-f950bf4ef0b3"],
Cell[3162, 135, 117, 4, 70, "Output",ExpressionUUID->"712dede2-0695-4c9b-bc9e-c4d8d3b52f69",
 Evaluatable->False]
}, Open  ]],
Cell[3294, 142, 172, 6, 70, "Text",ExpressionUUID->"ec7f0ef2-fb60-4023-b200-dadd2a24687e"],
Cell[3469, 150, 111, 3, 70, "CodeCaption",ExpressionUUID->"6273c0e2-4c47-49dd-8c0d-c5c6a0cb6f7e"],
Cell[CellGroupData[{
Cell[3605, 157, 279, 9, 70, "Input",ExpressionUUID->"01dacf5a-d3bf-467e-9510-75d55507d391"],
Cell[3887, 168, 172, 6, 70, "Output",ExpressionUUID->"19cb8a10-551c-40e9-aabb-ac254a59d2cf",
 Evaluatable->False]
}, Open  ]],
Cell[4074, 177, 304, 13, 70, "Text",ExpressionUUID->"e02c7697-99b4-4f26-9435-b802b9a5a11b",
 CellTags->"i:4"],
Cell[4381, 192, 118, 3, 70, "CodeCaption",ExpressionUUID->"7e2c10f0-0d33-4977-a682-8875ee882e25"],
Cell[CellGroupData[{
Cell[4524, 199, 245, 8, 70, "Input",ExpressionUUID->"6130e99c-b78d-4b03-b200-d236a9ccb386"],
Cell[4772, 209, 182, 6, 70, "Output",ExpressionUUID->"dec05ced-8be2-44cb-9d89-be397b03855b",
 Evaluatable->False]
}, Open  ]],
Cell[4969, 218, 146, 4, 70, "CodeCaption",ExpressionUUID->"41cc0aef-5bcf-462d-ba70-f411d27aa92b",
 CellTags->"i:5"],
Cell[CellGroupData[{
Cell[5140, 226, 226, 7, 70, "Input",ExpressionUUID->"f27ccccd-b179-4e0d-bdee-cea436925e14"],
Cell[5369, 235, 182, 6, 70, "Output",ExpressionUUID->"efe67e97-7527-461c-a9ab-aa9ec023896f",
 Evaluatable->False]
}, Open  ]],
Cell[5566, 244, 135, 3, 70, "CodeCaption",ExpressionUUID->"83a21c6e-03e0-40ee-82e2-84de3f55930e"],
Cell[CellGroupData[{
Cell[5726, 251, 245, 8, 70, "Input",ExpressionUUID->"90a0a869-5bb0-46ee-9d4c-b9ea7e092c77"],
Cell[5974, 261, 162, 6, 70, "Output",ExpressionUUID->"e8fbb463-7a9e-4f3e-b514-8dff97a99245",
 Evaluatable->False]
}, Open  ]],
Cell[6151, 270, 130, 3, 70, "CodeCaption",ExpressionUUID->"996061df-acdb-4382-96f4-82b3b84063b5"],
Cell[CellGroupData[{
Cell[6306, 277, 245, 8, 70, "Input",ExpressionUUID->"c88e8d12-e69b-46ca-a804-3b73f03cb460"],
Cell[6554, 287, 222, 7, 70, "Output",ExpressionUUID->"c9f6c7f6-30fc-4fe0-af89-6b802ab610b5",
 Evaluatable->False,
 CellTags->"LastCellOfAPage"]
}, Open  ]],
Cell[6791, 297, 273, 10, 70, "Text",ExpressionUUID->"8323c4f3-9f8a-422b-829c-91ca30a7a455",
 CellTags->{"p:188", "i:6"}],
Cell[CellGroupData[{
Cell[7089, 311, 338, 12, 70, "Input",ExpressionUUID->"3454d3ba-b39c-4049-abff-e77ad6f91591"],
Cell[7430, 325, 308, 12, 70, "Output",ExpressionUUID->"949c8eed-19b6-4e74-b767-6da2aa7b9865",
 Evaluatable->False]
}, Open  ]],
Cell[7753, 340, 166, 5, 70, "CodeCaption",ExpressionUUID->"9db23c3c-ab72-42a3-a054-dd0e64d10ba2"],
Cell[CellGroupData[{
Cell[7944, 349, 360, 12, 70, "Input",ExpressionUUID->"20825a10-e91a-49a7-873f-d66a6938c862"],
Cell[8307, 363, 173, 6, 70, "Output",ExpressionUUID->"e30ba56c-aede-45e6-8a3c-d3409213a6ac",
 Evaluatable->False]
}, Open  ]],
Cell[8495, 372, 140, 3, 70, "CodeCaption",ExpressionUUID->"00414606-c95d-4014-8cab-add66730c1b4"],
Cell[CellGroupData[{
Cell[8660, 379, 384, 13, 70, "Input",ExpressionUUID->"0376973d-4162-4631-848c-284aacf1d2a5"],
Cell[9047, 394, 118, 4, 70, "Output",ExpressionUUID->"4c2a6a66-25bc-46c0-a5e3-b04e56f872aa",
 Evaluatable->False]
}, Open  ]],
Cell[9180, 401, 211, 9, 70, "Text",ExpressionUUID->"9b135a5c-231b-4556-bace-0ccbd84d63c4",
 CellTags->"i:7"],
Cell[9394, 412, 163, 5, 70, "CodeCaption",ExpressionUUID->"ff0c98f6-0129-4c06-b403-294e1b74c43c"],
Cell[CellGroupData[{
Cell[9582, 421, 386, 13, 70, "Input",ExpressionUUID->"aba67925-b9c2-400b-89fb-26b92a48a4fa"],
Cell[9971, 436, 173, 6, 70, "Output",ExpressionUUID->"02bd636f-5448-4546-bf36-bb5563306b7b",
 Evaluatable->False]
}, Open  ]],
Cell[10159, 445, 243, 9, 70, "Text",ExpressionUUID->"758f5673-3ea0-4085-81d4-01f422c2c647",
 CellTags->"i:8"],
Cell[10405, 456, 254, 9, 70, "CodeCaption",ExpressionUUID->"13bf7385-3aac-4b94-a38b-587d4fa05347",
 CellTags->"i:9"],
Cell[CellGroupData[{
Cell[10684, 469, 378, 13, 70, "Input",ExpressionUUID->"a61c1a93-87d4-46c4-bd1a-964164052047"],
Cell[11065, 484, 187, 7, 70, "Output",ExpressionUUID->"75542021-2a6f-4e0d-8351-a27d4613c5a3",
 Evaluatable->False]
}, Open  ]],
Cell[11267, 494, 212, 7, 70, "CodeCaption",ExpressionUUID->"cca5173c-13f4-4d76-b723-860c34daba78"],
Cell[CellGroupData[{
Cell[11504, 505, 451, 15, 70, "Input",ExpressionUUID->"5cd2f747-1199-477a-9086-a1ed6e55233a"],
Cell[11958, 522, 497, 18, 70, "Output",ExpressionUUID->"2dd23f6c-b1b0-4d41-84f1-3659d10ff3bb",
 Evaluatable->False]
}, Open  ]],
Cell[12470, 543, 204, 6, 70, "CodeCaption",ExpressionUUID->"9a7c0114-d434-4dce-820b-e47575edb8e1"],
Cell[CellGroupData[{
Cell[12699, 553, 223, 7, 70, "Input",ExpressionUUID->"2e689d23-2096-4985-a695-02a4e99c2629",
 CellTags->"i:10"],
Cell[12925, 562, 248, 9, 70, "Output",ExpressionUUID->"5b3ff17d-7638-4b6e-96f7-b146f399359f",
 Evaluatable->False]
}, Open  ]],
Cell[13188, 574, 201, 7, 70, "CodeCaption",ExpressionUUID->"fce369a1-3b4d-40a8-a403-ca27b60747fa",
 CellTags->"i:11"],
Cell[CellGroupData[{
Cell[13414, 585, 232, 7, 70, "Input",ExpressionUUID->"8349cc58-a104-46c2-9d21-c5a62b120f26"],
Cell[13649, 594, 386, 10, 70, "Output",ExpressionUUID->"7b5910a8-2859-4429-9492-2067af135ce9",
 Evaluatable->False,
 CellTags->"LastCellOfAPage"]
}, Open  ]],
Cell[14050, 607, 258, 9, 70, "Text",ExpressionUUID->"fea1a8f9-e020-452e-abf9-bea7d93209d4",
 CellTags->{"p:189", "i:12"}],
Cell[14311, 618, 166, 7, 70, "CodeCaption",ExpressionUUID->"251ff4f4-7c1a-4fe7-bad1-d586cde28954"],
Cell[CellGroupData[{
Cell[14502, 629, 264, 8, 70, "Input",ExpressionUUID->"64bba6eb-a781-41de-8f68-a11d8941491c"],
Cell[14769, 639, 216, 7, 70, "Output",ExpressionUUID->"36bac6c2-7fd9-4507-9022-3c6fc90abc4e",
 Evaluatable->False]
}, Open  ]],
Cell[15000, 649, 109, 3, 70, "CodeCaption",ExpressionUUID->"11657088-c8e3-4701-82e6-8b6a95700f91"],
Cell[CellGroupData[{
Cell[15134, 656, 347, 11, 70, "Input",ExpressionUUID->"0f272660-f057-409d-a183-ae453347791b"],
Cell[15484, 669, 216, 7, 70, "Output",ExpressionUUID->"587feb10-12c6-4235-94eb-394073b884c2",
 Evaluatable->False]
}, Open  ]],
Cell[15715, 679, 250, 8, 70, "CodeCaption",ExpressionUUID->"d3cb1516-46cb-4009-9084-7bc1567e61b0",
 CellTags->"i:13"],
Cell[CellGroupData[{
Cell[15990, 691, 402, 12, 70, "Input",ExpressionUUID->"285b9346-4162-4898-b6d5-0cd0f5eaf800"],
Cell[16395, 705, 527, 11, 70, "Output",ExpressionUUID->"b8199907-5e03-4e6d-8153-01500c8180f3",
 Evaluatable->False]
}, Open  ]],
Cell[16937, 719, 281, 10, 70, "Text",ExpressionUUID->"034391cf-2ab0-4dbb-8498-2e66e69d2538",
 CellTags->"i:14"],
Cell[17221, 731, 165, 7, 70, "CodeCaption",ExpressionUUID->"467637ae-0595-4813-b5e8-0ea6982bb276"],
Cell[CellGroupData[{
Cell[17411, 742, 170, 5, 70, "Input",ExpressionUUID->"1e37c4db-0963-4a0c-a0ef-c6d7c1f63e00"],
Cell[17584, 749, 183, 6, 70, "Output",ExpressionUUID->"995cae78-e788-435a-97d4-3bb2c9b9b851",
 Evaluatable->False]
}, Open  ]],
Cell[17782, 758, 181, 8, 70, "CodeCaption",ExpressionUUID->"1b69f2da-dcfc-47f3-ad6c-34f9385d7401"],
Cell[CellGroupData[{
Cell[17988, 770, 359, 11, 70, "Input",ExpressionUUID->"8fc19b4d-5d9a-451f-bf30-474fc5871480"],
Cell[18350, 783, 193, 6, 70, "Output",ExpressionUUID->"b3164024-d6e2-4d06-a018-4edcc4fdaa87",
 Evaluatable->False]
}, Open  ]],
Cell[18558, 792, 237, 6, 70, "CodeCaption",ExpressionUUID->"87fb0439-9efb-43b2-91e0-af3e7a89b293"],
Cell[CellGroupData[{
Cell[18820, 802, 416, 14, 70, "Input",ExpressionUUID->"f46ad5e3-12b9-4000-afb5-26e4e6cf6f6c"],
Cell[19239, 818, 235, 7, 70, "Output",ExpressionUUID->"8e5a7290-b5e3-4b4e-a111-292e00c22f70",
 Evaluatable->False]
}, Open  ]],
Cell[19489, 828, 414, 15, 70, "Text",ExpressionUUID->"10f7ed5e-20ff-44c4-b0e0-e332faec5c33",
 CellTags->"i:15"],
Cell[19906, 845, 145, 4, 70, "CodeCaption",ExpressionUUID->"98c2d1c4-868b-437c-a3f9-46d4b8ee86a8"],
Cell[CellGroupData[{
Cell[20076, 853, 164, 5, 70, "Input",ExpressionUUID->"783e9ff3-ec29-497a-a2c8-d9ab25e6f838"],
Cell[20243, 860, 200, 7, 70, "Output",ExpressionUUID->"3775f5e7-f246-42fc-8e4b-1e307913049f",
 Evaluatable->False]
}, Open  ]],
Cell[20458, 870, 288, 11, 70, "Text",ExpressionUUID->"91fe92cf-3fa5-437a-99ab-7e0885ddfe9d"],
Cell[20749, 883, 241, 7, 70, "CodeCaption",ExpressionUUID->"0b332ddc-e8d9-453b-8aa8-2840fd84d819",
 CellTags->"i:16"],
Cell[CellGroupData[{
Cell[21015, 894, 228, 7, 70, "Input",ExpressionUUID->"1bf4628a-19d9-4f96-b508-f1a8b2fc5dfc"],
Cell[21246, 903, 298, 8, 70, "Output",ExpressionUUID->"dee4019c-38dc-45a6-be3c-41522527194b",
 Evaluatable->False,
 CellTags->"LastCellOfAPage"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[21593, 917, 122, 4, 70, "VocabularySection",ExpressionUUID->"ad26ed23-b702-4154-b6f1-711f16f7c4c5",
 CellTags->"p:190"],
Cell[21718, 923, 6792, 218, 70, "VocabularyTable",ExpressionUUID->"f3455790-84c1-49c3-bf23-4985e0a55c8a"]
}, Open  ]],
Cell[CellGroupData[{
Cell[28547, 1146, 1722, 45, 70, "ExerciseSection",ExpressionUUID->"d3dbb4bb-e1d2-429c-acec-db975045c6bc"],
Cell[CellGroupData[{
Cell[30294, 1195, 1211, 39, 70, "ExerciseSummaryCell",ExpressionUUID->"90a09b3a-88ee-49b2-83aa-3684bdbbc506"],
Cell[CellGroupData[{
Cell[31530, 1238, 665, 19, 70, "Exercise",ExpressionUUID->"8782e55c-6005-4008-941b-9588aa7a46a0"],
Cell[32198, 1259, 1133, 34, 70, "ExerciseOutput",ExpressionUUID->"53871723-5230-456f-be54-d150add44953"]
}, Closed]],
Cell[CellGroupData[{
Cell[33368, 1298, 671, 19, 70, "Exercise",ExpressionUUID->"133f37ed-56e6-47dd-96bb-2c2335aa81aa"],
Cell[34042, 1319, 1447, 39, 70, "ExerciseOutput",ExpressionUUID->"cfc74fe1-5242-44a0-bcbc-3e1695d76bf8"]
}, Closed]],
Cell[CellGroupData[{
Cell[35526, 1363, 690, 20, 70, "Exercise",ExpressionUUID->"82abc075-d3ae-4f16-8875-5ff066ca3140"],
Cell[36219, 1385, 1521, 40, 70, "ExerciseOutput",ExpressionUUID->"946803ff-8f5b-4f7d-9fb1-621854f139c2"]
}, Closed]],
Cell[CellGroupData[{
Cell[37777, 1430, 731, 20, 70, "Exercise",ExpressionUUID->"0883e05a-1f77-474f-a2fc-5d8807a54e1f"],
Cell[38511, 1452, 3884, 90, 70, "ExerciseOutput",ExpressionUUID->"41b1217a-1d54-4aaa-8733-27fea4d6099e"]
}, Closed]],
Cell[CellGroupData[{
Cell[42432, 1547, 742, 20, 70, "Exercise",ExpressionUUID->"31f4a87f-6772-4dc7-b66d-6d04ac0c5ab9"],
Cell[43177, 1569, 1280, 37, 70, "ExerciseOutput",ExpressionUUID->"e44846b3-1824-49d1-a952-ec2390b8b8ee"]
}, Closed]],
Cell[CellGroupData[{
Cell[44494, 1611, 799, 21, 70, "Exercise",ExpressionUUID->"ebe36835-e327-457c-9448-a49144edf799"],
Cell[45296, 1634, 1386, 38, 70, "ExerciseOutput",ExpressionUUID->"35b4425b-6729-457d-8ee9-ab0f6620ab55"]
}, Closed]],
Cell[CellGroupData[{
Cell[46719, 1677, 859, 25, 70, "Exercise",ExpressionUUID->"10bcf848-c6da-40f4-b25f-ce60cf7ca52d"],
Cell[47581, 1704, 33211, 798, 70, "ExerciseOutput",ExpressionUUID->"11a8fb10-0f7d-4101-b0c9-e02ab9d1d82c"]
}, Closed]],
Cell[CellGroupData[{
Cell[80829, 2507, 831, 24, 70, "Exercise",ExpressionUUID->"caf2e33d-5b3d-4ea6-8499-9b30f863cc85"],
Cell[81663, 2533, 40116, 865, 70, "ExerciseOutput",ExpressionUUID->"f64f9ff1-a581-4e90-b364-54bc80938669"]
}, Closed]],
Cell[CellGroupData[{
Cell[121816, 3403, 715, 20, 70, "Exercise",ExpressionUUID->"14ef41ff-373d-4e86-9b03-fdb78dfd03ac"],
Cell[122534, 3425, 1485, 40, 70, "ExerciseOutput",ExpressionUUID->"b3267d0e-8bbc-413a-a199-782ba00e1e3c"]
}, Closed]],
Cell[CellGroupData[{
Cell[124056, 3470, 839, 25, 70, "Exercise",ExpressionUUID->"09aa2de3-d29f-4a0a-9340-5fbfe710371a"],
Cell[124898, 3497, 2483, 59, 70, "ExerciseOutput",ExpressionUUID->"e9487b25-3cb1-4fc3-bdbd-a910d2da081a"]
}, Closed]],
Cell[CellGroupData[{
Cell[127418, 3561, 774, 24, 70, "Exercise",ExpressionUUID->"76f6eb53-d2d3-4a0e-886c-575c12880c46"],
Cell[128195, 3587, 1906, 48, 70, "ExerciseOutput",ExpressionUUID->"c5997347-ee5d-462c-a6b0-f88d76c884ce"]
}, Closed]],
Cell[CellGroupData[{
Cell[130138, 3640, 713, 20, 70, "Exercise",ExpressionUUID->"055c77e6-5bcd-418c-bd97-f2356beafceb"],
Cell[130854, 3662, 1475, 41, 70, "ExerciseOutput",ExpressionUUID->"ab39fdc4-b37b-4899-af06-1064eb5be9fd"]
}, Closed]],
Cell[CellGroupData[{
Cell[132366, 3708, 807, 22, 70, "Exercise",ExpressionUUID->"0e3ce8bc-b65b-4c67-a130-1fcbea1b8334",
 CellTags->"LastCellOfAPage"],
Cell[133176, 3732, 1356, 37, 70, "ExerciseOutput",ExpressionUUID->"6b95b079-a80d-4465-844d-42f9c7d467cb"]
}, Closed]]
}, Closed]]
}, Open  ]],
Cell[CellGroupData[{
Cell[134593, 3776, 125, 4, 70, "QASection",ExpressionUUID->"12e46065-db4f-4faf-8c70-8e123b904b49",
 CellTags->"p:191"],
Cell[134721, 3782, 322, 12, 70, "Question",ExpressionUUID->"2e411825-4255-42e4-a6c0-95d62e480d3b",
 CellTags->"i:17"],
Cell[135046, 3796, 677, 21, 70, "Answer",ExpressionUUID->"410b640a-9705-4dc5-9d5b-c4331e82012c"],
Cell[135726, 3819, 166, 4, 70, "Question",ExpressionUUID->"e939e1d8-e1ae-44d9-ab6a-3edde9adfa59"],
Cell[135895, 3825, 152, 5, 70, "Answer",ExpressionUUID->"b8b7492f-8ca5-4338-b0a6-c9b0cdc2e7be"],
Cell[136050, 3832, 200, 6, 70, "Question",ExpressionUUID->"b443f9ed-7c03-43cd-aa55-f298138f1637"],
Cell[136253, 3840, 187, 9, 70, "Answer",ExpressionUUID->"a9ee2c51-a947-44cf-81de-cf18ecd18a97",
 CellTags->"i:18"]
}, Open  ]],
Cell[CellGroupData[{
Cell[136477, 3854, 111, 3, 70, "TechNoteSection",ExpressionUUID->"e119b06e-d434-43ba-a876-6a4968f2ea15"],
Cell[136591, 3859, 399, 19, 70, "TechNote",ExpressionUUID->"9f18b5e8-a7cb-4128-95e5-b2c4611b2b23"],
Cell[136993, 3880, 327, 15, 70, "TechNote",ExpressionUUID->"c076ce70-2149-4f27-8c6c-2753ca777ca6"]
}, Open  ]],
Cell[CellGroupData[{
Cell[137357, 3900, 117, 3, 70, "MoreExploreSection",ExpressionUUID->"e3d83833-33f4-41c6-a29b-cd89c0385715"],
Cell[137477, 3905, 293, 7, 70, "MoreExplore",ExpressionUUID->"0f4bb148-6852-46f2-99d1-6486f0072160",
 CellTags->"LastCellOfAPage"]
}, Open  ]]
}
]
*)

(* End of internal cache information *)
(* NotebookSignature BSc89tfV4G4aOjeH1Zin7lyt *)
