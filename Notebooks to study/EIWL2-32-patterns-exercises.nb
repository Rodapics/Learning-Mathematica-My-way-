(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 11.3' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    202195,       4292]
NotebookOptionsPosition[    136380,       2976]
NotebookOutlinePosition[    195644,       4185]
CellTagsIndexPosition[    195565,       4180]
WindowTitle->Patrones: Una introducci\363n elemental a Wolfram Language
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[TextData[{
 "Encuentre las listas de longitud 3 o m\[AAcute]s, que comiencen con 1 y \
terminen con 9, en ",
 Cell[BoxData[
  RowBox[{
   StyleBox["IntegerDigits",
    FontFamily->"Source Sans Pro"], "[", 
   RowBox[{
    StyleBox["Range",
     FontFamily->"Source Sans Pro"], "[", "1000", "]"}], "]"}]], "InlineCode"],
 "."
}], "Exercise",
 Editable->False,
 Selectable->False,
 Deletable->False,
 CellDingbat->Cell[
  "32.1", "ExerciseNumber", FontColor -> 
   RGBColor[0.9019607843137255, 0.4117647058823529, 0.027450980392156862`]],
 ShowCellBracket->False,
 CounterAssignments->{{"SectionNumber", 32}, {"ExerciseNumber", 1}, {
   "WebOnly", 0}}],

Cell[CellGroupData[{

Cell[BoxData[
 TagBox[
  ButtonBox[
   StyleBox[
    RowBox[{"EXPECTED", " ", "OUTPUT", " ", "\[RightGuillemet]"}],
    FontFamily->"Source Sans Pro",
    FontSize->12,
    FontColor->GrayLevel[0.6]],
   Appearance->None,
   ButtonFunction:>(SelectionMove[
      ButtonNotebook[], All, ButtonCell, AutoScroll -> False]; FrontEndExecute[
      FrontEndToken[
       ButtonNotebook[], "OpenCloseGroup"]]),
   Evaluator->Automatic,
   Method->"Preemptive"],
  MouseAppearanceTag["LinkHand"]]], "ExerciseExpectedResult",
 Editable->False,
 Deletable->False,
 ShowCellBracket->False],

Cell[BoxData[
 FrameBox[
  TagBox[GridBox[{
     {
      PaneBox[
       InterpretationBox[Cell[BoxData[
         GraphicsBox[
          TagBox[RasterBox[CompressedData["
1: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
/wH0Ojr4
            "], {{0, 19}, {472, 0}}, {0, 255},
            ColorFunction->RGBColor],
           BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
           Selectable->False],
          DefaultBaseStyle->"ImageGraphics",
          ImageSize->Magnification[1],
          ImageSizeRaw->{472, 19},
          PlotRange->{{0, 472}, {0, 19}}]], "ExerciseOutput",
         ImageSize->{476, 19},
         ImageMargins->{{0, 0}, {0, 0}},
         ImageRegion->{{0, 1}, {0, 1}},
         Magnification->1],
        Apply[TextCell, 
         Cell[
          BoxData[
           GraphicsBox[
            TagBox[
             RasterBox[CompressedData["
1:eJztm6+zpTYUx2lrKjvTv6D/ALoWWcXMduqu2Z0uOzVbZrczHSwOicOhUCgU
CoPCYGJSgcBgEIiYiIjXnHC5l3tvct99zGzY2ZfvzO7k7R5yPpyE/DjJ++Xd
32+87y3L+vwj/+vN23+dT5/eBr//xH/44+Pnvz58fP/nbx//ef/h/adf3/3A
//Fn/ue/7ywLyk9GRkZGRkZGRkZGRkZGRkZGRkZGRkavV1MZebbtI3pV5iId
Qj1h95/v2yrP8qrt71qRtiryvGz7af4x8xznEDbjncq3wDxmpgWGDE3JvRQN
HveHoWPDvRRlg4f9YZYHccv90F1h2IDRWbhX02iKDJv6uoSWwuOekaFjjy7V
K3k0RWZADbhp8J246IK58rIB5hqMoMSyLC8qBnZR7vLAEoqae77a5ABGNvx1
SFu5EesjR1gJs6DkIzbDZcqftKNG+Q4vh3nITAvMhHJR/RwYy8/xjjBsqNwV
jBvV8k6mq5lmNTFAKWvWBEPiOShHOS3ZEeaJ4GxNk0mHHC0wKHasS9mx7OvW
FBlaCTeOK5z5hXwo1gMj8bIB5hqMtLFlxfSm3FdZ6MOXkrRqJNJwV24CDdRA
w7lIFqChgrfLO/71syLgWP6MjlOXt66q9hfDPGamB6bLeIwjsfTkEx80rHRN
rAeGDaVjh50YfEV/dhrZaKOtmbhol88dfu48+8GQxLHcFHEvQnIjXTCTGPyC
TuxM8yiRDsO6YBijx4ggXrPlSmcoTTBinAkr+J6mhj9r79iBVV42wKzLFAEG
uSnPhpwpViNRMZVU8xAzlBYYSwLU8u51ioMwSzGYIf4N2Il0AbIB5kEzXTBk
WrY2UxOphj69kREwdfgVwAwR75jO4WBbjnSVpQ9m5G2T4Gd2xHpg2FCIlZiq
Pq0wKyzMlxSHTL6h0wRDWj4OB7UwYMhRjMN6YFReNsCsy7ByW+zXZYEIr38H
qcu980qPdd6dcdiKjrVM9alOLNyp4vNSmAfNtMKcPYbStKxOGDIOqM4hi+Rl
0pq1wSDYkFllP2SuYrerDYa0Ijly8D0vjDOsyCLqgRELM7fGfMOaplmJpz1h
TurhG/c6xUylC2YUe3ivwn2Tcp6gl/HogVF52QBzKk9d5fOFichRrMsvQDpP
NDR1LCdBt2a0y0RnD5MknLNxiRiumdicRoVkObIB5kEzrTCQJSrEyCdfTmiE
gQ34LJWlHpg5IEEJ85LoMLtGhnWhY3tRWpaZB25caV5QD8ycqITeEoQHcONU
smSW3g7c8921yNvIpQ2mL3xrkZt1O8KovGyAOZUjkUiuwOe0Kj+KBOvh81TS
8zeKFMZTV8dhEIRJ3RTO2YwmArG+fo8tMI+b6YOZGlj5HeTrT90wvN3pWMZA
VEjXEzpgSCqODP0ojuNQFN2kkp906IyMqKC21Qc0GmDmcXhpms5XD4D6IiM2
1Fl374aCBhiKU8BAIyNdFri7duA7XjbAHMtswjBYh9UTXJg5l49iCFIlSDmK
UMx7jj2nbZ7GCsZ8tfHyljGEcWBPS3jTRrJl3wDzMjMNMGMDB3ROfP/WmhYY
SlfGzgP3Gb4YDK2zJE6SGBS5Ygma1vdvPH7RyKyO5sRhkOqb0gAjTluWr4nv
X2xl0kYDzKy+5Mvhg/TwXSdMG9uWky4tBYOn6lhBA4zKywaYdbmDlOGSHz6X
aYcQqsEsyGqM0EAhYx/weITl6qOGnDDfdfdjD2mb+UzwxoyNtX8Ia9x3bQ6T
mV8cp3xIjyRU9sgWmMfM9MDQoTrMm5GqRW3bNE03sb1gSr60soMKD9PYF5F7
XOHs1kzn3nNOZO0EA5tdJ2y6YexbsVGwy2G3ZuKrzxB2Twkex1ZcoIKTnV2b
6TLxuFszjVUo9u9oIqSrYdcQNeNeMHIvG2Auy/L7ErSdb5yeBAdwFImuepHx
Jjhf8o5O0ZG5liszxleGyy1N20tOW4rzcaGs5hfDPGamBwYlV1ZiCboTDB3a
OeE4+4nLbs9mWvWd5c7YbjCkr4OznZM2476RYcv0bcFQ0O7eTNCNndU4vBsM
qxPvZOMl4gL8TjByLxtgLsvilDa6LUsFc8ftDRBGpvMtLaUZAV3MtzhxTq18
+8hGmMfMXiEMo+CGPWf2SiND6VcTGSb8sPtmr7CZeDvRSz87wtx62QCzLs85
CkeM2OvyrQbY31oZeiaB9pgZbVLYec15HukjBsbAGBgD843CXIAd/zeLPC8U
v7yzLt+IjOrfMX+pGS0j3w/Tjtx5xMAYGANjYL5JmEswIyMjIyMjIyMjo1es
/wH0Ojr4
              "], {{0, 19}, {472, 0}}, {0, 255}, ColorFunction -> 
              RGBColor], 
             BoxForm`ImageTag[
             "Byte", ColorSpace -> "RGB", Interleaving -> True], Selectable -> 
             False], DefaultBaseStyle -> "ImageGraphics", ImageSize -> 
            Magnification[1], ImageSizeRaw -> {472, 19}, 
            PlotRange -> {{0, 472}, {0, 19}}]], "ExerciseOutput", 
          Magnification -> 1, CellFrameColor -> GrayLevel[0], Selectable -> 
          False, Copyable -> False, Editable -> False, ShowCellBracket -> 
          False, CellLabel -> "Out[]=", CellFrame -> False]]],
       FrameMargins->{{10, 0}, {10, 12}},
       ImageMargins->0,
       ImageSize->Full], 
      ButtonBox[
       PaneBox[
        StyleBox["\[Times]",
         FontFamily->"MathematicaMono",
         FontSize->18,
         FontWeight->"Bold",
         FontColor->GrayLevel[0.75]],
        Alignment->Right,
        FrameMargins->{{0, 6}, {0, 0}},
        ImageMargins->0],
       Appearance->None,
       ButtonFunction:>(SelectionMove[
          ButtonNotebook[], All, ButtonCell, AutoScroll -> False]; 
        NotebookFind[
          EvaluationNotebook[], "Exercise", Previous, CellStyle, WrapAround -> 
          False, AutoScroll -> False]; FrontEndExecute[
          FrontEndToken[
           ButtonNotebook[], "OpenCloseGroup"]])]}
    },
    GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {Top}},
    GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
   "Grid"],
  FrameMargins->0,
  FrameStyle->GrayLevel[0.7],
  StripOnInput->False]], "ExerciseOutput",
 Editable->False,
 Selectable->False,
 Deletable->False,
 CellFrame->{{1, 1}, {1, 1}},
 ShowCellBracket->False,
 CellFrameMargins->{{0, 0}, {0, 0}},
 CellFrameColor->GrayLevel[1],
 LineBreakWithin->Automatic]
}, Closed]],

Cell[CellGroupData[{

Cell[BoxData[
 StyleBox[
  DynamicBox[ToBoxes[
    $CellContext`SolutionResponseText["32.1"], StandardForm],
   ImageSizeCache->{140., {3., 9.}}], "SolutionResponseText"]], "Subsection",
 Editable->False,
 Selectable->False,
 Deletable->False,
 ShowCellBracket->False,
 CellMargins->{{24, 25}, {3, 0}},
 CellFrameMargins->{{8, 0}, {0, 0}},
 TextAlignment->Right,
 ShowStringCharacters->False,
 FontFamily->"Source Sans Pro",
 FontSize->12,
 FontWeight->"Plain",
 FontSlant->"Plain",
 Background->GrayLevel[1]],

Cell[BoxData[
 ButtonBox[
  PaneBox[
   StyleBox[
    RowBox[{"[", " ", 
     RowBox[{"Click", " ", "to", " ", "enter", " ", "code"}], " ", "]"}],
    Selectable->False,
    StripOnInput->False,
    FontFamily->"Source Sans Pro",
    FontSize->14,
    FontWeight->Plain,
    FontColor->GrayLevel[0.6]],
   ImageSize->Full],
  Appearance->None,
  ButtonFunction:>(SelectionMove[
     InputNotebook[], All, ButtonCell]; NotebookWrite[
     InputNotebook[], 
     Cell[
      BoxData[""], "Input"]]; SelectionMove[
     InputNotebook[], Before, CellContents]; Null),
  Evaluator->Automatic,
  Method->"Preemptive"]], "Input",
 CellFrameLabels->{{None, None}, {None, None}},
 ShowSyntaxStyles->False,
 ShowStringCharacters->False,
 CellTags->"FirstInputCell"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 PaneBox["\[ThickSpace]",
  ImageSize->Full]], "CodeSectionDividerCloud",
 Editable->False,
 Selectable->False,
 Deletable->False,
 CellMargins->{{0, 0}, {0, 35}},
 CellBracketOptions->{"OverlapContent"->True}],

Cell[TextData[{
 "Encuentre las listas con tres elementos id\[EAcute]nticos en ",
 Cell[BoxData[
  RowBox[{
   StyleBox["IntegerDigits",
    FontFamily->"Source Sans Pro"], "[", 
   RowBox[{
    StyleBox["Range",
     FontFamily->"Source Sans Pro"], "[", "1000", "]"}], "]"}]], "InlineCode"],
 "."
}], "Exercise",
 Editable->False,
 Selectable->False,
 Deletable->False,
 CellDingbat->Cell[
  "32.2", "ExerciseNumber", FontColor -> 
   RGBColor[0.9019607843137255, 0.4117647058823529, 0.027450980392156862`]],
 ShowCellBracket->False,
 CounterAssignments->{{"SectionNumber", 32}, {"ExerciseNumber", 2}, {
   "WebOnly", 0}}],

Cell[CellGroupData[{

Cell[BoxData[
 TagBox[
  ButtonBox[
   StyleBox[
    RowBox[{"EXPECTED", " ", "OUTPUT", " ", "\[RightGuillemet]"}],
    FontFamily->"Source Sans Pro",
    FontSize->12,
    FontColor->GrayLevel[0.6]],
   Appearance->None,
   ButtonFunction:>(SelectionMove[
      ButtonNotebook[], All, ButtonCell, AutoScroll -> False]; FrontEndExecute[
      FrontEndToken[
       ButtonNotebook[], "OpenCloseGroup"]]),
   Evaluator->Automatic,
   Method->"Preemptive"],
  MouseAppearanceTag["LinkHand"]]], "ExerciseExpectedResult",
 Editable->False,
 Deletable->False,
 ShowCellBracket->False],

Cell[BoxData[
 FrameBox[
  TagBox[GridBox[{
     {
      PaneBox[
       InterpretationBox[Cell[BoxData[
         GraphicsBox[
          TagBox[RasterBox[CompressedData["
1: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
5laYgYGBgYGBgYHB/wD/AHOvA3g=
            "], {{0, 19}, {425, 0}}, {0, 255},
            ColorFunction->RGBColor],
           BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
           Selectable->False],
          DefaultBaseStyle->"ImageGraphics",
          ImageSize->Magnification[1],
          ImageSizeRaw->{425, 19},
          PlotRange->{{0, 425}, {0, 19}}]], "ExerciseOutput",
         ImageSize->{429, 19},
         ImageMargins->{{0, 0}, {0, 0}},
         ImageRegion->{{0, 1}, {0, 1}},
         Magnification->1],
        Apply[TextCell, 
         Cell[
          BoxData[
           GraphicsBox[
            TagBox[
             RasterBox[CompressedData["
1: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
5laYgYGBgYGBgYHB/wD/AHOvA3g=
              "], {{0, 19}, {425, 0}}, {0, 255}, 
              ColorFunction -> RGBColor], 
             BoxForm`ImageTag[
             "Byte", ColorSpace -> "RGB", Interleaving -> True], Selectable -> 
             False], DefaultBaseStyle -> "ImageGraphics", ImageSize -> 
            Magnification[1], ImageSizeRaw -> {425, 19}, 
            PlotRange -> {{0, 425}, {0, 19}}]], "ExerciseOutput", 
          Magnification -> 1, CellFrameColor -> GrayLevel[0], Selectable -> 
          False, Copyable -> False, Editable -> False, ShowCellBracket -> 
          False, CellLabel -> "Out[]=", CellFrame -> False]]],
       FrameMargins->{{10, 0}, {10, 12}},
       ImageMargins->0,
       ImageSize->Full], 
      ButtonBox[
       PaneBox[
        StyleBox["\[Times]",
         FontFamily->"MathematicaMono",
         FontSize->18,
         FontWeight->"Bold",
         FontColor->GrayLevel[0.75]],
        Alignment->Right,
        FrameMargins->{{0, 6}, {0, 0}},
        ImageMargins->0],
       Appearance->None,
       ButtonFunction:>(SelectionMove[
          ButtonNotebook[], All, ButtonCell, AutoScroll -> False]; 
        NotebookFind[
          EvaluationNotebook[], "Exercise", Previous, CellStyle, WrapAround -> 
          False, AutoScroll -> False]; FrontEndExecute[
          FrontEndToken[
           ButtonNotebook[], "OpenCloseGroup"]])]}
    },
    GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {Top}},
    GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
   "Grid"],
  FrameMargins->0,
  FrameStyle->GrayLevel[0.7],
  StripOnInput->False]], "ExerciseOutput",
 Editable->False,
 Selectable->False,
 Deletable->False,
 CellFrame->{{1, 1}, {1, 1}},
 ShowCellBracket->False,
 CellFrameMargins->{{0, 0}, {0, 0}},
 CellFrameColor->GrayLevel[1],
 LineBreakWithin->Automatic]
}, Closed]],

Cell[CellGroupData[{

Cell[BoxData[
 StyleBox[
  DynamicBox[ToBoxes[
    $CellContext`SolutionResponseText["32.2"], StandardForm],
   ImageSizeCache->{140., {3., 9.}}], "SolutionResponseText"]], "Subsection",
 Editable->False,
 Selectable->False,
 Deletable->False,
 ShowCellBracket->False,
 CellMargins->{{24, 25}, {3, 0}},
 CellFrameMargins->{{8, 0}, {0, 0}},
 TextAlignment->Right,
 ShowStringCharacters->False,
 FontFamily->"Source Sans Pro",
 FontSize->12,
 FontWeight->"Plain",
 FontSlant->"Plain",
 Background->GrayLevel[1]],

Cell[BoxData[
 ButtonBox[
  PaneBox[
   StyleBox[
    RowBox[{"[", " ", 
     RowBox[{"Click", " ", "to", " ", "enter", " ", "code"}], " ", "]"}],
    Selectable->False,
    StripOnInput->False,
    FontFamily->"Source Sans Pro",
    FontSize->14,
    FontWeight->Plain,
    FontColor->GrayLevel[0.6]],
   ImageSize->Full],
  Appearance->None,
  ButtonFunction:>(SelectionMove[
     InputNotebook[], All, ButtonCell]; NotebookWrite[
     InputNotebook[], 
     Cell[
      BoxData[""], "Input"]]; SelectionMove[
     InputNotebook[], Before, CellContents]; Null),
  Evaluator->Automatic,
  Method->"Preemptive"]], "Input",
 CellFrameLabels->{{None, None}, {None, None}},
 ShowSyntaxStyles->False,
 ShowStringCharacters->False,
 CellTags->"FirstInputCell"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 PaneBox["\[ThickSpace]",
  ImageSize->Full]], "CodeSectionDividerCloud",
 Editable->False,
 Selectable->False,
 Deletable->False,
 CellMargins->{{0, 0}, {0, 35}},
 CellBracketOptions->{"OverlapContent"->True}],

Cell["\<\
En las listas de los d\[IAcute]gitos de los 1000 primeros cuadrados, \
encuentre las que comiencen con 9 y terminen con 0 o 1.\
\>", "Exercise",
 Editable->False,
 Selectable->False,
 Deletable->False,
 CellDingbat->Cell[
  "32.3", "ExerciseNumber", FontColor -> 
   RGBColor[0.9019607843137255, 0.4117647058823529, 0.027450980392156862`]],
 ShowCellBracket->False,
 CounterAssignments->{{"SectionNumber", 32}, {"ExerciseNumber", 3}, {
   "WebOnly", 0}}],

Cell[CellGroupData[{

Cell[BoxData[
 TagBox[
  ButtonBox[
   StyleBox[
    RowBox[{"EXPECTED", " ", "OUTPUT", " ", "\[RightGuillemet]"}],
    FontFamily->"Source Sans Pro",
    FontSize->12,
    FontColor->GrayLevel[0.6]],
   Appearance->None,
   ButtonFunction:>(SelectionMove[
      ButtonNotebook[], All, ButtonCell, AutoScroll -> False]; FrontEndExecute[
      FrontEndToken[
       ButtonNotebook[], "OpenCloseGroup"]]),
   Evaluator->Automatic,
   Method->"Preemptive"],
  MouseAppearanceTag["LinkHand"]]], "ExerciseExpectedResult",
 Editable->False,
 Deletable->False,
 ShowCellBracket->False],

Cell[BoxData[
 FrameBox[
  TagBox[GridBox[{
     {
      PaneBox[
       InterpretationBox[Cell[BoxData[
         GraphicsBox[
          TagBox[RasterBox[CompressedData["
1:eJztna/T8tgVx2lrKvsv9B9A1yKrmNlOHWZ3+rLTmc6W2e1MB4tD4nAoFApF
DQYVg4mJQcRgEIiYiAiam/AjQH587829l+R5v59O32F3D7nnnHseAuF58/nz
T//+Yfj7Tqfz2x/jP3748b+9X3/9cfy3P8X/8Pdffvvnz798+8dff/nPt5+/
/fqXn/4Q/8t/xf//3+86HfH4QgghhBBCCCGEEEIIIZ/kvJkOu92RG748Dvbb
9Wq12fvn8uf7++1qudrufZmwYDns9QYT5xRhiaHJRGd/t1mv1hvvFJYGBgfX
9YPIaDJH1xFxjleeCthAOzkr7abesA+XBo5QY3YtOnruA88vH7b4+N4+Pl5Z
FDi38qW1mMCddzqd4XR9jDKPQ3/aix92ul3x53hTOAz7+SCJE38MFns4LPI2
i/hfdadOdWJwMoG37GRYFuzzYTVOA6ZOOn4mkgm3SVyvn0SP1kUjBzbQSs7K
u6k37JOlgSPUpF0LZt1syr19UHRsgTPrd8oSQOdWobRWE+xnnc4sfH583Iom
rA7xqSFaj+NtGOVvUuDE3ezPxZw4M/HQzW1rQZi36He6s6IzpXQyl7M4dmd8
SN4Yr6bzotOhv11ORmJa5vvH4pqTSUqebI8iFSd+btfJnV6wgRZzVt5NvWGf
KQ0coUbt2iWY9zr9hRuHJRQcNyE8rNIXtzT5otKq51aptFYTumJfgufH+3j3
7/UeN3E3Fl5Ov8Lk3Lc9PcJmeSezojA33uDuvOjsJ5tMdFwnZ7fSs+kDry/S
eGyp3mTicY/nbbxLAiO3VzBvYAPt5FxzN/WGfaQ0cIQatWuXy2kav1h5yKfd
4zR+ue0NBt1Ob1b0OgnN7Q250lrNYTm4b8f9sdijzvRa/3nXe+7G47mrYRyW
zsslOgwLBqYozEuWK+qqbDLJibi/8+K3/4vFcuOdy8+s+5fj6E0mnt7kQ8hw
6/nOIq547OelAzbQTs41d1Nv2EdKA0eoUbsWJ518kB6MhsPJbOkVXx50xUR2
Nv5xKd70FV0rgOZWrbT2cj5sR/EZJrmkkH0cHpZJ7yfz+SS9+DHPm4TklHc/
fYSLXqc3d/GwKPkUMF3nnAsVkkkv7IhrO+PJQMT1rmf8XN62WG8yMf56dL9m
1F8ecmPABtrJueZu6g37SGngCDVq1+LDTXrd4XSx2SyHIq7v5L2aRv46ucgp
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
CCHG+D8cHfYP
            "], {{0, 108}, {440, 0}}, {0, 255},
            ColorFunction->RGBColor],
           BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
           Selectable->False],
          DefaultBaseStyle->"ImageGraphics",
          ImageSize->Magnification[1],
          ImageSizeRaw->{440, 108},
          PlotRange->{{0, 440}, {0, 108}}]], "ExerciseOutput",
         ImageSize->{444, 108},
         ImageMargins->{{0, 0}, {0, 0}},
         ImageRegion->{{0, 1}, {0, 1}},
         Magnification->1],
        Apply[TextCell, 
         Cell[
          BoxData[
           GraphicsBox[
            TagBox[
             RasterBox[CompressedData["
1:eJztna/T8tgVx2lrKvsv9B9A1yKrmNlOHWZ3+rLTmc6W2e1MB4tD4nAoFApF
DQYVg4mJQcRgEIiYiAiam/AjQH587829l+R5v59O32F3D7nnnHseAuF58/nz
T//+Yfj7Tqfz2x/jP3748b+9X3/9cfy3P8X/8Pdffvvnz798+8dff/nPt5+/
/fqXn/4Q/8t/xf//3+86HfH4QgghhBBCCCGEEEIIIZ/kvJkOu92RG748Dvbb
9Wq12fvn8uf7++1qudrufZmwYDns9QYT5xRhiaHJRGd/t1mv1hvvFJYGBgfX
9YPIaDJH1xFxjleeCthAOzkr7abesA+XBo5QY3YtOnruA88vH7b4+N4+Pl5Z
FDi38qW1mMCddzqd4XR9jDKPQ3/aix92ul3x53hTOAz7+SCJE38MFns4LPI2
i/hfdadOdWJwMoG37GRYFuzzYTVOA6ZOOn4mkgm3SVyvn0SP1kUjBzbQSs7K
u6k37JOlgSPUpF0LZt1syr19UHRsgTPrd8oSQOdWobRWE+xnnc4sfH583Iom
rA7xqSFaj+NtGOVvUuDE3ezPxZw4M/HQzW1rQZi36He6s6IzpXQyl7M4dmd8
SN4Yr6bzotOhv11ORmJa5vvH4pqTSUqebI8iFSd+btfJnV6wgRZzVt5NvWGf
KQ0coUbt2iWY9zr9hRuHJRQcNyE8rNIXtzT5otKq51aptFYTumJfgufH+3j3
7/UeN3E3Fl5Ov8Lk3Lc9PcJmeSezojA33uDuvOjsJ5tMdFwnZ7fSs+kDry/S
eGyp3mTicY/nbbxLAiO3VzBvYAPt5FxzN/WGfaQ0cIQatWuXy2kav1h5yKfd
4zR+ue0NBt1Ob1b0OgnN7Q250lrNYTm4b8f9sdijzvRa/3nXe+7G47mrYRyW
zsslOgwLBqYozEuWK+qqbDLJibi/8+K3/4vFcuOdy8+s+5fj6E0mnt7kQ8hw
6/nOIq547OelAzbQTs41d1Nv2EdKA0eoUbsWJ518kB6MhsPJbOkVXx50xUR2
Nv5xKd70FV0rgOZWrbT2cj5sR/EZJrmkkH0cHpZJ7yfz+SS9+DHPm4TklHc/
fYSLXqc3d/GwKPkUMF3nnAsVkkkv7IhrO+PJQMT1rmf8XN62WG8yMf56dL9m
1F8ecmPABtrJueZu6g37SGngCDVq1+LDTXrd4XSx2SyHIq7v5L2aRv46ucgp
PlAnCXtF+SJzq1Baq5km14m3otBz5rHgfNjNJuPxZL5z1uLEVnSaflyO8EfS
YeE8mYDd6/6rJJMO+fp6/jvEqyQXbQp422K9yYTeIn7O0j1FwWE57mcSAzvz
gZxr76besA+UBo5Qo3bt+QC77uOLlafKFmIGO6PpbDab9NMrlNuc653g3MqX
1m6isyfOVZPty+Msofgw0hFfh78RevFcddOLGZfTVpzy3LyrQwVh6aYsnGN5
YmgybmaVSxDvV/GHC3HtRVxayWSrN5n9rNvpLW7/Qcx/7hUhsIF2cq65m3rD
PlMaNkKN2jXx9c39YfItTN7Labhbzmfz+Uww7SdvOxe7nNdJcG4VSms7h9Ug
rvX8/Dg67UaDyc7zD/uVOKmM1qJ1kTeOuzjZPL7cSy7OdIZL/+SLixnpV3Jg
2PVSzDzMfYpCMpfjJP6vg7l3Ou2TX1oQ171zwsKD67o7saHj5c5z3WOoP5nT
dpJ8AHHPQXDYiXcpU+ek3kArOdfazYbPBtpnbISatGviU3Jv4hyOJ38/Excg
u5v45TTvyPfsHxcKlOdWqbRWk/t9d3RyhrdfyuoO59e33qGb7MPTddrAW/Wu
gb31IZAIy347lvcUhWSi43Zwu7QyXu7zw8LkuneG1y9Y9SQT7ebD+xLD+S6q
00BLOdfYzcbPBpgMNEJN2rXA340fy/QWzqko5/szbr9HVGNulUprNcl3fNPg
7bH4R8HTCUGc7N6/94+Cc/y/SDrMm4sTW1DwFMVk4mVEYFQV9oqRZKIwfA6s
1UBLOSvuZgtmA+0zNkJN2rUonrMwjKrC3qk1t2+Ul9Zq0ksKveSElX38znEj
vghbulV/WQ8KC52F+FyTXv3Ifcr3mswXzpmlfdeltZzQWU6Hw0nyVw+yj98I
Tn7FX5rGw8LNdDSaLK4fs/Kf8n0m84VzZmnfeWmEEEIIIYQQQgghhBBCCCGE
EEIIIYQQQgghhBBCyHeFNfVhIY0y91WWFp5895nCv54QHJ34UKu145XcVvga
2jrfYtvchXAy0K5JmBAbNd7wdlwQeyMYZmwG7GFRfZhPo8x9SGnurNd5JvdO
hmd3ld4SJv1ztCq8y3QbfYstdBdCycC7hpoQGzXeYDIpVfZGNMzcDNjEsvrw
bfkmmfvQ0qIovNrvXHEv6X7uz4i4X19nmtzVND4zdh7WlTfa51tso7sQSwbe
NcyE2KjxhrfjcgHsjWCYyRmwiWX14dvqDTL3SZYmznjxD9VgWfiW435nrrMj
7h6tUW/3Wd9iG92FcDLgrkEmxEaNt8x2APZGLMzoDNjEsvrwdfUmmfvkSovP
gCKr4QG4fJIkMCm7Y36rfIttdBfKJZNQtmuYCbFR4413ALM3QmFGZ8Aa9tWH
LzTK3CdX2sUfl+vMbqQ6vGHh2860pjb5FtvoLpRLpnLXMBNio8YbTAa0N4Jh
5mbAIh9RHz7RKHOfXGnJh4jloerbwLMjTrqDZdVn1Db5FtvoLpRLBty1a3CR
CbFZ440lA9obUcmjsRmwin314evRGmXukynN38RvJwclV8KTVB3xVUBvVvlb
QS3zLbbQXSiRDLRriAmxYeMNJQPaG1HJo7kZsIxV9WHDzX1oaYLnDxQ5Rwtv
1qr5du/u947jHM65srwW+hZb6C4EkwF3DTUhNmq80e14PKHE3oiGmZwBm1hV
Hzbe3Acq+ZKl+3etUm6YCHhGfDT7Kr7F1rkLwWTAXcNNiI0abzCZe3ipvREN
MzcDNrGsPmyBuU9vaaphLfAtttBdqJxMLRNio8ZbawfQMDMzYJMv7IBjaRZz
ZgfYga8tefzCDjiWVj8ZdoAdaGwHCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQ
QgghhJBPoWJtw0SKmu2NR9cRh3OKhDy5uZnx1imKFAvR6y60Ye4DOxCenK2o
y/FKbo0Fuwsb5a+EShNgc2tUdWrK3pg+UZNv0ag2tK69UcHaBokUI732xnCb
HK7XTw46WhftigVzXw2RYkECWt2FFsx9YAei47afCetPdwUzCrkLG+WvhEvD
5lbzD4slf2WKHt8i3AFzPwXlyEsJIZGiZsVhcivUyVacuM9OnHC3yGFlwdxX
U6T4hlZ3oRVzH9iB6LjpdSepPyh5uShyckHuwkb5K9HSsLm1ozrVLScV6PIt
2tGG1rE3ylrbblSIFDUrDgNxQ/hxelvkyO0Vv07m5qbXW1dTpPiCXnehHXOf
ZAeSsN2kpruwUf7KLGWlYXNrR3VqoAPafIt2tKF17I2y1rZbKoAgTKfi8JS8
aR5uPd8Rt0Ue595Lqig3vd66tzLlRIov6HUX2jH3ZansQHA6ujtx6+3OsEA3
g7kLpRa1MwPVpWFza0d1qr0DGn2LdrShyvZGBWvblaoff+2KQ1/cav9Kf3ko
q8qwue9xWCWR4gt63YV2zH13gA6Iz9QphU3A3IUyi9qZAaA0bG7tqE71dkCv
b9GONlTV3qhibbstXvHjDx4NNPeltyRduqcoOCyTG+6vS95QGjb33UKVRYpP
6HUX2jH33UJRKWEUnjaJRaZs167HLHQXyi1qZwaqSsPn1orqVGMH9PsWrWhD
Fe2NCta22zMrRIrg0UBz337W7fQWt+eLbS26HpKbm15vnaCGSPF1Ia3uQjvm
vuTgSAfCjE/K7RW+AELuQnjR63KGZwAqTW5uqxatqTrV2gEzvsWKRQ3+FFQi
LyWERIp6FYen7SR5w+yeg+CwE2fVqXP6lLmvlkjRtLvQirkP7IC4VX93vPWO
55O/norjCd25qruwUf5KsDRwbm2oTvXLSR8zV9+3aEMbWs/eKG1tw0SKuhWH
0W4+vK84nCe/rvYhc18tkaJpd6EVcx/YgfC4T6+jpcebbQ65RwPdhY3yV4Kl
gXNrQ3VqwN5438D6vkUb2tB69kZVKeEruWGaFYdRGD4f75PmvjfqhWl1F1oS
U0KlCSlh8PT3kWq5C7FF3zHRAbA0cG5N+0A/+VOAza1pbWgdeyOtbewAO8AO
sANV0NrGDrAD7AA7QAghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYTgGPOs
wXY8WKQILJosbNg0B/sB9ZcGhtlw7el1RKZpaDL3WTFOgh3QKaaEF00WlpwB
UoYhzxpsx0NFisiiF0umOcgPqL00MMyOa0+vIxIsrTnGyQvWAd1iSoO+RVKO
Ic8aaseDRYrIohdLpjnID6i9NDDMSge0OiLB0ppknAQ7oFtMadC3SMox5FlD
7XgSIkVk0RTTpjnMD6i/tKZ0QK8jEiytUcZJWH2oU0xp1LdIyjHkWctSasdD
RYoSi5o2zaF+QM2lNacDeh2RYGmNMk7KqQ8T6ospjfoWSQnmPGsv8SV2PERI
J7eoadce7AfUWFqjOqDXEanX3GfHOCmnPtQkpjTnWySlGPSs3Y5YYcfDhHSS
i9py7SVPKPQDai2tWR3Q6ojUbO6zY5yUUx9qElMa8y2SCsx51gSAHQ8T0sks
erHg2oP8gFpLa1YHtDoiNZv77BgnJdSH+sSU5nyLpBJDnjXQjgeLFKFF7Zjm
QD+g7tIa1AHNjkiwtCYZJ8EO6BVTGvUtknIMedZQOx4oUsQWtWOaA/2Amktr
Ugcuuh2RYAeaY5wEO6BXTIm2XWkGSDmNsA2qihQ/7NpD/ICGS/uoa0+rI/KN
NhgnFdWHteyNZnyLpBx61tgBdoAdIFXQs8YOsAPsACGEEEIIIYQQQgghhBBC
CCGEEEIIIYQQQgghhBBCcORMc+HJd58p+d1+2DaYdcMVhaD2Rju2QbA02DYI
dKBhtkGoA/CugaUpTZShDnxmVJQmKtsBuhdVkDXNubPbvVge9zfJvQkeaht8
c8PlANsb7dgG0dJAPyDSAfxoVmyDUAfwXcNKU54oAx2IPjMqqhOV7QDdiyrI
m+aiKLxaBl1xK+p+vvMEtg3muuFeQO2NdmyDYGmwbRDpQLNsg1gHpJybYGnK
E6W3A58ZlXoTle0A3YuyKPkWEyJvIG5mX/AmQcI2eHl3w70fTsZbZ9i3iJUm
YxvMyVntaHZsg/DmQruGNqreROntwEdGpeZEZTtA96IsCr7FFF+I7YaHwosc
qG1QkOPyKKTSW2fct4iVhtsGc3NWO5od26Dc5iaU7BrcqFoTpbcDHxmVmhOV
7QDdi1Ko2Aav+ONyjRFmG7wCv04C3jrzvkWsNNAPWJSz2tHs2AYvUptbtWt4
o+pMlN4OfGRUak5UtgN0L8pQwzaYvO0XFo8CMNvgPRp7nQS9dYZtg2BpoB+w
OGeVo9mxDcptbtWugaXVnijNzk37o1J7orIdoHtRAiXboMDfxG8nB0WXkS+o
bfCex6sbLgfIW5d/NL2uPbA00A9YlLPa0ezYBiU2F9g1sLSaE6XbuQmF6R2V
mhOV7QDdi7Ko+RafPwLkhMG2wTw3nKq3zo5tEC0NtQ1CHWiUbRDsALprWGm1
Jkp3Bz4zKnUmKtuB58cEQc23KERyvczrpLJtMNcNp2xvtGQbREWKkB8Q6wB6
NEu2QagDsHMTLK3GROnuwGdGpc5E8fvuepj1LX5h2yBY2he2DerdXLQ0xUVN
dOAzo6I6UdkOZB8TBJrm2AF24HvqwFM3CAxNc+wAO/D9dOC5G4QQQgghhBBC
CCHG+D8cHfYP
              "], {{0, 108}, {440, 0}}, {0, 255}, ColorFunction -> 
              RGBColor], 
             BoxForm`ImageTag[
             "Byte", ColorSpace -> "RGB", Interleaving -> True], Selectable -> 
             False], DefaultBaseStyle -> "ImageGraphics", ImageSize -> 
            Magnification[1], ImageSizeRaw -> {440, 108}, 
            PlotRange -> {{0, 440}, {0, 108}}]], "ExerciseOutput", 
          Magnification -> 1, CellFrameColor -> GrayLevel[0], Selectable -> 
          False, Copyable -> False, Editable -> False, ShowCellBracket -> 
          False, CellLabel -> "Out[]=", CellFrame -> False]]],
       FrameMargins->{{10, 0}, {10, 12}},
       ImageMargins->0,
       ImageSize->Full], 
      ButtonBox[
       PaneBox[
        StyleBox["\[Times]",
         FontFamily->"MathematicaMono",
         FontSize->18,
         FontWeight->"Bold",
         FontColor->GrayLevel[0.75]],
        Alignment->Right,
        FrameMargins->{{0, 6}, {0, 0}},
        ImageMargins->0],
       Appearance->None,
       ButtonFunction:>(SelectionMove[
          ButtonNotebook[], All, ButtonCell, AutoScroll -> False]; 
        NotebookFind[
          EvaluationNotebook[], "Exercise", Previous, CellStyle, WrapAround -> 
          False, AutoScroll -> False]; FrontEndExecute[
          FrontEndToken[
           ButtonNotebook[], "OpenCloseGroup"]])]}
    },
    GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {Top}},
    GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
   "Grid"],
  FrameMargins->0,
  FrameStyle->GrayLevel[0.7],
  StripOnInput->False]], "ExerciseOutput",
 Editable->False,
 Selectable->False,
 Deletable->False,
 CellFrame->{{1, 1}, {1, 1}},
 ShowCellBracket->False,
 CellFrameMargins->{{0, 0}, {0, 0}},
 CellFrameColor->GrayLevel[1],
 LineBreakWithin->Automatic]
}, Closed]],

Cell[CellGroupData[{

Cell[BoxData[
 StyleBox[
  DynamicBox[ToBoxes[
    $CellContext`SolutionResponseText["32.3"], StandardForm],
   ImageSizeCache->{140., {3., 9.}}], "SolutionResponseText"]], "Subsection",
 Editable->False,
 Selectable->False,
 Deletable->False,
 ShowCellBracket->False,
 CellMargins->{{24, 25}, {3, 0}},
 CellFrameMargins->{{8, 0}, {0, 0}},
 TextAlignment->Right,
 ShowStringCharacters->False,
 FontFamily->"Source Sans Pro",
 FontSize->12,
 FontWeight->"Plain",
 FontSlant->"Plain",
 Background->GrayLevel[1]],

Cell[BoxData[
 ButtonBox[
  PaneBox[
   StyleBox[
    RowBox[{"[", " ", 
     RowBox[{"Click", " ", "to", " ", "enter", " ", "code"}], " ", "]"}],
    Selectable->False,
    StripOnInput->False,
    FontFamily->"Source Sans Pro",
    FontSize->14,
    FontWeight->Plain,
    FontColor->GrayLevel[0.6]],
   ImageSize->Full],
  Appearance->None,
  ButtonFunction:>(SelectionMove[
     InputNotebook[], All, ButtonCell]; NotebookWrite[
     InputNotebook[], 
     Cell[
      BoxData[""], "Input"]]; SelectionMove[
     InputNotebook[], Before, CellContents]; Null),
  Evaluator->Automatic,
  Method->"Preemptive"]], "Input",
 CellFrameLabels->{{None, None}, {None, None}},
 ShowSyntaxStyles->False,
 ShowStringCharacters->False,
 CellTags->"FirstInputCell"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 PaneBox["\[ThickSpace]",
  ImageSize->Full]], "CodeSectionDividerCloud",
 Editable->False,
 Selectable->False,
 Deletable->False,
 CellMargins->{{0, 0}, {0, 35}},
 CellBracketOptions->{"OverlapContent"->True}],

Cell[TextData[{
 "En ",
 Cell[BoxData[
  RowBox[{
   StyleBox["IntegerDigits",
    FontFamily->"Source Sans Pro"], "[", 
   RowBox[{
    StyleBox["Range",
     FontFamily->"Source Sans Pro"], "[", "100", "]"}], "]"}]], 
  "InlineCode"],
 ", sustituya todos los 0s por ",
 StyleBox["Gray",
  FontFamily->"Source Sans Pro"],
 " y todos los 9s por ",
 StyleBox["Orange",
  FontFamily->"Source Sans Pro"],
 "."
}], "Exercise",
 Editable->False,
 Selectable->False,
 Deletable->False,
 CellDingbat->Cell[
  "32.4", "ExerciseNumber", FontColor -> 
   RGBColor[0.9019607843137255, 0.4117647058823529, 0.027450980392156862`]],
 ShowCellBracket->False,
 CounterAssignments->{{"SectionNumber", 32}, {"ExerciseNumber", 4}, {
   "WebOnly", 0}}],

Cell[CellGroupData[{

Cell[BoxData[
 TagBox[
  ButtonBox[
   StyleBox[
    RowBox[{"EXPECTED", " ", "OUTPUT", " ", "\[RightGuillemet]"}],
    FontFamily->"Source Sans Pro",
    FontSize->12,
    FontColor->GrayLevel[0.6]],
   Appearance->None,
   ButtonFunction:>(SelectionMove[
      ButtonNotebook[], All, ButtonCell, AutoScroll -> False]; FrontEndExecute[
      FrontEndToken[
       ButtonNotebook[], "OpenCloseGroup"]]),
   Evaluator->Automatic,
   Method->"Preemptive"],
  MouseAppearanceTag["LinkHand"]]], "ExerciseExpectedResult",
 Editable->False,
 Deletable->False,
 ShowCellBracket->False],

Cell[BoxData[
 FrameBox[
  TagBox[GridBox[{
     {
      PaneBox[
       InterpretationBox[Cell[BoxData[
         GraphicsBox[
          TagBox[RasterBox[CompressedData["
1:eJztnTFvMmt6hkm2SZm/kD/gelvKVJY2Op2bXeV4lebEOhspcrdyR7Wio3Pl
JpYiuXLlxhXKCkUiUmhccFaiIZILtqCgmDADg2GYYe7nuZ8xGN+Xdo98vo/h
mveFecB8/s71D7/7199c/22r1frD3y3/8Zvf/nv7559/e/tPf7/8lx9++sO/
/P6nH//5H3/6tx9//+PPv/7dr5a/+J/L///P37Ra6deJEEIIIYQQQgghhBBC
iK/N+3Pn+uLiZjgvfL1k9jYcjmeL1dcP1+321V1/uoDuajbpPz89Pj71R1PP
4fNp/+Xp8em5P5p4Ds9/ZTQYjN/nxsMXk9Hwg9F4brcv3sevz+n5j6Y2+5//
Mh7uMp7+n9U+GfaXW7/cu+zffFtXhePetp9FPpqTEs9w0EJeCKAl4HrBHybf
ZQVaAq4+cC32izSS2bDXarWuO0+Txc7Xb4+3rYxO/311mqPn+6tW66LTr72r
//3vx4vs2NU/bx5HpsN/+eXlcuvwy87rwnL4JN+5fje9m+wQ0+Gz7kq8pj2Y
2eyz0cP28Q+jv+KHv/yp3drlovtfFvv8pZPeQ/syu5+bp7ll7f/xQ+vw/4w7
uf8sKuGHOpqQLmGe4aDlfUhdCKBlMWGvF3DHVngvK9DCXn3gWhwXaSyzQbfV
6s73vh6/PNzdpDvcG3yc/+j+cjkIqtazOfztYbmCTvbSu3wdSfdgajl8MXlu
X9y9ZfMzGyPt/sxw+Ir52+NqSy97A9PJL7/stVuX98PliWTY1r682rrpzLt9
y76DeOz0Vu874cMXi/naOlwe0rocmNY+6y/ldy/p3r/3l794Ydq6dLT+sfJ/
2eA1raX8WVRgOVr/WE02eOOlVTeLtZAXAmjhrxdwxxLqsgIt5NUHWjwXaSzz
YXrOs72vM0bLBXS3zn+43JSL3qx4H/t3NXvP3+e/9zubZwJ8+Afvr3euwyed
5etm++rqotXuDownP12ecW9U/I4DPHwxecpebYs3NK99MVpetFcPI9vhs8Hy
CXX7mj1ki2E7H7zg4eDgNa6l+CwqAA7eWGnVzaItIRcCuJbM4rxeQAtzWYEW
6uoDLb6LNJb0RTkf8ttfp8zTq3j7/EfZDapOrHh4xiB9abmb2A+fTSfD18er
9FuIh5nx8GH6TUPreTx5SF/B8pdm8PDZIPtW6urm+vqu+zDKP/MBD89efC9f
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
jZ2Dr9jLnuruaQshhBBCCCGEEEIImv8H3IjEPA==
            "], {{0, 174}, {467, 
            0}}, {0, 255},
            ColorFunction->RGBColor],
           BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
           Selectable->False],
          DefaultBaseStyle->"ImageGraphics",
          ImageSize->Magnification[1],
          ImageSizeRaw->{467, 174},
          PlotRange->{{0, 467}, {0, 174}}]], "ExerciseOutput",
         ImageSize->{471, 174},
         ImageMargins->{{0, 0}, {0, 0}},
         ImageRegion->{{0, 1}, {0, 1}},
         Magnification->1],
        Apply[TextCell, 
         Cell[
          BoxData[
           GraphicsBox[
            TagBox[
             RasterBox[CompressedData["
1:eJztnTFvMmt6hkm2SZm/kD/gelvKVJY2Op2bXeV4lebEOhspcrdyR7Wio3Pl
JpYiuXLlxhXKCkUiUmhccFaiIZILtqCgmDADg2GYYe7nuZ8xGN+Xdo98vo/h
mveFecB8/s71D7/7199c/22r1frD3y3/8Zvf/nv7559/e/tPf7/8lx9++sO/
/P6nH//5H3/6tx9//+PPv/7dr5a/+J/L///P37Ra6deJEEIIIYQQQgghhBBC
iK/N+3Pn+uLiZjgvfL1k9jYcjmeL1dcP1+321V1/uoDuajbpPz89Pj71R1PP
4fNp/+Xp8em5P5p4Ds9/ZTQYjN/nxsMXk9Hwg9F4brcv3sevz+n5j6Y2+5//
Mh7uMp7+n9U+GfaXW7/cu+zffFtXhePetp9FPpqTEs9w0EJeCKAl4HrBHybf
ZQVaAq4+cC32izSS2bDXarWuO0+Txc7Xb4+3rYxO/311mqPn+6tW66LTr72r
//3vx4vs2NU/bx5HpsN/+eXlcuvwy87rwnL4JN+5fje9m+wQ0+Gz7kq8pj2Y
2eyz0cP28Q+jv+KHv/yp3drlovtfFvv8pZPeQ/syu5+bp7ll7f/xQ+vw/4w7
uf8sKuGHOpqQLmGe4aDlfUhdCKBlMWGvF3DHVngvK9DCXn3gWhwXaSyzQbfV
6s73vh6/PNzdpDvcG3yc/+j+cjkIqtazOfztYbmCTvbSu3wdSfdgajl8MXlu
X9y9ZfMzGyPt/sxw+Ir52+NqSy97A9PJL7/stVuX98PliWTY1r682rrpzLt9
y76DeOz0Vu874cMXi/naOlwe0rocmNY+6y/ldy/p3r/3l794Ydq6dLT+sfJ/
2eA1raX8WVRgOVr/WE02eOOlVTeLtZAXAmjhrxdwxxLqsgIt5NUHWjwXaSzz
YXrOs72vM0bLBXS3zn+43JSL3qx4H/t3NXvP3+e/9zubZwJ8+Afvr3euwyed
5etm++rqotXuDownP12ecW9U/I4DPHwxecpebYs3NK99MVpetFcPI9vhs8Hy
CXX7mj1ki2E7H7zg4eDgNa6l+CwqAA7eWGnVzaItIRcCuJbM4rxeQAtzWYEW
6uoDLb6LNJb0RTkf8ttfp8zTq3j7/EfZDapOrHh4xiB9abmb2A+fTSfD18er
9FuIh5nx8GH6TUPreTx5SF/B8pdm8PDZIPtW6urm+vqu+zDKP/MBD89efC9f
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
jZ2Dr9jLnuruaQshhBBCCCGEEEIImv8H3IjEPA==
              "], {{0, 174}, {467, 
              0}}, {0, 255}, ColorFunction -> RGBColor], 
             BoxForm`ImageTag[
             "Byte", ColorSpace -> "RGB", Interleaving -> True], Selectable -> 
             False], DefaultBaseStyle -> "ImageGraphics", ImageSize -> 
            Magnification[1], ImageSizeRaw -> {467, 174}, 
            PlotRange -> {{0, 467}, {0, 174}}]], "ExerciseOutput", 
          Magnification -> 1, CellFrameColor -> GrayLevel[0], Selectable -> 
          False, Copyable -> False, Editable -> False, ShowCellBracket -> 
          False, CellLabel -> "Out[]=", CellFrame -> False]]],
       FrameMargins->{{10, 0}, {10, 12}},
       ImageMargins->0,
       ImageSize->Full], 
      ButtonBox[
       PaneBox[
        StyleBox["\[Times]",
         FontFamily->"MathematicaMono",
         FontSize->18,
         FontWeight->"Bold",
         FontColor->GrayLevel[0.75]],
        Alignment->Right,
        FrameMargins->{{0, 6}, {0, 0}},
        ImageMargins->0],
       Appearance->None,
       ButtonFunction:>(SelectionMove[
          ButtonNotebook[], All, ButtonCell, AutoScroll -> False]; 
        NotebookFind[
          EvaluationNotebook[], "Exercise", Previous, CellStyle, WrapAround -> 
          False, AutoScroll -> False]; FrontEndExecute[
          FrontEndToken[
           ButtonNotebook[], "OpenCloseGroup"]])]}
    },
    GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {Top}},
    GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
   "Grid"],
  FrameMargins->0,
  FrameStyle->GrayLevel[0.7],
  StripOnInput->False]], "ExerciseOutput",
 Editable->False,
 Selectable->False,
 Deletable->False,
 CellFrame->{{1, 1}, {1, 1}},
 ShowCellBracket->False,
 CellFrameMargins->{{0, 0}, {0, 0}},
 CellFrameColor->GrayLevel[1],
 LineBreakWithin->Automatic]
}, Closed]],

Cell[CellGroupData[{

Cell[BoxData[
 StyleBox[
  DynamicBox[ToBoxes[
    $CellContext`SolutionResponseText["32.4"], StandardForm],
   ImageSizeCache->{140., {3., 9.}}], "SolutionResponseText"]], "Subsection",
 Editable->False,
 Selectable->False,
 Deletable->False,
 ShowCellBracket->False,
 CellMargins->{{24, 25}, {3, 0}},
 CellFrameMargins->{{8, 0}, {0, 0}},
 TextAlignment->Right,
 ShowStringCharacters->False,
 FontFamily->"Source Sans Pro",
 FontSize->12,
 FontWeight->"Plain",
 FontSlant->"Plain",
 Background->GrayLevel[1]],

Cell[BoxData[
 ButtonBox[
  PaneBox[
   StyleBox[
    RowBox[{"[", " ", 
     RowBox[{"Click", " ", "to", " ", "enter", " ", "code"}], " ", "]"}],
    Selectable->False,
    StripOnInput->False,
    FontFamily->"Source Sans Pro",
    FontSize->14,
    FontWeight->Plain,
    FontColor->GrayLevel[0.6]],
   ImageSize->Full],
  Appearance->None,
  ButtonFunction:>(SelectionMove[
     InputNotebook[], All, ButtonCell]; NotebookWrite[
     InputNotebook[], 
     Cell[
      BoxData[""], "Input"]]; SelectionMove[
     InputNotebook[], Before, CellContents]; Null),
  Evaluator->Automatic,
  Method->"Preemptive"]], "Input",
 CellFrameLabels->{{None, None}, {None, None}},
 ShowSyntaxStyles->False,
 ShowStringCharacters->False,
 CellTags->"FirstInputCell"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 PaneBox["\[ThickSpace]",
  ImageSize->Full]], "CodeSectionDividerCloud",
 Editable->False,
 Selectable->False,
 Deletable->False,
 CellMargins->{{0, 0}, {0, 35}},
 CellBracketOptions->{"OverlapContent"->True}],

Cell[TextData[{
 "Forme la lista de los d\[IAcute]gitos de 2^1000, sustituyendo todos los \
ceros por rojo (",
 StyleBox["Red en ingl\[EAcute]",
  FontFamily->"Source Sans Pro"],
 "s)."
}], "Exercise",
 Editable->False,
 Selectable->False,
 Deletable->False,
 CellDingbat->Cell[
  "32.5", "ExerciseNumber", FontColor -> 
   RGBColor[0.9019607843137255, 0.4117647058823529, 0.027450980392156862`]],
 ShowCellBracket->False,
 CounterAssignments->{{"SectionNumber", 32}, {"ExerciseNumber", 5}, {
   "WebOnly", 0}}],

Cell[CellGroupData[{

Cell[BoxData[
 TagBox[
  ButtonBox[
   StyleBox[
    RowBox[{"EXPECTED", " ", "OUTPUT", " ", "\[RightGuillemet]"}],
    FontFamily->"Source Sans Pro",
    FontSize->12,
    FontColor->GrayLevel[0.6]],
   Appearance->None,
   ButtonFunction:>(SelectionMove[
      ButtonNotebook[], All, ButtonCell, AutoScroll -> False]; FrontEndExecute[
      FrontEndToken[
       ButtonNotebook[], "OpenCloseGroup"]]),
   Evaluator->Automatic,
   Method->"Preemptive"],
  MouseAppearanceTag["LinkHand"]]], "ExerciseExpectedResult",
 Editable->False,
 Deletable->False,
 ShowCellBracket->False],

Cell[BoxData[
 FrameBox[
  TagBox[GridBox[{
     {
      PaneBox[
       InterpretationBox[Cell[BoxData[
         GraphicsBox[
          TagBox[RasterBox[CompressedData["
1:eJztnS1zK1t6RpWEBOYv5A8YhxoGuWpSYSYzlfFUyMQ1SVXKVMzQTMzIZIyM
jExUASIiIiICrkqJGAgoQEBAUXfLsn2Ouvfau5/+8LnPqpmpO/e+3v1+7L0t
yed6/eMf/uN3V387GAz+8+/3//O73//3+V/+8vubf/mH/f/51z//57//6c9/
/Ld//vN//fFPf/zLP/3h7/Z/83/2//3fvxkMsr/eGWOMMcYYY4wxxhhjjDFd
snq+vTo7u55tiv+7Xsxmr+ut9hmbt9fZV17fNuXhwRy2y/mnteavFWulsZxN
nh4fnyfz6pW3q9fx89Pj0/O8qpxo1O3KUFa0Xk72MY9Pk/lb9UODq0VUunmb
vGRLTebLqkfi3JJYT1+yLk5fVyB4NZ/uA6v6DYeCVkOFN35wcoKFR7UxmoZO
ZbesZ6PBYHB1+7Tc7haPN4Oc20lpA/86GFT/5+RXze7OB185u5uejCQ57LO+
O/u82Pl0LUt1fyO83GbZnl/kOV8/lQ17PX/4nMTDqdPWj3YpK1rNHoveF/97
/TgveypZDVa6Xb5cfHroxe345LclmFvixti+5l0cnOWr3zy/lhVeMLnLUj67
nZT8czoUshoeSqMHB6UK25icQ3Onss2vOlHX9G4wuCuKeX15GF5nTR5Nqy7q
Xfl/yp+73W62e/Z/NbvfP+Li5A6BOeyzHp0PLu5n2bKHVXWprif7fTR8yV62
rSb75pxNTqe6yu+Ym0XWu9Xj7ejkq6JetEta0eLhcv9tIX9Ru364yr5FlLyA
Q6vBSrfL5/Oz4SIfdH6/nZ8sAeaWNpTlS/Y98TFLYvt0s79lritu6s3isbgo
Lkanv8PioaDV8FCaPDgsVdjG1BwaPJVtftXPbGbZRf1pj8z3p+VOf1G/s53v
t9TlQ+nLMJLDbvd2u7+a5oE3+6kX9XQ/6ptx/vTt7LzkBG2XT/nr2PLTVSeH
j8co2iWtaL/c6v1jltXktuzOxKsdv4BUmj90PCx7KMwtbSjT/RVwdnfo8vJ5
X939vKy65e3+Bjq/vDwbnJe8FYJDoauxwps9OCxV2Ma0HBo9ld1e1Nn34mPf
9myy/dPcRf36uP9+f7Wo3imhHPabPH9zdXl9dTW8e5i/nV4uNdW3+/2VcXb1
Mn+d3O+zvXk9tXz+TuRiPJ8/39/fPzzPV9ocDmjaJa3oM9mhGwxPfmQcuxqp
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
8235f6E8UcI=
            "], {{0, 196}, {483, 0}}, {0, 255},
            ColorFunction->RGBColor],
           BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
           Selectable->False],
          DefaultBaseStyle->"ImageGraphics",
          ImageSize->Magnification[1],
          ImageSizeRaw->{483, 196},
          PlotRange->{{0, 483}, {0, 196}}]], "ExerciseOutput",
         ImageSize->{487, 196},
         ImageMargins->{{0, 0}, {0, 0}},
         ImageRegion->{{0, 1}, {0, 1}},
         Magnification->1],
        Apply[TextCell, 
         Cell[
          BoxData[
           GraphicsBox[
            TagBox[
             RasterBox[CompressedData["
1:eJztnS1zK1t6RpWEBOYv5A8YhxoGuWpSYSYzlfFUyMQ1SVXKVMzQTMzIZIyM
jExUASIiIiICrkqJGAgoQEBAUXfLsn2Ouvfau5/+8LnPqpmpO/e+3v1+7L0t
yed6/eMf/uN3V387GAz+8+/3//O73//3+V/+8vubf/mH/f/51z//57//6c9/
/Ld//vN//fFPf/zLP/3h7/Z/83/2//3fvxkMsr/eGWOMMcYYY4wxxhhjjDFd
snq+vTo7u55tiv+7Xsxmr+ut9hmbt9fZV17fNuXhwRy2y/mnteavFWulsZxN
nh4fnyfz6pW3q9fx89Pj0/O8qpxo1O3KUFa0Xk72MY9Pk/lb9UODq0VUunmb
vGRLTebLqkfi3JJYT1+yLk5fVyB4NZ/uA6v6DYeCVkOFN35wcoKFR7UxmoZO
ZbesZ6PBYHB1+7Tc7haPN4Oc20lpA/86GFT/5+RXze7OB185u5uejCQ57LO+
O/u82Pl0LUt1fyO83GbZnl/kOV8/lQ17PX/4nMTDqdPWj3YpK1rNHoveF/97
/TgveypZDVa6Xb5cfHroxe345LclmFvixti+5l0cnOWr3zy/lhVeMLnLUj67
nZT8czoUshoeSqMHB6UK25icQ3Onss2vOlHX9G4wuCuKeX15GF5nTR5Nqy7q
Xfl/yp+73W62e/Z/NbvfP+Li5A6BOeyzHp0PLu5n2bKHVXWprif7fTR8yV62
rSb75pxNTqe6yu+Ym0XWu9Xj7ejkq6JetEta0eLhcv9tIX9Ru364yr5FlLyA
Q6vBSrfL5/Oz4SIfdH6/nZ8sAeaWNpTlS/Y98TFLYvt0s79lritu6s3isbgo
Lkanv8PioaDV8FCaPDgsVdjG1BwaPJVtftXPbGbZRf1pj8z3p+VOf1G/s53v
t9TlQ+nLMJLDbvd2u7+a5oE3+6kX9XQ/6ptx/vTt7LzkBG2XT/nr2PLTVSeH
j8co2iWtaL/c6v1jltXktuzOxKsdv4BUmj90PCx7KMwtbSjT/RVwdnfo8vJ5
X939vKy65e3+Bjq/vDwbnJe8FYJDoauxwps9OCxV2Ma0HBo9ld1e1Nn34mPf
9myy/dPcRf36uP9+f7Wo3imhHPabPH9zdXl9dTW8e5i/nV4uNdW3+/2VcXb1
Mn+d3O+zvXk9tXz+TuRiPJ8/39/fPzzPV9ocDmjaJa3oM9mhGwxPfmQcuxqp
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
8235f6E8UcI=
              "], {{0, 196}, {483, 0}}, {0, 255}, ColorFunction -> 
              RGBColor], 
             BoxForm`ImageTag[
             "Byte", ColorSpace -> "RGB", Interleaving -> True], Selectable -> 
             False], DefaultBaseStyle -> "ImageGraphics", ImageSize -> 
            Magnification[1], ImageSizeRaw -> {483, 196}, 
            PlotRange -> {{0, 483}, {0, 196}}]], "ExerciseOutput", 
          Magnification -> 1, CellFrameColor -> GrayLevel[0], Selectable -> 
          False, Copyable -> False, Editable -> False, ShowCellBracket -> 
          False, CellLabel -> "Out[]=", CellFrame -> False]]],
       FrameMargins->{{10, 0}, {10, 12}},
       ImageMargins->0,
       ImageSize->Full], 
      ButtonBox[
       PaneBox[
        StyleBox["\[Times]",
         FontFamily->"MathematicaMono",
         FontSize->18,
         FontWeight->"Bold",
         FontColor->GrayLevel[0.75]],
        Alignment->Right,
        FrameMargins->{{0, 6}, {0, 0}},
        ImageMargins->0],
       Appearance->None,
       ButtonFunction:>(SelectionMove[
          ButtonNotebook[], All, ButtonCell, AutoScroll -> False]; 
        NotebookFind[
          EvaluationNotebook[], "Exercise", Previous, CellStyle, WrapAround -> 
          False, AutoScroll -> False]; FrontEndExecute[
          FrontEndToken[
           ButtonNotebook[], "OpenCloseGroup"]])]}
    },
    GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {Top}},
    GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
   "Grid"],
  FrameMargins->0,
  FrameStyle->GrayLevel[0.7],
  StripOnInput->False]], "ExerciseOutput",
 Editable->False,
 Selectable->False,
 Deletable->False,
 CellFrame->{{1, 1}, {1, 1}},
 ShowCellBracket->False,
 CellFrameMargins->{{0, 0}, {0, 0}},
 CellFrameColor->GrayLevel[1],
 LineBreakWithin->Automatic]
}, Closed]],

Cell[CellGroupData[{

Cell[BoxData[
 StyleBox[
  DynamicBox[ToBoxes[
    $CellContext`SolutionResponseText["32.5"], StandardForm],
   ImageSizeCache->{140., {3., 9.}}], "SolutionResponseText"]], "Subsection",
 Editable->False,
 Selectable->False,
 Deletable->False,
 ShowCellBracket->False,
 CellMargins->{{24, 25}, {3, 0}},
 CellFrameMargins->{{8, 0}, {0, 0}},
 TextAlignment->Right,
 ShowStringCharacters->False,
 FontFamily->"Source Sans Pro",
 FontSize->12,
 FontWeight->"Plain",
 FontSlant->"Plain",
 Background->GrayLevel[1]],

Cell[BoxData[
 ButtonBox[
  PaneBox[
   StyleBox[
    RowBox[{"[", " ", 
     RowBox[{"Click", " ", "to", " ", "enter", " ", "code"}], " ", "]"}],
    Selectable->False,
    StripOnInput->False,
    FontFamily->"Source Sans Pro",
    FontSize->14,
    FontWeight->Plain,
    FontColor->GrayLevel[0.6]],
   ImageSize->Full],
  Appearance->None,
  ButtonFunction:>(SelectionMove[
     InputNotebook[], All, ButtonCell]; NotebookWrite[
     InputNotebook[], 
     Cell[
      BoxData[""], "Input"]]; SelectionMove[
     InputNotebook[], Before, CellContents]; Null),
  Evaluator->Automatic,
  Method->"Preemptive"]], "Input",
 CellFrameLabels->{{None, None}, {None, None}},
 ShowSyntaxStyles->False,
 ShowStringCharacters->False,
 CellTags->"FirstInputCell"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 PaneBox["\[ThickSpace]",
  ImageSize->Full]], "CodeSectionDividerCloud",
 Editable->False,
 Selectable->False,
 Deletable->False,
 CellMargins->{{0, 0}, {0, 35}},
 CellBracketOptions->{"OverlapContent"->True}],

Cell["\<\
Elimine las vocales a, e, i, o y u de la lista de los caracteres en \
\[OpenCurlyDoubleQuote]The Wolfram Language\[CloseCurlyDoubleQuote].\
\>", "Exercise",
 Editable->False,
 Selectable->False,
 Deletable->False,
 CellDingbat->Cell[
  "32.6", "ExerciseNumber", FontColor -> 
   RGBColor[0.9019607843137255, 0.4117647058823529, 0.027450980392156862`]],
 ShowCellBracket->False,
 CounterAssignments->{{"SectionNumber", 32}, {"ExerciseNumber", 6}, {
   "WebOnly", 0}}],

Cell[CellGroupData[{

Cell[BoxData[
 TagBox[
  ButtonBox[
   StyleBox[
    RowBox[{"EXPECTED", " ", "OUTPUT", " ", "\[RightGuillemet]"}],
    FontFamily->"Source Sans Pro",
    FontSize->12,
    FontColor->GrayLevel[0.6]],
   Appearance->None,
   ButtonFunction:>(SelectionMove[
      ButtonNotebook[], All, ButtonCell, AutoScroll -> False]; FrontEndExecute[
      FrontEndToken[
       ButtonNotebook[], "OpenCloseGroup"]]),
   Evaluator->Automatic,
   Method->"Preemptive"],
  MouseAppearanceTag["LinkHand"]]], "ExerciseExpectedResult",
 Editable->False,
 Deletable->False,
 ShowCellBracket->False],

Cell[BoxData[
 FrameBox[
  TagBox[GridBox[{
     {
      PaneBox[
       InterpretationBox[Cell[BoxData[
         GraphicsBox[
          TagBox[RasterBox[CompressedData["
1:eJztWK+v5DYQjlpSWKl/Qf8B41LDokhXlYXcqS+nktfoXaUqqFJYYFQSZhRV
lUsWRaoUEhQSEtCQgJAlAQEuMAh4N+Nkb7PdxPHunu6u6o7ePu2Pz+PxfPY3
43z96qcX7meWZb35Av69ePkLfXp66X/3JXz4/vHNj68fH3749vHnh9cPT9+8
+hy+/Apev8ML3z/f7W53u9vd7nY02ZRl2w+f3ryyyjhLeN70Hy6o/6T1aegS
8vjHnyyK0RgavomiuOyWMiwKYllBcVNiy13M0vrgsGZhXBzm2hdJzMsr5q2Z
Yylzk3oN8wFNFknEi/3HDgNMJC6lTvAuw6KKMUshZ7861HZsOqbNsh2HUps3
csGHLG3LisqbSM98mCQaXXR5CB+8XTt6ZxCDl10+r2Dws5feEtV7NRHBHg2L
jx0G2FCneB7IIRhRRpDII7VDBZmz40rnQ5ZAS1ThICnEdSq/T4F1u1QTF5Ha
an6KrobWQ+ra1XlXScfdQvWRow1S6kMepDjmY/7+QhMxxBMtSdaKmSUT4jcJ
6d+wGo4EmU6ZrJB0cYwUT9NGqOrE+QkPRlkg3nIV0MfUchjKGxjYR5O8+Mh0
n8P5SFYURkN6nXiTSBGvOh89NAGlYZK4SsZWAZx7RPlwWbMvpwXSoBJn+G0z
I13NG+12Jsns691UwAi1bUIcthjXIqyCaEg84pvEebcB0KQR6aNPn+dVkWzj
lxdbg5Mg76H0EYvwnEOy0w6UJl4m5XmDdNGkqGBenOXlQq+nNjMWEbbLi3oh
rQdAyIuCB9YEzsocqw2NL1+gIemHef1kK5kSRZiG6b5vuQ/ZIrzcLyxkBVYr
ooH0vsk8BMzqjhnpgAmyTn0YOOTa5ZeLoBjVWKDU+N2wB7n3864Fd4cNeT7v
trxHK/KuYraj9Qo7LiofF4Xl+FAB0S25Ylcbkm6czLH7ysbVNwxYKpdwa7Ch
QWkNd3WoJCCbZ9GMdJX8iZkqtk+0wthKkHWHZTDcxe4LWjsSgMwREqxQs0G6
NslTH7Iu0yeLmru6uDQbxbM8rzaZQwMnlPhJ01YxSm2wfDFYhclYVa6hrwO8
Bc1a5QtI7w9x0tWzqbW+gE1HCHZwGFeXgahSiuGsXHM2iDMgXXPjOAG8P9I3
G8sLktnDjoAyDSLkeHG1upRlmKzh1FtMXSEbFJTZ1jpv5IYaKgMNUjnDnMWp
PJwjNU6ekeaxacrG1kW1cGDpWKnOh8gKxY+Vw7LDGTtbMW8BVki/bIE40HLj
siqLAv6KqhU3JVM9pgjTuu+7ruv7XqwsZAk2NW+xnBJ52r3LCvpbh832p0r1
2APMv5nFaVu2aiPPkRonaC3qDA276WOn2nhvarMWhkiuvsrF4q94T5/Y2Yp5
CzD2GxPpicatboHqucHM0MlNydyH5MQh8bg0hJ1qiLqnh3pxbjTNlTHS3Il2
CNxlp8us3uHmdFfEox9l6PDqZKry51ViwAcNgyyZiw86hCmsVsVmhI1ST924
Xbkd7lO8/ybrJcQEae7EcMgtv14Xj36UocNbkon6bNlp3Ukp+/EZAo3/NoL9
9hfzrZOqLYskdN2gXrt0ia7tzC5kGqS5E8Mht/x6XTz6UYYOb0nmsGcePYq2
E1b9YAb7Jw09L2DNNY+Y7vYJGD5elVtPko1hd/t/2FtGYtOH
            "], {{0, 19}, {
            167, 0}}, {0, 255},
            ColorFunction->RGBColor],
           BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
           Selectable->False],
          DefaultBaseStyle->"ImageGraphics",
          ImageSize->Magnification[1],
          ImageSizeRaw->{167, 19},
          PlotRange->{{0, 167}, {0, 19}}]], "ExerciseOutput",
         ImageSize->{171, 19},
         ImageMargins->{{0, 0}, {0, 0}},
         ImageRegion->{{0, 1}, {0, 1}},
         Magnification->1],
        Apply[TextCell, 
         Cell[
          BoxData[
           GraphicsBox[
            TagBox[
             RasterBox[CompressedData["
1:eJztWK+v5DYQjlpSWKl/Qf8B41LDokhXlYXcqS+nktfoXaUqqFJYYFQSZhRV
lUsWRaoUEhQSEtCQgJAlAQEuMAh4N+Nkb7PdxPHunu6u6o7ePu2Pz+PxfPY3
43z96qcX7meWZb35Av69ePkLfXp66X/3JXz4/vHNj68fH3749vHnh9cPT9+8
+hy+/Apev8ML3z/f7W53u9vd7nY02ZRl2w+f3ryyyjhLeN70Hy6o/6T1aegS
8vjHnyyK0RgavomiuOyWMiwKYllBcVNiy13M0vrgsGZhXBzm2hdJzMsr5q2Z
Yylzk3oN8wFNFknEi/3HDgNMJC6lTvAuw6KKMUshZ7861HZsOqbNsh2HUps3
csGHLG3LisqbSM98mCQaXXR5CB+8XTt6ZxCDl10+r2Dws5feEtV7NRHBHg2L
jx0G2FCneB7IIRhRRpDII7VDBZmz40rnQ5ZAS1ThICnEdSq/T4F1u1QTF5Ha
an6KrobWQ+ra1XlXScfdQvWRow1S6kMepDjmY/7+QhMxxBMtSdaKmSUT4jcJ
6d+wGo4EmU6ZrJB0cYwUT9NGqOrE+QkPRlkg3nIV0MfUchjKGxjYR5O8+Mh0
n8P5SFYURkN6nXiTSBGvOh89NAGlYZK4SsZWAZx7RPlwWbMvpwXSoBJn+G0z
I13NG+12Jsns691UwAi1bUIcthjXIqyCaEg84pvEebcB0KQR6aNPn+dVkWzj
lxdbg5Mg76H0EYvwnEOy0w6UJl4m5XmDdNGkqGBenOXlQq+nNjMWEbbLi3oh
rQdAyIuCB9YEzsocqw2NL1+gIemHef1kK5kSRZiG6b5vuQ/ZIrzcLyxkBVYr
ooH0vsk8BMzqjhnpgAmyTn0YOOTa5ZeLoBjVWKDU+N2wB7n3864Fd4cNeT7v
trxHK/KuYraj9Qo7LiofF4Xl+FAB0S25Ylcbkm6czLH7ysbVNwxYKpdwa7Ch
QWkNd3WoJCCbZ9GMdJX8iZkqtk+0wthKkHWHZTDcxe4LWjsSgMwREqxQs0G6
NslTH7Iu0yeLmru6uDQbxbM8rzaZQwMnlPhJ01YxSm2wfDFYhclYVa6hrwO8
Bc1a5QtI7w9x0tWzqbW+gE1HCHZwGFeXgahSiuGsXHM2iDMgXXPjOAG8P9I3
G8sLktnDjoAyDSLkeHG1upRlmKzh1FtMXSEbFJTZ1jpv5IYaKgMNUjnDnMWp
PJwjNU6ekeaxacrG1kW1cGDpWKnOh8gKxY+Vw7LDGTtbMW8BVki/bIE40HLj
siqLAv6KqhU3JVM9pgjTuu+7ruv7XqwsZAk2NW+xnBJ52r3LCvpbh832p0r1
2APMv5nFaVu2aiPPkRonaC3qDA276WOn2nhvarMWhkiuvsrF4q94T5/Y2Yp5
CzD2GxPpicatboHqucHM0MlNydyH5MQh8bg0hJ1qiLqnh3pxbjTNlTHS3Il2
CNxlp8us3uHmdFfEox9l6PDqZKry51ViwAcNgyyZiw86hCmsVsVmhI1ST924
Xbkd7lO8/ybrJcQEae7EcMgtv14Xj36UocNbkon6bNlp3Ukp+/EZAo3/NoL9
9hfzrZOqLYskdN2gXrt0ia7tzC5kGqS5E8Mht/x6XTz6UYYOb0nmsGcePYq2
E1b9YAb7Jw09L2DNNY+Y7vYJGD5elVtPko1hd/t/2FtGYtOH
              "], {{0, 19}, {
              167, 0}}, {0, 255}, ColorFunction -> RGBColor], 
             BoxForm`ImageTag[
             "Byte", ColorSpace -> "RGB", Interleaving -> True], Selectable -> 
             False], DefaultBaseStyle -> "ImageGraphics", ImageSize -> 
            Magnification[1], ImageSizeRaw -> {167, 19}, 
            PlotRange -> {{0, 167}, {0, 19}}]], "ExerciseOutput", 
          Magnification -> 1, CellFrameColor -> GrayLevel[0], Selectable -> 
          False, Copyable -> False, Editable -> False, ShowCellBracket -> 
          False, CellLabel -> "Out[]=", CellFrame -> False]]],
       FrameMargins->{{10, 0}, {10, 12}},
       ImageMargins->0,
       ImageSize->Full], 
      ButtonBox[
       PaneBox[
        StyleBox["\[Times]",
         FontFamily->"MathematicaMono",
         FontSize->18,
         FontWeight->"Bold",
         FontColor->GrayLevel[0.75]],
        Alignment->Right,
        FrameMargins->{{0, 6}, {0, 0}},
        ImageMargins->0],
       Appearance->None,
       ButtonFunction:>(SelectionMove[
          ButtonNotebook[], All, ButtonCell, AutoScroll -> False]; 
        NotebookFind[
          EvaluationNotebook[], "Exercise", Previous, CellStyle, WrapAround -> 
          False, AutoScroll -> False]; FrontEndExecute[
          FrontEndToken[
           ButtonNotebook[], "OpenCloseGroup"]])]}
    },
    GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {Top}},
    GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
   "Grid"],
  FrameMargins->0,
  FrameStyle->GrayLevel[0.7],
  StripOnInput->False]], "ExerciseOutput",
 Editable->False,
 Selectable->False,
 Deletable->False,
 CellFrame->{{1, 1}, {1, 1}},
 ShowCellBracket->False,
 CellFrameMargins->{{0, 0}, {0, 0}},
 CellFrameColor->GrayLevel[1],
 LineBreakWithin->Automatic]
}, Closed]],

Cell[CellGroupData[{

Cell[BoxData[
 StyleBox[
  DynamicBox[ToBoxes[
    $CellContext`SolutionResponseText["32.6"], StandardForm],
   ImageSizeCache->{140., {3., 9.}}], "SolutionResponseText"]], "Subsection",
 Editable->False,
 Selectable->False,
 Deletable->False,
 ShowCellBracket->False,
 CellMargins->{{24, 25}, {3, 0}},
 CellFrameMargins->{{8, 0}, {0, 0}},
 TextAlignment->Right,
 ShowStringCharacters->False,
 FontFamily->"Source Sans Pro",
 FontSize->12,
 FontWeight->"Plain",
 FontSlant->"Plain",
 Background->GrayLevel[1]],

Cell[BoxData[
 ButtonBox[
  PaneBox[
   StyleBox[
    RowBox[{"[", " ", 
     RowBox[{"Click", " ", "to", " ", "enter", " ", "code"}], " ", "]"}],
    Selectable->False,
    StripOnInput->False,
    FontFamily->"Source Sans Pro",
    FontSize->14,
    FontWeight->Plain,
    FontColor->GrayLevel[0.6]],
   ImageSize->Full],
  Appearance->None,
  ButtonFunction:>(SelectionMove[
     InputNotebook[], All, ButtonCell]; NotebookWrite[
     InputNotebook[], 
     Cell[
      BoxData[""], "Input"]]; SelectionMove[
     InputNotebook[], Before, CellContents]; Null),
  Evaluator->Automatic,
  Method->"Preemptive"]], "Input",
 CellFrameLabels->{{None, None}, {None, None}},
 ShowSyntaxStyles->False,
 ShowStringCharacters->False,
 CellTags->"FirstInputCell"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 PaneBox["\[ThickSpace]",
  ImageSize->Full]], "CodeSectionDividerCloud",
 Editable->False,
 Selectable->False,
 Deletable->False,
 CellMargins->{{0, 0}, {0, 35}},
 CellBracketOptions->{"OverlapContent"->True}],

Cell[TextData[{
 "Encuentre una forma m\[AAcute]s simple para ",
 Cell[BoxData[
  RowBox[{
   StyleBox["Select",
    FontFamily->"Source Sans Pro"], "[", 
   RowBox[{
    RowBox[{
     StyleBox["IntegerDigits",
      FontFamily->"Source Sans Pro"], "[", 
     RowBox[{"2", 
      StyleBox["^",
       FontFamily->"Source Sans Pro"], "1000"}], "]"}], ",", 
    RowBox[{
     RowBox[{
      StyleBox["#",
       FontFamily->"Source Sans Pro"], 
      StyleBox["\[Equal]",
       FontFamily->"Source Sans Pro"], "0"}], "||", 
     RowBox[{
      StyleBox["#",
       FontFamily->"Source Sans Pro"], 
      StyleBox["\[Equal]",
       FontFamily->"Source Sans Pro"], "1", 
      StyleBox["&",
       FontFamily->"Source Sans Pro"]}]}]}], "]"}]], "InlineCode"],
 "."
}], "Exercise",
 Editable->False,
 Selectable->False,
 Deletable->False,
 CellDingbat->Cell[
  "32.7", "ExerciseNumber", FontColor -> 
   RGBColor[0.9019607843137255, 0.4117647058823529, 0.027450980392156862`]],
 ShowCellBracket->False,
 CounterAssignments->{{"SectionNumber", 32}, {"ExerciseNumber", 7}, {
   "WebOnly", 0}}],

Cell[CellGroupData[{

Cell[BoxData[
 TagBox[
  ButtonBox[
   StyleBox[
    RowBox[{"EXPECTED", " ", "OUTPUT", " ", "\[RightGuillemet]"}],
    FontFamily->"Source Sans Pro",
    FontSize->12,
    FontColor->GrayLevel[0.6]],
   Appearance->None,
   ButtonFunction:>(SelectionMove[
      ButtonNotebook[], All, ButtonCell, AutoScroll -> False]; FrontEndExecute[
      FrontEndToken[
       ButtonNotebook[], "OpenCloseGroup"]]),
   Evaluator->Automatic,
   Method->"Preemptive"],
  MouseAppearanceTag["LinkHand"]]], "ExerciseExpectedResult",
 Editable->False,
 Deletable->False,
 ShowCellBracket->False],

Cell[BoxData[
 FrameBox[
  TagBox[GridBox[{
     {
      PaneBox[
       InterpretationBox[Cell[BoxData[
         GraphicsBox[
          TagBox[RasterBox[CompressedData["
1:eJztna1z4lAUxd/umpX7L6xdEb02clVnurMO0842nTVdprszO1hcJC4uCoWq
QmGqMDExMRExGAQiJgLRfS+UgX4AafvgHpLz65SBcLjvfvSljyRwP5//PvXe
K6X+fNQ3p2f/3Ovrs873T/rBj6s/vy6vLn5+u/p7cXlx/fX8g974Rf8O3ill
7t8RQgghhBBCCCGEEELqz2zoe47TjovFwzyN4yyfb39NFo0G/cEoynYZt2kN
eVBkWcWEIJdeJATkYonkTUi2X/I4UEp5/s1kfpcOOqrEH8+2vCQKWkbkmJtW
GG2S2bWGPCiyrGJCkEsvEgJysUTyJiI7AHnUU6q3WP1lo363faK9CqLNXuVj
V6mTwKR93DN3l0vHx9i0hjwosqxiQpBLLxICcrFE8iYkOwBFbHaA+WpDot3q
bfaqKFeMo2n5YDJURpxvEtuyhjwosmzJjoRUlIlUQSQE5GKJ5E1Utl/Sfks5
vZUTReRu9SodeHrdukj/3Tz1tuffkjXkQZFl9+xKSEWZSBVEQkAulkjeJGX7
ZJaO2kq5/ni1aZdXkV51O8Ey40XoKjeINw5gyRryoMiy5fN2/iBFqlDRmt1B
kYslkjdJ2T7xy2Opo3UXqvwDWq0YM73/9LeEYMka8qDIsnssLp8OXoWK1uwO
ilwskbxJyvbJfJZ0HaW6o7VNsXljHm9cVBdJoPeZtwuvpyNzGHOz2JY15EGR
ZffsSkhFmUgVREJALpZI3iRleyYdtLQXZTqLNI7j21CntNO/TeJ4Umgnk46j
3O5wdaKpPOygvH42zUJzr20uRXoqs2sNeVBkWcWEIJdeJATkYonkTUZ2CFZn
gYvoRD3AHFwtYnPJkbN+mvguTwbuvcS9SfOFlccyu9aQB0WWVUwIculFQkAu
lkjeRGQHobwO0N8yqFkirg66LpnnM/0z3yWzaw15UGTZEw6RNxFrdgdFLpZI
3jBkdikSsxB1vSB77iMpk2FbP9uPdxyopIwyyig7gGwPFOO+73nd5PmL2KfZ
tMKbcsooo4yyA8gIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEVAW5b9TR
twyrgW/IMuRIm1MsgLmQ9z3XbXXH05e1okPuG1WDlmE18A1Zhhxpc4qFMRfm
yTDUm5z178CvAHLfqKNvGVYD35BlyJE2p1hIcyEJTx50QaoKct+oI24ZVgPf
kGXIkTanWFBzIQ7c13zpFnLXgGNuGVYD35BlyJE2p1hQcyEp+2ByB/iUGvQC
Q24qJyJDjrQ5xYKaC/N0YI4x3iQvOxECmVi7shr0AkNuKiciQ460OcUCmwtF
UJ4WuX3RKhC5b9QxtwyrgW/IMuRIm1MsqLmw+A78cDzZEdSaJeC+UcffMqwG
viHLkCNtTrFw5oJeGZpjgMELvnsauW9UDVqG1cA3ZBlypM0pFs5cePVZ4Ccg
9406vpZhNfANWYYcaXOKhTEXksCcDnnjDhC5bxRllFFG2XMU49B80sTtbfzw
SFWQ+0ZRRhlllD1DMfTb7W6YvnH9RwghhBBCCCGEHBv/ARlFKhY=
            "], {{0, 
            42}, {427, 0}}, {0, 255},
            ColorFunction->RGBColor],
           BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
           Selectable->False],
          DefaultBaseStyle->"ImageGraphics",
          ImageSize->Magnification[1],
          ImageSizeRaw->{427, 42},
          PlotRange->{{0, 427}, {0, 42}}]], "ExerciseOutput",
         ImageSize->{431, 42},
         ImageMargins->{{0, 0}, {0, 0}},
         ImageRegion->{{0, 1}, {0, 1}},
         Magnification->1],
        Apply[TextCell, 
         Cell[
          BoxData[
           GraphicsBox[
            TagBox[
             RasterBox[CompressedData["
1:eJztna1z4lAUxd/umpX7L6xdEb02clVnurMO0842nTVdprszO1hcJC4uCoWq
QmGqMDExMRExGAQiJgLRfS+UgX4AafvgHpLz65SBcLjvfvSljyRwP5//PvXe
K6X+fNQ3p2f/3Ovrs873T/rBj6s/vy6vLn5+u/p7cXlx/fX8g974Rf8O3ill
7t8RQgghhBBCCCGEEELqz2zoe47TjovFwzyN4yyfb39NFo0G/cEoynYZt2kN
eVBkWcWEIJdeJATkYonkTUi2X/I4UEp5/s1kfpcOOqrEH8+2vCQKWkbkmJtW
GG2S2bWGPCiyrGJCkEsvEgJysUTyJiI7AHnUU6q3WP1lo363faK9CqLNXuVj
V6mTwKR93DN3l0vHx9i0hjwosqxiQpBLLxICcrFE8iYkOwBFbHaA+WpDot3q
bfaqKFeMo2n5YDJURpxvEtuyhjwosmzJjoRUlIlUQSQE5GKJ5E1Utl/Sfks5
vZUTReRu9SodeHrdukj/3Tz1tuffkjXkQZFl9+xKSEWZSBVEQkAulkjeJGX7
ZJaO2kq5/ni1aZdXkV51O8Ey40XoKjeINw5gyRryoMiy5fN2/iBFqlDRmt1B
kYslkjdJ2T7xy2Opo3UXqvwDWq0YM73/9LeEYMka8qDIsnssLp8OXoWK1uwO
ilwskbxJyvbJfJZ0HaW6o7VNsXljHm9cVBdJoPeZtwuvpyNzGHOz2JY15EGR
ZffsSkhFmUgVREJALpZI3iRleyYdtLQXZTqLNI7j21CntNO/TeJ4Umgnk46j
3O5wdaKpPOygvH42zUJzr20uRXoqs2sNeVBkWcWEIJdeJATkYonkTUZ2CFZn
gYvoRD3AHFwtYnPJkbN+mvguTwbuvcS9SfOFlccyu9aQB0WWVUwIculFQkAu
lkjeRGQHobwO0N8yqFkirg66LpnnM/0z3yWzaw15UGTZEw6RNxFrdgdFLpZI
3jBkdikSsxB1vSB77iMpk2FbP9uPdxyopIwyyig7gGwPFOO+73nd5PmL2KfZ
tMKbcsooo4yyA8gIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEVAW5b9TR
twyrgW/IMuRIm1MsgLmQ9z3XbXXH05e1okPuG1WDlmE18A1Zhhxpc4qFMRfm
yTDUm5z178CvAHLfqKNvGVYD35BlyJE2p1hIcyEJTx50QaoKct+oI24ZVgPf
kGXIkTanWFBzIQ7c13zpFnLXgGNuGVYD35BlyJE2p1hQcyEp+2ByB/iUGvQC
Q24qJyJDjrQ5xYKaC/N0YI4x3iQvOxECmVi7shr0AkNuKiciQ460OcUCmwtF
UJ4WuX3RKhC5b9QxtwyrgW/IMuRIm1MsqLmw+A78cDzZEdSaJeC+UcffMqwG
viHLkCNtTrFw5oJeGZpjgMELvnsauW9UDVqG1cA3ZBlypM0pFs5cePVZ4Ccg
9406vpZhNfANWYYcaXOKhTEXksCcDnnjDhC5bxRllFFG2XMU49B80sTtbfzw
SFWQ+0ZRRhlllD1DMfTb7W6YvnH9RwghhBBCCCGEHBv/ARlFKhY=
              "], {{0, 
              42}, {427, 0}}, {0, 255}, ColorFunction -> RGBColor], 
             BoxForm`ImageTag[
             "Byte", ColorSpace -> "RGB", Interleaving -> True], Selectable -> 
             False], DefaultBaseStyle -> "ImageGraphics", ImageSize -> 
            Magnification[1], ImageSizeRaw -> {427, 42}, 
            PlotRange -> {{0, 427}, {0, 42}}]], "ExerciseOutput", 
          Magnification -> 1, CellFrameColor -> GrayLevel[0], Selectable -> 
          False, Copyable -> False, Editable -> False, ShowCellBracket -> 
          False, CellLabel -> "Out[]=", CellFrame -> False]]],
       FrameMargins->{{10, 0}, {10, 12}},
       ImageMargins->0,
       ImageSize->Full], 
      ButtonBox[
       PaneBox[
        StyleBox["\[Times]",
         FontFamily->"MathematicaMono",
         FontSize->18,
         FontWeight->"Bold",
         FontColor->GrayLevel[0.75]],
        Alignment->Right,
        FrameMargins->{{0, 6}, {0, 0}},
        ImageMargins->0],
       Appearance->None,
       ButtonFunction:>(SelectionMove[
          ButtonNotebook[], All, ButtonCell, AutoScroll -> False]; 
        NotebookFind[
          EvaluationNotebook[], "Exercise", Previous, CellStyle, WrapAround -> 
          False, AutoScroll -> False]; FrontEndExecute[
          FrontEndToken[
           ButtonNotebook[], "OpenCloseGroup"]])]}
    },
    GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {Top}},
    GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
   "Grid"],
  FrameMargins->0,
  FrameStyle->GrayLevel[0.7],
  StripOnInput->False]], "ExerciseOutput",
 Editable->False,
 Selectable->False,
 Deletable->False,
 CellFrame->{{1, 1}, {1, 1}},
 ShowCellBracket->False,
 CellFrameMargins->{{0, 0}, {0, 0}},
 CellFrameColor->GrayLevel[1],
 LineBreakWithin->Automatic]
}, Closed]],

Cell[CellGroupData[{

Cell[BoxData[
 StyleBox[
  DynamicBox[ToBoxes[
    $CellContext`SolutionResponseText["32.7"], StandardForm],
   ImageSizeCache->{140., {3., 9.}}], "SolutionResponseText"]], "Subsection",
 Editable->False,
 Selectable->False,
 Deletable->False,
 ShowCellBracket->False,
 CellMargins->{{24, 25}, {3, 0}},
 CellFrameMargins->{{8, 0}, {0, 0}},
 TextAlignment->Right,
 ShowStringCharacters->False,
 FontFamily->"Source Sans Pro",
 FontSize->12,
 FontWeight->"Plain",
 FontSlant->"Plain",
 Background->GrayLevel[1]],

Cell[BoxData[
 ButtonBox[
  PaneBox[
   StyleBox[
    RowBox[{"[", " ", 
     RowBox[{"Click", " ", "to", " ", "enter", " ", "code"}], " ", "]"}],
    Selectable->False,
    StripOnInput->False,
    FontFamily->"Source Sans Pro",
    FontSize->14,
    FontWeight->Plain,
    FontColor->GrayLevel[0.6]],
   ImageSize->Full],
  Appearance->None,
  ButtonFunction:>(SelectionMove[
     InputNotebook[], All, ButtonCell]; NotebookWrite[
     InputNotebook[], 
     Cell[
      BoxData[""], "Input"]]; SelectionMove[
     InputNotebook[], Before, CellContents]; Null),
  Evaluator->Automatic,
  Method->"Preemptive"]], "Input",
 CellFrameLabels->{{None, None}, {None, None}},
 ShowSyntaxStyles->False,
 ShowStringCharacters->False,
 CellTags->"FirstInputCell"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 PaneBox["\[ThickSpace]",
  ImageSize->Full]], "CodeSectionDividerCloud",
 Editable->False,
 Selectable->False,
 Deletable->False,
 CellMargins->{{0, 0}, {0, 35}},
 CellBracketOptions->{"OverlapContent"->True}],

Cell[TextData[{
 "Encuentre una forma m\[AAcute]s simple para ",
 Cell[BoxData[
  RowBox[{
   StyleBox["Select",
    FontFamily->"Source Sans Pro"], "[", 
   RowBox[{
    RowBox[{
     StyleBox["IntegerDigits",
      FontFamily->"Source Sans Pro"], "[", 
     RowBox[{
      StyleBox["Range",
       FontFamily->"Source Sans Pro"], "[", 
      RowBox[{"100", ",", "999"}], "]"}], "]"}], ",", 
    RowBox[{
     RowBox[{
      StyleBox["First",
       FontFamily->"Source Sans Pro"], "[", 
      StyleBox["#",
       FontFamily->"Source Sans Pro"], "]"}], 
     StyleBox["\[Equal]",
      FontFamily->"Source Sans Pro"], 
     RowBox[{
      StyleBox["Last",
       FontFamily->"Source Sans Pro"], "[", 
      StyleBox["#",
       FontFamily->"Source Sans Pro"], "]"}], 
     StyleBox["&",
      FontFamily->"Source Sans Pro"]}]}], "]"}]], "InlineCode"],
 "."
}], "Exercise",
 Editable->False,
 Selectable->False,
 Deletable->False,
 CellDingbat->Cell[
  "32.8", "ExerciseNumber", FontColor -> 
   RGBColor[0.9019607843137255, 0.4117647058823529, 0.027450980392156862`]],
 ShowCellBracket->False,
 CounterAssignments->{{"SectionNumber", 32}, {"ExerciseNumber", 8}, {
   "WebOnly", 0}}],

Cell[CellGroupData[{

Cell[BoxData[
 TagBox[
  ButtonBox[
   StyleBox[
    RowBox[{"EXPECTED", " ", "OUTPUT", " ", "\[RightGuillemet]"}],
    FontFamily->"Source Sans Pro",
    FontSize->12,
    FontColor->GrayLevel[0.6]],
   Appearance->None,
   ButtonFunction:>(SelectionMove[
      ButtonNotebook[], All, ButtonCell, AutoScroll -> False]; FrontEndExecute[
      FrontEndToken[
       ButtonNotebook[], "OpenCloseGroup"]]),
   Evaluator->Automatic,
   Method->"Preemptive"],
  MouseAppearanceTag["LinkHand"]]], "ExerciseExpectedResult",
 Editable->False,
 Deletable->False,
 ShowCellBracket->False],

Cell[BoxData[
 FrameBox[
  TagBox[GridBox[{
     {
      PaneBox[
       InterpretationBox[Cell[BoxData[
         GraphicsBox[
          TagBox[RasterBox[CompressedData["
1:eJztnb9vOtl+hrlJc8v8C/kHXKelvJWlG6Vzc6+yvkqzsfZGitzSUUXu6Fy5
cuXKFY2VAiVCV6IIDQUbyQ2RXJCCgmIuM2NgDDPzec+vd6wv7yPtit09HJ7v
OcMAg9fP3//xX39/+ze9Xu/Pv9397fd/+Pf+L7/84f4f/273D//085//5U8/
//TPv/v5337600+//MMf/3b3L/9z99evv+n18tuZEEIIIYQQQgghhBBCCMHg
43V4e3V1N9uc3N6xXsxmy/W2/f7L6fj56Xk8XVoPVJ1t/XTb798MJquWyX1k
vIalkVm/T15fnp9fJvNV9zKb1WT88vzyOpm/dy+zv+N8Ol1+bDqV2b7PZ0fm
y1YbxspsP5Zvr/lOzVddrsxmtZx9Zdnmw1iZ99lk93TaHcHt60KRWU/Hucvu
8DVcnGXqppiNer3e7fDlffvl9uL5vlcwnLRpTEc3+aCr/G83j9OmYWezbeev
j7t7Xg0niBgo4zssvszH7LlYknJhenfP8w5ltu/j64rM9fCt6RDhbFPJ5CGX
apmZIrN+KBflk/503aFMtp4/VW2eGs5GBJnZQ7/3lauH+mc3ZWU242Hu078u
rO5ems7SDJntsnDpXRVHzv1r41tTD5l6w+lDr/ewObu9HD8N7vIn0WjabLue
7GSvR/neTfI9vZ41rF3tbPPH693GN83uLBM2LK7M4mm3FcPiDevupTPfpaZ3
0gSZ7ftr/2qwKM7LxaHenzSciDjbtGOzeC6P3vLg6U5mPer3rh9nu0UqaBxH
kfkozov3i+Lz7PNw1PR+kSKz3W4+V2S2m7l33fTixZApzjODcf58+pjs7nvV
4QH8Ps5PvM/502n7cr87Td81naM9ZGrZzHLD9dntcr7dAzw0226KF6BxefZ5
f+3lgxvWrm622e7pcTVquoOrTOCw2DLrj/1npY/JsOWsSJE58vE2+AYy78Pd
od2/ubnq9Rvem7FkVru9Gc3BD55pZbbvL8U7rra9oclUtOa7dxs3T40fAxky
6+nuFH3/VgzYzvrNp2iCzHT3Ono4xxYnvcd5tJNeLfn7vf0jVm8X9vnKtNgu
nm+P7w+3i9v2U/TZbPPi4Zru4CoTOCyJTEG+p71B2yVgisx69T57e84vS90+
tR0h6WVm+ae93uvy/em68eMzSWY9La623Nzd3g4enubtFwkTyxRv567f5rtP
w4+PT6/zjy5lDizz5/jtov1FLLnMqrhAcDueLyePO5/7ZYtPYpni6Tz8/M8f
b4a5o8w5H4vx3e7tTHFtpHrbwfb4irB57Pf6oxluuy0+7Q5fat7EeMgEDksi
k1+4eilOiq1vQhgy+Sf6EmNkYplyQe5f85es4oDpdGW2i0H/6nb4+Pr6dJtf
WrxuvSCaVqa8KJofLfeDm1ymP275npl0AC93n+qLC0GtpJdZvtwdropfPy06
lNksnopX9cFoNCi/xxi5vC9tkallWFz2HucTfFRuo7b5u+jjC9By94cduryg
7P7VqPhDvp3+EX1kgoclkPmY5O8Xb1rftdJkdofHZvX6kBu9tLwLSSuzfiy+
ubwbPjw8DK7Lq9Hj5p8FYq1MMcHbVfv3RIllylP0fmsWd+3nRs7KFB/knxbW
z1AkltnMH3ON2Wq7XjzdX3d6ABd3W7w9DO7vB6O3yUs/2kmvnu3HPH8lGIxP
bu//8yy/kDJrnGsz3x1UV+Ulomw1zl9Qmgefz1au/OOk5hqAh0zgsPgyq0n+
PWH/wfyRu/Qym01lcN/4wjqpzObtafQwGj3kDK+LN66Pb82n6OQrU/mGsPhO
qu3pllim+GZn/2zafeq5ar0KRHk2LV93b6Jvmn4GgCYzfbjq9R/3O5WfV9u+
wuCcZ8qZ82tTvfxnQWLINLHIL0/ur0Ufb28Ws9nsLZ/t/ultPpu9b/IvDu53
SzV4rTzf8+vPu4/xy9Uyv0RUfrl5Pqx2ts+rQKNN/V3cZUKGxZbZvI9vyg9B
4+lsOp1MJouPbVcyr7s3ZFf34/n7x2r5Mrz+fF/U2TYdj57jlbGOZPJPz/3B
ZPG+Wk6LjxdXr++dbdPuPesg/8w1mq9W0+LntfLvoTrdpq9XMjvbptV4UFwc
mH2s14u3/LPGcLLqSma7eru7GbzNl4vpc/5cunvZxluZWup/omMzve59If8e
cDMrjuIv17rX8+f9Nc7+y2JdznI6rHa26pebdTM7y4QMiy0zG52MKt64diSz
eZ+WFzcLrh5eF11uU+XY2f/AW2cy6+Xb/XFc/3Gy6nZltvtX9l7+vJ52vk35
YdyvnKI7k9m+jW4PY25HxQ/2dySz3X063j+Zrm5Hn1dcIsnUUnyPPFyf3a4l
f8U5/4mR7frj+CNmzcPOmI/6hwPg/C6eMr7DfniZ7Wa9Y2sN48h4D0u1MpvN
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
86Iy+3u2F8CJMnYBnCaDFMA5MqFt7tgrEzQsrgxWACfJlFgFcJIMVgAnyVRp
LoD7yCAcYrhoGRkrgNfPBpd54UwzVADnyIAFcI4MWABnbdPx6HFuc8eWCRoW
f2WgAjhzm8wCOEcGLIBzZMACuJ+MyeHLTbyMjBTA62eDy7yoDFYA58iABXCO
DFgAJ21T5dhxbnPHlgkalmBlkAI4c5vMAjhLBiqAc2TAArifjMlJDBctI2MF
8PPZnMq83plmyRyHAQXwC10Zr2FpVgYqgF/gNoEFcI4MWAB3lTH5VjFcyUhG
MpK5KBmAbxXDlYxkJCOZi5IRQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEII
IYQQoisOMdz8H4AYcQ5QAD+fzanM6yCT2QVwlgxUAGfJQAVwlsz+jq0FcI6M
d5s71cp4DYsvAxfAGTIlQAGcJoMUwP1kDCoxXDBGDBbAz2f7f5cyLyqDFcAZ
MnABnCEDF8BJ21RiFcA5Mt5t7iQr4zssvgxcAOesDFgAp8igBXAfGZNKDBeL
EaMF8PrZ4DIvWEYGC+AMGbgAzpCBC+CkbcqgAjhHJqjNHVsmaFhsGbAATpFB
C+AMGbgA7iNjcvjVqWCMGCyAN80GlnnhMnKJUQBnyUAFcO7KFDLNBXCijF0A
Z8kEtbnjygQOS3XMtBbASTJYAZwjAxbA/WRMDjFcMEYMFsCbZgPLvGgZucRq
F1JlCloK4EwZswBOk0EK4CSZsDZ3XJnAYYkO4PYCOEsGKoBzZMACuJ9MO9UY
LhgjBgvgTbOBZV60jPxpYZ2imTKZUQAnytgFcI4MWAAnrUxYmzuuTOCwNAew
UQCnySAFcI4MWAD3kLH4EsMFY8RgAbx5NqjM61ZGxk7RJBmrAE6VyYwCOEUG
LYCTV6aYwKPNHVMmeFiClbEK4BwZsABOWxmkAO4uY1ON4YIxYrAA3jQbWOaF
y8jlPY0COE8GKICzZKACOEUGLYCzViaozR1XJnBYimeTWQDnyIAFcOp5pnzE
5gK4hwzCIYYLxojBAnj9bHCZF5XBCuAcGbAAzpEBC+CsbToePS0FcI5MUJs7
/soEDEuzTWYBnCMDFsA5MmAB3E/G5PDlZobFiLMMKoDXzwaXeVEZrADOkQEL
4BwZsABO2qYjbQVwjkxQmzvByvgPS7NNZgGcJQMVwDkyYAHcT8bkJIabYTFi
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
JoQQQgghhBBCCPED8Ve16mFQ
            "], {{0, 196}, {481, 0}}, {0, 255},
            ColorFunction->RGBColor],
           BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
           Selectable->False],
          DefaultBaseStyle->"ImageGraphics",
          ImageSize->Magnification[1],
          ImageSizeRaw->{481, 196},
          PlotRange->{{0, 481}, {0, 196}}]], "ExerciseOutput",
         ImageSize->{485, 196},
         ImageMargins->{{0, 0}, {0, 0}},
         ImageRegion->{{0, 1}, {0, 1}},
         Magnification->1],
        Apply[TextCell, 
         Cell[
          BoxData[
           GraphicsBox[
            TagBox[
             RasterBox[CompressedData["
1:eJztnb9vOtl+hrlJc8v8C/kHXKelvJWlG6Vzc6+yvkqzsfZGitzSUUXu6Fy5
cuXKFY2VAiVCV6IIDQUbyQ2RXJCCgmIuM2NgDDPzec+vd6wv7yPtit09HJ7v
OcMAg9fP3//xX39/+ze9Xu/Pv9397fd/+Pf+L7/84f4f/273D//085//5U8/
//TPv/v5337600+//MMf/3b3L/9z99evv+n18tuZEEIIIYQQQgghhBBCCMHg
43V4e3V1N9uc3N6xXsxmy/W2/f7L6fj56Xk8XVoPVJ1t/XTb798MJquWyX1k
vIalkVm/T15fnp9fJvNV9zKb1WT88vzyOpm/dy+zv+N8Ol1+bDqV2b7PZ0fm
y1YbxspsP5Zvr/lOzVddrsxmtZx9Zdnmw1iZ99lk93TaHcHt60KRWU/Hucvu
8DVcnGXqppiNer3e7fDlffvl9uL5vlcwnLRpTEc3+aCr/G83j9OmYWezbeev
j7t7Xg0niBgo4zssvszH7LlYknJhenfP8w5ltu/j64rM9fCt6RDhbFPJ5CGX
apmZIrN+KBflk/503aFMtp4/VW2eGs5GBJnZQ7/3lauH+mc3ZWU242Hu078u
rO5ems7SDJntsnDpXRVHzv1r41tTD5l6w+lDr/ewObu9HD8N7vIn0WjabLue
7GSvR/neTfI9vZ41rF3tbPPH693GN83uLBM2LK7M4mm3FcPiDevupTPfpaZ3
0gSZ7ftr/2qwKM7LxaHenzSciDjbtGOzeC6P3vLg6U5mPer3rh9nu0UqaBxH
kfkozov3i+Lz7PNw1PR+kSKz3W4+V2S2m7l33fTixZApzjODcf58+pjs7nvV
4QH8Ps5PvM/502n7cr87Td81naM9ZGrZzHLD9dntcr7dAzw0226KF6BxefZ5
f+3lgxvWrm622e7pcTVquoOrTOCw2DLrj/1npY/JsOWsSJE58vE2+AYy78Pd
od2/ubnq9Rvem7FkVru9Gc3BD55pZbbvL8U7rra9oclUtOa7dxs3T40fAxky
6+nuFH3/VgzYzvrNp2iCzHT3Ono4xxYnvcd5tJNeLfn7vf0jVm8X9vnKtNgu
nm+P7w+3i9v2U/TZbPPi4Zru4CoTOCyJTEG+p71B2yVgisx69T57e84vS90+
tR0h6WVm+ae93uvy/em68eMzSWY9La623Nzd3g4enubtFwkTyxRv567f5rtP
w4+PT6/zjy5lDizz5/jtov1FLLnMqrhAcDueLyePO5/7ZYtPYpni6Tz8/M8f
b4a5o8w5H4vx3e7tTHFtpHrbwfb4irB57Pf6oxluuy0+7Q5fat7EeMgEDksi
k1+4eilOiq1vQhgy+Sf6EmNkYplyQe5f85es4oDpdGW2i0H/6nb4+Pr6dJtf
WrxuvSCaVqa8KJofLfeDm1ymP275npl0AC93n+qLC0GtpJdZvtwdropfPy06
lNksnopX9cFoNCi/xxi5vC9tkallWFz2HucTfFRuo7b5u+jjC9By94cduryg
7P7VqPhDvp3+EX1kgoclkPmY5O8Xb1rftdJkdofHZvX6kBu9tLwLSSuzfiy+
ubwbPjw8DK7Lq9Hj5p8FYq1MMcHbVfv3RIllylP0fmsWd+3nRs7KFB/knxbW
z1AkltnMH3ON2Wq7XjzdX3d6ABd3W7w9DO7vB6O3yUs/2kmvnu3HPH8lGIxP
bu//8yy/kDJrnGsz3x1UV+Ulomw1zl9Qmgefz1au/OOk5hqAh0zgsPgyq0n+
PWH/wfyRu/Qym01lcN/4wjqpzObtafQwGj3kDK+LN66Pb82n6OQrU/mGsPhO
qu3pllim+GZn/2zafeq5ar0KRHk2LV93b6Jvmn4GgCYzfbjq9R/3O5WfV9u+
wuCcZ8qZ82tTvfxnQWLINLHIL0/ur0Ufb28Ws9nsLZ/t/ultPpu9b/IvDu53
SzV4rTzf8+vPu4/xy9Uyv0RUfrl5Pqx2ts+rQKNN/V3cZUKGxZbZvI9vyg9B
4+lsOp1MJouPbVcyr7s3ZFf34/n7x2r5Mrz+fF/U2TYdj57jlbGOZPJPz/3B
ZPG+Wk6LjxdXr++dbdPuPesg/8w1mq9W0+LntfLvoTrdpq9XMjvbptV4UFwc
mH2s14u3/LPGcLLqSma7eru7GbzNl4vpc/5cunvZxluZWup/omMzve59If8e
cDMrjuIv17rX8+f9Nc7+y2JdznI6rHa26pebdTM7y4QMiy0zG52MKt64diSz
eZ+WFzcLrh5eF11uU+XY2f/AW2cy6+Xb/XFc/3Gy6nZltvtX9l7+vJ52vk35
YdyvnKI7k9m+jW4PY25HxQ/2dySz3X063j+Zrm5Hn1dcIsnUUnyPPFyf3a4l
f8U5/4mR7frj+CNmzcPOmI/6hwPg/C6eMr7DfniZ7Wa9Y2sN48h4D0u1MpvN
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
86Iy+3u2F8CJMnYBnCaDFMA5MqFt7tgrEzQsrgxWACfJlFgFcJIMVgAnyVRp
LoD7yCAcYrhoGRkrgNfPBpd54UwzVADnyIAFcI4MWABnbdPx6HFuc8eWCRoW
f2WgAjhzm8wCOEcGLIBzZMACuJ+MyeHLTbyMjBTA62eDy7yoDFYA58iABXCO
DFgAJ21T5dhxbnPHlgkalmBlkAI4c5vMAjhLBiqAc2TAArifjMlJDBctI2MF
8PPZnMq83plmyRyHAQXwC10Zr2FpVgYqgF/gNoEFcI4MWAB3lTH5VjFcyUhG
MpK5KBmAbxXDlYxkJCOZi5IRQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEII
IYQQoisOMdz8H4AYcQ5QAD+fzanM6yCT2QVwlgxUAGfJQAVwlsz+jq0FcI6M
d5s71cp4DYsvAxfAGTIlQAGcJoMUwP1kDCoxXDBGDBbAz2f7f5cyLyqDFcAZ
MnABnCEDF8BJ21RiFcA5Mt5t7iQr4zssvgxcAOesDFgAp8igBXAfGZNKDBeL
EaMF8PrZ4DIvWEYGC+AMGbgAzpCBC+CkbcqgAjhHJqjNHVsmaFhsGbAATpFB
C+AMGbgA7iNjcvjVqWCMGCyAN80GlnnhMnKJUQBnyUAFcO7KFDLNBXCijF0A
Z8kEtbnjygQOS3XMtBbASTJYAZwjAxbA/WRMDjFcMEYMFsCbZgPLvGgZucRq
F1JlCloK4EwZswBOk0EK4CSZsDZ3XJnAYYkO4PYCOEsGKoBzZMACuJ9MO9UY
LhgjBgvgTbOBZV60jPxpYZ2imTKZUQAnytgFcI4MWAAnrUxYmzuuTOCwNAew
UQCnySAFcI4MWAD3kLH4EsMFY8RgAbx5NqjM61ZGxk7RJBmrAE6VyYwCOEUG
LYCTV6aYwKPNHVMmeFiClbEK4BwZsABOWxmkAO4uY1ON4YIxYrAA3jQbWOaF
y8jlPY0COE8GKICzZKACOEUGLYCzViaozR1XJnBYimeTWQDnyIAFcOp5pnzE
5gK4hwzCIYYLxojBAnj9bHCZF5XBCuAcGbAAzpEBC+CsbToePS0FcI5MUJs7
/soEDEuzTWYBnCMDFsA5MmAB3E/G5PDlZobFiLMMKoDXzwaXeVEZrADOkQEL
4BwZsABO2qYjbQVwjkxQmzvByvgPS7NNZgGcJQMVwDkyYAHcT8bkJIabYTFi
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
JoQQQgghhBBCCPED8Ve16mFQ
              "], {{0, 196}, {481, 0}}, {0, 255}, 
              ColorFunction -> RGBColor], 
             BoxForm`ImageTag[
             "Byte", ColorSpace -> "RGB", Interleaving -> True], Selectable -> 
             False], DefaultBaseStyle -> "ImageGraphics", ImageSize -> 
            Magnification[1], ImageSizeRaw -> {481, 196}, 
            PlotRange -> {{0, 481}, {0, 196}}]], "ExerciseOutput", 
          Magnification -> 1, CellFrameColor -> GrayLevel[0], Selectable -> 
          False, Copyable -> False, Editable -> False, ShowCellBracket -> 
          False, CellLabel -> "Out[]=", CellFrame -> False]]],
       FrameMargins->{{10, 0}, {10, 12}},
       ImageMargins->0,
       ImageSize->Full], 
      ButtonBox[
       PaneBox[
        StyleBox["\[Times]",
         FontFamily->"MathematicaMono",
         FontSize->18,
         FontWeight->"Bold",
         FontColor->GrayLevel[0.75]],
        Alignment->Right,
        FrameMargins->{{0, 6}, {0, 0}},
        ImageMargins->0],
       Appearance->None,
       ButtonFunction:>(SelectionMove[
          ButtonNotebook[], All, ButtonCell, AutoScroll -> False]; 
        NotebookFind[
          EvaluationNotebook[], "Exercise", Previous, CellStyle, WrapAround -> 
          False, AutoScroll -> False]; FrontEndExecute[
          FrontEndToken[
           ButtonNotebook[], "OpenCloseGroup"]])]}
    },
    GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {Top}},
    GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
   "Grid"],
  FrameMargins->0,
  FrameStyle->GrayLevel[0.7],
  StripOnInput->False]], "ExerciseOutput",
 Editable->False,
 Selectable->False,
 Deletable->False,
 CellFrame->{{1, 1}, {1, 1}},
 ShowCellBracket->False,
 CellFrameMargins->{{0, 0}, {0, 0}},
 CellFrameColor->GrayLevel[1],
 LineBreakWithin->Automatic]
}, Closed]],

Cell[CellGroupData[{

Cell[BoxData[
 StyleBox[
  DynamicBox[ToBoxes[
    $CellContext`SolutionResponseText["32.8"], StandardForm],
   ImageSizeCache->{140., {3., 9.}}], "SolutionResponseText"]], "Subsection",
 Editable->False,
 Selectable->False,
 Deletable->False,
 ShowCellBracket->False,
 CellMargins->{{24, 25}, {3, 0}},
 CellFrameMargins->{{8, 0}, {0, 0}},
 TextAlignment->Right,
 ShowStringCharacters->False,
 FontFamily->"Source Sans Pro",
 FontSize->12,
 FontWeight->"Plain",
 FontSlant->"Plain",
 Background->GrayLevel[1]],

Cell[BoxData[
 ButtonBox[
  PaneBox[
   StyleBox[
    RowBox[{"[", " ", 
     RowBox[{"Click", " ", "to", " ", "enter", " ", "code"}], " ", "]"}],
    Selectable->False,
    StripOnInput->False,
    FontFamily->"Source Sans Pro",
    FontSize->14,
    FontWeight->Plain,
    FontColor->GrayLevel[0.6]],
   ImageSize->Full],
  Appearance->None,
  ButtonFunction:>(SelectionMove[
     InputNotebook[], All, ButtonCell]; NotebookWrite[
     InputNotebook[], 
     Cell[
      BoxData[""], "Input"]]; SelectionMove[
     InputNotebook[], Before, CellContents]; Null),
  Evaluator->Automatic,
  Method->"Preemptive"]], "Input",
 CellFrameLabels->{{None, None}, {None, None}},
 ShowSyntaxStyles->False,
 ShowStringCharacters->False,
 CellTags->"FirstInputCell"]
}, Open  ]]
}, Open  ]],

Cell[BoxData[
 PaneBox["\[ThickSpace]",
  ImageSize->Full]], "CodeSectionDividerCloud",
 Editable->False,
 Selectable->False,
 Deletable->False,
 CellMargins->{{0, 0}, {0, 35}},
 CellBracketOptions->{"OverlapContent"->True}]
},
WindowSize->{808, 911},
WindowMargins->{{554, Automatic}, {Automatic, 62}},
WindowTitle->"Patrones: Una introducci\[OAcute]n elemental a Wolfram Language",
DockedCells->{
  Cell[
   BoxData[
    DynamicModuleBox[{}, 
     TagBox[
      GridBox[{{
         TagBox[
          ButtonBox[
           PaneBox[
            GraphicsBox[
             TagBox[
              RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFAEiEGSIPafvQ3/iQM/qxmAiEjFmOohXKwIouDvuQXEGw4xENM6POaT5Hiq
qP97c+uvfvWfDVy/59j/ahX5Pdfx3/sHuNSDFE/UBpI/G3l+TTP9vS7p7+nZ
QBG4FjT1QJOBin+vCAcpaxcHWgEU/HOk7/ciHzzqgSYD2b/XJQO5UPFueezq
J+sDFf/qVQY64PeSgN8b0n5NMfz34DAu9T+beIFm/upV+jXF4PcC9z87K4C6
fk3SwaUeGBq/18QDDQQ5e2f5rw6pP0f7gd4BCmJVD3QG0HygBxHO61UG6sIV
nhAtwNAAOgCEgOEPMxmXevyAEvV4EidaQiU+P0IAAEIjNUM=
               "], {{0, 
               20}, {16, 0}}, {0, 255}, ColorFunction -> RGBColor], 
              BoxForm`ImageTag[
              "Byte", ColorSpace -> ColorProfileData[CompressedData["
1:eJydlndcFNcWx+/MbC+0XZYiZem9twVEehOQXkVh2V1gKQsuuxTFhogKRBQR
EWwgQQEDRkORWBHFQkCw14AEASUGo9hQyax8PokvL++9vPz+uJ/vnHvOnXvP
OXc+o5GQEZIIAwCyCOgQws5xFQrZeaEy6EO4IIufJOBxfQUiXhJPyEqAUKMP
BR0AxcefL8iAUa90gUgY4u3GjIqOYeL7AQyIAAcsAGBzsjIDQr3CJN6+nu7M
LNQJ/Ite3wKSBcF1E58gJhP8f5LlZApFAEBBKFtxeVkclAtRTssRZUrs0yjT
E1IlDGMkLEQ3iLKihJPm2fizzzy7SJibLuCiLNlzJjedK+EelDdni3koI/4o
F2XzeTko30BZO02czkf5rSQ2ncfOAgAjyY62iMdJRtlckihhWIg7ygsBIFCS
vuCEL1jEyxVJDuWekZkn5Ccli5j6HAOmhb09i+nDy0njiUQmQWxOKlvIZbpn
pGeyBXkAzJ/5s+QkuWWiSba1sLe1NbE0tfgiUf918m9KUtt5ehn8uWYQo+8P
21/5ZdQBwJpBc7PtD1vCbgA6NgKgeO8Pm/YBAKTRurUPfHEehqRfkkWiTAcz
s5ycHFM+j2MqSejv+p8Of0NfvM9Ustzv6WF68BLZ4jQRU5I3TkZahljIzMpk
c3hMkz838T8O/Ot9GIfwEnlCngCNiEC7jC9IQsst4PJF/AwBky/4T0X8h2F/
0nxfo6LVfwL0OFMgM0AHyM99AEMjAyR2HzoD/V43f2IEkNy8SPXx+b7/LOjf
V4XLJAP6Gfkc5x4SxuSIhdnzc5JrCbCABKQBHSgBNaAF9IEJsAR2wBG4AE+w
GASCMBANlgMOSAbpQAhyQD5YD4pACdgGdoJqsB/Ug0bQAo6BDnASnAMXwVVw
DdwE98EwGAPPwDR4DWYhCMJDVIgGKUHqkA5kBFlCLGgR5An5QyFQNBQPJUEC
SAzlQxugEqgcqoZqoUboW+gEdA66DA1Cd6ERaBL6FXoPIzAFpsOqsC5sBrNg
V9gPDoOXwUnwCnglXAhvhavgOvgI3A6fg6/CN+Fh+Bk8gwCEjDAQDcQEYSHu
SCASgyQiQmQNUoxUInVIC9KF9CLXkWFkCnmHwWFoGCbGBOOI8cGEYziYFZg1
mFJMNeYwph3Tg7mOGcFMYz5hqVgVrBHWAeuLjcImYXOwRdhKbAO2DXsBexM7
hn2Nw+EYOD2cHc4HF41Lwa3CleL24lpxZ3GDuFHcDB6PV8Ib4Z3wgXg2XoQv
wu/GH8GfwQ/hx/BvCWSCOsGS4EWIIQgIBYRKQhPhNGGIME6YJcoQdYgOxEAi
l5hHLCPWE7uIA8Qx4ixJlqRHciKFkVJI60lVpBbSBdID0ksymaxJticHk/nk
deQq8lHyJfII+R1FjmJIcafEUsSUrZRDlLOUu5SXVCpVl+pCjaGKqFupjdTz
1EfUt1I0KVMpXymu1FqpGql2qSGp59JEaR1pV+nl0iulK6WPSw9IT8kQZXRl
3GXYMmtkamROyNyWmZGlyVrIBsqmy5bKNslelp2Qw8vpynnKceUK5Q7KnZcb
pSE0LZo7jUPbQKunXaCN0XF0PbovPYVeQv+G3k+flpeTt5aPkM+Vr5E/JT/M
QBi6DF9GGqOMcYxxi/FeQVXBVYGnsEWhRWFI4Y3iAkUXRZ5isWKr4k3F90pM
JU+lVKXtSh1KD5UxyobKwco5yvuULyhPLaAvcFzAWVC84NiCeyqwiqFKiMoq
lYMqfSozqmqq3qqZqrtVz6tOqTHUXNRS1CrUTqtNqtPUF6nz1SvUz6g/Zcoz
XZlpzCpmD3NaQ0XDR0OsUavRrzGrqacZrlmg2ar5UIukxdJK1KrQ6taa1lbX
DtDO127WvqdD1GHpJOvs0unVeaOrpxupu0m3Q3dCT1HPV2+lXrPeA32qvrP+
Cv06/RsGOAOWQarBXoNrhrChjWGyYY3hgBFsZGvEN9prNGiMNbY3FhjXGd82
oZi4mmSbNJuMmDJM/U0LTDtMn5tpm8WYbTfrNftkbmOeZl5vft9CzmKxRYFF
l8WvloaWHMsayxtWVCsvq7VWnVYvrI2sedb7rO/Y0GwCbDbZdNt8tLWzFdq2
2E7aadvF2+2xu82is4JYpaxL9lh7N/u19ift3znYOogcjjn84mjimOrY5Dix
UG8hb2H9wlEnTSe2U63T8CLmovhFBxYNO2s4s53rnB+7aLlwXRpcxl0NXFNc
j7g+dzN3E7q1ub1xd3Bf7X7WA/Hw9ij26PeU8wz3rPZ85KXpleTV7DXtbeO9
yvusD9bHz2e7z21fVV+Ob6Pv9GK7xasX9/hR/EL9qv0e+xv6C/27AuCAxQE7
Ah4s0VkiWNIRCAJ9A3cEPgzSC1oR9H0wLjgouCb4SYhFSH5IbygtNC60KfR1
mFtYWdj9cP1wcXh3hHREbERjxJtIj8jyyOEos6jVUVejlaP50Z0x+JiImIaY
maWeS3cuHYu1iS2KvbVMb1nussvLlZenLT8VJx3Hjjsej42PjG+K/8AOZNex
ZxJ8E/YkTHPcObs4z7gu3AruJM+JV84bT3RKLE+cSHJK2pE0meycXJk8xXfn
V/NfpPik7E95kxqYeih1Li0yrTWdkB6ffkIgJ0gV9GSoZeRmDGYaZRZlDq9w
WLFzxbTQT9iQBWUty+oU0dGfqT6xvnijeCR7UXZN9tuciJzjubK5gty+PMO8
LXnjK71Wfr0Ks4qzqjtfI399/shq19W1a6A1CWu612qtLVw7ts573eH1pPWp
638oMC8oL3i1IXJDV6Fq4brC0Y3eG5uLpIqERbc3OW7avxmzmb+5f4vVlt1b
PhVzi6+UmJdUlnwo5ZRe+criq6qv5rYmbu0vsy3btw23TbDt1nbn7YfLZctX
lo/uCNjRXsGsKK54tTNu5+VK68r9u0i7xLuGq/yrOndr7962+0N1cvXNGrea
1j0qe7bsebOXu3don8u+lv2q+0v2vz/AP3Cn1ru2vU63rvIg7mD2wSf1EfW9
X7O+bmxQbihp+HhIcGj4cMjhnka7xsYmlaayZrhZ3Dx5JPbItW88vulsMWmp
bWW0lhwFR8VHn34b/+2tY37Huo+zjrd8p/PdnjZaW3E71J7XPt2R3DHcGd05
eGLxie4ux662702/P3RS42TNKflTZadJpwtPz51ZeWbmbObZqXNJ50a747rv
n486f6MnuKf/gt+FSxe9Lp7vde09c8np0snLDpdPXGFd6bhqe7W9z6av7Qeb
H9r6bfvbB+wGOq/ZX+saXDh4esh56Nx1j+sXb/jeuHpzyc3BW+G37tyOvT18
h3tn4m7a3Rf3su/N3l/3APug+KHMw8pHKo/qfjT4sXXYdvjUiMdI3+PQx/dH
OaPPfsr66cNY4RPqk8px9fHGCcuJk5Nek9eeLn069izz2exU0c+yP+95rv/8
u19cfumbjpoeeyF8Mfdr6Uull4deWb/qngmaefQ6/fXsm+K3Sm8Pv2O9630f
+X58NucD/kPVR4OPXZ/8Pj2YS5+b+w0AsgC3
                 "], "RGB", "XYZ"], 
               Interleaving -> True], Selectable -> False], DefaultBaseStyle -> 
             "ImageGraphics", ImageSizeRaw -> {16, 20}, 
             PlotRange -> {{0, 16}, {0, 20}}], Alignment -> {Center, Center}, 
            ImageMargins -> {{15, 10}, {4, 0}}], Appearance -> None, 
           ButtonFunction :> NotebookLocate[{
              URL[
               StringJoin[
               ElementaryIntroToWLWeb`Private`baseUrl$73740, "index", 
                ElementaryIntroToWLWeb`Private`langext$73740, ".html"]], 
              None}], Evaluator -> Automatic, Method -> "Preemptive"], 
          MouseAppearanceTag["LinkHand"]], 
         ItemBox[
          TagBox[
           GridBox[{{
              TagBox[
               ButtonBox[
                StyleBox[
                 StringJoin["STEPHEN WOLFRAM\[NonBreakingSpace]", 
                  ElementaryIntroToWLWeb`Private`translation[
                  "Elementary Introduction to the Wolfram Language", 
                   ElementaryIntroToWLWeb`Private`language$73740]], 
                 "DockedCellAuthorName"], Appearance -> None, ButtonFunction :> 
                NotebookLocate[{
                   URL[
                    StringJoin[
                    ElementaryIntroToWLWeb`Private`baseUrl$73740, "index", 
                    ElementaryIntroToWLWeb`Private`langext$73740, ".html"]], 
                   None}], Evaluator -> Automatic, Method -> "Preemptive"], 
               MouseAppearanceTag["LinkHand"]]}, {
              TagBox[
               ButtonBox[
                TemplateBox[{
                  StyleBox["Exercises ", "DockedCellSectionTitle"], 
                  StyleBox["|", "DockedCellSectionTitleDivider"], 
                  StyleBox[" 32  Patrones", "DockedCellSectionTitle"]}, 
                 "RowDefault"], Appearance -> None, ButtonFunction :> 
                NotebookLocate[{
                   URL[
                   "http://www.wolfram.com/language/elementary-introduction/\
32-patterns.html"], None}], Evaluator -> Automatic, Method -> "Preemptive"], 
               MouseAppearanceTag["LinkHand"]]}}, DefaultBaseStyle -> 
            "Column", GridBoxAlignment -> {"Columns" -> {{Left}}}, 
            GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{0}}}], 
           "Column"], Alignment -> Left, ItemSize -> 30]}}, AutoDelete -> 
       False, GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{0}}}, 
       GridBoxAlignment -> {"Columns" -> {Left}, "Rows" -> {Center}}, 
       GridBoxItemSize -> {
        "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Grid"], 
     DynamicModuleValues :> {}, 
     Initialization :> (
      Clear[$CellContext`SolutionResponseText]; \
$CellContext`SolutionResponseText[
         Pattern[ElementaryIntroToWLWeb`Private`a, 
          BlankNullSequence[]]] := " "; 
      Map[($CellContext`SolutionResponseText[#] := " ")& , {
        "32.1", "32.2", "32.3", "32.4", "32.5", "32.6", "32.7", "32.8"}]; 
      Clear[$CellContext`SolutionResponseDetails]; \
$CellContext`SolutionResponseDetails[
         Pattern[ElementaryIntroToWLWeb`Private`str, 
          Blank[String]], True] := 
       Style[ElementaryIntroToWLWeb`Private`str, 
         "SolutionTrue"]; $CellContext`SolutionResponseDetails[
         Pattern[ElementaryIntroToWLWeb`Private`str, 
          Blank[String]], False] := 
       Style[ElementaryIntroToWLWeb`Private`str, 
         "SolutionFalse"]; $CellContext`SolutionResponseDetails[
         Pattern[ElementaryIntroToWLWeb`Private`str, 
          Blank[String]]] := 
       ElementaryIntroToWLWeb`Private`str; \
$CellContext`SolutionResponseDetails[
         Missing[
          BlankSequence[]]] := " "; $CellContext`SolutionResponseDetails[
         BlankNullSequence[]] := " "; 
      Clear[$CellContext`GetUserSolutions]; $CellContext`GetUserSolutions[] := 
       Flatten[
         Cases[
          Options[
           EvaluationNotebook[], TaggingRules], ("EIWLExercises" -> 
           Pattern[ElementaryIntroToWLWeb`Private`ex, 
             Blank[]]) :> ElementaryIntroToWLWeb`Private`ex, Infinity]]; 
      Clear[$CellContext`GetUserSolutionsTotal]; \
$CellContext`GetUserSolutionsTotal[] := Length[
         Union[
          Flatten[
           Cases[
            Cases[
             Options[
              EvaluationNotebook[], TaggingRules], ("EIWLExercises" -> 
              Pattern[ElementaryIntroToWLWeb`Private`ex, 
                Blank[]]) :> ElementaryIntroToWLWeb`Private`ex, Infinity], (
             "ExercisesTotal" -> Pattern[ElementaryIntroToWLWeb`Private`t, 
               Blank[]]) :> ElementaryIntroToWLWeb`Private`t, Infinity]]]]; 
      Clear[$CellContext`GetUserSolutionsTried]; \
$CellContext`GetUserSolutionsTried[] := Length[
         Union[
          Flatten[
           Cases[
            Cases[
             Options[
              EvaluationNotebook[], TaggingRules], ("EIWLExercises" -> 
              Pattern[ElementaryIntroToWLWeb`Private`ex, 
                Blank[]]) :> ElementaryIntroToWLWeb`Private`ex, Infinity], (
             "ExercisesTried" -> Pattern[ElementaryIntroToWLWeb`Private`t, 
               Blank[]]) :> ElementaryIntroToWLWeb`Private`t, Infinity]]]]; 
      Clear[$CellContext`GetUserSolutionsCorrect]; \
$CellContext`GetUserSolutionsCorrect[] := Length[
         Union[
          Flatten[
           Cases[
            Cases[
             Options[
              EvaluationNotebook[], TaggingRules], ("EIWLExercises" -> 
              Pattern[ElementaryIntroToWLWeb`Private`ex, 
                Blank[]]) :> ElementaryIntroToWLWeb`Private`ex, Infinity], (
             "ExercisesCorrect" -> Pattern[ElementaryIntroToWLWeb`Private`t, 
               Blank[]]) :> ElementaryIntroToWLWeb`Private`t, 
            Infinity]]]]; $CellContext`EIWLExerciseSolutionsTotal = \
$CellContext`GetUserSolutionsTotal[]; $CellContext`EIWLExerciseSolutionsTried = \
$CellContext`GetUserSolutionsTried[]; \
$CellContext`EIWLExerciseSolutionsCorrect = \
$CellContext`GetUserSolutionsCorrect[]; 
      Clear[$CellContext`SetUserSolutionsTried]; \
$CellContext`SetUserSolutionsTried[
         Pattern[ElementaryIntroToWLWeb`Private`value, 
          Blank[]]] := 
       Module[{ElementaryIntroToWLWeb`Private`data, 
          ElementaryIntroToWLWeb`Private`tr}, 
         ElementaryIntroToWLWeb`Private`data = Flatten[
            Cases[
             Options[
              EvaluationNotebook[], TaggingRules], ("EIWLExercises" -> 
              Pattern[ElementaryIntroToWLWeb`Private`ex, 
                Blank[]]) :> ElementaryIntroToWLWeb`Private`ex, Infinity]]; 
         ElementaryIntroToWLWeb`Private`tr = ReplaceAll[TaggingRules, 
            Options[
             EvaluationNotebook[], TaggingRules]]; 
         ElementaryIntroToWLWeb`Private`tr = 
          DeleteCases[
           ElementaryIntroToWLWeb`Private`tr, "EIWLExercises" -> Blank[], 
            Infinity]; 
         AppendTo[
          ElementaryIntroToWLWeb`Private`tr, 
           "EIWLExercises" -> {
            "ExercisesTotal" -> 
             ReplaceAll[
              "ExercisesTotal", ElementaryIntroToWLWeb`Private`data], 
             "ExercisesTried" -> Append[
               Flatten[
                Cases[
                ElementaryIntroToWLWeb`Private`data, ("ExercisesTried" -> 
                  Pattern[ElementaryIntroToWLWeb`Private`t, 
                    Blank[]]) :> ElementaryIntroToWLWeb`Private`t, Infinity]],
                ElementaryIntroToWLWeb`Private`value], "ExercisesCorrect" -> 
             ReplaceAll[
              "ExercisesCorrect", ElementaryIntroToWLWeb`Private`data]}]; 
         SetOptions[
           EvaluationNotebook[], TaggingRules -> 
           ElementaryIntroToWLWeb`Private`tr]; \
$CellContext`EIWLExerciseSolutionsTried = \
$CellContext`GetUserSolutionsTried[]; Null]; 
      Clear[$CellContext`SetUserSolutionsCorrect]; \
$CellContext`SetUserSolutionsCorrect[
         Pattern[ElementaryIntroToWLWeb`Private`value, 
          Blank[]]] := 
       Module[{ElementaryIntroToWLWeb`Private`data, 
          ElementaryIntroToWLWeb`Private`tr}, 
         ElementaryIntroToWLWeb`Private`data = Flatten[
            Cases[
             Options[
              EvaluationNotebook[], TaggingRules], ("EIWLExercises" -> 
              Pattern[ElementaryIntroToWLWeb`Private`ex, 
                Blank[]]) :> ElementaryIntroToWLWeb`Private`ex, Infinity]]; 
         ElementaryIntroToWLWeb`Private`tr = ReplaceAll[TaggingRules, 
            Options[
             EvaluationNotebook[], TaggingRules]]; 
         ElementaryIntroToWLWeb`Private`tr = 
          DeleteCases[
           ElementaryIntroToWLWeb`Private`tr, "EIWLExercises" -> Blank[], 
            Infinity]; 
         AppendTo[
          ElementaryIntroToWLWeb`Private`tr, 
           "EIWLExercises" -> {
            "ExercisesTotal" -> 
             ReplaceAll[
              "ExercisesTotal", ElementaryIntroToWLWeb`Private`data], 
             "ExercisesTried" -> 
             ReplaceAll[
              "ExercisesTried", ElementaryIntroToWLWeb`Private`data], 
             "ExercisesCorrect" -> Append[
               Flatten[
                Cases[
                ElementaryIntroToWLWeb`Private`data, ("ExercisesCorrect" -> 
                  Pattern[ElementaryIntroToWLWeb`Private`t, 
                    Blank[]]) :> ElementaryIntroToWLWeb`Private`t, Infinity]],
                ElementaryIntroToWLWeb`Private`value]}]; SetOptions[
           EvaluationNotebook[], TaggingRules -> 
           ElementaryIntroToWLWeb`Private`tr]; \
$CellContext`EIWLExerciseSolutionsCorrect = \
$CellContext`GetUserSolutionsCorrect[]; Null]; 
      Clear[ElementaryIntroToWLWeb`Private`GetCurrentTallyCell]; \
$CellContext`GetCurrentTallyCell[] := Module[{}, 
         With[{
          ElementaryIntroToWLWeb`Private`solutionsTried = \
$CellContext`GetUserSolutionsTried[], 
           ElementaryIntroToWLWeb`Private`solutionsTotal = \
$CellContext`GetUserSolutionsTotal[], 
           ElementaryIntroToWLWeb`Private`solutionsCorrect = \
$CellContext`GetUserSolutionsCorrect[]}, 
          Cell[
           BoxData[
            PaneBox[
             TemplateBox[{
               StyleBox[
               "COMPLETED\[ThickSpace]\[ThickSpace]", 
                "DockedCellCompletedExerciseText"], 
               StyleBox[
               ElementaryIntroToWLWeb`Private`solutionsTried, 
                "DockedCellCompletedExerciseText"], 
               StyleBox["/", "DockedCellSolutionDivider"], 
               StyleBox[
               ElementaryIntroToWLWeb`Private`solutionsTotal, 
                "DockedCellCompletedExerciseText"], 
               StyleBox[
               "\[ThinSpace]|\[ThinSpace]", "DockedCellSolutionDivider"], 
               StyleBox[
               ElementaryIntroToWLWeb`Private`solutionsCorrect, 
                "DockedCellCorrectExerciseText"], 
               StyleBox[
               "\[ThickSpace]\[ThickSpace]CORRECT", 
                "DockedCellCorrectExerciseText"]}, "RowDefault"], Alignment -> 
             Right, ImageSize -> Full]], "Output", TextAlignment -> Right, 
           CellFrame -> 1, CellMargins -> {{0, 0}, {10, 0}}, 
           CellFrameMargins -> {{14, 24}, {4, 7}}, CellFrameColor -> 
           RGBColor[1, 0.956862, 0.878431], MenuSortingValue -> 10000, 
           Background -> RGBColor[1, 0.956862, 0.878431], CellTags -> 
           "SolutionTallyCell"]]])]], "Output", CellMargins -> 0, 
   CellFrameMargins -> {{0, 24}, {3, 6}}, Background -> 
   RGBColor[0.97647, 0.482352, 0], CellFrame -> 1, CellFrameColor -> 
   RGBColor[0.97647, 0.482352, 0]], 
  Cell["SECOND EDITION", "Text", FontFamily -> "Source Sans Pro", 
   CellFrame -> {{0, 0}, {3, 0}}, ShowCellBracket -> False, 
   CellMargins -> {{0, 0}, {-1, -1}}, CellFrameMargins -> {{44, 0}, {2, 4}}, 
   CellFrameColor -> RGBColor[0.952941, 0.509804, 0], FontSize -> 10, 
   FontTracking -> "Extended", FontColor -> RGBColor[1, 0.929412, 0.721569], 
   Background -> RGBColor[0.862745, 0.309804, 0], CellTags -> 
   "DockedCellLogoCell"]},
TaggingRules->{
 "EIWLExercises" -> {
   "ExercisesTotal" -> {
     "32.1", "32.2", "32.3", "32.4", "32.5", "32.6", "32.7", "32.8"}, 
    "ExercisesTried" -> {}, "ExercisesCorrect" -> {}}},
ShowAutoSpellCheck->False,
AutoStyleOptions->{"HighlightMisspelledWords"->False},
FrontEndVersion->"11.3 for Mac OS X x86 (32-bit, 64-bit Kernel) (March 5, \
2018)",
StyleDefinitions->Notebook[{
   Cell[
    StyleData[StyleDefinitions -> "Default.nb"]], 
   Cell[
    CellGroupData[{
      Cell[
      "Style Environments", "Section", 
       CellChangeTimes -> {{3.64661165091824*^9, 3.646611654013329*^9}, 
         3.6485723794335403`*^9, 3.651347081728628*^9, 3.651347179462186*^9, 
         3.651347384135805*^9, 3.651348171662589*^9, {3.662385415502224*^9, 
         3.662385415587447*^9}, {3.662385986094821*^9, 
         3.662385986340312*^9}, {3.662386515144682*^9, 
         3.662386515438078*^9}, {3.662386561676188*^9, 
         3.662386561889332*^9}, {3.668356126688795*^9, 
         3.6683561270120687`*^9}, {3.670169943059537*^9, 
         3.670169943254141*^9}}], 
      Cell[
       StyleData[All, "Working"]], 
      Cell[
       StyleData[All, "Printout"], 
       PrintingOptions -> {
        "PageSize" -> {504, 720}, "PrintRegistrationMarks" -> True}, 
       Magnification -> 0.6]}, Closed]], 
   Cell[
    CellGroupData[{
      Cell[
      "Custom Styles", "Section", 
       CellChangeTimes -> {{3.646611660445352*^9, 3.646611669493331*^9}}], 
      Cell[
       StyleData["Notebook"], CreateCellID -> True, CellContext -> Notebook, 
       CellLabelAutoDelete -> False, DefaultNewCellStyle -> "Input", 
       ShowSyntaxStyles -> True, MenuSortingValue -> None], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["Title"], CellMargins -> {{64, Inherited}, {50, 72}}, 
          MenuCommandKey -> None, FontFamily -> "Verdana", FontSize -> 42, 
          FontWeight -> "Bold", FontColor -> GrayLevel[0.4]], 
         Cell[
          StyleData["Title", "Printout"], 
          CellMargins -> {{64, Inherited}, {50, 72}}]}, Closed]], 
      Cell[
       StyleData["Chapter"], MenuCommandKey -> None], 
      Cell[
       StyleData["Subchapter"], MenuCommandKey -> None], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["Section"], CellFrame -> {{0, 0}, {0, 0}}, CellDingbat -> 
          Cell[
            TextData[
             CounterBox["Section"], 
             StyleBox[
             "|\[NegativeThinSpace]", FontColor -> 
              RGBColor[
               0.9019607843137255, 0.4117647058823529, 0.027450980392156862`],
               FontFamily -> "Courier", FontSize -> 36, FontWeight -> Plain]],
             "SectionNumber"], CellMargins -> {{96, Inherited}, {12, 64}}, 
          Evaluatable -> True, CellGroupingRules -> {"SectionGrouping", 60}, 
          PageBreakAbove -> True, ShowCellLabel -> False, 
          CellFrameLabelMargins -> {{2, Inherited}, {Inherited, Inherited}}, 
          CellChangeTimes -> {3.652728456208679*^9, 3.652728527108994*^9}, 
          CounterIncrements -> "Section", 
          CounterAssignments -> {{"Subsection", 0}, {"Subsubsection", 0}, {
            "Exercise", 0}}, FontFamily -> "Source Sans Pro Semibold", 
          FontSize -> 26, FontSlant -> "Plain", FontColor -> 
          RGBColor[
           0.9019607843137255, 0.4117647058823529, 0.027450980392156862`], 
          InterpretationBoxOptions -> {Editable -> True}], 
         Cell[
          StyleData["Section", "Printout"], 
          CellMargins -> {{96, Inherited}, {12, 2}}]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["SectionDoubleDigit"], CellFrame -> {{0, 0}, {0, 0}}, 
          CellDingbat -> Cell[
            TextData[
             CounterBox["Section"], 
             StyleBox[
             "|\[NegativeThinSpace]", FontColor -> 
              RGBColor[
               0.9019607843137255, 0.4117647058823529, 0.027450980392156862`],
               FontFamily -> "Courier", FontSize -> 36, FontWeight -> Plain]],
             "SectionNumber"], CellMargins -> {{112, Inherited}, {12, 64}}, 
          Evaluatable -> True, CellGroupingRules -> {"SectionGrouping", 60}, 
          PageBreakAbove -> True, ShowCellLabel -> False, 
          CellFrameLabelMargins -> {{2, Inherited}, {Inherited, Inherited}}, 
          CellChangeTimes -> {3.652728456208679*^9, 3.652728527108994*^9}, 
          CounterIncrements -> "Section", 
          CounterAssignments -> {{"Subsection", 0}, {"Subsubsection", 0}, {
            "Exercise", 0}}, FontFamily -> "Source Sans Pro Semibold", 
          FontSize -> 26, FontSlant -> "Plain", FontColor -> 
          RGBColor[
           0.9019607843137255, 0.4117647058823529, 0.027450980392156862`], 
          InterpretationBoxOptions -> {Editable -> True}], 
         Cell[
          StyleData["SectionDoubleDigit", "Printout"], 
          CellMargins -> {{112, Inherited}, {12, 2}}]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["SectionNumber"], CellBaseline -> Baseline, FontFamily -> 
          "Source Sans Pro Semibold", FontSize -> 26, FontColor -> 
          RGBColor[
           0.9019607843137255, 0.4117647058823529, 0.027450980392156862`]], 
         Cell[
          StyleData["SectionNumber", "Printout"]]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["SectionInline"], FontFamily -> 
          "Source Sans Pro Semibold", FontColor -> 
          RGBColor[
           0.9019607843137255, 0.4117647058823529, 0.027450980392156862`]], 
         Cell[
          StyleData["SectionInline", "Printout"]]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["SectionNoDingbat"], 
          CellMargins -> {{64, Inherited}, {12, 64}}, Evaluatable -> True, 
          CellGroupingRules -> {"SectionGrouping", 60}, PageBreakAbove -> 
          True, ShowCellLabel -> False, 
          CellFrameLabelMargins -> {{2, Inherited}, {Inherited, Inherited}}, 
          CellChangeTimes -> {3.652728456208679*^9, 3.652728527108994*^9}, 
          CounterIncrements -> "Section", 
          CounterAssignments -> {{"Subsection", 0}, {"Subsubsection", 0}, {
            "Exercise", 0}}, FontFamily -> "Source Sans Pro Semibold", 
          FontSize -> 26, FontSlant -> "Plain", FontColor -> 
          RGBColor[
           0.9019607843137255, 0.4117647058823529, 0.027450980392156862`], 
          InterpretationBoxOptions -> {Editable -> True}], 
         Cell[
          StyleData["SectionNoDingbat", "Printout"], 
          CellMargins -> {{64, Inherited}, {12, 2}}]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["Exercise"], CellDingbat -> Cell[
            TextData[{"  ", 
              CounterBox["Section"], ".", 
              CounterBox["Exercise"]}], "ExerciseNumber", FontColor -> 
            RGBColor[
             0.9019607843137255, 0.4117647058823529, 0.027450980392156862`]], 
          ShowGroupOpener -> True, CellMargins -> {{90, 40}, {4, 18}}, 
          CellGroupingRules -> "InputGrouping", CounterIncrements -> 
          "Exercise", MenuSortingValue -> 10020, MenuCommandKey -> "2", 
          FontFamily -> "Source Sans Pro", FontSize -> 16, FontWeight -> 
          "Plain", FontSlant -> "Plain", FontColor -> GrayLevel[0.25]], 
         Cell[
          StyleData["Exercise", "Printout"], ShowGroupOpener -> False, 
          CellMargins -> {{110, Inherited}, {4, 8}}]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["ExerciseNumber"], FontFamily -> "Source Sans Pro", 
          FontSize -> 16, FontWeight -> "Bold", FontColor -> GrayLevel[0.25]], 
         Cell[
          StyleData["ExerciseNumber", "Printout"]]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["ExerciseInput", StyleDefinitions -> StyleData["Input"]], 
          CellMargins -> {{70, 30}, {4, 7}}, ShowCellLabel -> False, 
          CellFrameLabels -> {{None, None}, {None, None}}, SpanMaxSize -> 1, 
          FontSize -> 
          14, $CellContext`GeneratedCellStyles -> {
           "Output" -> "ExerciseOutput"}], 
         Cell[
          StyleData["ExerciseInput", "Printout"], 
          CellMargins -> {{88, 10}, {4, 7}}]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData[
          "ExerciseOutput", StyleDefinitions -> StyleData["Output"]], 
          CellMargins -> {{90, 40}, {0, 6}}, CellGroupingRules -> 
          "OutputGrouping", ShowCellLabel -> False, FontSize -> 14], 
         Cell[
          StyleData["ExerciseOutput", "Printout"], 
          CellMargins -> {{88, 10}, {10, 4}}]}, Closed]], 
      Cell[
       StyleData["ExerciseExpectedResult"], ShowCellBracket -> False, 
       ShowGroupOpener -> False, CellMargins -> {{90, 40}, {3, 9}}, 
       CellGroupingRules -> "InputGrouping", CounterIncrements -> "Exercise", 
       MenuSortingValue -> 10000, FontFamily -> "Source Sans Pro", FontSize -> 
       12, FontWeight -> "Plain", FontSlant -> "Plain"], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["Picture"], CellMargins -> {{66, 10}, {10, 10}}, 
          CellGroupingRules -> "GraphicsGrouping", StyleMenuListing -> None], 
         
         Cell[
          StyleData["Picture", "Printout"], 
          CellMargins -> {{66, 10}, {8, 8}}]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["Tentative"], 
          CellBracketOptions -> {
           "Color" -> RGBColor[
             0.30000000000000016`, 0.6000000000000003, 0.7000000000000003], 
            "Thickness" -> 5}, Evaluatable -> False, CellFrameMargins -> 4, 
          StyleMenuListing -> None, Background -> 
          RGBColor[0.8500000000000003, 0.9500000000000003, 1]], 
         Cell[
          StyleData["Tentative", "Printout"], 
          CellElementSpacings -> {"CellMinHeight" -> 0.1}, CellOpen -> False, 
          CellFrameMargins -> 0, FontSize -> 0.1, Magnification -> 0.01]}, 
        Closed]], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["WebOnly"], 
          CellBracketOptions -> {
           "Color" -> RGBColor[0.91, 0.92, 0.9], "Thickness" -> 5}, 
          CellFrameMargins -> 4, StyleMenuListing -> None, Background -> 
          RGBColor[0.91, 0.92, 0.86]], 
         Cell[
          StyleData["WebOnly", "Printout"], 
          CellElementSpacings -> {"CellMinHeight" -> 0.1}, CellOpen -> False, 
          CellFrameMargins -> 0, FontSize -> 0.1, Magnification -> 0.01]}, 
        Closed]], 
      Cell[
       StyleData["Lockdown"], 
       CellBracketOptions -> {
        "Color" -> RGBColor[0.8, 0.5, 0.4], "Thickness" -> 3}, Evaluatable -> 
       False, StyleMenuListing -> None], 
      Cell[
       StyleData["InlineCode"], SpanMaxSize -> 0, FontColor -> GrayLevel[0]], 
      
      Cell[
       StyleData["ExpectedOutputNote"], Selectable -> False, FontFamily -> 
       "Source Sans Pro", FontColor -> GrayLevel[0.3]], 
      Cell[
       StyleData["EIWLTextLink"], LineBreakWithin -> False, 
       TemplateBoxOptions -> {DisplayFunction :> (TagBox[
           
           ButtonBox[#, Appearance -> None, ButtonData -> #2, 
            BaseStyle -> {
             "Hyperlink", FontWeight -> Bold, FontSize -> 16, FontFamily -> 
              "Source Sans Pro"}], 
           MouseAppearanceTag["LinkHand"]]& )}, 
       ButtonBoxOptions -> {Appearance -> None, BaseStyle -> "Link"}], 
      Cell[
       StyleData["CheckAnswerDividerCloud"], ShowCellBracket -> False, 
       CellMargins -> {{40, 40}, {3, 6}}, 
       CellBracketOptions -> {"OverlapContent" -> True}, 
       CellGroupingRules -> {"SectionGrouping", 40}, 
       CellFrameMargins -> {{20, 20}, {2, 2}}, TextAlignment -> Right], 
      Cell[
       StyleData["CodeSectionDividerCloud"], Editable -> False, Selectable -> 
       False, ShowCellBracket -> False, CellMargins -> {{0, 0}, {0, 35}}, 
       CellBracketOptions -> {"OverlapContent" -> True}, 
       CellElementSpacings -> {"CellMinHeight" -> 6}, 
       CellGroupingRules -> {"SectionGrouping", -5}, 
       CellFrameMargins -> {{20, 20}, {2, 2}}, DefaultNewCellStyle -> "Input",
        FontSize -> 6, Background -> GrayLevel[0.95]], 
      Cell[
       StyleData["InlineCode"], SpanMaxSize -> 0, FontColor -> GrayLevel[0]], 
      
      Cell[
       StyleData["InlineCodeText"], SpanMaxSize -> 0, FontFamily -> 
       "Source Sans Pro"], 
      Cell[
       StyleData["Input"], CellMargins -> {{92, 20}, {5, 8}}, 
       CellFrameLabels -> {{None, 
          
          DynamicModuleBox[{$CellContext`EIWLExerciseCheck = 
            Automatic, $CellContext`buttonLabel = " CHECK MY SOLUTION "}, 
           DynamicBox[
            ToBoxes[
             If[
              TrueQ[$CellContext`EIWLExerciseCheck == Automatic], 
              MouseAppearance[
               Tooltip[
                Button[
                 Framed[
                  Panel[
                   
                   Style[$CellContext`buttonLabel, FontFamily -> 
                    "Source Sans Pro", FontSize -> 10, FontColor -> 
                    RGBColor[0.953948, 0.305638, 0.0285344]], Appearance -> 
                   None, Background -> GrayLevel[1], 
                   FrameMargins -> {{2, 2}, {0, 0}}, ImageMargins -> 0], 
                  FrameStyle -> {
                    Thickness[Tiny], 
                    RGBColor[0.953948, 0.305638, 0.0285344]}, RoundingRadius -> 
                  3], 
                 
                 Block[{$CellContext`usersCell, $CellContext`solutionResult, \
$CellContext`exerciseNumber, $CellContext`exerciseSwitchResult}, \
$CellContext`exerciseNumber = StringJoin[
                    If[
                    TrueQ[CurrentValue[{"CounterValue", "WebOnly"}] == 1], 
                    "x", ""], 
                    ToString[
                    CurrentValue[{"CounterValue", "SectionNumber"}]], ".", 
                    ToString[
                    
                    CurrentValue[{
                    "CounterValue", 
                    "ExerciseNumber"}]]]; $CellContext`buttonLabel = 
                   Row[{" CHECKING ", 
                    ProgressIndicator[Appearance -> "Percolate"]}]; 
                  SelectionMove[
                    ButtonNotebook[], All, ButtonCell, AutoScroll -> 
                    False]; $CellContext`usersCell = NotebookRead[
                    InputNotebook[]]; If[
                    TrueQ[Length[
                    Flatten[{$CellContext`usersCell}]] == 
                    1], $CellContext`solutionResult = ToExpression[
                    URLFetch[
                    "https://www.wolframcloud.com/objects/user-9b23d046-b2a9-\
4a5c-8723-08465cce25ed/EIWLGradingAPI", "Method" -> "POST", 
                    "Parameters" -> {
                    "exNum" -> $CellContext`exerciseNumber, "answer" -> 
                    ToString[$CellContext`usersCell, InputForm, 
                    CharacterEncoding -> "ASCII"], "user" -> 
                    ToString[$WolframID], "referer" -> "eiwl-nb", "uuid" -> 
                    ToString[$WolframUUID]}]]; \
$CellContext`SolutionResponseText[$CellContext`exerciseNumber] = \
$CellContext`SolutionResponseDetails[
                    $CellContext`solutionResult["Text"], 
                    $CellContext`solutionResult[
                    "CorrectQ"]]; $CellContext`exerciseSwitchResult = Switch[
                    $CellContext`solutionResult["CorrectQ"], 
                    True, $CellContext`EIWLExerciseCheck = 
                    True; $CellContext`SetUserSolutionsCorrect[$CellContext`\
exerciseNumber]; \
$CellContext`SetUserSolutionsTried[$CellContext`exerciseNumber]; Null, 
                    
                    Blank[], $CellContext`EIWLExerciseCheck = 
                    False; $CellContext`SetUserSolutionsTried[$CellContext`\
exerciseNumber]], 
                    CloudSystem`CreateCloudDialog[
                    StyleBox[
                    "Select a cell to be checked.", Selectable -> False], 
                    WindowTitle -> " "]]], Appearance -> None, Evaluator -> 
                 Automatic, Method -> "Queued"], 
                "Click to check your solution.", TooltipDelay -> 0.15], 
               "LinkHand"], 
              If[
               TrueQ[$CellContext`EIWLExerciseCheck], 
               MouseAppearance[
                Button[
                 Framed[
                  Row[{
                    Panel[
                    Style[
                    ToExpression[
                    "\!\(\* GraphicsBox[ TagBox[RasterBox[CompressedData[\" \
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBLECOU2VJahIzkCECxFJADGKrbtYa \
RUMUpZzMcNnnQRWjMk5lf/vzDWggtYwCkgNiFDBAsPqCPFcBjcLURYkH0fRS \
HlZwE6gV7EATfvz98f3Pd6rEIBClncpMPZlJFaNGEd0QANRpOvM= \"], {{0, 20}, { 26, \
0}}, {0, 255}, ColorFunction->RGBColor], BoxForm`ImageTag[ \"Byte\", \
Interleaving -> True, Magnification -> 1], Selectable->False], \
BaseStyle->\"ImageGraphics\", ImageSize->Magnification[1], ImageSizeRaw->{26, \
20}, PlotRange->{{0, 26}, {0, 20}}]\)"], Selectable -> False], Background -> 
                    RGBColor[0.146944, 0.70164, 0.16466], 
                    FrameMargins -> {{5, 5}, {0, 0}}, ImageMargins -> 0, 
                    Appearance -> None], 
                    Panel[
                    Style[
                    " CORRECT ", FontSize -> 10, FontColor -> 
                    RGBColor[0.146944, 0.70164, 0.16466], FontFamily -> 
                    "Source Sans Pro"], Background -> White, 
                    FrameMargins -> {{5, 5}, {0, 0}}, Appearance -> None]}], 
                  FrameStyle -> {
                    Thickness[Tiny], 
                    RGBColor[0.146944, 0.70164, 0.16466]}, FrameMargins -> 0, 
                  RoundingRadius -> 3], $CellContext`buttonLabel = 
                  " CHECK MY SOLUTION "; $CellContext`EIWLExerciseCheck = 
                  Automatic, Appearance -> None], "LinkHand"], 
               MouseAppearance[
                Button[
                 Framed[
                  Row[{
                    Panel[
                    Style[
                    ToExpression[
                    "\!\(\* GraphicsBox[ TagBox[RasterBox[CompressedData[\" \
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBLECOU2VJahIzkCECxGJADGK/YtAZ \
RTRCb1W8PnhlYooDBYFSxJgAVPnvy7cPfrkogn65IEFsJmM3BKIeZggal1RD \
yNOOMOT7DyAiTzvlJlDoCwpDkvLYpDxFjSLyEAAHORZk \"], {{0, 20}, {22, 0}}, { 0, \
255}, ColorFunction->RGBColor], BoxForm`ImageTag[ \"Byte\", Interleaving -> \
True, Magnification -> 1], Selectable->False], BaseStyle->\"ImageGraphics\", \
ImageSize->Magnification[1], ImageSizeRaw->{22, 20}, PlotRange->{{0, 22}, {0, \
20}}]\)"], Selectable -> False], Background -> 
                    RGBColor[0.918257, 0, 0.172488], 
                    FrameMargins -> {{5, 5}, {0, 0}}, ImageMargins -> 0, 
                    Appearance -> None], 
                    Panel[
                    Style[
                    " TRY AGAIN ", FontSize -> 10, FontColor -> 
                    RGBColor[0.918257, 0, 0.172488], FontFamily -> 
                    "Source Sans Pro"], Background -> White, 
                    FrameMargins -> {{5, 5}, {0, 0}}, Appearance -> None]}], 
                  FrameStyle -> {
                    Thickness[Tiny], 
                    RGBColor[0.918257, 0, 0.172488]}, FrameMargins -> 0, 
                  RoundingRadius -> 3], $CellContext`buttonLabel = 
                  " CHECK MY SOLUTION "; $CellContext`EIWLExerciseCheck = 
                  Automatic, Appearance -> None], "LinkHand"]]], 
             StandardForm], ImageSizeCache -> {109., {9., 16.}}], 
           DynamicModuleValues :> {}]}, {None, None}}, 
       CellChangeTimes -> {{3.6688095471029243`*^9, 3.66880959932793*^9}}, 
       MenuSortingValue -> 10000, FontSize -> 15], 
      Cell[
       StyleData["Output"], Deletable -> True, ShowCellBracket -> True, 
       CellMargins -> {{92, 50}, {10, 5}}, 
       CellBracketOptions -> {"OverlapContent" -> True}, CellEditDuplicate -> 
       True, GeneratedCell -> True, CellAutoOverwrite -> True, 
       LinebreakAdjustments -> {1, 2., 12., 1.25, 1.}, MenuSortingValue -> 
       None, FontSize -> 15], 
      Cell[
       StyleData["Message"], 
       CellMargins -> {{92, Inherited}, {Inherited, Inherited}}], 
      Cell[
       StyleData["EmptyCell"], Editable -> False, Selectable -> False, 
       CellMargins -> {{0, 0}, {-2, 0}}, 
       CellElementSpacings -> {"CellMinHeight" -> 1}, MenuSortingValue -> 
       10000, FontSize -> 1], 
      Cell[
       StyleData["CellLabel"], MenuSortingValue -> 10000, FontColor -> 
       GrayLevel[0.6]], 
      Cell[
       StyleData["Link"], LineBreakWithin -> False, 
       TemplateBoxOptions -> {DisplayFunction :> (TagBox[
           
           ButtonBox[#, Appearance -> None, ButtonData -> #2, 
            BaseStyle -> {
             "Hyperlink", FontSize -> 15, FontFamily -> "Source Sans Pro"}], 
           MouseAppearanceTag["LinkHand"]]& )}, 
       ButtonBoxOptions -> {Appearance -> None, BaseStyle -> "Link"}], 
      Cell[
       StyleData["ExpectedOutputText"], FontFamily -> "Arial", FontSize -> 13,
        FontColor -> RGBColor[0.8579079880979629, 0.4263828488593881, 0.]], 
      Cell[
       StyleData["CodeSectionDividerCloud"], Selectable -> False, 
       ShowCellBracket -> False, CellMargins -> {{0, 0}, {0, 35}}, 
       CellBracketOptions -> {"OverlapContent" -> True}, 
       CellElementSpacings -> {"CellMinHeight" -> 6}, 
       CellGroupingRules -> {"SectionGrouping", -5}, 
       CellFrameMargins -> {{20, 20}, {2, 2}}, DefaultNewCellStyle -> 
       "EmptyCell", FontSize -> 6, Background -> GrayLevel[0.95]], 
      Cell[
       StyleData["DockedCellAuthorName"], MenuSortingValue -> 10000, 
       FontFamily -> "Source Sans Pro", FontSize -> 12, FontColor -> 
       RGBColor[1, 0.929411, 0.721568]], 
      Cell[
       StyleData["DockedCellSectionTitle"], MenuSortingValue -> 10000, 
       FontFamily -> "Source Sans Pro", FontSize -> 18, FontColor -> 
       GrayLevel[1]], 
      Cell[
       StyleData["DockedCellSecondCell"], CellFrame -> 1, 
       CellMargins -> {{0, 0}, {0, 0}}, 
       CellFrameMargins -> {{10, 10}, {10, 10}}, CellFrameColor -> 
       RGBColor[1, 0.956862, 0.878431], MenuSortingValue -> 10000, Background -> 
       RGBColor[1, 0.956862, 0.878431]], 
      Cell[
       StyleData["CompletedExerciseHeader"], MenuSortingValue -> 10000, 
       FontFamily -> "Source Sans Pro", FontSize -> 14, FontColor -> 
       GrayLevel[0.5]], 
      Cell[
       StyleData["DockedCellShareButton"], MenuSortingValue -> 10000, 
       FontFamily -> "Source Sans Pro", FontSize -> 13, FontColor -> 
       GrayLevel[1]], 
      Cell[
       StyleData["DockedCellLinksSections"], MenuSortingValue -> 10000, 
       FontFamily -> "Source Sans Pro", FontSize -> 14, FontWeight -> "Plain",
        FontSlant -> "Plain", FontColor -> RGBColor[0.97647, 0.482352, 0]], 
      Cell[
       StyleData["DockedCellLinksDivider"], MenuSortingValue -> 10000, 
       FontFamily -> "Courier", FontSize -> 18, FontWeight -> "Plain", 
       FontSlant -> "Plain", FontColor -> RGBColor[0.97647, 0.482352, 0]], 
      Cell[
       StyleData["DockedCellSectionTitleDivider"], MenuSortingValue -> 10000, 
       FontFamily -> "Courier", FontSize -> 24, FontWeight -> "Plain", 
       FontSlant -> "Plain", FontColor -> GrayLevel[1]], 
      Cell[
       StyleData["SolutionTrue"], MenuSortingValue -> 10000, FontFamily -> 
       "Source Sans Pro", FontSize -> 12, FontWeight -> "Plain", FontSlant -> 
       "Plain", FontColor -> RGBColor[0.12, 0.7, 0.22]], 
      Cell[
       StyleData["SolutionFalse"], MenuSortingValue -> 10000, FontFamily -> 
       "Source Sans Pro", FontSize -> 12, FontWeight -> "Plain", FontSlant -> 
       "Plain", FontColor -> RGBColor[0.94, 0.08, 0.2]], 
      Cell[
       StyleData["SolutionResponseText"], ShowStringCharacters -> False, 
       FontFamily -> "Source Sans Pro", FontSize -> 12, FontWeight -> "Plain",
        FontSlant -> "Plain", FontColor -> GrayLevel[1]], 
      Cell[
       StyleData["SolutionResponse"], ShowCellBracket -> False, 
       CellMargins -> {{24, 25}, {6, 0}}, 
       CellFrameMargins -> {{8, 0}, {0, 12}}, TextAlignment -> Right, 
       ShowStringCharacters -> False, FontFamily -> "Source Sans Pro", 
       FontSize -> 12, FontWeight -> "Plain", FontSlant -> "Plain", 
       Background -> GrayLevel[1]], 
      Cell[
       StyleData["DockedCellCompletedExerciseText"], MenuSortingValue -> 
       10000, FontFamily -> "Source Sans Pro", FontSize -> 12, FontWeight -> 
       "Plain", FontSlant -> "Plain", FontColor -> GrayLevel[0.4]], 
      Cell[
       StyleData["DockedCellSolutionDivider"], MenuSortingValue -> 10000, 
       FontFamily -> "Courier", FontSize -> 16, FontWeight -> "Plain", 
       FontSlant -> "Plain", FontColor -> GrayLevel[0.6]], 
      Cell[
       StyleData["DockedCellCorrectExerciseText"], MenuSortingValue -> 10000, 
       FontFamily -> "Source Sans Pro", FontSize -> 12, FontWeight -> "Plain",
        FontSlant -> "Plain", FontColor -> RGBColor[0.12, 0.7, 0.22]], 
      Cell[
       CellGroupData[{
         Cell[
         "EIWL Cloud Link styles", "Subsubsection", 
          CellChangeTimes -> {{3.663512229965006*^9, 3.66351224118613*^9}}], 
         Cell[
          StyleData["EIWLTextLink"], LineBreakWithin -> False, 
          TemplateBoxOptions -> {DisplayFunction :> (TagBox[
              
              ButtonBox[#, Appearance -> None, ButtonData -> #2, 
               BaseStyle -> {
                "Hyperlink", FontSize -> 16, FontFamily -> 
                 "Source Sans Pro"}], 
              MouseAppearanceTag["LinkHand"]]& )}, 
          ButtonBoxOptions -> {Appearance -> None, BaseStyle -> "Link"}], 
         Cell[
          StyleData["EIWLTextLinkAnswer"], LineBreakWithin -> False, 
          TemplateBoxOptions -> {DisplayFunction :> (TagBox[
              
              ButtonBox[#, Appearance -> None, ButtonData -> #2, 
               BaseStyle -> {
                "Hyperlink", FontSize -> 13, FontColor -> GrayLevel[0.25], 
                 FontFamily -> "Source Sans Pro"}], 
              MouseAppearanceTag["LinkHand"]]& )}, 
          ButtonBoxOptions -> {Appearance -> None, BaseStyle -> "Link"}], 
         Cell[
          StyleData["EIWLTextLinkCodeCaption"], LineBreakWithin -> False, 
          TemplateBoxOptions -> {DisplayFunction :> (TagBox[
              
              ButtonBox[#, Appearance -> None, ButtonData -> #2, 
               BaseStyle -> {
                "Hyperlink", FontSize -> 14, FontColor -> GrayLevel[0.6], 
                 FontFamily -> "Source Sans Pro"}], 
              MouseAppearanceTag["LinkHand"]]& )}, 
          ButtonBoxOptions -> {Appearance -> None, BaseStyle -> "Link"}], 
         Cell[
          StyleData["EIWLTextLinkExercise"], LineBreakWithin -> False, 
          TemplateBoxOptions -> {DisplayFunction :> (TagBox[
              
              ButtonBox[#, Appearance -> None, ButtonData -> #2, 
               BaseStyle -> {
                "Hyperlink", FontSize -> 13, FontColor -> GrayLevel[0.25], 
                 FontFamily -> "Source Sans Pro"}], 
              MouseAppearanceTag["LinkHand"]]& )}, 
          ButtonBoxOptions -> {Appearance -> None, BaseStyle -> "Link"}], 
         Cell[
          StyleData["EIWLTextLinkExerciseNote"], LineBreakWithin -> False, 
          TemplateBoxOptions -> {DisplayFunction :> (TagBox[
              
              ButtonBox[#, Appearance -> None, ButtonData -> #2, 
               BaseStyle -> {
                "Hyperlink", FontSize -> 13, FontColor -> GrayLevel[0.25], 
                 FontFamily -> "Source Sans Pro"}], 
              MouseAppearanceTag["LinkHand"]]& )}, 
          ButtonBoxOptions -> {Appearance -> None, BaseStyle -> "Link"}], 
         Cell[
          StyleData["EIWLTextLinkInlineCode"], LineBreakWithin -> False, 
          TemplateBoxOptions -> {DisplayFunction :> (TagBox[
              ButtonBox[#, Appearance -> None, ButtonData -> #2, 
               BaseStyle -> {
                "Hyperlink", FontSize -> 13, FontColor -> GrayLevel[0], 
                 FontFamily -> "Source Sans Pro"}], 
              MouseAppearanceTag["LinkHand"]]& )}, 
          ButtonBoxOptions -> {Appearance -> None, BaseStyle -> "Link"}], 
         Cell[
          StyleData["EIWLTextLinkMoreExplore"], LineBreakWithin -> False, 
          TemplateBoxOptions -> {DisplayFunction :> (TagBox[
              
              ButtonBox[#, Appearance -> None, ButtonData -> #2, 
               BaseStyle -> {
                "Hyperlink", FontSize -> 13, FontFamily -> 
                 "Source Sans Pro"}], 
              MouseAppearanceTag["LinkHand"]]& )}, 
          ButtonBoxOptions -> {Appearance -> None, BaseStyle -> "Link"}], 
         Cell[
          StyleData["EIWLTextLinkQuestion"], LineBreakWithin -> False, 
          TemplateBoxOptions -> {DisplayFunction :> (TagBox[
              
              ButtonBox[#, Appearance -> None, ButtonData -> #2, 
               BaseStyle -> {
                "Hyperlink", FontSize -> 13, FontWeight -> Bold, FontFamily -> 
                 "Source Sans Pro"}], 
              MouseAppearanceTag["LinkHand"]]& )}, 
          ButtonBoxOptions -> {Appearance -> None, BaseStyle -> "Link"}], 
         Cell[
          StyleData["EIWLTextLinkTechNote"], LineBreakWithin -> False, 
          TemplateBoxOptions -> {DisplayFunction :> (TagBox[
              
              ButtonBox[#, Appearance -> None, ButtonData -> #2, 
               BaseStyle -> {
                "Hyperlink", FontSize -> 13, FontColor -> GrayLevel[0.25], 
                 FontFamily -> "Source Sans Pro"}], 
              MouseAppearanceTag["LinkHand"]]& )}, 
          ButtonBoxOptions -> {Appearance -> None, BaseStyle -> "Link"}], 
         Cell[
          StyleData["EIWLTextLinkText"], LineBreakWithin -> False, 
          TemplateBoxOptions -> {DisplayFunction :> (TagBox[
              
              ButtonBox[#, Appearance -> None, ButtonData -> #2, 
               BaseStyle -> {
                "Hyperlink", FontSize -> 17, FontFamily -> 
                 "Source Sans Pro"}], 
              MouseAppearanceTag["LinkHand"]]& )}, 
          ButtonBoxOptions -> {Appearance -> None, BaseStyle -> "Link"}], 
         Cell[
          StyleData["EIWLTextLinkInlineCodeLink"], LineBreakWithin -> False, 
          TemplateBoxOptions -> {DisplayFunction :> (TagBox[
              
              ButtonBox[#, Appearance -> None, ButtonData -> #2, 
               BaseStyle -> {
                "Hyperlink", FontSize -> 17, FontFamily -> 
                 "Source Sans Pro"}], 
              MouseAppearanceTag["LinkHand"]]& )}, 
          ButtonBoxOptions -> {Appearance -> None, BaseStyle -> "Link"}], 
         Cell[
          StyleData["EIWLTextLinkVocabularyTable"], LineBreakWithin -> False, 
          TemplateBoxOptions -> {DisplayFunction :> (TagBox[
              
              ButtonBox[#, Appearance -> None, ButtonData -> #2, 
               BaseStyle -> {
                "Hyperlink", FontSize -> 13, FontFamily -> 
                 "Source Sans Pro"}], 
              MouseAppearanceTag["LinkHand"]]& )}, 
          ButtonBoxOptions -> {Appearance -> None, BaseStyle -> "Link"}]}, 
        Closed]], 
      Cell[
       CellGroupData[{
         Cell[
         "EIWL Cloud Link", "Subsubsection", 
          CellChangeTimes -> {{3.664234597774767*^9, 3.664234605661516*^9}}], 
         
         Cell[
          StyleData["CodeLinkAnswer"], LineBreakWithin -> False, 
          TemplateBoxOptions -> {DisplayFunction :> (TagBox[
              
              ButtonBox[#, Appearance -> None, ButtonData -> #2, 
               BaseStyle -> {
                "Hyperlink", FontSize -> 13, FontColor -> GrayLevel[0.25], 
                 FontFamily -> "Source Sans Pro"}], 
              MouseAppearanceTag["LinkHand"]]& )}, 
          ButtonBoxOptions -> {Appearance -> None, BaseStyle -> "Link"}], 
         Cell[
          StyleData["CodeLinkCodeCaption"], LineBreakWithin -> False, 
          TemplateBoxOptions -> {DisplayFunction :> (TagBox[
              
              ButtonBox[#, Appearance -> None, ButtonData -> #2, 
               BaseStyle -> {
                "Hyperlink", FontSize -> 14, FontColor -> GrayLevel[0.6], 
                 FontFamily -> "Source Sans Pro"}], 
              MouseAppearanceTag["LinkHand"]]& )}, 
          ButtonBoxOptions -> {Appearance -> None, BaseStyle -> "Link"}], 
         Cell[
          StyleData["CodeLinkExercise"], LineBreakWithin -> False, 
          TemplateBoxOptions -> {DisplayFunction :> (TagBox[
              
              ButtonBox[#, Appearance -> None, ButtonData -> #2, 
               BaseStyle -> {
                "Hyperlink", FontSize -> 13, FontColor -> GrayLevel[0.25], 
                 FontFamily -> "Source Sans Pro"}], 
              MouseAppearanceTag["LinkHand"]]& )}, 
          ButtonBoxOptions -> {Appearance -> None, BaseStyle -> "Link"}], 
         Cell[
          StyleData["CodeLinkQuestion"], LineBreakWithin -> False, 
          TemplateBoxOptions -> {DisplayFunction :> (TagBox[
              
              ButtonBox[#, Appearance -> None, ButtonData -> #2, 
               BaseStyle -> {
                "Hyperlink", FontSize -> 13, FontWeight -> Bold, FontFamily -> 
                 "Source Sans Pro"}], 
              MouseAppearanceTag["LinkHand"]]& )}, 
          ButtonBoxOptions -> {Appearance -> None, BaseStyle -> "Link"}], 
         Cell[
          StyleData["CodeLinkTechNote"], LineBreakWithin -> False, 
          TemplateBoxOptions -> {DisplayFunction :> (TagBox[
              
              ButtonBox[#, Appearance -> None, ButtonData -> #2, 
               BaseStyle -> {
                "Hyperlink", FontSize -> 14, FontColor -> GrayLevel[0.25], 
                 FontFamily -> "Source Sans Pro"}], 
              MouseAppearanceTag["LinkHand"]]& )}, 
          ButtonBoxOptions -> {Appearance -> None, BaseStyle -> "Link"}], 
         Cell[
          StyleData["CodeLinkText"], LineBreakWithin -> False, 
          TemplateBoxOptions -> {DisplayFunction :> (TagBox[
              
              ButtonBox[#, Appearance -> None, ButtonData -> #2, 
               BaseStyle -> {
                "Hyperlink", FontSize -> 17, FontFamily -> 
                 "Source Sans Pro"}], 
              MouseAppearanceTag["LinkHand"]]& )}, 
          ButtonBoxOptions -> {Appearance -> None, BaseStyle -> "Link"}], 
         Cell[
          StyleData["CodeLinkVocabularyTable"], LineBreakWithin -> False, 
          TemplateBoxOptions -> {DisplayFunction :> (TagBox[
              
              ButtonBox[#, Appearance -> None, ButtonData -> #2, 
               BaseStyle -> {
                "Hyperlink", FontSize -> 14, FontFamily -> 
                 "Source Sans Pro"}], 
              MouseAppearanceTag["LinkHand"]]& )}, 
          ButtonBoxOptions -> {Appearance -> None, BaseStyle -> "Link"}], 
         Cell[
          StyleData["CodeLinkVocabularyTable3Column"], LineBreakWithin -> 
          False, TemplateBoxOptions -> {DisplayFunction :> (TagBox[
              
              ButtonBox[#, Appearance -> None, ButtonData -> #2, 
               BaseStyle -> {
                "Hyperlink", FontSize -> 14, FontFamily -> 
                 "Source Sans Pro"}], 
              MouseAppearanceTag["LinkHand"]]& )}, 
          ButtonBoxOptions -> {Appearance -> None, BaseStyle -> "Link"}], 
         Cell[
          StyleData["LinkAnswer"], LineBreakWithin -> False, 
          TemplateBoxOptions -> {DisplayFunction :> (TagBox[
              
              ButtonBox[#, Appearance -> None, ButtonData -> #2, 
               BaseStyle -> {
                "Hyperlink", FontSize -> 13, FontColor -> GrayLevel[0.25], 
                 FontFamily -> "Source Sans Pro"}], 
              MouseAppearanceTag["LinkHand"]]& )}, 
          ButtonBoxOptions -> {Appearance -> None, BaseStyle -> "Link"}], 
         Cell[
          StyleData["LinkCodeCaption"], LineBreakWithin -> False, 
          TemplateBoxOptions -> {DisplayFunction :> (TagBox[
              
              ButtonBox[#, Appearance -> None, ButtonData -> #2, 
               BaseStyle -> {
                "Hyperlink", FontSize -> 14, FontColor -> GrayLevel[0.6], 
                 FontFamily -> "Source Sans Pro"}], 
              MouseAppearanceTag["LinkHand"]]& )}, 
          ButtonBoxOptions -> {Appearance -> None, BaseStyle -> "Link"}], 
         Cell[
          StyleData["LinkExercise"], LineBreakWithin -> False, 
          TemplateBoxOptions -> {DisplayFunction :> (TagBox[
              
              ButtonBox[#, Appearance -> None, ButtonData -> #2, 
               BaseStyle -> {
                "Hyperlink", FontSize -> 13, FontColor -> GrayLevel[0.25], 
                 FontFamily -> "Source Sans Pro"}], 
              MouseAppearanceTag["LinkHand"]]& )}, 
          ButtonBoxOptions -> {Appearance -> None, BaseStyle -> "Link"}], 
         Cell[
          StyleData["LinkExerciseNote"], LineBreakWithin -> False, 
          TemplateBoxOptions -> {DisplayFunction :> (TagBox[
              
              ButtonBox[#, Appearance -> None, ButtonData -> #2, 
               BaseStyle -> {
                "Hyperlink", FontSize -> 13, FontColor -> GrayLevel[0.25], 
                 FontFamily -> "Source Sans Pro"}], 
              MouseAppearanceTag["LinkHand"]]& )}, 
          ButtonBoxOptions -> {Appearance -> None, BaseStyle -> "Link"}], 
         Cell[
          StyleData["LinkIndex"], LineBreakWithin -> False, 
          TemplateBoxOptions -> {DisplayFunction :> (TagBox[
              
              ButtonBox[#, Appearance -> None, ButtonData -> #2, 
               BaseStyle -> {
                "Hyperlink", FontSize -> 13, FontColor -> GrayLevel[0.25], 
                 FontFamily -> "Source Sans Pro"}], 
              MouseAppearanceTag["LinkHand"]]& )}, 
          ButtonBoxOptions -> {Appearance -> None, BaseStyle -> "Link"}], 
         Cell[
          StyleData["LinkIndexSubentry"], LineBreakWithin -> False, 
          TemplateBoxOptions -> {DisplayFunction :> (TagBox[
              
              ButtonBox[#, Appearance -> None, ButtonData -> #2, 
               BaseStyle -> {
                "Hyperlink", FontSize -> 13, FontColor -> GrayLevel[0.25], 
                 FontFamily -> "Source Sans Pro"}], 
              MouseAppearanceTag["LinkHand"]]& )}, 
          ButtonBoxOptions -> {Appearance -> None, BaseStyle -> "Link"}], 
         Cell[
          StyleData["LinkMoreExplore"], LineBreakWithin -> False, 
          TemplateBoxOptions -> {DisplayFunction :> (TagBox[
              
              ButtonBox[#, Appearance -> None, ButtonData -> #2, 
               BaseStyle -> {
                "Hyperlink", FontSize -> 13, FontFamily -> 
                 "Source Sans Pro"}], 
              MouseAppearanceTag["LinkHand"]]& )}, 
          ButtonBoxOptions -> {Appearance -> None, BaseStyle -> "Link"}], 
         Cell[
          StyleData["LinkQuestion"], LineBreakWithin -> False, 
          TemplateBoxOptions -> {DisplayFunction :> (TagBox[
              
              ButtonBox[#, Appearance -> None, ButtonData -> #2, 
               BaseStyle -> {
                "Hyperlink", FontSize -> 14, FontWeight -> Bold, FontColor -> 
                 GrayLevel[0], FontFamily -> "Source Sans Pro"}], 
              MouseAppearanceTag["LinkHand"]]& )}, 
          ButtonBoxOptions -> {Appearance -> None, BaseStyle -> "Link"}], 
         Cell[
          StyleData["LinkTechNote"], LineBreakWithin -> False, 
          TemplateBoxOptions -> {DisplayFunction :> (TagBox[
              
              ButtonBox[#, Appearance -> None, ButtonData -> #2, 
               BaseStyle -> {
                "Hyperlink", FontSize -> 13, FontColor -> GrayLevel[0.25], 
                 FontFamily -> "Source Sans Pro"}], 
              MouseAppearanceTag["LinkHand"]]& )}, 
          ButtonBoxOptions -> {Appearance -> None, BaseStyle -> "Link"}], 
         Cell[
          StyleData["LinkText"], LineBreakWithin -> False, 
          TemplateBoxOptions -> {DisplayFunction :> (TagBox[
              
              ButtonBox[#, Appearance -> None, ButtonData -> #2, 
               BaseStyle -> {
                "Hyperlink", FontSize -> 16, FontFamily -> 
                 "Source Sans Pro"}], 
              MouseAppearanceTag["LinkHand"]]& )}, 
          ButtonBoxOptions -> {Appearance -> None, BaseStyle -> "Link"}], 
         Cell[
          StyleData["LinkVocabularyTable"], LineBreakWithin -> False, 
          TemplateBoxOptions -> {DisplayFunction :> (TagBox[
              
              ButtonBox[#, Appearance -> None, ButtonData -> #2, 
               BaseStyle -> {
                "Hyperlink", FontSize -> 13, FontFamily -> 
                 "Source Sans Pro"}], 
              MouseAppearanceTag["LinkHand"]]& )}, 
          ButtonBoxOptions -> {Appearance -> None, BaseStyle -> "Link"}]}, 
        Closed]]}, Open]]}, Visible -> False, FrontEndVersion -> 
  "11.3 for Mac OS X x86 (32-bit, 64-bit Kernel) (March 5, 2018)", 
  StyleDefinitions -> "Default.nb"]
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{
 "FirstInputCell"->{
  Cell[9752, 238, 755, 25, 70, "Input",ExpressionUUID->"615e9331-8977-4df8-a3df-e67c5306bf5d",
   CellTags->"FirstInputCell"],
  Cell[20145, 497, 755, 25, 70, "Input",ExpressionUUID->"50cf10fc-ce73-4aaa-829e-2838848aa273",
   CellTags->"FirstInputCell"],
  Cell[37320, 864, 755, 25, 70, "Input",ExpressionUUID->"8f160ddb-28af-4288-86aa-b50e3319f3b6",
   CellTags->"FirstInputCell"],
  Cell[62152, 1366, 755, 25, 70, "Input",ExpressionUUID->"546f9296-6dfd-43d5-905b-e65894c79181",
   CellTags->"FirstInputCell"],
  Cell[90720, 1922, 755, 25, 70, "Input",ExpressionUUID->"7e0e40f3-7c93-4472-b083-2e954a02edd2",
   CellTags->"FirstInputCell"],
  Cell[99445, 2150, 755, 25, 70, "Input",ExpressionUUID->"058e7ccf-4609-4a6f-909e-658ea6bd887d",
   CellTags->"FirstInputCell"],
  Cell[108545, 2398, 755, 25, 70, "Input",ExpressionUUID->"52057906-7040-4fd8-97c8-1b1a2e371176",
   CellTags->"FirstInputCell"],
  Cell[135370, 2938, 755, 25, 70, "Input",ExpressionUUID->"ad15d665-8d14-4d85-ba09-3124b25c8f6a",
   CellTags->"FirstInputCell"]}
 }
*)
(*CellTagsIndex
CellTagsIndex->{
 {"FirstInputCell", 194511, 4160}
 }
*)
(*NotebookFileOutline
Notebook[{
Cell[630, 21, 655, 20, 70, "Exercise",ExpressionUUID->"0f45caa4-4482-4186-bf07-aaccdc76e4db",
 CounterAssignments->{{"SectionNumber", 32}, {"ExerciseNumber", 1}, {"WebOnly", 0}}],
Cell[CellGroupData[{
Cell[1310, 45, 578, 18, 70, "ExerciseExpectedResult",ExpressionUUID->"4a2a4663-2267-4124-91ee-9be3041bed19"],
Cell[1891, 65, 7312, 149, 70, "ExerciseOutput",ExpressionUUID->"9c4b0c85-a89a-4fed-9759-e264e235c23b"]
}, Closed]],
Cell[CellGroupData[{
Cell[9240, 219, 509, 17, 70, "Subsection",ExpressionUUID->"2031bd09-3df6-4e14-987a-1dcb0abbffee"],
Cell[9752, 238, 755, 25, 70, "Input",ExpressionUUID->"615e9331-8977-4df8-a3df-e67c5306bf5d",
 CellTags->"FirstInputCell"]
}, Open  ]],
Cell[CellGroupData[{
Cell[10544, 268, 224, 7, 70, "CodeSectionDividerCloud",ExpressionUUID->"3f54d705-c9c1-4a2a-bb19-b8588a4e2c55"],
Cell[10771, 277, 623, 19, 70, "Exercise",ExpressionUUID->"cf45d11d-4df2-48d3-b23d-5452fc3e7f9b",
 CounterAssignments->{{"SectionNumber", 32}, {"ExerciseNumber", 2}, {"WebOnly", 0}}],
Cell[CellGroupData[{
Cell[11419, 300, 578, 18, 70, "ExerciseExpectedResult",ExpressionUUID->"e7a2aadc-5bac-41e2-b3cd-7f4bc8520d63"],
Cell[12000, 320, 7596, 153, 70, "ExerciseOutput",ExpressionUUID->"2bd774c9-36be-4f42-becc-05298e8a0133"]
}, Closed]],
Cell[CellGroupData[{
Cell[19633, 478, 509, 17, 70, "Subsection",ExpressionUUID->"47cbb16e-55b3-4c9e-8639-09459db66e0e"],
Cell[20145, 497, 755, 25, 70, "Input",ExpressionUUID->"50cf10fc-ce73-4aaa-829e-2838848aa273",
 CellTags->"FirstInputCell"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[20949, 528, 224, 7, 70, "CodeSectionDividerCloud",ExpressionUUID->"7f9a975b-f234-4d68-aa40-f6a7b775a0ba"],
Cell[21176, 537, 464, 12, 70, "Exercise",ExpressionUUID->"0b891758-f5f8-4661-b1a9-a7943467ac17",
 CounterAssignments->{{"SectionNumber", 32}, {"ExerciseNumber", 3}, {"WebOnly", 0}}],
Cell[CellGroupData[{
Cell[21665, 553, 578, 18, 70, "ExerciseExpectedResult",ExpressionUUID->"8e56346a-deae-48e8-9470-bf1332e4e5ed"],
Cell[22246, 573, 14525, 267, 70, "ExerciseOutput",ExpressionUUID->"796a01ab-f020-40f1-aae3-464efb29efc4"]
}, Closed]],
Cell[CellGroupData[{
Cell[36808, 845, 509, 17, 70, "Subsection",ExpressionUUID->"d70fd827-a9c2-49dd-a48c-00a2e6358431"],
Cell[37320, 864, 755, 25, 70, "Input",ExpressionUUID->"8f160ddb-28af-4288-86aa-b50e3319f3b6",
 CellTags->"FirstInputCell"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[38124, 895, 224, 7, 70, "CodeSectionDividerCloud",ExpressionUUID->"43d65d15-5e72-4a9f-af07-8136101c812f"],
Cell[38351, 904, 732, 26, 70, "Exercise",ExpressionUUID->"f2f3de96-1304-434c-b741-7f59253430e8",
 CounterAssignments->{{"SectionNumber", 32}, {"ExerciseNumber", 4}, {"WebOnly", 0}}],
Cell[CellGroupData[{
Cell[39108, 934, 578, 18, 70, "ExerciseExpectedResult",ExpressionUUID->"a4f47091-1ae1-42d7-9d58-0e2a332a7214"],
Cell[39689, 954, 21914, 388, 70, "ExerciseOutput",ExpressionUUID->"64ee80e6-4abd-4e36-94ef-423e1eab31c8"]
}, Closed]],
Cell[CellGroupData[{
Cell[61640, 1347, 509, 17, 70, "Subsection",ExpressionUUID->"4b31402b-f9de-493f-97a9-11b1c7861f40"],
Cell[62152, 1366, 755, 25, 70, "Input",ExpressionUUID->"546f9296-6dfd-43d5-905b-e65894c79181",
 CellTags->"FirstInputCell"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[62956, 1397, 224, 7, 70, "CodeSectionDividerCloud",ExpressionUUID->"fd080286-fbb1-417c-bc55-d789d1e8ecb1"],
Cell[63183, 1406, 511, 15, 70, "Exercise",ExpressionUUID->"edec14bd-a6b7-4b42-bcb7-27fe8aa4cc06",
 CounterAssignments->{{"SectionNumber", 32}, {"ExerciseNumber", 5}, {"WebOnly", 0}}],
Cell[CellGroupData[{
Cell[63719, 1425, 578, 18, 70, "ExerciseExpectedResult",ExpressionUUID->"a931fa7e-a8f0-4326-8b2d-4e65c31207e8"],
Cell[64300, 1445, 25871, 453, 70, "ExerciseOutput",ExpressionUUID->"c765b880-3467-4e4c-92b9-d4d814aa8644"]
}, Closed]],
Cell[CellGroupData[{
Cell[90208, 1903, 509, 17, 70, "Subsection",ExpressionUUID->"6b749eac-21d6-43a5-86fe-b13d462bd061"],
Cell[90720, 1922, 755, 25, 70, "Input",ExpressionUUID->"7e0e40f3-7c93-4472-b083-2e954a02edd2",
 CellTags->"FirstInputCell"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[91524, 1953, 224, 7, 70, "CodeSectionDividerCloud",ExpressionUUID->"3c8eab02-2d57-4bcc-9262-b4181b2aabe9"],
Cell[91751, 1962, 476, 12, 70, "Exercise",ExpressionUUID->"db4557e9-4de1-4077-a4c5-55c06d6d828b",
 CounterAssignments->{{"SectionNumber", 32}, {"ExerciseNumber", 6}, {"WebOnly", 0}}],
Cell[CellGroupData[{
Cell[92252, 1978, 578, 18, 70, "ExerciseExpectedResult",ExpressionUUID->"8c1007c8-f5cd-4d84-8299-e0278e47ad34"],
Cell[92833, 1998, 6063, 128, 70, "ExerciseOutput",ExpressionUUID->"6eb31044-1c7e-49e6-90de-5ccdde170aa7"]
}, Closed]],
Cell[CellGroupData[{
Cell[98933, 2131, 509, 17, 70, "Subsection",ExpressionUUID->"a9c42ee2-9890-462d-9a3d-71249ab3417e"],
Cell[99445, 2150, 755, 25, 70, "Input",ExpressionUUID->"058e7ccf-4609-4a6f-909e-658ea6bd887d",
 CellTags->"FirstInputCell"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[100249, 2181, 224, 7, 70, "CodeSectionDividerCloud",ExpressionUUID->"60aa2e58-6c30-4509-8305-2f643c96ca1a"],
Cell[100476, 2190, 1087, 36, 70, "Exercise",ExpressionUUID->"4611d571-9ef1-4516-aaea-b6c5c1f9578b",
 CounterAssignments->{{"SectionNumber", 32}, {"ExerciseNumber", 7}, {"WebOnly", 0}}],
Cell[CellGroupData[{
Cell[101588, 2230, 578, 18, 70, "ExerciseExpectedResult",ExpressionUUID->"34fc58da-4c3a-41be-a56b-9a46bcc6aad1"],
Cell[102169, 2250, 5827, 124, 70, "ExerciseOutput",ExpressionUUID->"c3507eee-ed78-4ff0-adc2-631c05c6eb1b"]
}, Closed]],
Cell[CellGroupData[{
Cell[108033, 2379, 509, 17, 70, "Subsection",ExpressionUUID->"a73f9bbc-17e9-48a5-be50-5d2392bbd7fa"],
Cell[108545, 2398, 755, 25, 70, "Input",ExpressionUUID->"52057906-7040-4fd8-97c8-1b1a2e371176",
 CellTags->"FirstInputCell"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[109349, 2429, 224, 7, 70, "CodeSectionDividerCloud",ExpressionUUID->"bd2de4b9-b221-4d14-b399-497420ea62bf"],
Cell[109576, 2438, 1184, 39, 70, "Exercise",ExpressionUUID->"ed78a672-e028-4538-b1cc-51b272939e5c",
 CounterAssignments->{{"SectionNumber", 32}, {"ExerciseNumber", 8}, {"WebOnly", 0}}],
Cell[CellGroupData[{
Cell[110785, 2481, 578, 18, 70, "ExerciseExpectedResult",ExpressionUUID->"f94044b8-01ad-499d-9171-161d2c28315e"],
Cell[111366, 2501, 23455, 413, 70, "ExerciseOutput",ExpressionUUID->"0a37ec8a-0616-4922-a5b4-745384f00d24"]
}, Closed]],
Cell[CellGroupData[{
Cell[134858, 2919, 509, 17, 70, "Subsection",ExpressionUUID->"6096837c-e34d-4a20-ad32-aae4678daec1"],
Cell[135370, 2938, 755, 25, 70, "Input",ExpressionUUID->"ad15d665-8d14-4d85-ba09-3124b25c8f6a",
 CellTags->"FirstInputCell"]
}, Open  ]]
}, Open  ]],
Cell[136152, 2967, 224, 7, 70, "CodeSectionDividerCloud",ExpressionUUID->"77ed61b9-7922-4a34-9317-fd8f876bed35"]
}
]
*)

(* End of internal cache information *)
(* NotebookSignature YQWm4NgTDjhVdlYqJzSrmsap *)
