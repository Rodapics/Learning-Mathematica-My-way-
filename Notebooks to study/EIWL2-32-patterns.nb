(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 11.3' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    489605,      11818]
NotebookOptionsPosition[    380442,       9646]
NotebookOutlinePosition[    475225,      11575]
CellTagsIndexPosition[    474707,      11553]
WindowTitle->Patrones: Una introducci\363n elemental a Wolfram Language
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell[BoxData[
 InterpretationBox[Cell["Patrones", "SectionInline"],
  $Line = 0; Null]], "SectionDoubleDigit",
 Editable->False,
 Deletable->False,
 ShowCellBracket->False,
 CounterAssignments->{{"Section", 31}, {"Subsection", 0}, {
   "Subsubsection", 0}, {"Exercise", 0}},
 CellTags->"p:193",
 CellLabel->"In[19]:="],

Cell[TextData[{
 "Los",
 StyleBox[" patrones",
  FontSlant->"Italic"],
 " son un concepto fundamental en Wolfram Language. El patr\[OAcute]n ",
 Cell[BoxData[
  ButtonBox["_",
   BaseStyle->"Link",
   ButtonData->"Blank"]], "InlineCodeText"],
 " (\[OpenCurlyDoubleQuote]guion-bajo\[CloseCurlyDoubleQuote]) representa \
cualquier cosa."
}], "Text",
 Editable->False,
 Deletable->False,
 ShowCellBracket->False,
 CellTags->"i:1"],

Cell[TextData[{
 ButtonBox["MatchQ",
  BaseStyle->"Link"],
 " comprueba si algo coincide con un patr\[OAcute]n."
}], "Text",
 Editable->False,
 Deletable->False,
 ShowCellBracket->False,
 CellTags->"i:2"],

Cell[TextData[{
 Cell[BoxData[
  RowBox[{"{", 
   RowBox[{"a", ",", "x", ",", "b"}], "}"}]], "InlineCode"],
 " coincide con el patr\[OAcute]n ",
 Cell[BoxData[
  RowBox[{"{", 
   RowBox[{
    ButtonBox["_",
     BaseStyle->"Link",
     ButtonData->"Blank"], ",", "x", ",", 
    ButtonBox["_",
     BaseStyle->"Link",
     ButtonData->"Blank"]}], "}"}]], "InlineCode"],
 ": "
}], "CodeCaption",
 Editable->False,
 Deletable->False,
 ShowCellBracket->False],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MatchQ", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"a", ",", "x", ",", "b"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"_", ",", "x", ",", "_"}], "}"}]}], "]"}]], "Input",
 Deletable->False,
 CellLabel->"In[1]:="],

Cell[BoxData["True"], "Output",
 Editable->False,
 CellEditDuplicate->False,
 Evaluatable->False,
 CellLabel->"Out[1]="]
}, Open  ]],

Cell[TextData[{
 Cell[BoxData[
  RowBox[{"{", 
   RowBox[{"a", ",", "b", ",", "c"}], "}"}]], "InlineCode"],
 " no coincide, ya que tiene una ",
 Cell[BoxData["b"], "InlineCode"],
 " en medio, y no una ",
 Cell[BoxData["x"], "InlineCode"],
 ":"
}], "CodeCaption",
 Editable->False,
 Deletable->False,
 ShowCellBracket->False],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MatchQ", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"a", ",", "b", ",", "c"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"_", ",", "x", ",", "_"}], "}"}]}], "]"}]], "Input",
 Deletable->False,
 CellLabel->"In[2]:="],

Cell[BoxData["False"], "Output",
 Editable->False,
 CellEditDuplicate->False,
 Evaluatable->False,
 CellLabel->"Out[2]="]
}, Open  ]],

Cell[TextData[{
 "Cualquier lista que tenga dos elementos coincide con el patr\[OAcute]n ",
 Cell[BoxData[
  RowBox[{"{", 
   RowBox[{
    ButtonBox["_",
     BaseStyle->"Link",
     ButtonData->"Blank"], ",", 
    ButtonBox["_",
     BaseStyle->"Link",
     ButtonData->"Blank"]}], "}"}]], "InlineCode"],
 ":"
}], "CodeCaption",
 Editable->False,
 Deletable->False,
 ShowCellBracket->False],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MatchQ", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"a", ",", "a"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"_", ",", "_"}], "}"}]}], "]"}]], "Input",
 Deletable->False,
 CellLabel->"In[3]:="],

Cell[BoxData["True"], "Output",
 Editable->False,
 CellEditDuplicate->False,
 Evaluatable->False,
 CellLabel->"Out[3]="]
}, Open  ]],

Cell[TextData[{
 "Una lista que tenga tres elementos no coincide con el patr\[OAcute]n ",
 Cell[BoxData[
  RowBox[{"{", 
   RowBox[{
    ButtonBox["_",
     BaseStyle->"Link",
     ButtonData->"Blank"], ",", 
    ButtonBox["_",
     BaseStyle->"Link",
     ButtonData->"Blank"]}], "}"}]], "InlineCode"],
 ":"
}], "CodeCaption",
 Editable->False,
 Deletable->False,
 ShowCellBracket->False],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MatchQ", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"a", ",", "a", ",", "a"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"_", ",", "_"}], "}"}]}], "]"}]], "Input",
 Deletable->False,
 CellLabel->"In[4]:="],

Cell[BoxData["False"], "Output",
 Editable->False,
 CellEditDuplicate->False,
 Evaluatable->False,
 CellLabel->"Out[4]="]
}, Open  ]],

Cell[TextData[{
 ButtonBox["MatchQ",
  BaseStyle->"Link"],
 " sirve para cotejar cosas, una por una, con un patr\[OAcute]n. ",
 ButtonBox["Cases",
  BaseStyle->"Link"],
 " elige todos los elementos (\[OpenCurlyDoubleQuote]casos\
\[CloseCurlyDoubleQuote]) de una lista que coinciden con un patr\[OAcute]n \
dado. "
}], "Text",
 Editable->False,
 Deletable->False,
 ShowCellBracket->False,
 CellTags->"i:3"],

Cell[TextData[{
 "Encuentre todos los elementos que coinciden con el patr\[OAcute]n ",
 Cell[BoxData[
  RowBox[{"{", 
   RowBox[{
    ButtonBox["_",
     BaseStyle->"Link",
     ButtonData->"Blank"], ",", 
    ButtonBox["_",
     BaseStyle->"Link",
     ButtonData->"Blank"]}], "}"}]], "InlineCode"],
 ":"
}], "CodeCaption",
 Editable->False,
 Deletable->False,
 ShowCellBracket->False],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Cases", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"a", ",", "a"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"b", ",", "a"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"a", ",", "b", ",", "c"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"b", ",", "b"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"c", ",", "a"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"b", ",", "b", ",", "b"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"_", ",", "_"}], "}"}]}], "]"}]], "Input",
 Deletable->False,
 CellLabel->"In[5]:="],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"a", ",", "a"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"b", ",", "a"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"b", ",", "b"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"c", ",", "a"}], "}"}]}], "}"}]], "Output",
 Editable->False,
 CellEditDuplicate->False,
 Evaluatable->False,
 CellLabel->"Out[5]="]
}, Open  ]],

Cell[TextData[{
 "Encuentre todos los elementos que coinciden con ",
 Cell[BoxData[
  RowBox[{"{", 
   RowBox[{"b", ",", 
    ButtonBox["_",
     BaseStyle->"Link",
     ButtonData->"Blank"]}], "}"}]], "InlineCode"],
 " (o sea, casos de ",
 Cell[BoxData["b"], "InlineCode"],
 " seguido de algo):"
}], "CodeCaption",
 Editable->False,
 Deletable->False,
 ShowCellBracket->False],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Cases", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"a", ",", "a"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"b", ",", "a"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"a", ",", "b", ",", "c"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"b", ",", "b"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"c", ",", "a"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"b", ",", "b", ",", "b"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"b", ",", "_"}], "}"}]}], "]"}]], "Input",
 Deletable->False,
 CellLabel->"In[6]:="],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"b", ",", "a"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"b", ",", "b"}], "}"}]}], "}"}]], "Output",
 Editable->False,
 CellEditDuplicate->False,
 Evaluatable->False,
 CellLabel->"Out[6]="]
}, Open  ]],

Cell[TextData[{
 "Ahora se puede ver lo que sucede al cotejar cada elemento con ",
 Cell[BoxData[
  RowBox[{"{", 
   RowBox[{"b", ",", 
    ButtonBox["_",
     BaseStyle->"Link",
     ButtonData->"Blank"]}], "}"}]], "InlineCode"],
 ":"
}], "CodeCaption",
 Editable->False,
 Deletable->False,
 ShowCellBracket->False],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"MatchQ", "[", 
    RowBox[{"#", ",", 
     RowBox[{"{", 
      RowBox[{"b", ",", "_"}], "}"}]}], "]"}], "&"}], "/@", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"a", ",", "a"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"b", ",", "a"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"a", ",", "b", ",", "c"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"b", ",", "b"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"c", ",", "a"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"b", ",", "b", ",", "b"}], "}"}]}], "}"}]}]], "Input",
 Deletable->False,
 CellLabel->"In[7]:="],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "False", ",", "True", ",", "False", ",", "True", ",", "False", ",", 
   "False"}], "}"}]], "Output",
 Editable->False,
 CellEditDuplicate->False,
 Evaluatable->False,
 CellLabel->"Out[7]="]
}, Open  ]],

Cell[TextData[{
 "Si se usa ",
 ButtonBox["Select",
  BaseStyle->"Link"],
 " para seleccionar coincidencias, se obtiene el mismo resultado que con ",
 ButtonBox["Cases",
  BaseStyle->"Link"],
 ":"
}], "CodeCaption",
 Editable->False,
 Deletable->False,
 ShowCellBracket->False,
 CellTags->"i:4"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Select", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"a", ",", "a"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"b", ",", "a"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"a", ",", "b", ",", "c"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"b", ",", "b"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"c", ",", "a"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"b", ",", "b", ",", "b"}], "}"}]}], "}"}], ",", 
   RowBox[{
    RowBox[{"MatchQ", "[", 
     RowBox[{"#", ",", 
      RowBox[{"{", 
       RowBox[{"b", ",", "_"}], "}"}]}], "]"}], "&"}]}], "]"}]], "Input",
 Deletable->False,
 CellLabel->"In[8]:="],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"b", ",", "a"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"b", ",", "b"}], "}"}]}], "}"}]], "Output",
 Editable->False,
 CellEditDuplicate->False,
 Evaluatable->False,
 CellTags->"LastCellOfAPage",
 CellLabel->"Out[8]="]
}, Open  ]],

Cell[TextData[{
 "En un patr\[OAcute]n, ",
 Cell[BoxData[
  RowBox[{"a", "|", "b"}]], "InlineCodeText"],
 " indica \[OpenCurlyDoubleQuote]cualquiera de a o \
b\[CloseCurlyDoubleQuote]."
}], "Text",
 Editable->False,
 Deletable->False,
 ShowCellBracket->False,
 CellTags->"i:5"],

Cell[TextData[{
 "Encuentre todos los casos de cualquiera de ",
 Cell[BoxData["a"], "InlineCode"],
 " o ",
 Cell[BoxData["b"], "InlineCode"],
 ", seguido de algo:"
}], "CodeCaption",
 Editable->False,
 Deletable->False,
 ShowCellBracket->False],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Cases", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"a", ",", "a"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"b", ",", "a"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"a", ",", "b", ",", "c"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"b", ",", "b"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"c", ",", "a"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"b", ",", "b", ",", "b"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"a", "|", "b"}], ",", "_"}], "}"}]}], "]"}]], "Input",
 Deletable->False,
 CellLabel->"In[9]:="],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"a", ",", "a"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"b", ",", "a"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"b", ",", "b"}], "}"}]}], "}"}]], "Output",
 Editable->False,
 CellEditDuplicate->False,
 Evaluatable->False,
 CellLabel->"Out[9]="]
}, Open  ]],

Cell["\<\
Otro ejemplo: se crea una lista y luego se eligen los elementos que coinciden \
con patrones dados. \
\>", "Text",
 Editable->False,
 Deletable->False,
 ShowCellBracket->False],

Cell["Cree una lista con los d\[IAcute]gitos de los enteros en un tramo:", \
"CodeCaption",
 Editable->False,
 Deletable->False,
 ShowCellBracket->False],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"IntegerDigits", "[", 
  RowBox[{"Range", "[", 
   RowBox[{"100", ",", "500", ",", "55"}], "]"}], "]"}]], "Input",
 Deletable->False,
 CellLabel->"In[10]:="],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", "0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "5", ",", "5"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "1", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "6", ",", "5"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", "2", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", "7", ",", "5"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4", ",", "3", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4", ",", "8", ",", "5"}], "}"}]}], "}"}]], "Output",
 Editable->False,
 CellEditDuplicate->False,
 Evaluatable->False,
 CellLabel->"Out[10]="]
}, Open  ]],

Cell["Encuentre los casos que terminen en 5:", "CodeCaption",
 Editable->False,
 Deletable->False,
 ShowCellBracket->False],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Cases", "[", 
  RowBox[{
   RowBox[{"IntegerDigits", "[", 
    RowBox[{"Range", "[", 
     RowBox[{"100", ",", "500", ",", "55"}], "]"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"_", ",", "_", ",", "5"}], "}"}]}], "]"}]], "Input",
 Deletable->False,
 CellLabel->"In[11]:="],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", "5", ",", "5"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "6", ",", "5"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", "7", ",", "5"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4", ",", "8", ",", "5"}], "}"}]}], "}"}]], "Output",
 Editable->False,
 CellEditDuplicate->False,
 Evaluatable->False,
 CellLabel->"Out[11]="]
}, Open  ]],

Cell["Encuentre los casos que tengan en medio 1 o 2:", "CodeCaption",
 Editable->False,
 Deletable->False,
 ShowCellBracket->False],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Cases", "[", 
  RowBox[{
   RowBox[{"IntegerDigits", "[", 
    RowBox[{"Range", "[", 
     RowBox[{"100", ",", "500", ",", "55"}], "]"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"_", ",", 
     RowBox[{"1", "|", "2"}], ",", "_"}], "}"}]}], "]"}]], "Input",
 Deletable->False,
 CellLabel->"In[12]:="],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"2", ",", "1", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", "2", ",", "0"}], "}"}]}], "}"}]], "Output",
 Editable->False,
 CellEditDuplicate->False,
 Evaluatable->False,
 CellLabel->"Out[12]="]
}, Open  ]],

Cell[TextData[{
 "La notaci\[OAcute]n ",
 Cell[BoxData[
  ButtonBox["__",
   BaseStyle->"Link",
   ButtonData->"BlankSequence"]], "InlineCodeText"],
 " (\[OpenCurlyDoubleQuote]doble guion-bajo\[CloseCurlyDoubleQuote]) en un \
patr\[OAcute]n indica una secuencia cualquiera de cosas."
}], "Text",
 Editable->False,
 Deletable->False,
 ShowCellBracket->False,
 CellTags->"i:6"],

Cell[TextData[{
 "Encuentre los casos que consistan en una secuencia cualquiera que termine \
en ",
 Cell[BoxData["b"], "InlineCode"],
 ":"
}], "CodeCaption",
 Editable->False,
 Deletable->False,
 ShowCellBracket->False],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Cases", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"a", ",", "a"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"b", ",", "a"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"a", ",", "b", ",", "c"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"b", ",", "b"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"c", ",", "a"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"b", ",", "b", ",", "b"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"__", ",", "b"}], "}"}]}], "]"}]], "Input",
 Deletable->False,
 CellLabel->"In[13]:="],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"b", ",", "b"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"b", ",", "b", ",", "b"}], "}"}]}], "}"}]], "Output",
 Editable->False,
 CellEditDuplicate->False,
 Evaluatable->False,
 CellLabel->"Out[13]="]
}, Open  ]],

Cell[TextData[{
 "Encuentre las secuencias que terminen en ",
 Cell[BoxData["a"], "InlineCode"],
 " \[OAcute] ",
 Cell[BoxData["b"], "InlineCode"],
 ", o que comiencen con ",
 Cell[BoxData["c"], "InlineCode"],
 ":"
}], "CodeCaption",
 Editable->False,
 Deletable->False,
 ShowCellBracket->False],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Cases", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"a", ",", "a"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"b", ",", "a"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"a", ",", "b", ",", "c"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"b", ",", "b"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"c", ",", "a"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"b", ",", "b", ",", "b"}], "}"}]}], "}"}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"__", ",", 
      RowBox[{"a", "|", "b"}]}], "}"}], "|", 
    RowBox[{"{", 
     RowBox[{"c", ",", "__"}], "}"}]}]}], "]"}]], "Input",
 Deletable->False,
 CellLabel->"In[14]:="],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"a", ",", "a"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"b", ",", "a"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"b", ",", "b"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"c", ",", "a"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"b", ",", "b", ",", "b"}], "}"}]}], "}"}]], "Output",
 Editable->False,
 CellEditDuplicate->False,
 Evaluatable->False,
 CellLabel->"Out[14]="]
}, Open  ]],

Cell["\<\
Los patrones no se usan solamente con listas: pueden involucrar cualquier \
cosa. \
\>", "Text",
 Editable->False,
 Deletable->False,
 ShowCellBracket->False],

Cell[TextData[{
 "Eleja los casos que coinciden con el patr\[OAcute]n ",
 Cell[BoxData[
  RowBox[{"f", "[", 
   ButtonBox[
    ButtonBox["_",
     BaseStyle->"Link",
     ButtonData->"Blank"],
    BaseStyle->"Link",
    ButtonData->"Blank"], "]"}]], "InlineCode"],
 ":"
}], "CodeCaption",
 Editable->False,
 Deletable->False,
 ShowCellBracket->False],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Cases", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"f", "[", "1", "]"}], ",", 
     RowBox[{"g", "[", 
      RowBox[{"2", ",", "3"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"a", ",", "b", ",", "c"}], "}"}], ",", 
     RowBox[{"f", "[", "x", "]"}], ",", 
     RowBox[{"f", "[", 
      RowBox[{"x", ",", "x"}], "]"}]}], "}"}], ",", 
   RowBox[{"f", "[", "_", "]"}]}], "]"}]], "Input",
 Deletable->False,
 CellLabel->"In[15]:="],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"f", "[", "1", "]"}], ",", 
   RowBox[{"f", "[", "x", "]"}]}], "}"}]], "Output",
 Editable->False,
 CellEditDuplicate->False,
 Evaluatable->False,
 CellLabel->"Out[15]="]
}, Open  ]],

Cell[TextData[{
 "Entre los muchos usos de los patrones est\[AAcute] la definici\[OAcute]n de \
sustituciones. ",
 Cell[BoxData[
  ButtonBox["/.",
   BaseStyle->"Link",
   ButtonData->"ReplaceAll"]], "InlineCodeText"],
 " (\[OpenCurlyDoubleQuote]diagonal punto\[CloseCurlyDoubleQuote]) efect\
\[UAcute]a una sustituci\[OAcute]n."
}], "Text",
 Editable->False,
 Deletable->False,
 ShowCellBracket->False,
 CellTags->"i:7"],

Cell[TextData[{
 "Sustituya b con rojo (",
 ButtonBox["Red en ingl\[EAcute]",
  BaseStyle->"Link"],
 "s) en una lista:"
}], "CodeCaption",
 Editable->False,
 Deletable->False,
 ShowCellBracket->False],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{
   "a", ",", "b", ",", "a", ",", "a", ",", "b", ",", "b", ",", "a", ",", 
    "b"}], "}"}], " ", "/.", " ", 
  RowBox[{"b", "\[Rule]", "Red"}]}]], "Input",
 Deletable->False,
 CellLabel->"In[16]:="],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"a", ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[1, 0, 0], RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       Frame->True,
       FrameStyle->RGBColor[0.6666666666666666, 0., 0.],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 
          1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification])}],
       PlotRangePadding->None],
      "RGBColor[1, 0, 0]"],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 0, 0]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[1, 0, 0],
    Editable->False,
    Selectable->False], ",", "a", ",", "a", ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[1, 0, 0], RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       Frame->True,
       FrameStyle->RGBColor[0.6666666666666666, 0., 0.],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 
          1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification])}],
       PlotRangePadding->None],
      "RGBColor[1, 0, 0]"],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 0, 0]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[1, 0, 0],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[1, 0, 0], RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       Frame->True,
       FrameStyle->RGBColor[0.6666666666666666, 0., 0.],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 
          1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification])}],
       PlotRangePadding->None],
      "RGBColor[1, 0, 0]"],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 0, 0]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[1, 0, 0],
    Editable->False,
    Selectable->False], ",", "a", ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[1, 0, 0], RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       Frame->True,
       FrameStyle->RGBColor[0.6666666666666666, 0., 0.],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 
          1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification])}],
       PlotRangePadding->None],
      "RGBColor[1, 0, 0]"],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 0, 0]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[1, 0, 0],
    Editable->False,
    Selectable->False]}], "}"}]], "Output",
 Editable->False,
 CellEditDuplicate->False,
 Evaluatable->False,
 GraphicsBoxOptions->{BaselinePosition->Scaled[0.1]},
 CellTags->"LastCellOfAPage",
 CellLabel->"Out[16]="]
}, Open  ]],

Cell["\<\
Sustituya todas las instancias de listas de 2 elementos que comiencen con 1:\
\>", "CodeCaption",
 Editable->False,
 Deletable->False,
 ShowCellBracket->False,
 CellTags->"p:194"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"1", ",", "a"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"1", ",", "b"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"1", ",", "a", ",", "b"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"2", ",", "b", ",", "c"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"2", ",", "b"}], "}"}]}], "}"}], "/.", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", "_"}], "}"}], "\[Rule]", "Red"}]}]], "Input",
 Deletable->False,
 CellLabel->"In[17]:="],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[1, 0, 0], RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       Frame->True,
       FrameStyle->RGBColor[0.6666666666666666, 0., 0.],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 
          1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification])}],
       PlotRangePadding->None],
      "RGBColor[1, 0, 0]"],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 0, 0]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[1, 0, 0],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[1, 0, 0], RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       Frame->True,
       FrameStyle->RGBColor[0.6666666666666666, 0., 0.],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 
          1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification])}],
       PlotRangePadding->None],
      "RGBColor[1, 0, 0]"],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 0, 0]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[1, 0, 0],
    Editable->False,
    Selectable->False], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "a", ",", "b"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "b", ",", "c"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "b"}], "}"}]}], "}"}]], "Output",
 Editable->False,
 CellEditDuplicate->False,
 Evaluatable->False,
 CellLabel->"Out[17]="]
}, Open  ]],

Cell["Puede proporcionarse una lista de sustituciones:", "CodeCaption",
 Editable->False,
 Deletable->False,
 ShowCellBracket->False],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"1", ",", "a"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"1", ",", "b"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"1", ",", "a", ",", "b"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"2", ",", "b", ",", "c"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"2", ",", "b"}], "}"}]}], "}"}], "/.", " ", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", "_"}], "}"}], "\[Rule]", "Red"}], ",", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"__", ",", "b"}], "}"}], "\[Rule]", "Yellow"}]}], 
   "}"}]}]], "Input",
 Deletable->False,
 GraphicsBoxOptions->{BaselinePosition->Scaled[0.1]},
 CellLabel->"In[18]:="],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[1, 0, 0], RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       Frame->True,
       FrameStyle->RGBColor[0.6666666666666666, 0., 0.],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 
          1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification])}],
       PlotRangePadding->None],
      "RGBColor[1, 0, 0]"],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 0, 0]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[1, 0, 0],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[1, 0, 0], RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       Frame->True,
       FrameStyle->RGBColor[0.6666666666666666, 0., 0.],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 
          1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification])}],
       PlotRangePadding->None],
      "RGBColor[1, 0, 0]"],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 0, 0]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[1, 0, 0],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[1, 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       Frame->True,
       FrameStyle->RGBColor[0.6666666666666666, 0.6666666666666666, 0.],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 
          1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification])}],
       PlotRangePadding->None],
      "RGBColor[1, 1, 0]"],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 1, 0]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[1, 1, 0],
    Editable->False,
    Selectable->False], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "b", ",", "c"}], "}"}], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[1, 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       Frame->True,
       FrameStyle->RGBColor[0.6666666666666666, 0.6666666666666666, 0.],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 
          1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification])}],
       PlotRangePadding->None],
      "RGBColor[1, 1, 0]"],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 1, 0]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[1, 1, 0],
    Editable->False,
    Selectable->False]}], "}"}]], "Output",
 Editable->False,
 CellEditDuplicate->False,
 Evaluatable->False,
 CellLabel->"Out[18]="]
}, Open  ]],

Cell[TextData[{
 "El patr\[OAcute]n ",
 Cell[BoxData[
  ButtonBox[
   ButtonBox["_",
    BaseStyle->"Link",
    ButtonData->"Blank"],
   BaseStyle->"Link",
   ButtonData->"Blank"]]],
 " \[OpenCurlyDoubleQuote]guion-bajo\[CloseCurlyDoubleQuote] coincide \
absolutamente con todo. Esto significa, por ejemplo, que ",
 Cell[BoxData[
  RowBox[{"{", 
   RowBox[{
    ButtonBox["_",
     BaseStyle->"Link",
     ButtonData->"Blank"], ",", 
    ButtonBox["_",
     BaseStyle->"Link",
     ButtonData->"Blank"]}], "}"}]], "InlineCodeText"],
 " coincida con una lista cualquiera de dos elementos. Ahora bien, \
\[DownQuestion]c\[OAcute]mo hacer si se quiere que ambos elementos sean \
iguales? En ese caso, se usa un patr\[OAcute]n del tipo ",
 Cell[BoxData[
  RowBox[{"{", 
   RowBox[{
    RowBox[{"x", 
     ButtonBox["_",
      BaseStyle->"Link",
      ButtonData->"Blank"]}], ",", 
    RowBox[{"x", 
     ButtonBox["_",
      BaseStyle->"Link",
      ButtonData->"Blank"]}]}], "}"}]], "InlineCodeText"],
 "."
}], "Text",
 Editable->False,
 Deletable->False,
 ShowCellBracket->False],

Cell[TextData[{
 Cell[BoxData[
  RowBox[{"{", 
   RowBox[{
    ButtonBox[
     ButtonBox["_",
      BaseStyle->"Link",
      ButtonData->"Blank"],
     BaseStyle->"Link",
     ButtonData->"Blank"], ",", 
    ButtonBox[
     ButtonBox["_",
      BaseStyle->"Link",
      ButtonData->"Blank"],
     BaseStyle->"Link",
     ButtonData->"Blank"]}], "}"}]], "InlineCode"],
 " coincide con una lista que tenga dos elementos, donde estos sean iguales o \
no:"
}], "CodeCaption",
 Editable->False,
 Deletable->False,
 ShowCellBracket->False],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Cases", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"a", ",", "a", ",", "a"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"a", ",", "a"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"a", ",", "b"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"a", ",", "c"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"b", ",", "a"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"b", ",", "b"}], "}"}], ",", 
     RowBox[{"{", "c", "}"}], ",", 
     RowBox[{"{", "a", "}"}], ",", 
     RowBox[{"{", "b", "}"}]}], "}"}], ",", " ", 
   RowBox[{"{", 
    RowBox[{"_", ",", "_"}], "}"}]}], "]"}]], "Input",
 Deletable->False,
 GraphicsBoxOptions->{BaselinePosition->Scaled[0.1]},
 CellLabel->"In[19]:="],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"a", ",", "a"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"a", ",", "b"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"a", ",", "c"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"b", ",", "a"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"b", ",", "b"}], "}"}]}], "}"}]], "Output",
 Editable->False,
 CellEditDuplicate->False,
 Evaluatable->False,
 GraphicsBoxOptions->{BaselinePosition->Scaled[0.1]},
 CellLabel->"Out[19]="]
}, Open  ]],

Cell[TextData[{
 Cell[BoxData[
  RowBox[{"{", 
   RowBox[{
    RowBox[{"x", 
     ButtonBox[
      ButtonBox["_",
       BaseStyle->"Link",
       ButtonData->"Blank"],
      BaseStyle->"Link",
      ButtonData->"Blank"]}], ",", 
    RowBox[{"x", 
     ButtonBox[
      ButtonBox["_",
       BaseStyle->"Link",
       ButtonData->"Blank"],
      BaseStyle->"Link",
      ButtonData->"Blank"]}]}], "}"}]], "InlineCode"],
 " coincide solamente con las listas de 2 elementos que sean \
id\[EAcute]nticos:"
}], "CodeCaption",
 Editable->False,
 Deletable->False,
 ShowCellBracket->False],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Cases", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"a", ",", "a", ",", "a"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"a", ",", "a"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"a", ",", "b"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"a", ",", "c"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"b", ",", "a"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"b", ",", "b"}], "}"}], ",", 
     RowBox[{"{", "c", "}"}], ",", 
     RowBox[{"{", "a", "}"}], ",", 
     RowBox[{"{", "b", "}"}]}], "}"}], ",", " ", 
   RowBox[{"{", 
    RowBox[{"x_", ",", "x_"}], "}"}]}], "]"}]], "Input",
 Deletable->False,
 GraphicsBoxOptions->{BaselinePosition->Scaled[0.1]},
 CellLabel->"In[20]:="],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"a", ",", "a"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"b", ",", "b"}], "}"}]}], "}"}]], "Output",
 Editable->False,
 CellEditDuplicate->False,
 Evaluatable->False,
 GraphicsBoxOptions->{BaselinePosition->Scaled[0.1]},
 CellLabel->"Out[20]="]
}, Open  ]],

Cell[TextData[{
 Cell[BoxData[
  RowBox[{"x", 
   ButtonBox["_",
    BaseStyle->"Link",
    ButtonData->"Blank"]}]], "InlineCodeText"],
 " es ejemplo de un ",
 StyleBox["patr\[OAcute]n denominado",
  FontSlant->"Italic"],
 ". Los patrones denominados son particularmente importantes en las \
sustituciones, pues con ellos se puede usar partes en lo que se quiere \
sustituir."
}], "Text",
 Editable->False,
 Deletable->False,
 ShowCellBracket->False,
 CellTags->"i:8"],

Cell[TextData[{
 "Use el patr\[OAcute]n denominado ",
 Cell[BoxData[
  RowBox[{"x", 
   ButtonBox[
    ButtonBox["_",
     BaseStyle->"Link",
     ButtonData->"Blank"],
    BaseStyle->"Link",
    ButtonData->"Blank"]}]], "InlineCode"],
 " en una sustituci\[OAcute]n:"
}], "CodeCaption",
 Editable->False,
 Deletable->False,
 ShowCellBracket->False],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"1", ",", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[1, 0, 0], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0.6666666666666666, 0., 0.],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 
             1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
              Magnification])}],
          PlotRangePadding->None],
         "RGBColor[1, 0, 0]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 0, 0]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[1, 0, 0],
       Editable->False,
       Selectable->False]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"1", ",", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[0, 0, 1], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0., 0., 0.6666666666666666],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 
             1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
              Magnification])}],
          PlotRangePadding->None],
         "RGBColor[0, 0, 1]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 0, 1]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[0, 0, 1],
       Editable->False,
       Selectable->False]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"1", ",", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[1, 0, 0], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0.6666666666666666, 0., 0.],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 
             1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
              Magnification])}],
          PlotRangePadding->None],
         "RGBColor[1, 0, 0]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 0, 0]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[1, 0, 0],
       Editable->False,
       Selectable->False], ",", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[0, 0, 1], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0., 0., 0.6666666666666666],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 
             1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
              Magnification])}],
          PlotRangePadding->None],
         "RGBColor[0, 0, 1]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 0, 1]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[0, 0, 1],
       Editable->False,
       Selectable->False]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"2", ",", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[0, 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0., 0.6666666666666666, 0.],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 
             1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
              Magnification])}],
          PlotRangePadding->None],
         "RGBColor[0, 1, 0]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 1, 0]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[0, 1, 0],
       Editable->False,
       Selectable->False], ",", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[0, 0, 1], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0., 0., 0.6666666666666666],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 
             1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
              Magnification])}],
          PlotRangePadding->None],
         "RGBColor[0, 0, 1]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 0, 1]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[0, 0, 1],
       Editable->False,
       Selectable->False]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"2", ",", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[0, 0, 1], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0., 0., 0.6666666666666666],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 
             1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
              Magnification])}],
          PlotRangePadding->None],
         "RGBColor[0, 0, 1]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 0, 1]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[0, 0, 1],
       Editable->False,
       Selectable->False]}], "}"}]}], "}"}], " ", "/.", " ", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", "x_"}], "}"}], "\[Rule]", 
   RowBox[{"{", 
    RowBox[{"x", ",", "x", ",", "Yellow", ",", "x", ",", "x"}], 
    "}"}]}]}]], "Input",
 Deletable->False,
 GraphicsBoxOptions->{BaselinePosition->Scaled[0.1]},
 CellLabel->"In[21]:="],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {RGBColor[1, 0, 0], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         Frame->True,
         FrameStyle->RGBColor[0.6666666666666666, 0., 0.],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 
            1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification])}],
         PlotRangePadding->None],
        "RGBColor[1, 0, 0]"],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 0, 0]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
             Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      RGBColor[1, 0, 0],
      Editable->False,
      Selectable->False], ",", 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {RGBColor[1, 0, 0], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         Frame->True,
         FrameStyle->RGBColor[0.6666666666666666, 0., 0.],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 
            1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification])}],
         PlotRangePadding->None],
        "RGBColor[1, 0, 0]"],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 0, 0]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
             Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      RGBColor[1, 0, 0],
      Editable->False,
      Selectable->False], ",", 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {RGBColor[1, 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         Frame->True,
         FrameStyle->RGBColor[0.6666666666666666, 0.6666666666666666, 0.],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 
            1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification])}],
         PlotRangePadding->None],
        "RGBColor[1, 1, 0]"],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 1, 0]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
             Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      RGBColor[1, 1, 0],
      Editable->False,
      Selectable->False], ",", 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {RGBColor[1, 0, 0], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         Frame->True,
         FrameStyle->RGBColor[0.6666666666666666, 0., 0.],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 
            1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification])}],
         PlotRangePadding->None],
        "RGBColor[1, 0, 0]"],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 0, 0]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
             Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      RGBColor[1, 0, 0],
      Editable->False,
      Selectable->False], ",", 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {RGBColor[1, 0, 0], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         Frame->True,
         FrameStyle->RGBColor[0.6666666666666666, 0., 0.],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 
            1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification])}],
         PlotRangePadding->None],
        "RGBColor[1, 0, 0]"],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 0, 0]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
             Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      RGBColor[1, 0, 0],
      Editable->False,
      Selectable->False]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {RGBColor[0, 0, 1], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         Frame->True,
         FrameStyle->RGBColor[0., 0., 0.6666666666666666],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 
            1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification])}],
         PlotRangePadding->None],
        "RGBColor[0, 0, 1]"],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 0, 1]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
             Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      RGBColor[0, 0, 1],
      Editable->False,
      Selectable->False], ",", 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {RGBColor[0, 0, 1], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         Frame->True,
         FrameStyle->RGBColor[0., 0., 0.6666666666666666],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 
            1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification])}],
         PlotRangePadding->None],
        "RGBColor[0, 0, 1]"],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 0, 1]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
             Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      RGBColor[0, 0, 1],
      Editable->False,
      Selectable->False], ",", 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {RGBColor[1, 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         Frame->True,
         FrameStyle->RGBColor[0.6666666666666666, 0.6666666666666666, 0.],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 
            1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification])}],
         PlotRangePadding->None],
        "RGBColor[1, 1, 0]"],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 1, 0]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
             Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      RGBColor[1, 1, 0],
      Editable->False,
      Selectable->False], ",", 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {RGBColor[0, 0, 1], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         Frame->True,
         FrameStyle->RGBColor[0., 0., 0.6666666666666666],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 
            1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification])}],
         PlotRangePadding->None],
        "RGBColor[0, 0, 1]"],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 0, 1]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
             Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      RGBColor[0, 0, 1],
      Editable->False,
      Selectable->False], ",", 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {RGBColor[0, 0, 1], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         Frame->True,
         FrameStyle->RGBColor[0., 0., 0.6666666666666666],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 
            1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification])}],
         PlotRangePadding->None],
        "RGBColor[0, 0, 1]"],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 0, 1]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
             Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      RGBColor[0, 0, 1],
      Editable->False,
      Selectable->False]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {RGBColor[1, 0, 0], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         Frame->True,
         FrameStyle->RGBColor[0.6666666666666666, 0., 0.],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 
            1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification])}],
         PlotRangePadding->None],
        "RGBColor[1, 0, 0]"],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 0, 0]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
             Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      RGBColor[1, 0, 0],
      Editable->False,
      Selectable->False], ",", 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {RGBColor[0, 0, 1], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         Frame->True,
         FrameStyle->RGBColor[0., 0., 0.6666666666666666],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 
            1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification])}],
         PlotRangePadding->None],
        "RGBColor[0, 0, 1]"],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 0, 1]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
             Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      RGBColor[0, 0, 1],
      Editable->False,
      Selectable->False]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {RGBColor[0, 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         Frame->True,
         FrameStyle->RGBColor[0., 0.6666666666666666, 0.],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 
            1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification])}],
         PlotRangePadding->None],
        "RGBColor[0, 1, 0]"],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 1, 0]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
             Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      RGBColor[0, 1, 0],
      Editable->False,
      Selectable->False], ",", 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {RGBColor[0, 0, 1], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         Frame->True,
         FrameStyle->RGBColor[0., 0., 0.6666666666666666],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 
            1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification])}],
         PlotRangePadding->None],
        "RGBColor[0, 0, 1]"],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 0, 1]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
             Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      RGBColor[0, 0, 1],
      Editable->False,
      Selectable->False]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {RGBColor[0, 0, 1], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         Frame->True,
         FrameStyle->RGBColor[0., 0., 0.6666666666666666],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 
            1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification])}],
         PlotRangePadding->None],
        "RGBColor[0, 0, 1]"],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 0, 1]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
             Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      RGBColor[0, 0, 1],
      Editable->False,
      Selectable->False]}], "}"}]}], "}"}]], "Output",
 Editable->False,
 CellEditDuplicate->False,
 Evaluatable->False,
 GraphicsBoxOptions->{BaselinePosition->Scaled[0.1]},
 CellLabel->"Out[21]="]
}, Open  ]],

Cell[TextData[{
 "La forma ",
 StyleBox["a",
  FontSlant->"Italic"],
 Cell[BoxData[
  ButtonBox["\[Rule]",
   BaseStyle->"Link",
   ButtonData->"Rule"]], "InlineCodeText"],
 StyleBox["b",
  FontSlant->"Italic"],
 " se conoce generalmente como ",
 StyleBox["regla",
  FontSlant->"Italic"],
 ". Si ",
 Cell[BoxData[
  RowBox[{"x", 
   ButtonBox["_",
    BaseStyle->"Link",
    ButtonData->"Blank"]}]], "InlineCodeText"],
 " aparece en el lado izquierdo de una regla, entonces todo aquello que \
coincida con ",
 Cell[BoxData[
  RowBox[{"x", 
   ButtonBox["_",
    BaseStyle->"Link",
    ButtonData->"Blank"]}]], "InlineCodeText"],
 " se ver\[AAcute] como ",
 Cell[BoxData["x"], "InlineCodeText"],
 " en el lado derecho."
}], "Text",
 Editable->False,
 Deletable->False,
 ShowCellBracket->False,
 CellTags->"i:9"],

Cell[TextData[{
 "Use ",
 Cell[BoxData["x"], "InlineCode"],
 " en el lado derecho de la regla para referirse a aquello que coincida con \
",
 Cell[BoxData[
  RowBox[{"x", 
   ButtonBox["_",
    BaseStyle->"Link",
    ButtonData->"Blank"]}]], "InlineCode"],
 ":"
}], "CodeCaption",
 Editable->False,
 Deletable->False,
 ShowCellBracket->False],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{
    RowBox[{"f", "[", "1", "]"}], ",", 
    RowBox[{"g", "[", "2", "]"}], ",", 
    RowBox[{"f", "[", "2", "]"}], ",", 
    RowBox[{"f", "[", "6", "]"}], ",", 
    RowBox[{"g", "[", "3", "]"}]}], "}"}], "/.", 
  RowBox[{
   RowBox[{"f", "[", "x_", "]"}], "\[Rule]", 
   RowBox[{"x", "+", "10"}]}]}]], "Input",
 Deletable->False,
 CellLabel->"In[22]:="],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"11", ",", 
   RowBox[{"g", "[", "2", "]"}], ",", "12", ",", "16", ",", 
   RowBox[{"g", "[", "3", "]"}]}], "}"}]], "Output",
 Editable->False,
 CellEditDuplicate->False,
 Evaluatable->False,
 CellLabel->"Out[22]="]
}, Open  ]],

Cell[TextData[{
 "Tambi\[EAcute]n se pueden usar reglas dentro de ",
 ButtonBox["Cases",
  BaseStyle->"Link"],
 ". "
}], "Text",
 Editable->False,
 Deletable->False,
 ShowCellBracket->False],

Cell[TextData[{
 "Seleccione los elementos de la lista que coincidan con ",
 Cell[BoxData[
  RowBox[{"f", "[", 
   RowBox[{"x", 
    ButtonBox["_",
     BaseStyle->"Link",
     ButtonData->"Blank"]}], "]"}]], "InlineCode"],
 ", y obtenga el resultado de sustituirlos por ",
 Cell[BoxData[
  RowBox[{"x", "+", "10"}]], "InlineCode"],
 ":"
}], "CodeCaption",
 Editable->False,
 Deletable->False,
 ShowCellBracket->False],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Cases", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"f", "[", "1", "]"}], ",", 
     RowBox[{"g", "[", "2", "]"}], ",", 
     RowBox[{"f", "[", "2", "]"}], ",", 
     RowBox[{"f", "[", "6", "]"}], ",", 
     RowBox[{"g", "[", "3", "]"}]}], "}"}], ",", 
   RowBox[{
    RowBox[{"f", "[", "x_", "]"}], "\[Rule]", 
    RowBox[{"x", "+", "10"}]}]}], "]"}]], "Input",
 Deletable->False,
 CellLabel->"In[23]:="],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"11", ",", "12", ",", "16"}], "}"}]], "Output",
 Editable->False,
 CellEditDuplicate->False,
 Evaluatable->False,
 CellLabel->"Out[23]="]
}, Open  ]],

Cell[TextData[{
 ButtonBox["M\[AAcute]s adelante",
  BaseStyle->"Hyperlink",
  ButtonData->{"EIWL2-38-assigning-names-to-things.nb", None}],
 ", se ver\[AAcute] la importancia crucial de los patrones denominados cuando \
se usan en funciones definidas por el usuario en Wolfram Language."
}], "Text",
 Editable->False,
 Deletable->False,
 ShowCellBracket->False,
 CellTags->"LastCellOfAPage"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Vocabulario", "VocabularySection",
 Editable->False,
 Deletable->False,
 ShowCellBracket->False,
 CellTags->"p:195"],

Cell[BoxData[GridBox[{
   {
    ButtonBox["_",
     BaseStyle->"CodeLink",
     ButtonData->"Blank"], " ", Cell[
    "patr\[OAcute]n que representa cualquier cosa \
(\[OpenCurlyDoubleQuote]guion-bajo\[CloseCurlyDoubleQuote]) ", 
     "VocabularyText"]},
   {
    ButtonBox[
     RowBox[{"_", "\[ThinSpace]", "_"}],
     BaseStyle->"CodeLink",
     ButtonData->"BlankSequence"], " ", Cell["\<\
patr\[OAcute]n que representa cualquier secuencia \
(\[OpenCurlyDoubleQuote]doble guion-bajo\[CloseCurlyDoubleQuote]) \
\>", "VocabularyText"]},
   {
    StyleBox[
     RowBox[{
      StyleBox["x", "CodeVariableLrg"], "_"}]], " ", Cell[TextData[{
     "patr\[OAcute]n denominado ",
     Cell[BoxData[
      StyleBox["x", "CodeVariable"]], "InlineCode"]
    }], "VocabularyText"]},
   {
    RowBox[{
     StyleBox["a", "CodeVariableLrg"], 
     ButtonBox[
      AdjustmentBox["|",
       BoxBaselineShift->-0.19095140804656105`,
       BoxMargins->{{0., 0.}, {0.29095140804656106`, -0.19095140804656105`}}],
      
      BaseStyle->"CodeLink",
      ButtonData->"Alternatives"], 
     StyleBox["b", "CodeVariableLrg"]}], " ", Cell[TextData[{
     "patr\[OAcute]n que coincide con ",
     Cell[BoxData[
      StyleBox["a", "CodeVariable"]], "InlineCode"],
     " o ",
     Cell[BoxData[
      StyleBox["b", "CodeVariable"]], "InlineCode"]
    }], "VocabularyText"]},
   {
    RowBox[{
     ButtonBox["MatchQ",
      BaseStyle->"CodeLink"], "[", 
     RowBox[{
      StyleBox["expr", "CodeVariableLrg"], ",", 
      StyleBox["patr\[OAcute]n", "CodeVariableLrg"]}], "]"}], " ", Cell[
    TextData[{
     "comprueba si ",
     Cell[BoxData[
      StyleBox["expr", "CodeVariable"]], "InlineCode"],
     " coincide con un patr\[OAcute]n"
    }], "VocabularyText"]},
   {
    RowBox[{
     ButtonBox["Cases",
      BaseStyle->"CodeLink"], "[", 
     RowBox[{
      StyleBox["lista", "CodeVariableLrg"], ",", 
      StyleBox["patr\[OAcute]n", "CodeVariableLrg"]}], "]"}], " ", Cell[
    "encuentra los casos donde aparece un patr\[OAcute]n en una lista ", 
     "VocabularyText"]},
   {
    RowBox[{
     StyleBox["lhs", "CodeVariableLrg"], 
     ButtonBox["\[Rule]",
      BaseStyle->"CodeLink",
      ButtonData->"Rule"], 
     StyleBox["rhs", "CodeVariableLrg"]}], " ", Cell[TextData[{
     "regla que transforma ",
     Cell[BoxData[
      StyleBox["lhs", "CodeVariable"]], "InlineCode"],
     " en ",
     Cell[BoxData[
      StyleBox["rhs", "CodeVariable"]], "InlineCode"]
    }], "VocabularyText"]},
   {
    RowBox[{
     StyleBox["expr", "CodeVariableLrg"], 
     ButtonBox["/.",
      BaseStyle->"CodeLink",
      ButtonData->"ReplaceAll"], 
     StyleBox["lhs", "CodeVariableLrg"], 
     ButtonBox["\[Rule]",
      BaseStyle->"CodeLink",
      ButtonData->"Rule"], 
     StyleBox["rhs", "CodeVariableLrg"]}], " ", Cell[TextData[{
     "sustituye ",
     Cell[BoxData[
      StyleBox["lhs", "CodeVariable"]], "InlineCode"],
     " por ",
     Cell[BoxData[
      StyleBox["rhs", "CodeVariable"]], "InlineCode"],
     " en ",
     Cell[BoxData[
      StyleBox["expr", "CodeVariable"]], "InlineCode"]
    }], "VocabularyText"]}
  }]], "VocabularyTable",
 Editable->False,
 Deletable->False,
 ShowCellBracket->False,
 GridBoxOptions->{
 GridBoxDividers->{
  "Columns" -> {{False}}, "Rows" -> {False, {True, True, True, 
      Directive[
       Thickness[1.5], "VocabDivColor"], True, True, True, True}, False}}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 DynamicModuleBox[{$CellContext`open$$ = False}, 
  TagBox[GridBox[{
     {
      StyleBox["\<\"Exercises\"\>",
       StripOnInput->False,
       FontSlant->"Italic"], 
      PaneBox[
       TagBox[
        ButtonBox[
         DynamicBox[ToBoxes[
           If[$CellContext`open$$, 
            Row[{
              Style["-", "ExercisePreviewButtonTextHighlight"], 
              Style[" Preview Exercises", "ExercisePreviewButtonText"]}], 
            Row[{
              Style["+", "ExercisePreviewButtonTextHighlight"], 
              Style[" Preview Exercises", "ExercisePreviewButtonText"]}]], 
           StandardForm],
          ImageSizeCache->{142., {1., 12.}}],
         Appearance->None,
         ButtonFunction:>(
          If[$CellContext`open$$, $CellContext`open$$ = 
            False, $CellContext`open$$ = True]; NotebookFind[
            EvaluationNotebook[], "ExerciseSummaryCell", Next, CellStyle, 
            WrapAround -> True, AutoScroll -> False]; FrontEndTokenExecute[
            EvaluationNotebook[], "ExpandSelection"]; FrontEndExecute[
            FrontEndToken[
             EvaluationNotebook[], "OpenCloseGroup"]]),
         Evaluator->Automatic,
         Method->"Preemptive"],
        MouseAppearanceTag["LinkHand"]],
       Alignment->Right,
       ImageSize->Full]}
    },
    AutoDelete->False,
    GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
    GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
   "Grid"],
  DynamicModuleValues:>{}]], "ExerciseSection",
 Editable->False,
 ShowCellBracket->False,
 GeneratedCell->True,
 CellAutoOverwrite->True,
 CellChangeTimes->{3.669991951589675*^9},
 ShowStringCharacters->False],

Cell[CellGroupData[{

Cell[BoxData[
 TagBox[GridBox[{
    {
     TagBox[GridBox[{
        {
         PaneBox[
          StyleBox["\<\"8 Exercises Available\"\>", "ExerciseSummaryHeading",
           StripOnInput->False],
          ImageMargins->{{20, 0}, {0, 10}}]}
       },
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
       
       GridBoxSpacings->{"Columns" -> {{Automatic}}, "Rows" -> {{0}}}],
      "Column"], 
     PaneBox[
      ButtonBox[
       StyleBox["\<\"Get Started \[RightGuillemet]\"\>", 
        "ExerciseSummaryHeading",
        StripOnInput->False],
       Appearance->None,
       ButtonFunction:>NotebookLocate[{"EIWL2-32-patterns-exercises.nb", ""}],
       
       Evaluator->Automatic,
       Method->"Preemptive"],
      FrameMargins->{{10, 0}, {10, 10}},
      ImageSize->Full]}
   },
   AutoDelete->False,
   GridBoxAlignment->{"Columns" -> {{Left}}},
   GridBoxItemSize->{"Columns" -> {
       Scaled[0.7], 
       Scaled[0.3]}, "Rows" -> {{Automatic}}}],
  "Grid"]], "ExerciseSummaryCell",
 Editable->False,
 Deletable->False,
 ShowCellBracket->False],

Cell[CellGroupData[{

Cell[TextData[{
 "Encuentre las listas de longitud 3 o m\[AAcute]s, que comiencen con 1 y \
terminen con 9, en ",
 Cell[BoxData[
  RowBox[{
   ButtonBox["IntegerDigits",
    BaseStyle->"CodeLink"], "[", 
   RowBox[{
    ButtonBox["Range",
     BaseStyle->"CodeLink"], "[", "1000", "]"}], "]"}]], "InlineCode"],
 ".",
 StyleBox[ButtonBox["\[NonBreakingSpace]\[RightGuillemet]",
  Appearance->None,
  Evaluator->Automatic,
  Method->"Preemptive",
  ButtonFunction:>(SelectionMove[
     ButtonNotebook[], All, ButtonCell, AutoScroll -> False]; 
   FrontEndExecute[
     FrontEndToken[
      ButtonNotebook[], "OpenCloseGroup"]])],
  FontColor->RGBColor[1, 0.501961, 0]]
}], "Exercise",
 Editable->False,
 Selectable->False,
 Deletable->False,
 CellDingbat->Cell[
  "32.1", "ExerciseNumber", FontColor -> 
   RGBColor[0.9019607843137255, 0.4117647058823529, 0.027450980392156862`]],
 ShowCellBracket->False],

Cell[BoxData[
 PaneBox[GridBox[{
    {" ", 
     StyleBox[
      RowBox[{"Expected", " ", 
       RowBox[{"output", ":"}]}],
      Editable->False,
      Selectable->False,
      StripOnInput->False,
      FontColor->RGBColor[0.45, 0.45, 0.45]], " "},
    {" ", 
     InterpretationBox[Cell[BoxData[
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"1", ",", "0", ",", "9"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"1", ",", "1", ",", "9"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"1", ",", "2", ",", "9"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"1", ",", "3", ",", "9"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"1", ",", "4", ",", "9"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"1", ",", "5", ",", "9"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"1", ",", "6", ",", "9"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"1", ",", "7", ",", "9"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"1", ",", "8", ",", "9"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"1", ",", "9", ",", "9"}], "}"}]}], "}"}]], 
       "ExerciseOutput"],
      Apply[TextCell, 
       Cell[
        BoxData[
         RowBox[{"{", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{"1", ",", "0", ",", "9"}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{"1", ",", "1", ",", "9"}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{"1", ",", "2", ",", "9"}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{"1", ",", "3", ",", "9"}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{"1", ",", "4", ",", "9"}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{"1", ",", "5", ",", "9"}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{"1", ",", "6", ",", "9"}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{"1", ",", "7", ",", "9"}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{"1", ",", "8", ",", "9"}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{"1", ",", "9", ",", "9"}], "}"}]}], "}"}]], 
        "ExerciseOutput", Selectable -> False, Copyable -> False, Editable -> 
        False, ShowCellBracket -> False]]], " "}
   },
   GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Center}}},
   GridBoxBackground->{"Columns" -> {{
        RGBColor[1, 1, 1]}}},
   GridBoxSpacings->{"Columns" -> {{Automatic}}, "Rows" -> {{1}}}],
  FrameMargins->0]], "ExerciseOutput",
 Editable->False,
 Selectable->False,
 Deletable->False,
 CellFrame->{{1, 1}, {1, 1}},
 ShowCellBracket->False,
 CellFrameColor->RGBColor[0.85, 0.85, 0.85],
 LineBreakWithin->Automatic]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 "Encuentre las listas con tres elementos id\[EAcute]nticos en ",
 Cell[BoxData[
  RowBox[{
   ButtonBox["IntegerDigits",
    BaseStyle->"CodeLink"], "[", 
   RowBox[{
    ButtonBox["Range",
     BaseStyle->"CodeLink"], "[", "1000", "]"}], "]"}]], "InlineCode"],
 ".",
 StyleBox[ButtonBox["\[NonBreakingSpace]\[RightGuillemet]",
  Appearance->None,
  Evaluator->Automatic,
  Method->"Preemptive",
  ButtonFunction:>(SelectionMove[
     ButtonNotebook[], All, ButtonCell, AutoScroll -> False]; 
   FrontEndExecute[
     FrontEndToken[
      ButtonNotebook[], "OpenCloseGroup"]])],
  FontColor->RGBColor[1, 0.501961, 0]]
}], "Exercise",
 Editable->False,
 Selectable->False,
 Deletable->False,
 CellDingbat->Cell[
  "32.2", "ExerciseNumber", FontColor -> 
   RGBColor[0.9019607843137255, 0.4117647058823529, 0.027450980392156862`]],
 ShowCellBracket->False],

Cell[BoxData[
 PaneBox[GridBox[{
    {" ", 
     StyleBox[
      RowBox[{"Expected", " ", 
       RowBox[{"output", ":"}]}],
      Editable->False,
      Selectable->False,
      StripOnInput->False,
      FontColor->RGBColor[0.45, 0.45, 0.45]], " "},
    {" ", 
     InterpretationBox[Cell[BoxData[
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"1", ",", "1", ",", "1"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"2", ",", "2", ",", "2"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"3", ",", "3", ",", "3"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"4", ",", "4", ",", "4"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"5", ",", "5", ",", "5"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"6", ",", "6", ",", "6"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"7", ",", "7", ",", "7"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"8", ",", "8", ",", "8"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"9", ",", "9", ",", "9"}], "}"}]}], "}"}]], 
       "ExerciseOutput"],
      Apply[TextCell, 
       Cell[
        BoxData[
         RowBox[{"{", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{"1", ",", "1", ",", "1"}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{"2", ",", "2", ",", "2"}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{"3", ",", "3", ",", "3"}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{"4", ",", "4", ",", "4"}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{"5", ",", "5", ",", "5"}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{"6", ",", "6", ",", "6"}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{"7", ",", "7", ",", "7"}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{"8", ",", "8", ",", "8"}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{"9", ",", "9", ",", "9"}], "}"}]}], "}"}]], 
        "ExerciseOutput", Selectable -> False, Copyable -> False, Editable -> 
        False, ShowCellBracket -> False]]], " "}
   },
   GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Center}}},
   GridBoxBackground->{"Columns" -> {{
        RGBColor[1, 1, 1]}}},
   GridBoxSpacings->{"Columns" -> {{Automatic}}, "Rows" -> {{1}}}],
  FrameMargins->0]], "ExerciseOutput",
 Editable->False,
 Selectable->False,
 Deletable->False,
 CellFrame->{{1, 1}, {1, 1}},
 ShowCellBracket->False,
 CellFrameColor->RGBColor[0.85, 0.85, 0.85],
 LineBreakWithin->Automatic]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 "En las listas de los d\[IAcute]gitos de los 1000 primeros cuadrados, \
encuentre las que comiencen con 9 y terminen con 0 o 1.",
 StyleBox[ButtonBox["\[NonBreakingSpace]\[RightGuillemet]",
  Appearance->None,
  Evaluator->Automatic,
  Method->"Preemptive",
  ButtonFunction:>(SelectionMove[
     ButtonNotebook[], All, ButtonCell, AutoScroll -> False]; 
   FrontEndExecute[
     FrontEndToken[
      ButtonNotebook[], "OpenCloseGroup"]])],
  FontColor->RGBColor[1, 0.501961, 0]]
}], "Exercise",
 Editable->False,
 Selectable->False,
 Deletable->False,
 CellDingbat->Cell[
  "32.3", "ExerciseNumber", FontColor -> 
   RGBColor[0.9019607843137255, 0.4117647058823529, 0.027450980392156862`]],
 ShowCellBracket->False],

Cell[BoxData[
 PaneBox[GridBox[{
    {" ", 
     StyleBox[
      RowBox[{"Expected", " ", 
       RowBox[{"output", ":"}]}],
      Editable->False,
      Selectable->False,
      StripOnInput->False,
      FontColor->RGBColor[0.45, 0.45, 0.45]], " "},
    {" ", 
     InterpretationBox[Cell[BoxData[
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"9", ",", "0", ",", "0"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"9", ",", "6", ",", "1"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"9", ",", "8", ",", "0", ",", "1"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"9", ",", "0", ",", "0", ",", "0", ",", "0"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"9", ",", "0", ",", "6", ",", "0", ",", "1"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"9", ",", "5", ",", "4", ",", "8", ",", "1"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"9", ",", "6", ",", "1", ",", "0", ",", "0"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"9", ",", "6", ",", "7", ",", "2", ",", "1"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"9", ",", "0", ",", "0", ",", "6", ",", "0", ",", "1"}], 
          "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"9", ",", "0", ",", "2", ",", "5", ",", "0", ",", "0"}], 
          "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"9", ",", "0", ",", "4", ",", "4", ",", "0", ",", "1"}], 
          "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"9", ",", "1", ",", "9", ",", "6", ",", "8", ",", "1"}], 
          "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"9", ",", "2", ",", "1", ",", "6", ",", "0", ",", "0"}], 
          "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"9", ",", "2", ",", "3", ",", "5", ",", "2", ",", "1"}], 
          "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"9", ",", "3", ",", "8", ",", "9", ",", "6", ",", "1"}], 
          "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"9", ",", "4", ",", "0", ",", "9", ",", "0", ",", "0"}], 
          "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"9", ",", "4", ",", "2", ",", "8", ",", "4", ",", "1"}], 
          "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"9", ",", "5", ",", "8", ",", "4", ",", "4", ",", "1"}], 
          "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"9", ",", "6", ",", "0", ",", "4", ",", "0", ",", "0"}], 
          "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"9", ",", "6", ",", "2", ",", "3", ",", "6", ",", "1"}], 
          "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"9", ",", "7", ",", "8", ",", "1", ",", "2", ",", "1"}], 
          "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"9", ",", "8", ",", "0", ",", "1", ",", "0", ",", "0"}], 
          "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"9", ",", "8", ",", "2", ",", "0", ",", "8", ",", "1"}], 
          "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"9", ",", "9", ",", "8", ",", "0", ",", "0", ",", "1"}], 
          "}"}]}], "}"}]], "ExerciseOutput"],
      Apply[TextCell, 
       Cell[
        BoxData[
         RowBox[{"{", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{"9", ",", "0", ",", "0"}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{"9", ",", "6", ",", "1"}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{"9", ",", "8", ",", "0", ",", "1"}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{"9", ",", "0", ",", "0", ",", "0", ",", "0"}], "}"}], 
             ",", 
             RowBox[{"{", 
               RowBox[{"9", ",", "0", ",", "6", ",", "0", ",", "1"}], "}"}], 
             ",", 
             RowBox[{"{", 
               RowBox[{"9", ",", "5", ",", "4", ",", "8", ",", "1"}], "}"}], 
             ",", 
             RowBox[{"{", 
               RowBox[{"9", ",", "6", ",", "1", ",", "0", ",", "0"}], "}"}], 
             ",", 
             RowBox[{"{", 
               RowBox[{"9", ",", "6", ",", "7", ",", "2", ",", "1"}], "}"}], 
             ",", 
             RowBox[{"{", 
               
               RowBox[{
                "9", ",", "0", ",", "0", ",", "6", ",", "0", ",", "1"}], 
               "}"}], ",", 
             RowBox[{"{", 
               
               RowBox[{
                "9", ",", "0", ",", "2", ",", "5", ",", "0", ",", "0"}], 
               "}"}], ",", 
             RowBox[{"{", 
               
               RowBox[{
                "9", ",", "0", ",", "4", ",", "4", ",", "0", ",", "1"}], 
               "}"}], ",", 
             RowBox[{"{", 
               
               RowBox[{
                "9", ",", "1", ",", "9", ",", "6", ",", "8", ",", "1"}], 
               "}"}], ",", 
             RowBox[{"{", 
               
               RowBox[{
                "9", ",", "2", ",", "1", ",", "6", ",", "0", ",", "0"}], 
               "}"}], ",", 
             RowBox[{"{", 
               
               RowBox[{
                "9", ",", "2", ",", "3", ",", "5", ",", "2", ",", "1"}], 
               "}"}], ",", 
             RowBox[{"{", 
               
               RowBox[{
                "9", ",", "3", ",", "8", ",", "9", ",", "6", ",", "1"}], 
               "}"}], ",", 
             RowBox[{"{", 
               
               RowBox[{
                "9", ",", "4", ",", "0", ",", "9", ",", "0", ",", "0"}], 
               "}"}], ",", 
             RowBox[{"{", 
               
               RowBox[{
                "9", ",", "4", ",", "2", ",", "8", ",", "4", ",", "1"}], 
               "}"}], ",", 
             RowBox[{"{", 
               
               RowBox[{
                "9", ",", "5", ",", "8", ",", "4", ",", "4", ",", "1"}], 
               "}"}], ",", 
             RowBox[{"{", 
               
               RowBox[{
                "9", ",", "6", ",", "0", ",", "4", ",", "0", ",", "0"}], 
               "}"}], ",", 
             RowBox[{"{", 
               
               RowBox[{
                "9", ",", "6", ",", "2", ",", "3", ",", "6", ",", "1"}], 
               "}"}], ",", 
             RowBox[{"{", 
               
               RowBox[{
                "9", ",", "7", ",", "8", ",", "1", ",", "2", ",", "1"}], 
               "}"}], ",", 
             RowBox[{"{", 
               
               RowBox[{
                "9", ",", "8", ",", "0", ",", "1", ",", "0", ",", "0"}], 
               "}"}], ",", 
             RowBox[{"{", 
               
               RowBox[{
                "9", ",", "8", ",", "2", ",", "0", ",", "8", ",", "1"}], 
               "}"}], ",", 
             RowBox[{"{", 
               
               RowBox[{
                "9", ",", "9", ",", "8", ",", "0", ",", "0", ",", "1"}], 
               "}"}]}], "}"}]], "ExerciseOutput", Selectable -> False, 
        Copyable -> False, Editable -> False, ShowCellBracket -> False]]], " "}
   },
   GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Center}}},
   GridBoxBackground->{"Columns" -> {{
        RGBColor[1, 1, 1]}}},
   GridBoxSpacings->{"Columns" -> {{Automatic}}, "Rows" -> {{1}}}],
  FrameMargins->0]], "ExerciseOutput",
 Editable->False,
 Selectable->False,
 Deletable->False,
 CellFrame->{{1, 1}, {1, 1}},
 ShowCellBracket->False,
 CellFrameColor->RGBColor[0.85, 0.85, 0.85],
 LineBreakWithin->Automatic]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 "En ",
 Cell[BoxData[
  RowBox[{
   ButtonBox["IntegerDigits",
    BaseStyle->"CodeLink"], "[", 
   RowBox[{
    ButtonBox["Range",
     BaseStyle->"CodeLink"], "[", "100", "]"}], "]"}]], "InlineCode"],
 ", sustituya todos los 0s por ",
 ButtonBox["Gray",
  BaseStyle->"Link"],
 " y todos los 9s por ",
 ButtonBox["Orange",
  BaseStyle->"Link"],
 ".",
 StyleBox[ButtonBox["\[NonBreakingSpace]\[RightGuillemet]",
  Appearance->None,
  Evaluator->Automatic,
  Method->"Preemptive",
  ButtonFunction:>(SelectionMove[
     ButtonNotebook[], All, ButtonCell, AutoScroll -> False]; 
   FrontEndExecute[
     FrontEndToken[
      ButtonNotebook[], "OpenCloseGroup"]])],
  FontColor->RGBColor[1, 0.501961, 0]]
}], "Exercise",
 Editable->False,
 Selectable->False,
 Deletable->False,
 CellDingbat->Cell[
  "32.4", "ExerciseNumber", FontColor -> 
   RGBColor[0.9019607843137255, 0.4117647058823529, 0.027450980392156862`]],
 ShowCellBracket->False],

Cell[BoxData[
 PaneBox[GridBox[{
    {" ", 
     StyleBox[
      RowBox[{"Expected", " ", 
       RowBox[{"output", ":"}]}],
      Editable->False,
      Selectable->False,
      StripOnInput->False,
      FontColor->RGBColor[0.45, 0.45, 0.45]], " "},
    {" ", 
     InterpretationBox[Cell[BoxData[
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", "1", "}"}], ",", 
         RowBox[{"{", "2", "}"}], ",", 
         RowBox[{"{", "3", "}"}], ",", 
         RowBox[{"{", "4", "}"}], ",", 
         RowBox[{"{", "5", "}"}], ",", 
         RowBox[{"{", "6", "}"}], ",", 
         RowBox[{"{", "7", "}"}], ",", 
         RowBox[{"{", "8", "}"}], ",", 
         RowBox[{"{", 
          InterpretationBox[
           ButtonBox[
            TooltipBox[
             GraphicsBox[{
               {GrayLevel[0], RectangleBox[{0, 0}]}, 
               {GrayLevel[0], RectangleBox[{1, -1}]}, 
               {RGBColor[1, 0.5, 0], RectangleBox[{0, -1}, {2, 1}]}},
              AspectRatio->1,
              Frame->True,
              
              FrameStyle->RGBColor[
               0.6666666666666666, 0.33333333333333337`, 0.],
              FrameTicks->None,
              
              ImageSize->
               Dynamic[{
                Automatic, 
                 1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                  Magnification])}],
              PlotRangePadding->None],
             "RGBColor[1, 0.5, 0]"],
            Appearance->None,
            BaseStyle->{},
            BaselinePosition->Baseline,
            ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
              If[
               Not[
                AbsoluteCurrentValue["Deployed"]], 
               SelectionMove[Typeset`box$, All, Expression]; 
               FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
               FrontEnd`Private`$ColorSelectorInitialColor = 
                RGBColor[1, 0.5, 0]; 
               FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
               MathLink`CallFrontEnd[
                 FrontEnd`AttachCell[Typeset`box$, 
                  FrontEndResource["RGBColorValueSelector"], {
                  0, {Left, Bottom}}, {Left, Top}, 
                  "ClosingActions" -> {
                   "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
            DefaultBaseStyle->{},
            Evaluator->Automatic,
            Method->"Preemptive"],
           RGBColor[1, 0.5, 0],
           Editable->False,
           Selectable->False], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"1", ",", 
           InterpretationBox[
            ButtonBox[
             TooltipBox[
              GraphicsBox[{
                {GrayLevel[0], RectangleBox[{0, 0}]}, 
                {GrayLevel[0], RectangleBox[{1, -1}]}, 
                {GrayLevel[0.5], RectangleBox[{0, -1}, {2, 1}]}},
               AspectRatio->1,
               Frame->True,
               FrameStyle->GrayLevel[0.33333333333333337`],
               FrameTicks->None,
               
               ImageSize->
                Dynamic[{
                 Automatic, 
                  1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}],
               PlotRangePadding->None],
              "GrayLevel[0.5]"],
             Appearance->None,
             BaseStyle->{},
             BaselinePosition->Baseline,
             ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
               If[
                Not[
                 AbsoluteCurrentValue["Deployed"]], 
                SelectionMove[Typeset`box$, All, Expression]; 
                FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[0.5]; 
                FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                MathLink`CallFrontEnd[
                  FrontEnd`AttachCell[Typeset`box$, 
                   FrontEndResource["GrayLevelColorValueSelector"], {
                   0, {Left, Bottom}}, {Left, Top}, 
                   "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
             DefaultBaseStyle->{},
             Evaluator->Automatic,
             Method->"Preemptive"],
            GrayLevel[0.5],
            Editable->False,
            Selectable->False]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"1", ",", "1"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"1", ",", "2"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"1", ",", "3"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"1", ",", "4"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"1", ",", "5"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"1", ",", "6"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"1", ",", "7"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"1", ",", "8"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"1", ",", 
           InterpretationBox[
            ButtonBox[
             TooltipBox[
              GraphicsBox[{
                {GrayLevel[0], RectangleBox[{0, 0}]}, 
                {GrayLevel[0], RectangleBox[{1, -1}]}, 
                {RGBColor[1, 0.5, 0], RectangleBox[{0, -1}, {2, 1}]}},
               AspectRatio->1,
               Frame->True,
               
               FrameStyle->RGBColor[
                0.6666666666666666, 0.33333333333333337`, 0.],
               FrameTicks->None,
               
               ImageSize->
                Dynamic[{
                 Automatic, 
                  1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}],
               PlotRangePadding->None],
              "RGBColor[1, 0.5, 0]"],
             Appearance->None,
             BaseStyle->{},
             BaselinePosition->Baseline,
             ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
               If[
                Not[
                 AbsoluteCurrentValue["Deployed"]], 
                SelectionMove[Typeset`box$, All, Expression]; 
                FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                FrontEnd`Private`$ColorSelectorInitialColor = 
                 RGBColor[1, 0.5, 0]; 
                FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                MathLink`CallFrontEnd[
                  FrontEnd`AttachCell[Typeset`box$, 
                   FrontEndResource["RGBColorValueSelector"], {
                   0, {Left, Bottom}}, {Left, Top}, 
                   "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
             DefaultBaseStyle->{},
             Evaluator->Automatic,
             Method->"Preemptive"],
            RGBColor[1, 0.5, 0],
            Editable->False,
            Selectable->False]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"2", ",", 
           InterpretationBox[
            ButtonBox[
             TooltipBox[
              GraphicsBox[{
                {GrayLevel[0], RectangleBox[{0, 0}]}, 
                {GrayLevel[0], RectangleBox[{1, -1}]}, 
                {GrayLevel[0.5], RectangleBox[{0, -1}, {2, 1}]}},
               AspectRatio->1,
               Frame->True,
               FrameStyle->GrayLevel[0.33333333333333337`],
               FrameTicks->None,
               
               ImageSize->
                Dynamic[{
                 Automatic, 
                  1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}],
               PlotRangePadding->None],
              "GrayLevel[0.5]"],
             Appearance->None,
             BaseStyle->{},
             BaselinePosition->Baseline,
             ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
               If[
                Not[
                 AbsoluteCurrentValue["Deployed"]], 
                SelectionMove[Typeset`box$, All, Expression]; 
                FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[0.5]; 
                FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                MathLink`CallFrontEnd[
                  FrontEnd`AttachCell[Typeset`box$, 
                   FrontEndResource["GrayLevelColorValueSelector"], {
                   0, {Left, Bottom}}, {Left, Top}, 
                   "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
             DefaultBaseStyle->{},
             Evaluator->Automatic,
             Method->"Preemptive"],
            GrayLevel[0.5],
            Editable->False,
            Selectable->False]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"2", ",", "1"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"2", ",", "2"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"2", ",", "3"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"2", ",", "4"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"2", ",", "5"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"2", ",", "6"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"2", ",", "7"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"2", ",", "8"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"2", ",", 
           InterpretationBox[
            ButtonBox[
             TooltipBox[
              GraphicsBox[{
                {GrayLevel[0], RectangleBox[{0, 0}]}, 
                {GrayLevel[0], RectangleBox[{1, -1}]}, 
                {RGBColor[1, 0.5, 0], RectangleBox[{0, -1}, {2, 1}]}},
               AspectRatio->1,
               Frame->True,
               
               FrameStyle->RGBColor[
                0.6666666666666666, 0.33333333333333337`, 0.],
               FrameTicks->None,
               
               ImageSize->
                Dynamic[{
                 Automatic, 
                  1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}],
               PlotRangePadding->None],
              "RGBColor[1, 0.5, 0]"],
             Appearance->None,
             BaseStyle->{},
             BaselinePosition->Baseline,
             ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
               If[
                Not[
                 AbsoluteCurrentValue["Deployed"]], 
                SelectionMove[Typeset`box$, All, Expression]; 
                FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                FrontEnd`Private`$ColorSelectorInitialColor = 
                 RGBColor[1, 0.5, 0]; 
                FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                MathLink`CallFrontEnd[
                  FrontEnd`AttachCell[Typeset`box$, 
                   FrontEndResource["RGBColorValueSelector"], {
                   0, {Left, Bottom}}, {Left, Top}, 
                   "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
             DefaultBaseStyle->{},
             Evaluator->Automatic,
             Method->"Preemptive"],
            RGBColor[1, 0.5, 0],
            Editable->False,
            Selectable->False]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"3", ",", 
           InterpretationBox[
            ButtonBox[
             TooltipBox[
              GraphicsBox[{
                {GrayLevel[0], RectangleBox[{0, 0}]}, 
                {GrayLevel[0], RectangleBox[{1, -1}]}, 
                {GrayLevel[0.5], RectangleBox[{0, -1}, {2, 1}]}},
               AspectRatio->1,
               Frame->True,
               FrameStyle->GrayLevel[0.33333333333333337`],
               FrameTicks->None,
               
               ImageSize->
                Dynamic[{
                 Automatic, 
                  1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}],
               PlotRangePadding->None],
              "GrayLevel[0.5]"],
             Appearance->None,
             BaseStyle->{},
             BaselinePosition->Baseline,
             ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
               If[
                Not[
                 AbsoluteCurrentValue["Deployed"]], 
                SelectionMove[Typeset`box$, All, Expression]; 
                FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[0.5]; 
                FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                MathLink`CallFrontEnd[
                  FrontEnd`AttachCell[Typeset`box$, 
                   FrontEndResource["GrayLevelColorValueSelector"], {
                   0, {Left, Bottom}}, {Left, Top}, 
                   "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
             DefaultBaseStyle->{},
             Evaluator->Automatic,
             Method->"Preemptive"],
            GrayLevel[0.5],
            Editable->False,
            Selectable->False]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"3", ",", "1"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"3", ",", "2"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"3", ",", "3"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"3", ",", "4"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"3", ",", "5"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"3", ",", "6"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"3", ",", "7"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"3", ",", "8"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"3", ",", 
           InterpretationBox[
            ButtonBox[
             TooltipBox[
              GraphicsBox[{
                {GrayLevel[0], RectangleBox[{0, 0}]}, 
                {GrayLevel[0], RectangleBox[{1, -1}]}, 
                {RGBColor[1, 0.5, 0], RectangleBox[{0, -1}, {2, 1}]}},
               AspectRatio->1,
               Frame->True,
               
               FrameStyle->RGBColor[
                0.6666666666666666, 0.33333333333333337`, 0.],
               FrameTicks->None,
               
               ImageSize->
                Dynamic[{
                 Automatic, 
                  1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}],
               PlotRangePadding->None],
              "RGBColor[1, 0.5, 0]"],
             Appearance->None,
             BaseStyle->{},
             BaselinePosition->Baseline,
             ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
               If[
                Not[
                 AbsoluteCurrentValue["Deployed"]], 
                SelectionMove[Typeset`box$, All, Expression]; 
                FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                FrontEnd`Private`$ColorSelectorInitialColor = 
                 RGBColor[1, 0.5, 0]; 
                FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                MathLink`CallFrontEnd[
                  FrontEnd`AttachCell[Typeset`box$, 
                   FrontEndResource["RGBColorValueSelector"], {
                   0, {Left, Bottom}}, {Left, Top}, 
                   "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
             DefaultBaseStyle->{},
             Evaluator->Automatic,
             Method->"Preemptive"],
            RGBColor[1, 0.5, 0],
            Editable->False,
            Selectable->False]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"4", ",", 
           InterpretationBox[
            ButtonBox[
             TooltipBox[
              GraphicsBox[{
                {GrayLevel[0], RectangleBox[{0, 0}]}, 
                {GrayLevel[0], RectangleBox[{1, -1}]}, 
                {GrayLevel[0.5], RectangleBox[{0, -1}, {2, 1}]}},
               AspectRatio->1,
               Frame->True,
               FrameStyle->GrayLevel[0.33333333333333337`],
               FrameTicks->None,
               
               ImageSize->
                Dynamic[{
                 Automatic, 
                  1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}],
               PlotRangePadding->None],
              "GrayLevel[0.5]"],
             Appearance->None,
             BaseStyle->{},
             BaselinePosition->Baseline,
             ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
               If[
                Not[
                 AbsoluteCurrentValue["Deployed"]], 
                SelectionMove[Typeset`box$, All, Expression]; 
                FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[0.5]; 
                FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                MathLink`CallFrontEnd[
                  FrontEnd`AttachCell[Typeset`box$, 
                   FrontEndResource["GrayLevelColorValueSelector"], {
                   0, {Left, Bottom}}, {Left, Top}, 
                   "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
             DefaultBaseStyle->{},
             Evaluator->Automatic,
             Method->"Preemptive"],
            GrayLevel[0.5],
            Editable->False,
            Selectable->False]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"4", ",", "1"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"4", ",", "2"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"4", ",", "3"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"4", ",", "4"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"4", ",", "5"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"4", ",", "6"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"4", ",", "7"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"4", ",", "8"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"4", ",", 
           InterpretationBox[
            ButtonBox[
             TooltipBox[
              GraphicsBox[{
                {GrayLevel[0], RectangleBox[{0, 0}]}, 
                {GrayLevel[0], RectangleBox[{1, -1}]}, 
                {RGBColor[1, 0.5, 0], RectangleBox[{0, -1}, {2, 1}]}},
               AspectRatio->1,
               Frame->True,
               
               FrameStyle->RGBColor[
                0.6666666666666666, 0.33333333333333337`, 0.],
               FrameTicks->None,
               
               ImageSize->
                Dynamic[{
                 Automatic, 
                  1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}],
               PlotRangePadding->None],
              "RGBColor[1, 0.5, 0]"],
             Appearance->None,
             BaseStyle->{},
             BaselinePosition->Baseline,
             ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
               If[
                Not[
                 AbsoluteCurrentValue["Deployed"]], 
                SelectionMove[Typeset`box$, All, Expression]; 
                FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                FrontEnd`Private`$ColorSelectorInitialColor = 
                 RGBColor[1, 0.5, 0]; 
                FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                MathLink`CallFrontEnd[
                  FrontEnd`AttachCell[Typeset`box$, 
                   FrontEndResource["RGBColorValueSelector"], {
                   0, {Left, Bottom}}, {Left, Top}, 
                   "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
             DefaultBaseStyle->{},
             Evaluator->Automatic,
             Method->"Preemptive"],
            RGBColor[1, 0.5, 0],
            Editable->False,
            Selectable->False]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"5", ",", 
           InterpretationBox[
            ButtonBox[
             TooltipBox[
              GraphicsBox[{
                {GrayLevel[0], RectangleBox[{0, 0}]}, 
                {GrayLevel[0], RectangleBox[{1, -1}]}, 
                {GrayLevel[0.5], RectangleBox[{0, -1}, {2, 1}]}},
               AspectRatio->1,
               Frame->True,
               FrameStyle->GrayLevel[0.33333333333333337`],
               FrameTicks->None,
               
               ImageSize->
                Dynamic[{
                 Automatic, 
                  1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}],
               PlotRangePadding->None],
              "GrayLevel[0.5]"],
             Appearance->None,
             BaseStyle->{},
             BaselinePosition->Baseline,
             ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
               If[
                Not[
                 AbsoluteCurrentValue["Deployed"]], 
                SelectionMove[Typeset`box$, All, Expression]; 
                FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[0.5]; 
                FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                MathLink`CallFrontEnd[
                  FrontEnd`AttachCell[Typeset`box$, 
                   FrontEndResource["GrayLevelColorValueSelector"], {
                   0, {Left, Bottom}}, {Left, Top}, 
                   "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
             DefaultBaseStyle->{},
             Evaluator->Automatic,
             Method->"Preemptive"],
            GrayLevel[0.5],
            Editable->False,
            Selectable->False]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"5", ",", "1"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"5", ",", "2"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"5", ",", "3"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"5", ",", "4"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"5", ",", "5"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"5", ",", "6"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"5", ",", "7"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"5", ",", "8"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"5", ",", 
           InterpretationBox[
            ButtonBox[
             TooltipBox[
              GraphicsBox[{
                {GrayLevel[0], RectangleBox[{0, 0}]}, 
                {GrayLevel[0], RectangleBox[{1, -1}]}, 
                {RGBColor[1, 0.5, 0], RectangleBox[{0, -1}, {2, 1}]}},
               AspectRatio->1,
               Frame->True,
               
               FrameStyle->RGBColor[
                0.6666666666666666, 0.33333333333333337`, 0.],
               FrameTicks->None,
               
               ImageSize->
                Dynamic[{
                 Automatic, 
                  1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}],
               PlotRangePadding->None],
              "RGBColor[1, 0.5, 0]"],
             Appearance->None,
             BaseStyle->{},
             BaselinePosition->Baseline,
             ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
               If[
                Not[
                 AbsoluteCurrentValue["Deployed"]], 
                SelectionMove[Typeset`box$, All, Expression]; 
                FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                FrontEnd`Private`$ColorSelectorInitialColor = 
                 RGBColor[1, 0.5, 0]; 
                FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                MathLink`CallFrontEnd[
                  FrontEnd`AttachCell[Typeset`box$, 
                   FrontEndResource["RGBColorValueSelector"], {
                   0, {Left, Bottom}}, {Left, Top}, 
                   "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
             DefaultBaseStyle->{},
             Evaluator->Automatic,
             Method->"Preemptive"],
            RGBColor[1, 0.5, 0],
            Editable->False,
            Selectable->False]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"6", ",", 
           InterpretationBox[
            ButtonBox[
             TooltipBox[
              GraphicsBox[{
                {GrayLevel[0], RectangleBox[{0, 0}]}, 
                {GrayLevel[0], RectangleBox[{1, -1}]}, 
                {GrayLevel[0.5], RectangleBox[{0, -1}, {2, 1}]}},
               AspectRatio->1,
               Frame->True,
               FrameStyle->GrayLevel[0.33333333333333337`],
               FrameTicks->None,
               
               ImageSize->
                Dynamic[{
                 Automatic, 
                  1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}],
               PlotRangePadding->None],
              "GrayLevel[0.5]"],
             Appearance->None,
             BaseStyle->{},
             BaselinePosition->Baseline,
             ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
               If[
                Not[
                 AbsoluteCurrentValue["Deployed"]], 
                SelectionMove[Typeset`box$, All, Expression]; 
                FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[0.5]; 
                FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                MathLink`CallFrontEnd[
                  FrontEnd`AttachCell[Typeset`box$, 
                   FrontEndResource["GrayLevelColorValueSelector"], {
                   0, {Left, Bottom}}, {Left, Top}, 
                   "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
             DefaultBaseStyle->{},
             Evaluator->Automatic,
             Method->"Preemptive"],
            GrayLevel[0.5],
            Editable->False,
            Selectable->False]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"6", ",", "1"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"6", ",", "2"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"6", ",", "3"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"6", ",", "4"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"6", ",", "5"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"6", ",", "6"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"6", ",", "7"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"6", ",", "8"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"6", ",", 
           InterpretationBox[
            ButtonBox[
             TooltipBox[
              GraphicsBox[{
                {GrayLevel[0], RectangleBox[{0, 0}]}, 
                {GrayLevel[0], RectangleBox[{1, -1}]}, 
                {RGBColor[1, 0.5, 0], RectangleBox[{0, -1}, {2, 1}]}},
               AspectRatio->1,
               Frame->True,
               
               FrameStyle->RGBColor[
                0.6666666666666666, 0.33333333333333337`, 0.],
               FrameTicks->None,
               
               ImageSize->
                Dynamic[{
                 Automatic, 
                  1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}],
               PlotRangePadding->None],
              "RGBColor[1, 0.5, 0]"],
             Appearance->None,
             BaseStyle->{},
             BaselinePosition->Baseline,
             ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
               If[
                Not[
                 AbsoluteCurrentValue["Deployed"]], 
                SelectionMove[Typeset`box$, All, Expression]; 
                FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                FrontEnd`Private`$ColorSelectorInitialColor = 
                 RGBColor[1, 0.5, 0]; 
                FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                MathLink`CallFrontEnd[
                  FrontEnd`AttachCell[Typeset`box$, 
                   FrontEndResource["RGBColorValueSelector"], {
                   0, {Left, Bottom}}, {Left, Top}, 
                   "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
             DefaultBaseStyle->{},
             Evaluator->Automatic,
             Method->"Preemptive"],
            RGBColor[1, 0.5, 0],
            Editable->False,
            Selectable->False]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"7", ",", 
           InterpretationBox[
            ButtonBox[
             TooltipBox[
              GraphicsBox[{
                {GrayLevel[0], RectangleBox[{0, 0}]}, 
                {GrayLevel[0], RectangleBox[{1, -1}]}, 
                {GrayLevel[0.5], RectangleBox[{0, -1}, {2, 1}]}},
               AspectRatio->1,
               Frame->True,
               FrameStyle->GrayLevel[0.33333333333333337`],
               FrameTicks->None,
               
               ImageSize->
                Dynamic[{
                 Automatic, 
                  1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}],
               PlotRangePadding->None],
              "GrayLevel[0.5]"],
             Appearance->None,
             BaseStyle->{},
             BaselinePosition->Baseline,
             ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
               If[
                Not[
                 AbsoluteCurrentValue["Deployed"]], 
                SelectionMove[Typeset`box$, All, Expression]; 
                FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[0.5]; 
                FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                MathLink`CallFrontEnd[
                  FrontEnd`AttachCell[Typeset`box$, 
                   FrontEndResource["GrayLevelColorValueSelector"], {
                   0, {Left, Bottom}}, {Left, Top}, 
                   "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
             DefaultBaseStyle->{},
             Evaluator->Automatic,
             Method->"Preemptive"],
            GrayLevel[0.5],
            Editable->False,
            Selectable->False]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"7", ",", "1"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"7", ",", "2"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"7", ",", "3"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"7", ",", "4"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"7", ",", "5"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"7", ",", "6"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"7", ",", "7"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"7", ",", "8"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"7", ",", 
           InterpretationBox[
            ButtonBox[
             TooltipBox[
              GraphicsBox[{
                {GrayLevel[0], RectangleBox[{0, 0}]}, 
                {GrayLevel[0], RectangleBox[{1, -1}]}, 
                {RGBColor[1, 0.5, 0], RectangleBox[{0, -1}, {2, 1}]}},
               AspectRatio->1,
               Frame->True,
               
               FrameStyle->RGBColor[
                0.6666666666666666, 0.33333333333333337`, 0.],
               FrameTicks->None,
               ImageSize->
                Dynamic[{
                 Automatic, 
                  1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}],
               PlotRangePadding->None],
              "RGBColor[1, 0.5, 0]"],
             Appearance->None,
             BaseStyle->{},
             BaselinePosition->Baseline,
             ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
               If[
                Not[
                 AbsoluteCurrentValue["Deployed"]], 
                SelectionMove[Typeset`box$, All, Expression]; 
                FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                FrontEnd`Private`$ColorSelectorInitialColor = 
                 RGBColor[1, 0.5, 0]; 
                FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                MathLink`CallFrontEnd[
                  FrontEnd`AttachCell[Typeset`box$, 
                   FrontEndResource["RGBColorValueSelector"], {
                   0, {Left, Bottom}}, {Left, Top}, 
                   "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
             DefaultBaseStyle->{},
             Evaluator->Automatic,
             Method->"Preemptive"],
            RGBColor[1, 0.5, 0],
            Editable->False,
            Selectable->False]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"8", ",", 
           InterpretationBox[
            ButtonBox[
             TooltipBox[
              GraphicsBox[{
                {GrayLevel[0], RectangleBox[{0, 0}]}, 
                {GrayLevel[0], RectangleBox[{1, -1}]}, 
                {GrayLevel[0.5], RectangleBox[{0, -1}, {2, 1}]}},
               AspectRatio->1,
               Frame->True,
               FrameStyle->GrayLevel[0.33333333333333337`],
               FrameTicks->None,
               
               ImageSize->
                Dynamic[{
                 Automatic, 
                  1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}],
               PlotRangePadding->None],
              "GrayLevel[0.5]"],
             Appearance->None,
             BaseStyle->{},
             BaselinePosition->Baseline,
             ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
               If[
                Not[
                 AbsoluteCurrentValue["Deployed"]], 
                SelectionMove[Typeset`box$, All, Expression]; 
                FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[0.5]; 
                FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                MathLink`CallFrontEnd[
                  FrontEnd`AttachCell[Typeset`box$, 
                   FrontEndResource["GrayLevelColorValueSelector"], {
                   0, {Left, Bottom}}, {Left, Top}, 
                   "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
             DefaultBaseStyle->{},
             Evaluator->Automatic,
             Method->"Preemptive"],
            GrayLevel[0.5],
            Editable->False,
            Selectable->False]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"8", ",", "1"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"8", ",", "2"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"8", ",", "3"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"8", ",", "4"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"8", ",", "5"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"8", ",", "6"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"8", ",", "7"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"8", ",", "8"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"8", ",", 
           InterpretationBox[
            ButtonBox[
             TooltipBox[
              GraphicsBox[{
                {GrayLevel[0], RectangleBox[{0, 0}]}, 
                {GrayLevel[0], RectangleBox[{1, -1}]}, 
                {RGBColor[1, 0.5, 0], RectangleBox[{0, -1}, {2, 1}]}},
               AspectRatio->1,
               Frame->True,
               FrameStyle->RGBColor[
                0.6666666666666666, 0.33333333333333337`, 0.],
               FrameTicks->None,
               
               ImageSize->
                Dynamic[{
                 Automatic, 
                  1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}],
               PlotRangePadding->None],
              "RGBColor[1, 0.5, 0]"],
             Appearance->None,
             BaseStyle->{},
             BaselinePosition->Baseline,
             ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
               If[
                Not[
                 AbsoluteCurrentValue["Deployed"]], 
                SelectionMove[Typeset`box$, All, Expression]; 
                FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                FrontEnd`Private`$ColorSelectorInitialColor = 
                 RGBColor[1, 0.5, 0]; 
                FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                MathLink`CallFrontEnd[
                  FrontEnd`AttachCell[Typeset`box$, 
                   FrontEndResource["RGBColorValueSelector"], {
                   0, {Left, Bottom}}, {Left, Top}, 
                   "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
             DefaultBaseStyle->{},
             Evaluator->Automatic,
             Method->"Preemptive"],
            RGBColor[1, 0.5, 0],
            Editable->False,
            Selectable->False]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           InterpretationBox[
            ButtonBox[
             TooltipBox[
              GraphicsBox[{
                {GrayLevel[0], RectangleBox[{0, 0}]}, 
                {GrayLevel[0], RectangleBox[{1, -1}]}, 
                {RGBColor[1, 0.5, 0], RectangleBox[{0, -1}, {2, 1}]}},
               AspectRatio->1,
               Frame->True,
               
               FrameStyle->RGBColor[
                0.6666666666666666, 0.33333333333333337`, 0.],
               FrameTicks->None,
               
               ImageSize->
                Dynamic[{
                 Automatic, 
                  1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}],
               PlotRangePadding->None],
              "RGBColor[1, 0.5, 0]"],
             Appearance->None,
             BaseStyle->{},
             BaselinePosition->Baseline,
             ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
               If[
                Not[
                 AbsoluteCurrentValue["Deployed"]], 
                SelectionMove[Typeset`box$, All, Expression]; 
                FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                FrontEnd`Private`$ColorSelectorInitialColor = 
                 RGBColor[1, 0.5, 0]; 
                FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                MathLink`CallFrontEnd[
                  FrontEnd`AttachCell[Typeset`box$, 
                   FrontEndResource["RGBColorValueSelector"], {
                   0, {Left, Bottom}}, {Left, Top}, 
                   "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
             DefaultBaseStyle->{},
             Evaluator->Automatic,
             Method->"Preemptive"],
            RGBColor[1, 0.5, 0],
            Editable->False,
            Selectable->False], ",", 
           InterpretationBox[
            ButtonBox[
             TooltipBox[
              GraphicsBox[{
                {GrayLevel[0], RectangleBox[{0, 0}]}, 
                {GrayLevel[0], RectangleBox[{1, -1}]}, 
                {GrayLevel[0.5], RectangleBox[{0, -1}, {2, 1}]}},
               AspectRatio->1,
               Frame->True,
               FrameStyle->GrayLevel[0.33333333333333337`],
               FrameTicks->None,
               
               ImageSize->
                Dynamic[{
                 Automatic, 
                  1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}],
               PlotRangePadding->None],
              "GrayLevel[0.5]"],
             Appearance->None,
             BaseStyle->{},
             BaselinePosition->Baseline,
             ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
               If[
                Not[
                 AbsoluteCurrentValue["Deployed"]], 
                SelectionMove[Typeset`box$, All, Expression]; 
                FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[0.5]; 
                FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                MathLink`CallFrontEnd[
                  FrontEnd`AttachCell[Typeset`box$, 
                   FrontEndResource["GrayLevelColorValueSelector"], {
                   0, {Left, Bottom}}, {Left, Top}, 
                   "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
             DefaultBaseStyle->{},
             Evaluator->Automatic,
             Method->"Preemptive"],
            GrayLevel[0.5],
            Editable->False,
            Selectable->False]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           InterpretationBox[
            ButtonBox[
             TooltipBox[
              GraphicsBox[{
                {GrayLevel[0], RectangleBox[{0, 0}]}, 
                {GrayLevel[0], RectangleBox[{1, -1}]}, 
                {RGBColor[1, 0.5, 0], RectangleBox[{0, -1}, {2, 1}]}},
               AspectRatio->1,
               Frame->True,
               
               FrameStyle->RGBColor[
                0.6666666666666666, 0.33333333333333337`, 0.],
               FrameTicks->None,
               
               ImageSize->
                Dynamic[{
                 Automatic, 
                  1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}],
               PlotRangePadding->None],
              "RGBColor[1, 0.5, 0]"],
             Appearance->None,
             BaseStyle->{},
             BaselinePosition->Baseline,
             ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
               If[
                Not[
                 AbsoluteCurrentValue["Deployed"]], 
                SelectionMove[Typeset`box$, All, Expression]; 
                FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                FrontEnd`Private`$ColorSelectorInitialColor = 
                 RGBColor[1, 0.5, 0]; 
                FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                MathLink`CallFrontEnd[
                  FrontEnd`AttachCell[Typeset`box$, 
                   FrontEndResource["RGBColorValueSelector"], {
                   0, {Left, Bottom}}, {Left, Top}, 
                   "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
             DefaultBaseStyle->{},
             Evaluator->Automatic,
             Method->"Preemptive"],
            RGBColor[1, 0.5, 0],
            Editable->False,
            Selectable->False], ",", "1"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           InterpretationBox[
            ButtonBox[
             TooltipBox[
              GraphicsBox[{
                {GrayLevel[0], RectangleBox[{0, 0}]}, 
                {GrayLevel[0], RectangleBox[{1, -1}]}, 
                {RGBColor[1, 0.5, 0], RectangleBox[{0, -1}, {2, 1}]}},
               AspectRatio->1,
               Frame->True,
               
               FrameStyle->RGBColor[
                0.6666666666666666, 0.33333333333333337`, 0.],
               FrameTicks->None,
               
               ImageSize->
                Dynamic[{
                 Automatic, 
                  1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}],
               PlotRangePadding->None],
              "RGBColor[1, 0.5, 0]"],
             Appearance->None,
             BaseStyle->{},
             BaselinePosition->Baseline,
             ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
               If[
                Not[
                 AbsoluteCurrentValue["Deployed"]], 
                SelectionMove[Typeset`box$, All, Expression]; 
                FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                FrontEnd`Private`$ColorSelectorInitialColor = 
                 RGBColor[1, 0.5, 0]; 
                FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                MathLink`CallFrontEnd[
                  FrontEnd`AttachCell[Typeset`box$, 
                   FrontEndResource["RGBColorValueSelector"], {
                   0, {Left, Bottom}}, {Left, Top}, 
                   "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
             DefaultBaseStyle->{},
             Evaluator->Automatic,
             Method->"Preemptive"],
            RGBColor[1, 0.5, 0],
            Editable->False,
            Selectable->False], ",", "2"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           InterpretationBox[
            ButtonBox[
             TooltipBox[
              GraphicsBox[{
                {GrayLevel[0], RectangleBox[{0, 0}]}, 
                {GrayLevel[0], RectangleBox[{1, -1}]}, 
                {RGBColor[1, 0.5, 0], RectangleBox[{0, -1}, {2, 1}]}},
               AspectRatio->1,
               Frame->True,
               
               FrameStyle->RGBColor[
                0.6666666666666666, 0.33333333333333337`, 0.],
               FrameTicks->None,
               
               ImageSize->
                Dynamic[{
                 Automatic, 
                  1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}],
               PlotRangePadding->None],
              "RGBColor[1, 0.5, 0]"],
             Appearance->None,
             BaseStyle->{},
             BaselinePosition->Baseline,
             ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
               If[
                Not[
                 AbsoluteCurrentValue["Deployed"]], 
                SelectionMove[Typeset`box$, All, Expression]; 
                FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                FrontEnd`Private`$ColorSelectorInitialColor = 
                 RGBColor[1, 0.5, 0]; 
                FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                MathLink`CallFrontEnd[
                  FrontEnd`AttachCell[Typeset`box$, 
                   FrontEndResource["RGBColorValueSelector"], {
                   0, {Left, Bottom}}, {Left, Top}, 
                   "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
             DefaultBaseStyle->{},
             Evaluator->Automatic,
             Method->"Preemptive"],
            RGBColor[1, 0.5, 0],
            Editable->False,
            Selectable->False], ",", "3"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           InterpretationBox[
            ButtonBox[
             TooltipBox[
              GraphicsBox[{
                {GrayLevel[0], RectangleBox[{0, 0}]}, 
                {GrayLevel[0], RectangleBox[{1, -1}]}, 
                {RGBColor[1, 0.5, 0], RectangleBox[{0, -1}, {2, 1}]}},
               AspectRatio->1,
               Frame->True,
               
               FrameStyle->RGBColor[
                0.6666666666666666, 0.33333333333333337`, 0.],
               FrameTicks->None,
               
               ImageSize->
                Dynamic[{
                 Automatic, 
                  1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}],
               PlotRangePadding->None],
              "RGBColor[1, 0.5, 0]"],
             Appearance->None,
             BaseStyle->{},
             BaselinePosition->Baseline,
             ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
               If[
                Not[
                 AbsoluteCurrentValue["Deployed"]], 
                SelectionMove[Typeset`box$, All, Expression]; 
                FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                FrontEnd`Private`$ColorSelectorInitialColor = 
                 RGBColor[1, 0.5, 0]; 
                FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                MathLink`CallFrontEnd[
                  FrontEnd`AttachCell[Typeset`box$, 
                   FrontEndResource["RGBColorValueSelector"], {
                   0, {Left, Bottom}}, {Left, Top}, 
                   "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
             DefaultBaseStyle->{},
             Evaluator->Automatic,
             Method->"Preemptive"],
            RGBColor[1, 0.5, 0],
            Editable->False,
            Selectable->False], ",", "4"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           InterpretationBox[
            ButtonBox[
             TooltipBox[
              GraphicsBox[{
                {GrayLevel[0], RectangleBox[{0, 0}]}, 
                {GrayLevel[0], RectangleBox[{1, -1}]}, 
                {RGBColor[1, 0.5, 0], RectangleBox[{0, -1}, {2, 1}]}},
               AspectRatio->1,
               Frame->True,
               
               FrameStyle->RGBColor[
                0.6666666666666666, 0.33333333333333337`, 0.],
               FrameTicks->None,
               
               ImageSize->
                Dynamic[{
                 Automatic, 
                  1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}],
               PlotRangePadding->None],
              "RGBColor[1, 0.5, 0]"],
             Appearance->None,
             BaseStyle->{},
             BaselinePosition->Baseline,
             ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
               If[
                Not[
                 AbsoluteCurrentValue["Deployed"]], 
                SelectionMove[Typeset`box$, All, Expression]; 
                FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                FrontEnd`Private`$ColorSelectorInitialColor = 
                 RGBColor[1, 0.5, 0]; 
                FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                MathLink`CallFrontEnd[
                  FrontEnd`AttachCell[Typeset`box$, 
                   FrontEndResource["RGBColorValueSelector"], {
                   0, {Left, Bottom}}, {Left, Top}, 
                   "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
             DefaultBaseStyle->{},
             Evaluator->Automatic,
             Method->"Preemptive"],
            RGBColor[1, 0.5, 0],
            Editable->False,
            Selectable->False], ",", "5"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           InterpretationBox[
            ButtonBox[
             TooltipBox[
              GraphicsBox[{
                {GrayLevel[0], RectangleBox[{0, 0}]}, 
                {GrayLevel[0], RectangleBox[{1, -1}]}, 
                {RGBColor[1, 0.5, 0], RectangleBox[{0, -1}, {2, 1}]}},
               AspectRatio->1,
               Frame->True,
               
               FrameStyle->RGBColor[
                0.6666666666666666, 0.33333333333333337`, 0.],
               FrameTicks->None,
               
               ImageSize->
                Dynamic[{
                 Automatic, 
                  1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}],
               PlotRangePadding->None],
              "RGBColor[1, 0.5, 0]"],
             Appearance->None,
             BaseStyle->{},
             BaselinePosition->Baseline,
             ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
               If[
                Not[
                 AbsoluteCurrentValue["Deployed"]], 
                SelectionMove[Typeset`box$, All, Expression]; 
                FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                FrontEnd`Private`$ColorSelectorInitialColor = 
                 RGBColor[1, 0.5, 0]; 
                FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                MathLink`CallFrontEnd[
                  FrontEnd`AttachCell[Typeset`box$, 
                   FrontEndResource["RGBColorValueSelector"], {
                   0, {Left, Bottom}}, {Left, Top}, 
                   "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
             DefaultBaseStyle->{},
             Evaluator->Automatic,
             Method->"Preemptive"],
            RGBColor[1, 0.5, 0],
            Editable->False,
            Selectable->False], ",", "6"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           InterpretationBox[
            ButtonBox[
             TooltipBox[
              GraphicsBox[{
                {GrayLevel[0], RectangleBox[{0, 0}]}, 
                {GrayLevel[0], RectangleBox[{1, -1}]}, 
                {RGBColor[1, 0.5, 0], RectangleBox[{0, -1}, {2, 1}]}},
               AspectRatio->1,
               Frame->True,
               
               FrameStyle->RGBColor[
                0.6666666666666666, 0.33333333333333337`, 0.],
               FrameTicks->None,
               
               ImageSize->
                Dynamic[{
                 Automatic, 
                  1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}],
               PlotRangePadding->None],
              "RGBColor[1, 0.5, 0]"],
             Appearance->None,
             BaseStyle->{},
             BaselinePosition->Baseline,
             ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
               If[
                Not[
                 AbsoluteCurrentValue["Deployed"]], 
                SelectionMove[Typeset`box$, All, Expression]; 
                FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                FrontEnd`Private`$ColorSelectorInitialColor = 
                 RGBColor[1, 0.5, 0]; 
                FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                MathLink`CallFrontEnd[
                  FrontEnd`AttachCell[Typeset`box$, 
                   FrontEndResource["RGBColorValueSelector"], {
                   0, {Left, Bottom}}, {Left, Top}, 
                   "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
             DefaultBaseStyle->{},
             Evaluator->Automatic,
             Method->"Preemptive"],
            RGBColor[1, 0.5, 0],
            Editable->False,
            Selectable->False], ",", "7"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           InterpretationBox[
            ButtonBox[
             TooltipBox[
              GraphicsBox[{
                {GrayLevel[0], RectangleBox[{0, 0}]}, 
                {GrayLevel[0], RectangleBox[{1, -1}]}, 
                {RGBColor[1, 0.5, 0], RectangleBox[{0, -1}, {2, 1}]}},
               AspectRatio->1,
               Frame->True,
               
               FrameStyle->RGBColor[
                0.6666666666666666, 0.33333333333333337`, 0.],
               FrameTicks->None,
               
               ImageSize->
                Dynamic[{
                 Automatic, 
                  1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}],
               PlotRangePadding->None],
              "RGBColor[1, 0.5, 0]"],
             Appearance->None,
             BaseStyle->{},
             BaselinePosition->Baseline,
             ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
               If[
                Not[
                 AbsoluteCurrentValue["Deployed"]], 
                SelectionMove[Typeset`box$, All, Expression]; 
                FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                FrontEnd`Private`$ColorSelectorInitialColor = 
                 RGBColor[1, 0.5, 0]; 
                FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                MathLink`CallFrontEnd[
                  FrontEnd`AttachCell[Typeset`box$, 
                   FrontEndResource["RGBColorValueSelector"], {
                   0, {Left, Bottom}}, {Left, Top}, 
                   "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
             DefaultBaseStyle->{},
             Evaluator->Automatic,
             Method->"Preemptive"],
            RGBColor[1, 0.5, 0],
            Editable->False,
            Selectable->False], ",", "8"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           InterpretationBox[
            ButtonBox[
             TooltipBox[
              GraphicsBox[{
                {GrayLevel[0], RectangleBox[{0, 0}]}, 
                {GrayLevel[0], RectangleBox[{1, -1}]}, 
                {RGBColor[1, 0.5, 0], RectangleBox[{0, -1}, {2, 1}]}},
               AspectRatio->1,
               Frame->True,
               
               FrameStyle->RGBColor[
                0.6666666666666666, 0.33333333333333337`, 0.],
               FrameTicks->None,
               
               ImageSize->
                Dynamic[{
                 Automatic, 
                  1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}],
               PlotRangePadding->None],
              "RGBColor[1, 0.5, 0]"],
             Appearance->None,
             BaseStyle->{},
             BaselinePosition->Baseline,
             ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
               If[
                Not[
                 AbsoluteCurrentValue["Deployed"]], 
                SelectionMove[Typeset`box$, All, Expression]; 
                FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                FrontEnd`Private`$ColorSelectorInitialColor = 
                 RGBColor[1, 0.5, 0]; 
                FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                MathLink`CallFrontEnd[
                  FrontEnd`AttachCell[Typeset`box$, 
                   FrontEndResource["RGBColorValueSelector"], {
                   0, {Left, Bottom}}, {Left, Top}, 
                   "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
             DefaultBaseStyle->{},
             Evaluator->Automatic,
             Method->"Preemptive"],
            RGBColor[1, 0.5, 0],
            Editable->False,
            Selectable->False], ",", 
           InterpretationBox[
            ButtonBox[
             TooltipBox[
              GraphicsBox[{
                {GrayLevel[0], RectangleBox[{0, 0}]}, 
                {GrayLevel[0], RectangleBox[{1, -1}]}, 
                {RGBColor[1, 0.5, 0], RectangleBox[{0, -1}, {2, 1}]}},
               AspectRatio->1,
               Frame->True,
               
               FrameStyle->RGBColor[
                0.6666666666666666, 0.33333333333333337`, 0.],
               FrameTicks->None,
               
               ImageSize->
                Dynamic[{
                 Automatic, 
                  1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}],
               PlotRangePadding->None],
              "RGBColor[1, 0.5, 0]"],
             Appearance->None,
             BaseStyle->{},
             BaselinePosition->Baseline,
             ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
               If[
                Not[
                 AbsoluteCurrentValue["Deployed"]], 
                SelectionMove[Typeset`box$, All, Expression]; 
                FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                FrontEnd`Private`$ColorSelectorInitialColor = 
                 RGBColor[1, 0.5, 0]; 
                FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                MathLink`CallFrontEnd[
                  FrontEnd`AttachCell[Typeset`box$, 
                   FrontEndResource["RGBColorValueSelector"], {
                   0, {Left, Bottom}}, {Left, Top}, 
                   "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
             DefaultBaseStyle->{},
             Evaluator->Automatic,
             Method->"Preemptive"],
            RGBColor[1, 0.5, 0],
            Editable->False,
            Selectable->False]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"1", ",", 
           InterpretationBox[
            ButtonBox[
             TooltipBox[
              GraphicsBox[{
                {GrayLevel[0], RectangleBox[{0, 0}]}, 
                {GrayLevel[0], RectangleBox[{1, -1}]}, 
                {GrayLevel[0.5], RectangleBox[{0, -1}, {2, 1}]}},
               AspectRatio->1,
               Frame->True,
               FrameStyle->GrayLevel[0.33333333333333337`],
               FrameTicks->None,
               
               ImageSize->
                Dynamic[{
                 Automatic, 
                  1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}],
               PlotRangePadding->None],
              "GrayLevel[0.5]"],
             Appearance->None,
             BaseStyle->{},
             BaselinePosition->Baseline,
             ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
               If[
                Not[
                 AbsoluteCurrentValue["Deployed"]], 
                SelectionMove[Typeset`box$, All, Expression]; 
                FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[0.5]; 
                FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                MathLink`CallFrontEnd[
                  FrontEnd`AttachCell[Typeset`box$, 
                   FrontEndResource["GrayLevelColorValueSelector"], {
                   0, {Left, Bottom}}, {Left, Top}, 
                   "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
             DefaultBaseStyle->{},
             Evaluator->Automatic,
             Method->"Preemptive"],
            GrayLevel[0.5],
            Editable->False,
            Selectable->False], ",", 
           InterpretationBox[
            ButtonBox[
             TooltipBox[
              GraphicsBox[{
                {GrayLevel[0], RectangleBox[{0, 0}]}, 
                {GrayLevel[0], RectangleBox[{1, -1}]}, 
                {GrayLevel[0.5], RectangleBox[{0, -1}, {2, 1}]}},
               AspectRatio->1,
               Frame->True,
               FrameStyle->GrayLevel[0.33333333333333337`],
               FrameTicks->None,
               
               ImageSize->
                Dynamic[{
                 Automatic, 
                  1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}],
               PlotRangePadding->None],
              "GrayLevel[0.5]"],
             Appearance->None,
             BaseStyle->{},
             BaselinePosition->Baseline,
             ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
               If[
                Not[
                 AbsoluteCurrentValue["Deployed"]], 
                SelectionMove[Typeset`box$, All, Expression]; 
                FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[0.5]; 
                FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                MathLink`CallFrontEnd[
                  FrontEnd`AttachCell[Typeset`box$, 
                   FrontEndResource["GrayLevelColorValueSelector"], {
                   0, {Left, Bottom}}, {Left, Top}, 
                   "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
             DefaultBaseStyle->{},
             Evaluator->Automatic,
             Method->"Preemptive"],
            GrayLevel[0.5],
            Editable->False,
            Selectable->False]}], "}"}]}], "}"}]], "ExerciseOutput"],
      Apply[TextCell, 
       Cell[
        BoxData[
         RowBox[{"{", 
           RowBox[{
             RowBox[{"{", "1", "}"}], ",", 
             RowBox[{"{", "2", "}"}], ",", 
             RowBox[{"{", "3", "}"}], ",", 
             RowBox[{"{", "4", "}"}], ",", 
             RowBox[{"{", "5", "}"}], ",", 
             RowBox[{"{", "6", "}"}], ",", 
             RowBox[{"{", "7", "}"}], ",", 
             RowBox[{"{", "8", "}"}], ",", 
             RowBox[{"{", 
               InterpretationBox[
                ButtonBox[
                 TooltipBox[
                  GraphicsBox[{{{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}}}, {{{
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}}}, {{{
                    RGBColor[1, 0.5, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}}}, AspectRatio -> 1, 
                   Frame -> True, FrameStyle -> 
                   RGBColor[0.6666666666666666, 0.33333333333333337`, 0.], 
                   FrameTicks -> None, ImageSize -> 
                   Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], PlotRangePadding -> None], 
                  "RGBColor[1, 0.5, 0]"], Appearance -> None, BaseStyle -> {},
                  BaselinePosition -> Baseline, ButtonFunction :> 
                 With[{Typeset`box$ = EvaluationBox[]}, 
                   If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0.5, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], DefaultBaseStyle -> {}, Evaluator -> 
                 Automatic, Method -> "Preemptive"], 
                RGBColor[1, 0.5, 0], Editable -> False, Selectable -> False], 
               "}"}], ",", 
             RowBox[{"{", 
               RowBox[{"1", ",", 
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}}}, {{{
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}}}, {{{
                    GrayLevel[0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}}}, AspectRatio -> 1, 
                    Frame -> True, FrameStyle -> 
                    GrayLevel[0.33333333333333337`], FrameTicks -> None, 
                    ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], PlotRangePadding -> None], 
                    "GrayLevel[0.5]"], Appearance -> None, BaseStyle -> {}, 
                   BaselinePosition -> Baseline, ButtonFunction :> 
                   With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], DefaultBaseStyle -> {}, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  GrayLevel[0.5], Editable -> False, Selectable -> False]}], 
               "}"}], ",", 
             RowBox[{"{", 
               RowBox[{"1", ",", "1"}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{"1", ",", "2"}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{"1", ",", "3"}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{"1", ",", "4"}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{"1", ",", "5"}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{"1", ",", "6"}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{"1", ",", "7"}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{"1", ",", "8"}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{"1", ",", 
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}}}, {{{
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}}}, {{{
                    RGBColor[1, 0.5, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}}}, AspectRatio -> 1, 
                    Frame -> True, FrameStyle -> 
                    RGBColor[0.6666666666666666, 0.33333333333333337`, 0.], 
                    FrameTicks -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], PlotRangePadding -> None], 
                    "RGBColor[1, 0.5, 0]"], Appearance -> None, 
                   BaseStyle -> {}, BaselinePosition -> Baseline, 
                   ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0.5, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], DefaultBaseStyle -> {}, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  RGBColor[1, 0.5, 0], Editable -> False, Selectable -> 
                  False]}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{"2", ",", 
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}}}, {{{
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}}}, {{{
                    GrayLevel[0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}}}, AspectRatio -> 1, 
                    Frame -> True, FrameStyle -> 
                    GrayLevel[0.33333333333333337`], FrameTicks -> None, 
                    ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], PlotRangePadding -> None], 
                    "GrayLevel[0.5]"], Appearance -> None, BaseStyle -> {}, 
                   BaselinePosition -> Baseline, ButtonFunction :> 
                   With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], DefaultBaseStyle -> {}, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  GrayLevel[0.5], Editable -> False, Selectable -> False]}], 
               "}"}], ",", 
             RowBox[{"{", 
               RowBox[{"2", ",", "1"}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{"2", ",", "2"}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{"2", ",", "3"}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{"2", ",", "4"}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{"2", ",", "5"}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{"2", ",", "6"}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{"2", ",", "7"}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{"2", ",", "8"}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{"2", ",", 
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}}}, {{{
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}}}, {{{
                    RGBColor[1, 0.5, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}}}, AspectRatio -> 1, 
                    Frame -> True, FrameStyle -> 
                    RGBColor[0.6666666666666666, 0.33333333333333337`, 0.], 
                    FrameTicks -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], PlotRangePadding -> None], 
                    "RGBColor[1, 0.5, 0]"], Appearance -> None, 
                   BaseStyle -> {}, BaselinePosition -> Baseline, 
                   ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0.5, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], DefaultBaseStyle -> {}, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  RGBColor[1, 0.5, 0], Editable -> False, Selectable -> 
                  False]}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{"3", ",", 
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}}}, {{{
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}}}, {{{
                    GrayLevel[0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}}}, AspectRatio -> 1, 
                    Frame -> True, FrameStyle -> 
                    GrayLevel[0.33333333333333337`], FrameTicks -> None, 
                    ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], PlotRangePadding -> None], 
                    "GrayLevel[0.5]"], Appearance -> None, BaseStyle -> {}, 
                   BaselinePosition -> Baseline, ButtonFunction :> 
                   With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], DefaultBaseStyle -> {}, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  GrayLevel[0.5], Editable -> False, Selectable -> False]}], 
               "}"}], ",", 
             RowBox[{"{", 
               RowBox[{"3", ",", "1"}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{"3", ",", "2"}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{"3", ",", "3"}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{"3", ",", "4"}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{"3", ",", "5"}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{"3", ",", "6"}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{"3", ",", "7"}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{"3", ",", "8"}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{"3", ",", 
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}}}, {{{
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}}}, {{{
                    RGBColor[1, 0.5, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}}}, AspectRatio -> 1, 
                    Frame -> True, FrameStyle -> 
                    RGBColor[0.6666666666666666, 0.33333333333333337`, 0.], 
                    FrameTicks -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], PlotRangePadding -> None], 
                    "RGBColor[1, 0.5, 0]"], Appearance -> None, 
                   BaseStyle -> {}, BaselinePosition -> Baseline, 
                   ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0.5, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], DefaultBaseStyle -> {}, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  RGBColor[1, 0.5, 0], Editable -> False, Selectable -> 
                  False]}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{"4", ",", 
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}}}, {{{
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}}}, {{{
                    GrayLevel[0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}}}, AspectRatio -> 1, 
                    Frame -> True, FrameStyle -> 
                    GrayLevel[0.33333333333333337`], FrameTicks -> None, 
                    ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], PlotRangePadding -> None], 
                    "GrayLevel[0.5]"], Appearance -> None, BaseStyle -> {}, 
                   BaselinePosition -> Baseline, ButtonFunction :> 
                   With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], DefaultBaseStyle -> {}, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  GrayLevel[0.5], Editable -> False, Selectable -> False]}], 
               "}"}], ",", 
             RowBox[{"{", 
               RowBox[{"4", ",", "1"}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{"4", ",", "2"}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{"4", ",", "3"}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{"4", ",", "4"}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{"4", ",", "5"}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{"4", ",", "6"}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{"4", ",", "7"}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{"4", ",", "8"}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{"4", ",", 
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}}}, {{{
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}}}, {{{
                    RGBColor[1, 0.5, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}}}, AspectRatio -> 1, 
                    Frame -> True, FrameStyle -> 
                    RGBColor[0.6666666666666666, 0.33333333333333337`, 0.], 
                    FrameTicks -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], PlotRangePadding -> None], 
                    "RGBColor[1, 0.5, 0]"], Appearance -> None, 
                   BaseStyle -> {}, BaselinePosition -> Baseline, 
                   ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0.5, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], DefaultBaseStyle -> {}, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  RGBColor[1, 0.5, 0], Editable -> False, Selectable -> 
                  False]}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{"5", ",", 
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}}}, {{{
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}}}, {{{
                    GrayLevel[0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}}}, AspectRatio -> 1, 
                    Frame -> True, FrameStyle -> 
                    GrayLevel[0.33333333333333337`], FrameTicks -> None, 
                    ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], PlotRangePadding -> None], 
                    "GrayLevel[0.5]"], Appearance -> None, BaseStyle -> {}, 
                   BaselinePosition -> Baseline, ButtonFunction :> 
                   With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], DefaultBaseStyle -> {}, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  GrayLevel[0.5], Editable -> False, Selectable -> False]}], 
               "}"}], ",", 
             RowBox[{"{", 
               RowBox[{"5", ",", "1"}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{"5", ",", "2"}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{"5", ",", "3"}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{"5", ",", "4"}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{"5", ",", "5"}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{"5", ",", "6"}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{"5", ",", "7"}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{"5", ",", "8"}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{"5", ",", 
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}}}, {{{
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}}}, {{{
                    RGBColor[1, 0.5, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}}}, AspectRatio -> 1, 
                    Frame -> True, FrameStyle -> 
                    RGBColor[0.6666666666666666, 0.33333333333333337`, 0.], 
                    FrameTicks -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], PlotRangePadding -> None], 
                    "RGBColor[1, 0.5, 0]"], Appearance -> None, 
                   BaseStyle -> {}, BaselinePosition -> Baseline, 
                   ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0.5, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], DefaultBaseStyle -> {}, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  RGBColor[1, 0.5, 0], Editable -> False, Selectable -> 
                  False]}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{"6", ",", 
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}}}, {{{
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}}}, {{{
                    GrayLevel[0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}}}, AspectRatio -> 1, 
                    Frame -> True, FrameStyle -> 
                    GrayLevel[0.33333333333333337`], FrameTicks -> None, 
                    ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], PlotRangePadding -> None], 
                    "GrayLevel[0.5]"], Appearance -> None, BaseStyle -> {}, 
                   BaselinePosition -> Baseline, ButtonFunction :> 
                   With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], DefaultBaseStyle -> {}, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  GrayLevel[0.5], Editable -> False, Selectable -> False]}], 
               "}"}], ",", 
             RowBox[{"{", 
               RowBox[{"6", ",", "1"}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{"6", ",", "2"}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{"6", ",", "3"}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{"6", ",", "4"}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{"6", ",", "5"}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{"6", ",", "6"}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{"6", ",", "7"}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{"6", ",", "8"}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{"6", ",", 
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}}}, {{{
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}}}, {{{
                    RGBColor[1, 0.5, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}}}, AspectRatio -> 1, 
                    Frame -> True, FrameStyle -> 
                    RGBColor[0.6666666666666666, 0.33333333333333337`, 0.], 
                    FrameTicks -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], PlotRangePadding -> None], 
                    "RGBColor[1, 0.5, 0]"], Appearance -> None, 
                   BaseStyle -> {}, BaselinePosition -> Baseline, 
                   ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0.5, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], DefaultBaseStyle -> {}, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  RGBColor[1, 0.5, 0], Editable -> False, Selectable -> 
                  False]}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{"7", ",", 
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}}}, {{{
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}}}, {{{
                    GrayLevel[0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}}}, AspectRatio -> 1, 
                    Frame -> True, FrameStyle -> 
                    GrayLevel[0.33333333333333337`], FrameTicks -> None, 
                    ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], PlotRangePadding -> None], 
                    "GrayLevel[0.5]"], Appearance -> None, BaseStyle -> {}, 
                   BaselinePosition -> Baseline, ButtonFunction :> 
                   With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], DefaultBaseStyle -> {}, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  GrayLevel[0.5], Editable -> False, Selectable -> False]}], 
               "}"}], ",", 
             RowBox[{"{", 
               RowBox[{"7", ",", "1"}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{"7", ",", "2"}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{"7", ",", "3"}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{"7", ",", "4"}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{"7", ",", "5"}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{"7", ",", "6"}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{"7", ",", "7"}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{"7", ",", "8"}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{"7", ",", 
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}}}, {{{
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}}}, {{{
                    RGBColor[1, 0.5, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}}}, AspectRatio -> 1, 
                    Frame -> True, FrameStyle -> 
                    RGBColor[0.6666666666666666, 0.33333333333333337`, 0.], 
                    FrameTicks -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], PlotRangePadding -> None], 
                    "RGBColor[1, 0.5, 0]"], Appearance -> None, 
                   BaseStyle -> {}, BaselinePosition -> Baseline, 
                   ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0.5, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], DefaultBaseStyle -> {}, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  RGBColor[1, 0.5, 0], Editable -> False, Selectable -> 
                  False]}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{"8", ",", 
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}}}, {{{
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}}}, {{{
                    GrayLevel[0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}}}, AspectRatio -> 1, 
                    Frame -> True, FrameStyle -> 
                    GrayLevel[0.33333333333333337`], FrameTicks -> None, 
                    ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], PlotRangePadding -> None], 
                    "GrayLevel[0.5]"], Appearance -> None, BaseStyle -> {}, 
                   BaselinePosition -> Baseline, ButtonFunction :> 
                   With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], DefaultBaseStyle -> {}, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  GrayLevel[0.5], Editable -> False, Selectable -> False]}], 
               "}"}], ",", 
             RowBox[{"{", 
               RowBox[{"8", ",", "1"}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{"8", ",", "2"}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{"8", ",", "3"}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{"8", ",", "4"}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{"8", ",", "5"}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{"8", ",", "6"}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{"8", ",", "7"}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{"8", ",", "8"}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{"8", ",", 
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}}}, {{{
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}}}, {{{
                    RGBColor[1, 0.5, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}}}, AspectRatio -> 1, 
                    Frame -> True, FrameStyle -> 
                    RGBColor[0.6666666666666666, 0.33333333333333337`, 0.], 
                    FrameTicks -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], PlotRangePadding -> None], 
                    "RGBColor[1, 0.5, 0]"], Appearance -> None, 
                   BaseStyle -> {}, BaselinePosition -> Baseline, 
                   ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0.5, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], DefaultBaseStyle -> {}, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  RGBColor[1, 0.5, 0], Editable -> False, Selectable -> 
                  False]}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}}}, {{{
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}}}, {{{
                    RGBColor[1, 0.5, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}}}, AspectRatio -> 1, 
                    Frame -> True, FrameStyle -> 
                    RGBColor[0.6666666666666666, 0.33333333333333337`, 0.], 
                    FrameTicks -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], PlotRangePadding -> None], 
                    "RGBColor[1, 0.5, 0]"], Appearance -> None, 
                   BaseStyle -> {}, BaselinePosition -> Baseline, 
                   ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0.5, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], DefaultBaseStyle -> {}, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  RGBColor[1, 0.5, 0], Editable -> False, Selectable -> 
                  False], ",", 
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}}}, {{{
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}}}, {{{
                    GrayLevel[0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}}}, AspectRatio -> 1, 
                    Frame -> True, FrameStyle -> 
                    GrayLevel[0.33333333333333337`], FrameTicks -> None, 
                    ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], PlotRangePadding -> None], 
                    "GrayLevel[0.5]"], Appearance -> None, BaseStyle -> {}, 
                   BaselinePosition -> Baseline, ButtonFunction :> 
                   With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], DefaultBaseStyle -> {}, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  GrayLevel[0.5], Editable -> False, Selectable -> False]}], 
               "}"}], ",", 
             RowBox[{"{", 
               RowBox[{
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}}}, {{{
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}}}, {{{
                    RGBColor[1, 0.5, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}}}, AspectRatio -> 1, 
                    Frame -> True, FrameStyle -> 
                    RGBColor[0.6666666666666666, 0.33333333333333337`, 0.], 
                    FrameTicks -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], PlotRangePadding -> None], 
                    "RGBColor[1, 0.5, 0]"], Appearance -> None, 
                   BaseStyle -> {}, BaselinePosition -> Baseline, 
                   ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0.5, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], DefaultBaseStyle -> {}, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  RGBColor[1, 0.5, 0], Editable -> False, Selectable -> 
                  False], ",", "1"}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}}}, {{{
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}}}, {{{
                    RGBColor[1, 0.5, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}}}, AspectRatio -> 1, 
                    Frame -> True, FrameStyle -> 
                    RGBColor[0.6666666666666666, 0.33333333333333337`, 0.], 
                    FrameTicks -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], PlotRangePadding -> None], 
                    "RGBColor[1, 0.5, 0]"], Appearance -> None, 
                   BaseStyle -> {}, BaselinePosition -> Baseline, 
                   ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0.5, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], DefaultBaseStyle -> {}, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  RGBColor[1, 0.5, 0], Editable -> False, Selectable -> 
                  False], ",", "2"}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}}}, {{{
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}}}, {{{
                    RGBColor[1, 0.5, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}}}, AspectRatio -> 1, 
                    Frame -> True, FrameStyle -> 
                    RGBColor[0.6666666666666666, 0.33333333333333337`, 0.], 
                    FrameTicks -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], PlotRangePadding -> None], 
                    "RGBColor[1, 0.5, 0]"], Appearance -> None, 
                   BaseStyle -> {}, BaselinePosition -> Baseline, 
                   ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0.5, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], DefaultBaseStyle -> {}, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  RGBColor[1, 0.5, 0], Editable -> False, Selectable -> 
                  False], ",", "3"}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}}}, {{{
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}}}, {{{
                    RGBColor[1, 0.5, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}}}, AspectRatio -> 1, 
                    Frame -> True, FrameStyle -> 
                    RGBColor[0.6666666666666666, 0.33333333333333337`, 0.], 
                    FrameTicks -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], PlotRangePadding -> None], 
                    "RGBColor[1, 0.5, 0]"], Appearance -> None, 
                   BaseStyle -> {}, BaselinePosition -> Baseline, 
                   ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0.5, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], DefaultBaseStyle -> {}, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  RGBColor[1, 0.5, 0], Editable -> False, Selectable -> 
                  False], ",", "4"}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}}}, {{{
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}}}, {{{
                    RGBColor[1, 0.5, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}}}, AspectRatio -> 1, 
                    Frame -> True, FrameStyle -> 
                    RGBColor[0.6666666666666666, 0.33333333333333337`, 0.], 
                    FrameTicks -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], PlotRangePadding -> None], 
                    "RGBColor[1, 0.5, 0]"], Appearance -> None, 
                   BaseStyle -> {}, BaselinePosition -> Baseline, 
                   ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0.5, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], DefaultBaseStyle -> {}, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  RGBColor[1, 0.5, 0], Editable -> False, Selectable -> 
                  False], ",", "5"}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}}}, {{{
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}}}, {{{
                    RGBColor[1, 0.5, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}}}, AspectRatio -> 1, 
                    Frame -> True, FrameStyle -> 
                    RGBColor[0.6666666666666666, 0.33333333333333337`, 0.], 
                    FrameTicks -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], PlotRangePadding -> None], 
                    "RGBColor[1, 0.5, 0]"], Appearance -> None, 
                   BaseStyle -> {}, BaselinePosition -> Baseline, 
                   ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0.5, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], DefaultBaseStyle -> {}, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  RGBColor[1, 0.5, 0], Editable -> False, Selectable -> 
                  False], ",", "6"}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}}}, {{{
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}}}, {{{
                    RGBColor[1, 0.5, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}}}, AspectRatio -> 1, 
                    Frame -> True, FrameStyle -> 
                    RGBColor[0.6666666666666666, 0.33333333333333337`, 0.], 
                    FrameTicks -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], PlotRangePadding -> None], 
                    "RGBColor[1, 0.5, 0]"], Appearance -> None, 
                   BaseStyle -> {}, BaselinePosition -> Baseline, 
                   ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0.5, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], DefaultBaseStyle -> {}, Evaluator -> A\
utomatic, Method -> "Preemptive"], 
                  RGBColor[1, 0.5, 0], Editable -> False, Selectable -> 
                  False], ",", "7"}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}}}, {{{
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}}}, {{{
                    RGBColor[1, 0.5, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}}}, AspectRatio -> 1, 
                    Frame -> True, FrameStyle -> 
                    RGBColor[0.6666666666666666, 0.33333333333333337`, 0.], 
                    FrameTicks -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], PlotRangePadding -> None], 
                    "RGBColor[1, 0.5, 0]"], Appearance -> None, 
                   BaseStyle -> {}, BaselinePosition -> Baseline, 
                   ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0.5, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], DefaultBaseStyle -> {}, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  RGBColor[1, 0.5, 0], Editable -> False, Selectable -> 
                  False], ",", "8"}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}}}, {{{
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}}}, {{{
                    RGBColor[1, 0.5, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}}}, AspectRatio -> 1, 
                    Frame -> True, FrameStyle -> 
                    RGBColor[0.6666666666666666, 0.33333333333333337`, 0.], 
                    FrameTicks -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], PlotRangePadding -> None], 
                    "RGBColor[1, 0.5, 0]"], Appearance -> None, 
                   BaseStyle -> {}, BaselinePosition -> Baseline, 
                   ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0.5, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], DefaultBaseStyle -> {}, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  RGBColor[1, 0.5, 0], Editable -> False, Selectable -> 
                  False], ",", 
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}}}, {{{
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}}}, {{{
                    RGBColor[1, 0.5, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}}}, AspectRatio -> 1, 
                    Frame -> True, FrameStyle -> 
                    RGBColor[0.6666666666666666, 0.33333333333333337`, 0.], 
                    FrameTicks -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], PlotRangePadding -> None], 
                    "RGBColor[1, 0.5, 0]"], Appearance -> None, 
                   BaseStyle -> {}, BaselinePosition -> Baseline, 
                   ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0.5, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], DefaultBaseStyle -> {}, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  RGBColor[1, 0.5, 0], Editable -> False, Selectable -> 
                  False]}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{"1", ",", 
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}}}, {{{
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}}}, {{{
                    GrayLevel[0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}}}, AspectRatio -> 1, 
                    Frame -> True, FrameStyle -> 
                    GrayLevel[0.33333333333333337`], FrameTicks -> None, 
                    ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], PlotRangePadding -> None], 
                    "GrayLevel[0.5]"], Appearance -> None, BaseStyle -> {}, 
                   BaselinePosition -> Baseline, ButtonFunction :> 
                   With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], DefaultBaseStyle -> {}, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  GrayLevel[0.5], Editable -> False, Selectable -> False], 
                 ",", 
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}}}, {{{
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}}}, {{{
                    GrayLevel[0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}}}, AspectRatio -> 1, 
                    Frame -> True, FrameStyle -> 
                    GrayLevel[0.33333333333333337`], FrameTicks -> None, 
                    ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], PlotRangePadding -> None], 
                    "GrayLevel[0.5]"], Appearance -> None, BaseStyle -> {}, 
                   BaselinePosition -> Baseline, ButtonFunction :> 
                   With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], DefaultBaseStyle -> {}, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  GrayLevel[0.5], Editable -> False, Selectable -> False]}], 
               "}"}]}], "}"}]], "ExerciseOutput", Selectable -> False, 
        Copyable -> False, Editable -> False, ShowCellBracket -> False]]], " "}
   },
   GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Center}}},
   GridBoxBackground->{"Columns" -> {{
        RGBColor[1, 1, 1]}}},
   GridBoxSpacings->{"Columns" -> {{Automatic}}, "Rows" -> {{1}}}],
  FrameMargins->0]], "ExerciseOutput",
 Editable->False,
 Selectable->False,
 Deletable->False,
 CellFrame->{{1, 1}, {1, 1}},
 ShowCellBracket->False,
 CellFrameColor->RGBColor[0.85, 0.85, 0.85],
 LineBreakWithin->Automatic]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 "Forme la lista de los d\[IAcute]gitos de 2^1000, sustituyendo todos los \
ceros por rojo (",
 ButtonBox["Red en ingl\[EAcute]",
  BaseStyle->"Link"],
 "s).",
 StyleBox[ButtonBox["\[NonBreakingSpace]\[RightGuillemet]",
  Appearance->None,
  Evaluator->Automatic,
  Method->"Preemptive",
  ButtonFunction:>(SelectionMove[
     ButtonNotebook[], All, ButtonCell, AutoScroll -> False]; 
   FrontEndExecute[
     FrontEndToken[
      ButtonNotebook[], "OpenCloseGroup"]])],
  FontColor->RGBColor[1, 0.501961, 0]]
}], "Exercise",
 Editable->False,
 Selectable->False,
 Deletable->False,
 CellDingbat->Cell[
  "32.5", "ExerciseNumber", FontColor -> 
   RGBColor[0.9019607843137255, 0.4117647058823529, 0.027450980392156862`]],
 ShowCellBracket->False],

Cell[BoxData[
 PaneBox[GridBox[{
    {" ", 
     StyleBox[
      RowBox[{"Expected", " ", 
       RowBox[{"output", ":"}]}],
      Editable->False,
      Selectable->False,
      StripOnInput->False,
      FontColor->RGBColor[0.45, 0.45, 0.45]], " "},
    {" ", 
     InterpretationBox[Cell[BoxData[
       RowBox[{"{", 
        RowBox[{"1", ",", 
         InterpretationBox[
          ButtonBox[
           TooltipBox[
            GraphicsBox[{
              {GrayLevel[0], RectangleBox[{0, 0}]}, 
              {GrayLevel[0], RectangleBox[{1, -1}]}, 
              {RGBColor[1, 0, 0], RectangleBox[{0, -1}, {2, 1}]}},
             AspectRatio->1,
             Frame->True,
             FrameStyle->RGBColor[0.6666666666666666, 0., 0.],
             FrameTicks->None,
             
             ImageSize->
              Dynamic[{
               Automatic, 
                1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}],
             PlotRangePadding->None],
            "RGBColor[1, 0, 0]"],
           Appearance->None,
           BaseStyle->{},
           BaselinePosition->Baseline,
           ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
             If[
              Not[
               AbsoluteCurrentValue["Deployed"]], 
              SelectionMove[Typeset`box$, All, Expression]; 
              FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
              FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 0, 0]; 
              FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
              MathLink`CallFrontEnd[
                FrontEnd`AttachCell[Typeset`box$, 
                 FrontEndResource["RGBColorValueSelector"], {
                 0, {Left, Bottom}}, {Left, Top}, 
                 "ClosingActions" -> {
                  "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
           
           DefaultBaseStyle->{},
           Evaluator->Automatic,
           Method->"Preemptive"],
          RGBColor[1, 0, 0],
          Editable->False,
          Selectable->False], ",", "7", ",", "1", ",", "5", ",", 
         InterpretationBox[
          ButtonBox[
           TooltipBox[
            GraphicsBox[{
              {GrayLevel[0], RectangleBox[{0, 0}]}, 
              {GrayLevel[0], RectangleBox[{1, -1}]}, 
              {RGBColor[1, 0, 0], RectangleBox[{0, -1}, {2, 1}]}},
             AspectRatio->1,
             Frame->True,
             FrameStyle->RGBColor[0.6666666666666666, 0., 0.],
             FrameTicks->None,
             
             ImageSize->
              Dynamic[{
               Automatic, 
                1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}],
             PlotRangePadding->None],
            "RGBColor[1, 0, 0]"],
           Appearance->None,
           BaseStyle->{},
           BaselinePosition->Baseline,
           ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
             If[
              Not[
               AbsoluteCurrentValue["Deployed"]], 
              SelectionMove[Typeset`box$, All, Expression]; 
              FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
              FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 0, 0]; 
              FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
              MathLink`CallFrontEnd[
                FrontEnd`AttachCell[Typeset`box$, 
                 FrontEndResource["RGBColorValueSelector"], {
                 0, {Left, Bottom}}, {Left, Top}, 
                 "ClosingActions" -> {
                  "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
           
           DefaultBaseStyle->{},
           Evaluator->Automatic,
           Method->"Preemptive"],
          RGBColor[1, 0, 0],
          Editable->False,
          Selectable->False], ",", "8", ",", "6", ",", 
         InterpretationBox[
          ButtonBox[
           TooltipBox[
            GraphicsBox[{
              {GrayLevel[0], RectangleBox[{0, 0}]}, 
              {GrayLevel[0], RectangleBox[{1, -1}]}, 
              {RGBColor[1, 0, 0], RectangleBox[{0, -1}, {2, 1}]}},
             AspectRatio->1,
             Frame->True,
             FrameStyle->RGBColor[0.6666666666666666, 0., 0.],
             FrameTicks->None,
             
             ImageSize->
              Dynamic[{
               Automatic, 
                1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}],
             PlotRangePadding->None],
            "RGBColor[1, 0, 0]"],
           Appearance->None,
           BaseStyle->{},
           BaselinePosition->Baseline,
           ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
             If[
              Not[
               AbsoluteCurrentValue["Deployed"]], 
              SelectionMove[Typeset`box$, All, Expression]; 
              FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
              FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 0, 0]; 
              FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
              MathLink`CallFrontEnd[
                FrontEnd`AttachCell[Typeset`box$, 
                 FrontEndResource["RGBColorValueSelector"], {
                 0, {Left, Bottom}}, {Left, Top}, 
                 "ClosingActions" -> {
                  "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
           
           DefaultBaseStyle->{},
           Evaluator->Automatic,
           Method->"Preemptive"],
          RGBColor[1, 0, 0],
          Editable->False,
          Selectable->False], ",", "7", ",", "1", ",", "8", ",", "6", ",", 
         "2", ",", "6", ",", "7", ",", "3", ",", "2", ",", 
         InterpretationBox[
          ButtonBox[
           TooltipBox[
            GraphicsBox[{
              {GrayLevel[0], RectangleBox[{0, 0}]}, 
              {GrayLevel[0], RectangleBox[{1, -1}]}, 
              {RGBColor[1, 0, 0], RectangleBox[{0, -1}, {2, 1}]}},
             AspectRatio->1,
             Frame->True,
             FrameStyle->RGBColor[0.6666666666666666, 0., 0.],
             FrameTicks->None,
             
             ImageSize->
              Dynamic[{
               Automatic, 
                1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}],
             PlotRangePadding->None],
            "RGBColor[1, 0, 0]"],
           Appearance->None,
           BaseStyle->{},
           BaselinePosition->Baseline,
           ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
             If[
              Not[
               AbsoluteCurrentValue["Deployed"]], 
              SelectionMove[Typeset`box$, All, Expression]; 
              FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
              FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 0, 0]; 
              FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
              MathLink`CallFrontEnd[
                FrontEnd`AttachCell[Typeset`box$, 
                 FrontEndResource["RGBColorValueSelector"], {
                 0, {Left, Bottom}}, {Left, Top}, 
                 "ClosingActions" -> {
                  "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
           
           DefaultBaseStyle->{},
           Evaluator->Automatic,
           Method->"Preemptive"],
          RGBColor[1, 0, 0],
          Editable->False,
          Selectable->False], ",", "9", ",", "4", ",", "8", ",", "4", ",", 
         "2", ",", "5", ",", 
         InterpretationBox[
          ButtonBox[
           TooltipBox[
            GraphicsBox[{
              {GrayLevel[0], RectangleBox[{0, 0}]}, 
              {GrayLevel[0], RectangleBox[{1, -1}]}, 
              {RGBColor[1, 0, 0], RectangleBox[{0, -1}, {2, 1}]}},
             AspectRatio->1,
             Frame->True,
             FrameStyle->RGBColor[0.6666666666666666, 0., 0.],
             FrameTicks->None,
             
             ImageSize->
              Dynamic[{
               Automatic, 
                1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}],
             PlotRangePadding->None],
            "RGBColor[1, 0, 0]"],
           Appearance->None,
           BaseStyle->{},
           BaselinePosition->Baseline,
           ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
             If[
              Not[
               AbsoluteCurrentValue["Deployed"]], 
              SelectionMove[Typeset`box$, All, Expression]; 
              FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
              FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 0, 0]; 
              FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
              MathLink`CallFrontEnd[
                FrontEnd`AttachCell[Typeset`box$, 
                 FrontEndResource["RGBColorValueSelector"], {
                 0, {Left, Bottom}}, {Left, Top}, 
                 "ClosingActions" -> {
                  "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
           
           DefaultBaseStyle->{},
           Evaluator->Automatic,
           Method->"Preemptive"],
          RGBColor[1, 0, 0],
          Editable->False,
          Selectable->False], ",", "4", ",", "9", ",", 
         InterpretationBox[
          ButtonBox[
           TooltipBox[
            GraphicsBox[{
              {GrayLevel[0], RectangleBox[{0, 0}]}, 
              {GrayLevel[0], RectangleBox[{1, -1}]}, 
              {RGBColor[1, 0, 0], RectangleBox[{0, -1}, {2, 1}]}},
             AspectRatio->1,
             Frame->True,
             FrameStyle->RGBColor[0.6666666666666666, 0., 0.],
             FrameTicks->None,
             
             ImageSize->
              Dynamic[{
               Automatic, 
                1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}],
             PlotRangePadding->None],
            "RGBColor[1, 0, 0]"],
           Appearance->None,
           BaseStyle->{},
           BaselinePosition->Baseline,
           ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
             If[
              Not[
               AbsoluteCurrentValue["Deployed"]], 
              SelectionMove[Typeset`box$, All, Expression]; 
              FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
              FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 0, 0]; 
              FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
              MathLink`CallFrontEnd[
                FrontEnd`AttachCell[Typeset`box$, 
                 FrontEndResource["RGBColorValueSelector"], {
                 0, {Left, Bottom}}, {Left, Top}, 
                 "ClosingActions" -> {
                  "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
           
           DefaultBaseStyle->{},
           Evaluator->Automatic,
           Method->"Preemptive"],
          RGBColor[1, 0, 0],
          Editable->False,
          Selectable->False], ",", "6", ",", 
         InterpretationBox[
          ButtonBox[
           TooltipBox[
            GraphicsBox[{
              {GrayLevel[0], RectangleBox[{0, 0}]}, 
              {GrayLevel[0], RectangleBox[{1, -1}]}, 
              {RGBColor[1, 0, 0], RectangleBox[{0, -1}, {2, 1}]}},
             AspectRatio->1,
             Frame->True,
             FrameStyle->RGBColor[0.6666666666666666, 0., 0.],
             FrameTicks->None,
             
             ImageSize->
              Dynamic[{
               Automatic, 
                1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}],
             PlotRangePadding->None],
            "RGBColor[1, 0, 0]"],
           Appearance->None,
           BaseStyle->{},
           BaselinePosition->Baseline,
           ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
             If[
              Not[
               AbsoluteCurrentValue["Deployed"]], 
              SelectionMove[Typeset`box$, All, Expression]; 
              FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
              FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 0, 0]; 
              FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
              MathLink`CallFrontEnd[
                FrontEnd`AttachCell[Typeset`box$, 
                 FrontEndResource["RGBColorValueSelector"], {
                 0, {Left, Bottom}}, {Left, Top}, 
                 "ClosingActions" -> {
                  "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
           
           DefaultBaseStyle->{},
           Evaluator->Automatic,
           Method->"Preemptive"],
          RGBColor[1, 0, 0],
          Editable->False,
          Selectable->False], ",", 
         InterpretationBox[
          ButtonBox[
           TooltipBox[
            GraphicsBox[{
              {GrayLevel[0], RectangleBox[{0, 0}]}, 
              {GrayLevel[0], RectangleBox[{1, -1}]}, 
              {RGBColor[1, 0, 0], RectangleBox[{0, -1}, {2, 1}]}},
             AspectRatio->1,
             Frame->True,
             FrameStyle->RGBColor[0.6666666666666666, 0., 0.],
             FrameTicks->None,
             
             ImageSize->
              Dynamic[{
               Automatic, 
                1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}],
             PlotRangePadding->None],
            "RGBColor[1, 0, 0]"],
           Appearance->None,
           BaseStyle->{},
           BaselinePosition->Baseline,
           ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
             If[
              Not[
               AbsoluteCurrentValue["Deployed"]], 
              SelectionMove[Typeset`box$, All, Expression]; 
              FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
              FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 0, 0]; 
              FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
              MathLink`CallFrontEnd[
                FrontEnd`AttachCell[Typeset`box$, 
                 FrontEndResource["RGBColorValueSelector"], {
                 0, {Left, Bottom}}, {Left, Top}, 
                 "ClosingActions" -> {
                  "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
           
           DefaultBaseStyle->{},
           Evaluator->Automatic,
           Method->"Preemptive"],
          RGBColor[1, 0, 0],
          Editable->False,
          Selectable->False], ",", 
         InterpretationBox[
          ButtonBox[
           TooltipBox[
            GraphicsBox[{
              {GrayLevel[0], RectangleBox[{0, 0}]}, 
              {GrayLevel[0], RectangleBox[{1, -1}]}, 
              {RGBColor[1, 0, 0], RectangleBox[{0, -1}, {2, 1}]}},
             AspectRatio->1,
             Frame->True,
             FrameStyle->RGBColor[0.6666666666666666, 0., 0.],
             FrameTicks->None,
             
             ImageSize->
              Dynamic[{
               Automatic, 
                1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}],
             PlotRangePadding->None],
            "RGBColor[1, 0, 0]"],
           Appearance->None,
           BaseStyle->{},
           BaselinePosition->Baseline,
           ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
             If[
              Not[
               AbsoluteCurrentValue["Deployed"]], 
              SelectionMove[Typeset`box$, All, Expression]; 
              FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
              FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 0, 0]; 
              FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
              MathLink`CallFrontEnd[
                FrontEnd`AttachCell[Typeset`box$, 
                 FrontEndResource["RGBColorValueSelector"], {
                 0, {Left, Bottom}}, {Left, Top}, 
                 "ClosingActions" -> {
                  "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
           
           DefaultBaseStyle->{},
           Evaluator->Automatic,
           Method->"Preemptive"],
          RGBColor[1, 0, 0],
          Editable->False,
          Selectable->False], ",", "1", ",", "8", ",", "1", ",", 
         InterpretationBox[
          ButtonBox[
           TooltipBox[
            GraphicsBox[{
              {GrayLevel[0], RectangleBox[{0, 0}]}, 
              {GrayLevel[0], RectangleBox[{1, -1}]}, 
              {RGBColor[1, 0, 0], RectangleBox[{0, -1}, {2, 1}]}},
             AspectRatio->1,
             Frame->True,
             FrameStyle->RGBColor[0.6666666666666666, 0., 0.],
             FrameTicks->None,
             
             ImageSize->
              Dynamic[{
               Automatic, 
                1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}],
             PlotRangePadding->None],
            "RGBColor[1, 0, 0]"],
           Appearance->None,
           BaseStyle->{},
           BaselinePosition->Baseline,
           ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
             If[
              Not[
               AbsoluteCurrentValue["Deployed"]], 
              SelectionMove[Typeset`box$, All, Expression]; 
              FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
              FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 0, 0]; 
              FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
              MathLink`CallFrontEnd[
                FrontEnd`AttachCell[Typeset`box$, 
                 FrontEndResource["RGBColorValueSelector"], {
                 0, {Left, Bottom}}, {Left, Top}, 
                 "ClosingActions" -> {
                  "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
           
           DefaultBaseStyle->{},
           Evaluator->Automatic,
           Method->"Preemptive"],
          RGBColor[1, 0, 0],
          Editable->False,
          Selectable->False], ",", "5", ",", "6", ",", "1", ",", "4", ",", 
         InterpretationBox[
          ButtonBox[
           TooltipBox[
            GraphicsBox[{
              {GrayLevel[0], RectangleBox[{0, 0}]}, 
              {GrayLevel[0], RectangleBox[{1, -1}]}, 
              {RGBColor[1, 0, 0], RectangleBox[{0, -1}, {2, 1}]}},
             AspectRatio->1,
             Frame->True,
             FrameStyle->RGBColor[0.6666666666666666, 0., 0.],
             FrameTicks->None,
             
             ImageSize->
              Dynamic[{
               Automatic, 
                1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}],
             PlotRangePadding->None],
            "RGBColor[1, 0, 0]"],
           Appearance->None,
           BaseStyle->{},
           BaselinePosition->Baseline,
           ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
             If[
              Not[
               AbsoluteCurrentValue["Deployed"]], 
              SelectionMove[Typeset`box$, All, Expression]; 
              FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
              FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 0, 0]; 
              FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
              MathLink`CallFrontEnd[
                FrontEnd`AttachCell[Typeset`box$, 
                 FrontEndResource["RGBColorValueSelector"], {
                 0, {Left, Bottom}}, {Left, Top}, 
                 "ClosingActions" -> {
                  "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
           
           DefaultBaseStyle->{},
           Evaluator->Automatic,
           Method->"Preemptive"],
          RGBColor[1, 0, 0],
          Editable->False,
          Selectable->False], ",", "4", ",", "8", ",", "1", ",", "1", ",", 
         "7", ",", 
         InterpretationBox[
          ButtonBox[
           TooltipBox[
            GraphicsBox[{
              {GrayLevel[0], RectangleBox[{0, 0}]}, 
              {GrayLevel[0], RectangleBox[{1, -1}]}, 
              {RGBColor[1, 0, 0], RectangleBox[{0, -1}, {2, 1}]}},
             AspectRatio->1,
             Frame->True,
             FrameStyle->RGBColor[0.6666666666666666, 0., 0.],
             FrameTicks->None,
             
             ImageSize->
              Dynamic[{
               Automatic, 
                1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}],
             PlotRangePadding->None],
            "RGBColor[1, 0, 0]"],
           Appearance->None,
           BaseStyle->{},
           BaselinePosition->Baseline,
           ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
             If[
              Not[
               AbsoluteCurrentValue["Deployed"]], 
              SelectionMove[Typeset`box$, All, Expression]; 
              FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
              FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 0, 0]; 
              FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
              MathLink`CallFrontEnd[
                FrontEnd`AttachCell[Typeset`box$, 
                 FrontEndResource["RGBColorValueSelector"], {
                 0, {Left, Bottom}}, {Left, Top}, 
                 "ClosingActions" -> {
                  "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
           
           DefaultBaseStyle->{},
           Evaluator->Automatic,
           Method->"Preemptive"],
          RGBColor[1, 0, 0],
          Editable->False,
          Selectable->False], ",", "5", ",", "5", ",", "3", ",", "3", ",", 
         "6", ",", 
         InterpretationBox[
          ButtonBox[
           TooltipBox[
            GraphicsBox[{
              {GrayLevel[0], RectangleBox[{0, 0}]}, 
              {GrayLevel[0], RectangleBox[{1, -1}]}, 
              {RGBColor[1, 0, 0], RectangleBox[{0, -1}, {2, 1}]}},
             AspectRatio->1,
             Frame->True,
             FrameStyle->RGBColor[0.6666666666666666, 0., 0.],
             FrameTicks->None,
             
             ImageSize->
              Dynamic[{
               Automatic, 
                1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}],
             PlotRangePadding->None],
            "RGBColor[1, 0, 0]"],
           Appearance->None,
           BaseStyle->{},
           BaselinePosition->Baseline,
           ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
             If[
              Not[
               AbsoluteCurrentValue["Deployed"]], 
              SelectionMove[Typeset`box$, All, Expression]; 
              FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
              FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 0, 0]; 
              FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
              MathLink`CallFrontEnd[
                FrontEnd`AttachCell[Typeset`box$, 
                 FrontEndResource["RGBColorValueSelector"], {
                 0, {Left, Bottom}}, {Left, Top}, 
                 "ClosingActions" -> {
                  "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
           
           DefaultBaseStyle->{},
           Evaluator->Automatic,
           Method->"Preemptive"],
          RGBColor[1, 0, 0],
          Editable->False,
          Selectable->False], ",", "7", ",", "4", ",", "4", ",", "3", ",", 
         "7", ",", "5", ",", 
         InterpretationBox[
          ButtonBox[
           TooltipBox[
            GraphicsBox[{
              {GrayLevel[0], RectangleBox[{0, 0}]}, 
              {GrayLevel[0], RectangleBox[{1, -1}]}, 
              {RGBColor[1, 0, 0], RectangleBox[{0, -1}, {2, 1}]}},
             AspectRatio->1,
             Frame->True,
             FrameStyle->RGBColor[0.6666666666666666, 0., 0.],
             FrameTicks->None,
             
             ImageSize->
              Dynamic[{
               Automatic, 
                1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}],
             PlotRangePadding->None],
            "RGBColor[1, 0, 0]"],
           Appearance->None,
           BaseStyle->{},
           BaselinePosition->Baseline,
           ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
             If[
              Not[
               AbsoluteCurrentValue["Deployed"]], 
              SelectionMove[Typeset`box$, All, Expression]; 
              FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
              FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 0, 0]; 
              FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
              MathLink`CallFrontEnd[
                FrontEnd`AttachCell[Typeset`box$, 
                 FrontEndResource["RGBColorValueSelector"], {
                 0, {Left, Bottom}}, {Left, Top}, 
                 "ClosingActions" -> {
                  "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
           
           DefaultBaseStyle->{},
           Evaluator->Automatic,
           Method->"Preemptive"],
          RGBColor[1, 0, 0],
          Editable->False,
          Selectable->False], ",", "3", ",", "8", ",", "8", ",", "3", ",", 
         "7", ",", 
         InterpretationBox[
          ButtonBox[
           TooltipBox[
            GraphicsBox[{
              {GrayLevel[0], RectangleBox[{0, 0}]}, 
              {GrayLevel[0], RectangleBox[{1, -1}]}, 
              {RGBColor[1, 0, 0], RectangleBox[{0, -1}, {2, 1}]}},
             AspectRatio->1,
             Frame->True,
             FrameStyle->RGBColor[0.6666666666666666, 0., 0.],
             FrameTicks->None,
             
             ImageSize->
              Dynamic[{
               Automatic, 
                1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}],
             PlotRangePadding->None],
            "RGBColor[1, 0, 0]"],
           Appearance->None,
           BaseStyle->{},
           BaselinePosition->Baseline,
           ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
             If[
              Not[
               AbsoluteCurrentValue["Deployed"]], 
              SelectionMove[Typeset`box$, All, Expression]; 
              FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
              FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 0, 0]; 
              FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
              MathLink`CallFrontEnd[
                FrontEnd`AttachCell[Typeset`box$, 
                 FrontEndResource["RGBColorValueSelector"], {
                 0, {Left, Bottom}}, {Left, Top}, 
                 "ClosingActions" -> {
                  "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
           
           DefaultBaseStyle->{},
           Evaluator->Automatic,
           Method->"Preemptive"],
          RGBColor[1, 0, 0],
          Editable->False,
          Selectable->False], ",", "3", ",", "5", ",", "1", ",", 
         InterpretationBox[
          ButtonBox[
           TooltipBox[
            GraphicsBox[{
              {GrayLevel[0], RectangleBox[{0, 0}]}, 
              {GrayLevel[0], RectangleBox[{1, -1}]}, 
              {RGBColor[1, 0, 0], RectangleBox[{0, -1}, {2, 1}]}},
             AspectRatio->1,
             Frame->True,
             FrameStyle->RGBColor[0.6666666666666666, 0., 0.],
             FrameTicks->None,
             
             ImageSize->
              Dynamic[{
               Automatic, 
                1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}],
             PlotRangePadding->None],
            "RGBColor[1, 0, 0]"],
           Appearance->None,
           BaseStyle->{},
           BaselinePosition->Baseline,
           ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
             If[
              Not[
               AbsoluteCurrentValue["Deployed"]], 
              SelectionMove[Typeset`box$, All, Expression]; 
              FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
              FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 0, 0]; 
              FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
              MathLink`CallFrontEnd[
                FrontEnd`AttachCell[Typeset`box$, 
                 FrontEndResource["RGBColorValueSelector"], {
                 0, {Left, Bottom}}, {Left, Top}, 
                 "ClosingActions" -> {
                  "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
           
           DefaultBaseStyle->{},
           Evaluator->Automatic,
           Method->"Preemptive"],
          RGBColor[1, 0, 0],
          Editable->False,
          Selectable->False], ",", "5", ",", "1", ",", "1", ",", "2", ",", 
         "4", ",", "9", ",", "3", ",", "6", ",", "1", ",", "2", ",", "2", ",",
          "4", ",", "9", ",", "3", ",", "1", ",", "9", ",", "8", ",", "3", 
         ",", "7", ",", "8", ",", "8", ",", "1", ",", "5", ",", "6", ",", "9",
          ",", "5", ",", "8", ",", "5", ",", "8", ",", "1", ",", "2", ",", 
         "7", ",", "5", ",", "9", ",", "4", ",", "6", ",", "7", ",", "2", ",",
          "9", ",", "1", ",", "7", ",", "5", ",", "5", ",", "3", ",", "1", 
         ",", "4", ",", "6", ",", "8", ",", "2", ",", "5", ",", "1", ",", "8",
          ",", "7", ",", "1", ",", "4", ",", "5", ",", "2", ",", "8", ",", 
         "5", ",", "6", ",", "9", ",", "2", ",", "3", ",", "1", ",", "4", ",", 
         InterpretationBox[
          ButtonBox[
           TooltipBox[
            GraphicsBox[{
              {GrayLevel[0], RectangleBox[{0, 0}]}, 
              {GrayLevel[0], RectangleBox[{1, -1}]}, 
              {RGBColor[1, 0, 0], RectangleBox[{0, -1}, {2, 1}]}},
             AspectRatio->1,
             Frame->True,
             FrameStyle->RGBColor[0.6666666666666666, 0., 0.],
             FrameTicks->None,
             ImageSize->
              Dynamic[{
               Automatic, 
                1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}],
             PlotRangePadding->None],
            "RGBColor[1, 0, 0]"],
           Appearance->None,
           BaseStyle->{},
           BaselinePosition->Baseline,
           ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
             If[
              Not[
               AbsoluteCurrentValue["Deployed"]], 
              SelectionMove[Typeset`box$, All, Expression]; 
              FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
              FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 0, 0]; 
              FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
              MathLink`CallFrontEnd[
                FrontEnd`AttachCell[Typeset`box$, 
                 FrontEndResource["RGBColorValueSelector"], {
                 0, {Left, Bottom}}, {Left, Top}, 
                 "ClosingActions" -> {
                  "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
           
           DefaultBaseStyle->{},
           Evaluator->Automatic,
           Method->"Preemptive"],
          RGBColor[1, 0, 0],
          Editable->False,
          Selectable->False], ",", "4", ",", "3", ",", "5", ",", "9", ",", 
         "8", ",", "4", ",", "5", ",", "7", ",", "7", ",", "5", ",", "7", ",",
          "4", ",", "6", ",", "9", ",", "8", ",", "5", ",", "7", ",", "4", 
         ",", "8", ",", 
         InterpretationBox[
          ButtonBox[
           TooltipBox[
            GraphicsBox[{
              {GrayLevel[0], RectangleBox[{0, 0}]}, 
              {GrayLevel[0], RectangleBox[{1, -1}]}, 
              {RGBColor[1, 0, 0], RectangleBox[{0, -1}, {2, 1}]}},
             AspectRatio->1,
             Frame->True,
             FrameStyle->RGBColor[0.6666666666666666, 0., 0.],
             FrameTicks->None,
             
             ImageSize->
              Dynamic[{
               Automatic, 
                1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}],
             PlotRangePadding->None],
            "RGBColor[1, 0, 0]"],
           Appearance->None,
           BaseStyle->{},
           BaselinePosition->Baseline,
           ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
             If[
              Not[
               AbsoluteCurrentValue["Deployed"]], 
              SelectionMove[Typeset`box$, All, Expression]; 
              FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
              FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 0, 0]; 
              FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
              MathLink`CallFrontEnd[
                FrontEnd`AttachCell[Typeset`box$, 
                 FrontEndResource["RGBColorValueSelector"], {
                 0, {Left, Bottom}}, {Left, Top}, 
                 "ClosingActions" -> {
                  "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
           
           DefaultBaseStyle->{},
           Evaluator->Automatic,
           Method->"Preemptive"],
          RGBColor[1, 0, 0],
          Editable->False,
          Selectable->False], ",", "3", ",", "9", ",", "3", ",", "4", ",", 
         "5", ",", "6", ",", "7", ",", "7", ",", "7", ",", "4", ",", "8", ",",
          "2", ",", "4", ",", "2", ",", "3", ",", 
         InterpretationBox[
          ButtonBox[
           TooltipBox[
            GraphicsBox[{
              {GrayLevel[0], RectangleBox[{0, 0}]}, 
              {GrayLevel[0], RectangleBox[{1, -1}]}, 
              {RGBColor[1, 0, 0], RectangleBox[{0, -1}, {2, 1}]}},
             AspectRatio->1,
             Frame->True,
             FrameStyle->RGBColor[0.6666666666666666, 0., 0.],
             FrameTicks->None,
             
             ImageSize->
              Dynamic[{
               Automatic, 
                1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}],
             PlotRangePadding->None],
            "RGBColor[1, 0, 0]"],
           Appearance->None,
           BaseStyle->{},
           BaselinePosition->Baseline,
           ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
             If[
              Not[
               AbsoluteCurrentValue["Deployed"]], 
              SelectionMove[Typeset`box$, All, Expression]; 
              FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
              FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 0, 0]; 
              FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
              MathLink`CallFrontEnd[
                FrontEnd`AttachCell[Typeset`box$, 
                 FrontEndResource["RGBColorValueSelector"], {
                 0, {Left, Bottom}}, {Left, Top}, 
                 "ClosingActions" -> {
                  "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
           
           DefaultBaseStyle->{},
           Evaluator->Automatic,
           Method->"Preemptive"],
          RGBColor[1, 0, 0],
          Editable->False,
          Selectable->False], ",", "9", ",", "8", ",", "5", ",", "4", ",", 
         "2", ",", "1", ",", 
         InterpretationBox[
          ButtonBox[
           TooltipBox[
            GraphicsBox[{
              {GrayLevel[0], RectangleBox[{0, 0}]}, 
              {GrayLevel[0], RectangleBox[{1, -1}]}, 
              {RGBColor[1, 0, 0], RectangleBox[{0, -1}, {2, 1}]}},
             AspectRatio->1,
             Frame->True,
             FrameStyle->RGBColor[0.6666666666666666, 0., 0.],
             FrameTicks->None,
             
             ImageSize->
              Dynamic[{
               Automatic, 
                1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}],
             PlotRangePadding->None],
            "RGBColor[1, 0, 0]"],
           Appearance->None,
           BaseStyle->{},
           BaselinePosition->Baseline,
           ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
             If[
              Not[
               AbsoluteCurrentValue["Deployed"]], 
              SelectionMove[Typeset`box$, All, Expression]; 
              FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
              FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 0, 0]; 
              FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
              MathLink`CallFrontEnd[
                FrontEnd`AttachCell[Typeset`box$, 
                 FrontEndResource["RGBColorValueSelector"], {
                 0, {Left, Bottom}}, {Left, Top}, 
                 "ClosingActions" -> {
                  "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
           
           DefaultBaseStyle->{},
           Evaluator->Automatic,
           Method->"Preemptive"],
          RGBColor[1, 0, 0],
          Editable->False,
          Selectable->False], ",", "7", ",", "4", ",", "6", ",", 
         InterpretationBox[
          ButtonBox[
           TooltipBox[
            GraphicsBox[{
              {GrayLevel[0], RectangleBox[{0, 0}]}, 
              {GrayLevel[0], RectangleBox[{1, -1}]}, 
              {RGBColor[1, 0, 0], RectangleBox[{0, -1}, {2, 1}]}},
             AspectRatio->1,
             Frame->True,
             FrameStyle->RGBColor[0.6666666666666666, 0., 0.],
             FrameTicks->None,
             
             ImageSize->
              Dynamic[{
               Automatic, 
                1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}],
             PlotRangePadding->None],
            "RGBColor[1, 0, 0]"],
           Appearance->None,
           BaseStyle->{},
           BaselinePosition->Baseline,
           ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
             If[
              Not[
               AbsoluteCurrentValue["Deployed"]], 
              SelectionMove[Typeset`box$, All, Expression]; 
              FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
              FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 0, 0]; 
              FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
              MathLink`CallFrontEnd[
                FrontEnd`AttachCell[Typeset`box$, 
                 FrontEndResource["RGBColorValueSelector"], {
                 0, {Left, Bottom}}, {Left, Top}, 
                 "ClosingActions" -> {
                  "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
           
           DefaultBaseStyle->{},
           Evaluator->Automatic,
           Method->"Preemptive"],
          RGBColor[1, 0, 0],
          Editable->False,
          Selectable->False], ",", "5", ",", 
         InterpretationBox[
          ButtonBox[
           TooltipBox[
            GraphicsBox[{
              {GrayLevel[0], RectangleBox[{0, 0}]}, 
              {GrayLevel[0], RectangleBox[{1, -1}]}, 
              {RGBColor[1, 0, 0], RectangleBox[{0, -1}, {2, 1}]}},
             AspectRatio->1,
             Frame->True,
             FrameStyle->RGBColor[0.6666666666666666, 0., 0.],
             FrameTicks->None,
             
             ImageSize->
              Dynamic[{
               Automatic, 
                1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}],
             PlotRangePadding->None],
            "RGBColor[1, 0, 0]"],
           Appearance->None,
           BaseStyle->{},
           BaselinePosition->Baseline,
           ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
             If[
              Not[
               AbsoluteCurrentValue["Deployed"]], 
              SelectionMove[Typeset`box$, All, Expression]; 
              FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
              FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 0, 0]; 
              FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
              MathLink`CallFrontEnd[
                FrontEnd`AttachCell[Typeset`box$, 
                 FrontEndResource["RGBColorValueSelector"], {
                 0, {Left, Bottom}}, {Left, Top}, 
                 "ClosingActions" -> {
                  "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
           
           DefaultBaseStyle->{},
           Evaluator->Automatic,
           Method->"Preemptive"],
          RGBColor[1, 0, 0],
          Editable->False,
          Selectable->False], ",", "6", ",", "2", ",", "3", ",", "7", ",", 
         "1", ",", "1", ",", "4", ",", "1", ",", "8", ",", "7", ",", "7", ",",
          "9", ",", "5", ",", "4", ",", "1", ",", "8", ",", "2", ",", "1", 
         ",", "5", ",", "3", ",", 
         InterpretationBox[
          ButtonBox[
           TooltipBox[
            GraphicsBox[{
              {GrayLevel[0], RectangleBox[{0, 0}]}, 
              {GrayLevel[0], RectangleBox[{1, -1}]}, 
              {RGBColor[1, 0, 0], RectangleBox[{0, -1}, {2, 1}]}},
             AspectRatio->1,
             Frame->True,
             FrameStyle->RGBColor[0.6666666666666666, 0., 0.],
             FrameTicks->None,
             
             ImageSize->
              Dynamic[{
               Automatic, 
                1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}],
             PlotRangePadding->None],
            "RGBColor[1, 0, 0]"],
           Appearance->None,
           BaseStyle->{},
           BaselinePosition->Baseline,
           ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
             If[
              Not[
               AbsoluteCurrentValue["Deployed"]], 
              SelectionMove[Typeset`box$, All, Expression]; 
              FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
              FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 0, 0]; 
              FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
              MathLink`CallFrontEnd[
                FrontEnd`AttachCell[Typeset`box$, 
                 FrontEndResource["RGBColorValueSelector"], {
                 0, {Left, Bottom}}, {Left, Top}, 
                 "ClosingActions" -> {
                  "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
           
           DefaultBaseStyle->{},
           Evaluator->Automatic,
           Method->"Preemptive"],
          RGBColor[1, 0, 0],
          Editable->False,
          Selectable->False], ",", "4", ",", "6", ",", "4", ",", "7", ",", 
         "4", ",", "9", ",", "8", ",", "3", ",", "5", ",", "8", ",", "1", ",",
          "9", ",", "4", ",", "1", ",", "2", ",", "6", ",", "7", ",", "3", 
         ",", "9", ",", "8", ",", "7", ",", "6", ",", "7", ",", "5", ",", "5",
          ",", "9", ",", "1", ",", "6", ",", "5", ",", "5", ",", "4", ",", 
         "3", ",", "9", ",", "4", ",", "6", ",", 
         InterpretationBox[
          ButtonBox[
           TooltipBox[
            GraphicsBox[{
              {GrayLevel[0], RectangleBox[{0, 0}]}, 
              {GrayLevel[0], RectangleBox[{1, -1}]}, 
              {RGBColor[1, 0, 0], RectangleBox[{0, -1}, {2, 1}]}},
             AspectRatio->1,
             Frame->True,
             FrameStyle->RGBColor[0.6666666666666666, 0., 0.],
             FrameTicks->None,
             
             ImageSize->
              Dynamic[{
               Automatic, 
                1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}],
             PlotRangePadding->None],
            "RGBColor[1, 0, 0]"],
           Appearance->None,
           BaseStyle->{},
           BaselinePosition->Baseline,
           ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
             If[
              Not[
               AbsoluteCurrentValue["Deployed"]], 
              SelectionMove[Typeset`box$, All, Expression]; 
              FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
              FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 0, 0]; 
              FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
              MathLink`CallFrontEnd[
                FrontEnd`AttachCell[Typeset`box$, 
                 FrontEndResource["RGBColorValueSelector"], {
                 0, {Left, Bottom}}, {Left, Top}, 
                 "ClosingActions" -> {
                  "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
           
           DefaultBaseStyle->{},
           Evaluator->Automatic,
           Method->"Preemptive"],
          RGBColor[1, 0, 0],
          Editable->False,
          Selectable->False], ",", "7", ",", "7", ",", 
         InterpretationBox[
          ButtonBox[
           TooltipBox[
            GraphicsBox[{
              {GrayLevel[0], RectangleBox[{0, 0}]}, 
              {GrayLevel[0], RectangleBox[{1, -1}]}, 
              {RGBColor[1, 0, 0], RectangleBox[{0, -1}, {2, 1}]}},
             AspectRatio->1,
             Frame->True,
             FrameStyle->RGBColor[0.6666666666666666, 0., 0.],
             FrameTicks->None,
             
             ImageSize->
              Dynamic[{
               Automatic, 
                1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}],
             PlotRangePadding->None],
            "RGBColor[1, 0, 0]"],
           Appearance->None,
           BaseStyle->{},
           BaselinePosition->Baseline,
           ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
             If[
              Not[
               AbsoluteCurrentValue["Deployed"]], 
              SelectionMove[Typeset`box$, All, Expression]; 
              FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
              FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 0, 0]; 
              FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
              MathLink`CallFrontEnd[
                FrontEnd`AttachCell[Typeset`box$, 
                 FrontEndResource["RGBColorValueSelector"], {
                 0, {Left, Bottom}}, {Left, Top}, 
                 "ClosingActions" -> {
                  "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
           
           DefaultBaseStyle->{},
           Evaluator->Automatic,
           Method->"Preemptive"],
          RGBColor[1, 0, 0],
          Editable->False,
          Selectable->False], ",", "6", ",", "2", ",", "9", ",", "1", ",", 
         "4", ",", "5", ",", "7", ",", "1", ",", "1", ",", "9", ",", "6", ",",
          "4", ",", "7", ",", "7", ",", "6", ",", "8", ",", "6", ",", "5", 
         ",", "4", ",", "2", ",", "1", ",", "6", ",", "7", ",", "6", ",", "6",
          ",", 
         InterpretationBox[
          ButtonBox[
           TooltipBox[
            GraphicsBox[{
              {GrayLevel[0], RectangleBox[{0, 0}]}, 
              {GrayLevel[0], RectangleBox[{1, -1}]}, 
              {RGBColor[1, 0, 0], RectangleBox[{0, -1}, {2, 1}]}},
             AspectRatio->1,
             Frame->True,
             FrameStyle->RGBColor[0.6666666666666666, 0., 0.],
             FrameTicks->None,
             
             ImageSize->
              Dynamic[{
               Automatic, 
                1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}],
             PlotRangePadding->None],
            "RGBColor[1, 0, 0]"],
           Appearance->None,
           BaseStyle->{},
           BaselinePosition->Baseline,
           ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
             If[
              Not[
               AbsoluteCurrentValue["Deployed"]], 
              SelectionMove[Typeset`box$, All, Expression]; 
              FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
              FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 0, 0]; 
              FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
              MathLink`CallFrontEnd[
                FrontEnd`AttachCell[Typeset`box$, 
                 FrontEndResource["RGBColorValueSelector"], {
                 0, {Left, Bottom}}, {Left, Top}, 
                 "ClosingActions" -> {
                  "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
           
           DefaultBaseStyle->{},
           Evaluator->Automatic,
           Method->"Preemptive"],
          RGBColor[1, 0, 0],
          Editable->False,
          Selectable->False], ",", "4", ",", "2", ",", "9", ",", "8", ",", 
         "3", ",", "1", ",", "6", ",", "5", ",", "2", ",", "6", ",", "2", ",",
          "4", ",", "3", ",", "8", ",", "6", ",", "8", ",", "3", ",", "7", 
         ",", "2", ",", 
         InterpretationBox[
          ButtonBox[
           TooltipBox[
            GraphicsBox[{
              {GrayLevel[0], RectangleBox[{0, 0}]}, 
              {GrayLevel[0], RectangleBox[{1, -1}]}, 
              {RGBColor[1, 0, 0], RectangleBox[{0, -1}, {2, 1}]}},
             AspectRatio->1,
             Frame->True,
             FrameStyle->RGBColor[0.6666666666666666, 0., 0.],
             FrameTicks->None,
             
             ImageSize->
              Dynamic[{
               Automatic, 
                1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}],
             PlotRangePadding->None],
            "RGBColor[1, 0, 0]"],
           Appearance->None,
           BaseStyle->{},
           BaselinePosition->Baseline,
           ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
             If[
              Not[
               AbsoluteCurrentValue["Deployed"]], 
              SelectionMove[Typeset`box$, All, Expression]; 
              FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
              FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 0, 0]; 
              FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
              MathLink`CallFrontEnd[
                FrontEnd`AttachCell[Typeset`box$, 
                 FrontEndResource["RGBColorValueSelector"], {
                 0, {Left, Bottom}}, {Left, Top}, 
                 "ClosingActions" -> {
                  "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
           
           DefaultBaseStyle->{},
           Evaluator->Automatic,
           Method->"Preemptive"],
          RGBColor[1, 0, 0],
          Editable->False,
          Selectable->False], ",", "5", ",", "6", ",", "6", ",", "8", ",", 
         InterpretationBox[
          ButtonBox[
           TooltipBox[
            GraphicsBox[{
              {GrayLevel[0], RectangleBox[{0, 0}]}, 
              {GrayLevel[0], RectangleBox[{1, -1}]}, 
              {RGBColor[1, 0, 0], RectangleBox[{0, -1}, {2, 1}]}},
             AspectRatio->1,
             Frame->True,
             FrameStyle->RGBColor[0.6666666666666666, 0., 0.],
             FrameTicks->None,
             
             ImageSize->
              Dynamic[{
               Automatic, 
                1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}],
             PlotRangePadding->None],
            "RGBColor[1, 0, 0]"],
           Appearance->None,
           BaseStyle->{},
           BaselinePosition->Baseline,
           ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
             If[
              Not[
               AbsoluteCurrentValue["Deployed"]], 
              SelectionMove[Typeset`box$, All, Expression]; 
              FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
              FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 0, 0]; 
              FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
              MathLink`CallFrontEnd[
                FrontEnd`AttachCell[Typeset`box$, 
                 FrontEndResource["RGBColorValueSelector"], {
                 0, {Left, Bottom}}, {Left, Top}, 
                 "ClosingActions" -> {
                  "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
           
           DefaultBaseStyle->{},
           Evaluator->Automatic,
           Method->"Preemptive"],
          RGBColor[1, 0, 0],
          Editable->False,
          Selectable->False], ",", "6", ",", "9", ",", "3", ",", "7", ",", 
         "6"}], "}"}]], "ExerciseOutput"],
      Apply[TextCell, 
       Cell[
        BoxData[
         RowBox[{"{", 
           RowBox[{"1", ",", 
             InterpretationBox[
              ButtonBox[
               TooltipBox[
                GraphicsBox[{{{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}}}, {{{
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}}}, {{{
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}}}, AspectRatio -> 1, 
                 Frame -> True, FrameStyle -> 
                 RGBColor[0.6666666666666666, 0., 0.], FrameTicks -> None, 
                 ImageSize -> 
                 Dynamic[{
                   Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], PlotRangePadding -> None], 
                "RGBColor[1, 0, 0]"], Appearance -> None, BaseStyle -> {}, 
               BaselinePosition -> Baseline, ButtonFunction :> 
               With[{Typeset`box$ = EvaluationBox[]}, 
                 If[
                  Not[
                   AbsoluteCurrentValue["Deployed"]], 
                  SelectionMove[Typeset`box$, All, Expression]; 
                  FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                  FrontEnd`Private`$ColorSelectorInitialColor = 
                   RGBColor[1, 0, 0]; 
                  FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                  MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], DefaultBaseStyle -> {}, Evaluator -> 
               Automatic, Method -> "Preemptive"], 
              RGBColor[1, 0, 0], Editable -> False, Selectable -> False], ",",
              "7", ",", "1", ",", "5", ",", 
             InterpretationBox[
              ButtonBox[
               TooltipBox[
                GraphicsBox[{{{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}}}, {{{
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}}}, {{{
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}}}, AspectRatio -> 1, 
                 Frame -> True, FrameStyle -> 
                 RGBColor[0.6666666666666666, 0., 0.], FrameTicks -> None, 
                 ImageSize -> 
                 Dynamic[{
                   Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], PlotRangePadding -> None], 
                "RGBColor[1, 0, 0]"], Appearance -> None, BaseStyle -> {}, 
               BaselinePosition -> Baseline, ButtonFunction :> 
               With[{Typeset`box$ = EvaluationBox[]}, 
                 If[
                  Not[
                   AbsoluteCurrentValue["Deployed"]], 
                  SelectionMove[Typeset`box$, All, Expression]; 
                  FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                  FrontEnd`Private`$ColorSelectorInitialColor = 
                   RGBColor[1, 0, 0]; 
                  FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                  MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], DefaultBaseStyle -> {}, Evaluator -> 
               Automatic, Method -> "Preemptive"], 
              RGBColor[1, 0, 0], Editable -> False, Selectable -> False], ",",
              "8", ",", "6", ",", 
             InterpretationBox[
              ButtonBox[
               TooltipBox[
                GraphicsBox[{{{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}}}, {{{
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}}}, {{{
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}}}, AspectRatio -> 1, 
                 Frame -> True, FrameStyle -> 
                 RGBColor[0.6666666666666666, 0., 0.], FrameTicks -> None, 
                 ImageSize -> 
                 Dynamic[{
                   Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], PlotRangePadding -> None], 
                "RGBColor[1, 0, 0]"], Appearance -> None, BaseStyle -> {}, 
               BaselinePosition -> Baseline, ButtonFunction :> 
               With[{Typeset`box$ = EvaluationBox[]}, 
                 If[
                  Not[
                   AbsoluteCurrentValue["Deployed"]], 
                  SelectionMove[Typeset`box$, All, Expression]; 
                  FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                  FrontEnd`Private`$ColorSelectorInitialColor = 
                   RGBColor[1, 0, 0]; 
                  FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                  MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], DefaultBaseStyle -> {}, Evaluator -> 
               Automatic, Method -> "Preemptive"], 
              RGBColor[1, 0, 0], Editable -> False, Selectable -> False], ",",
              "7", ",", "1", ",", "8", ",", "6", ",", "2", ",", "6", ",", "7",
              ",", "3", ",", "2", ",", 
             InterpretationBox[
              ButtonBox[
               TooltipBox[
                GraphicsBox[{{{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}}}, {{{
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}}}, {{{
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}}}, AspectRatio -> 1, 
                 Frame -> True, FrameStyle -> 
                 RGBColor[0.6666666666666666, 0., 0.], FrameTicks -> None, 
                 ImageSize -> 
                 Dynamic[{
                   Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], PlotRangePadding -> None], 
                "RGBColor[1, 0, 0]"], Appearance -> None, BaseStyle -> {}, 
               BaselinePosition -> Baseline, ButtonFunction :> 
               With[{Typeset`box$ = EvaluationBox[]}, 
                 If[
                  Not[
                   AbsoluteCurrentValue["Deployed"]], 
                  SelectionMove[Typeset`box$, All, Expression]; 
                  FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                  FrontEnd`Private`$ColorSelectorInitialColor = 
                   RGBColor[1, 0, 0]; 
                  FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                  MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], DefaultBaseStyle -> {}, Evaluator -> 
               Automatic, Method -> "Preemptive"], 
              RGBColor[1, 0, 0], Editable -> False, Selectable -> False], ",",
              "9", ",", "4", ",", "8", ",", "4", ",", "2", ",", "5", ",", 
             InterpretationBox[
              ButtonBox[
               TooltipBox[
                GraphicsBox[{{{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}}}, {{{
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}}}, {{{
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}}}, AspectRatio -> 1, 
                 Frame -> True, FrameStyle -> 
                 RGBColor[0.6666666666666666, 0., 0.], FrameTicks -> None, 
                 ImageSize -> 
                 Dynamic[{
                   Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], PlotRangePadding -> None], 
                "RGBColor[1, 0, 0]"], Appearance -> None, BaseStyle -> {}, 
               BaselinePosition -> Baseline, ButtonFunction :> 
               With[{Typeset`box$ = EvaluationBox[]}, 
                 If[
                  Not[
                   AbsoluteCurrentValue["Deployed"]], 
                  SelectionMove[Typeset`box$, All, Expression]; 
                  FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                  FrontEnd`Private`$ColorSelectorInitialColor = 
                   RGBColor[1, 0, 0]; 
                  FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                  MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], DefaultBaseStyle -> {}, Evaluator -> 
               Automatic, Method -> "Preemptive"], 
              RGBColor[1, 0, 0], Editable -> False, Selectable -> False], ",",
              "4", ",", "9", ",", 
             InterpretationBox[
              ButtonBox[
               TooltipBox[
                GraphicsBox[{{{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}}}, {{{
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}}}, {{{
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}}}, AspectRatio -> 1, 
                 Frame -> True, FrameStyle -> 
                 RGBColor[0.6666666666666666, 0., 0.], FrameTicks -> None, 
                 ImageSize -> 
                 Dynamic[{
                   Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], PlotRangePadding -> None], 
                "RGBColor[1, 0, 0]"], Appearance -> None, BaseStyle -> {}, 
               BaselinePosition -> Baseline, ButtonFunction :> 
               With[{Typeset`box$ = EvaluationBox[]}, 
                 If[
                  Not[
                   AbsoluteCurrentValue["Deployed"]], 
                  SelectionMove[Typeset`box$, All, Expression]; 
                  FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                  FrontEnd`Private`$ColorSelectorInitialColor = 
                   RGBColor[1, 0, 0]; 
                  FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                  MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], DefaultBaseStyle -> {}, Evaluator -> 
               Automatic, Method -> "Preemptive"], 
              RGBColor[1, 0, 0], Editable -> False, Selectable -> False], ",",
              "6", ",", 
             InterpretationBox[
              ButtonBox[
               TooltipBox[
                GraphicsBox[{{{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}}}, {{{
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}}}, {{{
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}}}, AspectRatio -> 1, 
                 Frame -> True, FrameStyle -> 
                 RGBColor[0.6666666666666666, 0., 0.], FrameTicks -> None, 
                 ImageSize -> 
                 Dynamic[{
                   Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], PlotRangePadding -> None], 
                "RGBColor[1, 0, 0]"], Appearance -> None, BaseStyle -> {}, 
               BaselinePosition -> Baseline, ButtonFunction :> 
               With[{Typeset`box$ = EvaluationBox[]}, 
                 If[
                  Not[
                   AbsoluteCurrentValue["Deployed"]], 
                  SelectionMove[Typeset`box$, All, Expression]; 
                  FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                  FrontEnd`Private`$ColorSelectorInitialColor = 
                   RGBColor[1, 0, 0]; 
                  FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                  MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], DefaultBaseStyle -> {}, Evaluator -> 
               Automatic, Method -> "Preemptive"], 
              RGBColor[1, 0, 0], Editable -> False, Selectable -> False], ",", 
             InterpretationBox[
              ButtonBox[
               TooltipBox[
                GraphicsBox[{{{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}}}, {{{
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}}}, {{{
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}}}, AspectRatio -> 1, 
                 Frame -> True, FrameStyle -> 
                 RGBColor[0.6666666666666666, 0., 0.], FrameTicks -> None, 
                 ImageSize -> 
                 Dynamic[{
                   Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], PlotRangePadding -> None], 
                "RGBColor[1, 0, 0]"], Appearance -> None, BaseStyle -> {}, 
               BaselinePosition -> Baseline, ButtonFunction :> 
               With[{Typeset`box$ = EvaluationBox[]}, 
                 If[
                  Not[
                   AbsoluteCurrentValue["Deployed"]], 
                  SelectionMove[Typeset`box$, All, Expression]; 
                  FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                  FrontEnd`Private`$ColorSelectorInitialColor = 
                   RGBColor[1, 0, 0]; 
                  FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                  MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], DefaultBaseStyle -> {}, Evaluator -> 
               Automatic, Method -> "Preemptive"], 
              RGBColor[1, 0, 0], Editable -> False, Selectable -> False], ",", 
             InterpretationBox[
              ButtonBox[
               TooltipBox[
                GraphicsBox[{{{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}}}, {{{
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}}}, {{{
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}}}, AspectRatio -> 1, 
                 Frame -> True, FrameStyle -> 
                 RGBColor[0.6666666666666666, 0., 0.], FrameTicks -> None, 
                 ImageSize -> 
                 Dynamic[{
                   Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], PlotRangePadding -> None], 
                "RGBColor[1, 0, 0]"], Appearance -> None, BaseStyle -> {}, 
               BaselinePosition -> Baseline, ButtonFunction :> 
               With[{Typeset`box$ = EvaluationBox[]}, 
                 If[
                  Not[
                   AbsoluteCurrentValue["Deployed"]], 
                  SelectionMove[Typeset`box$, All, Expression]; 
                  FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                  FrontEnd`Private`$ColorSelectorInitialColor = 
                   RGBColor[1, 0, 0]; 
                  FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                  MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], DefaultBaseStyle -> {}, Evaluator -> 
               Automatic, Method -> "Preemptive"], 
              RGBColor[1, 0, 0], Editable -> False, Selectable -> False], ",",
              "1", ",", "8", ",", "1", ",", 
             InterpretationBox[
              ButtonBox[
               TooltipBox[
                GraphicsBox[{{{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}}}, {{{
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}}}, {{{
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}}}, AspectRatio -> 1, 
                 Frame -> True, FrameStyle -> 
                 RGBColor[0.6666666666666666, 0., 0.], FrameTicks -> None, 
                 ImageSize -> 
                 Dynamic[{
                   Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], PlotRangePadding -> None], 
                "RGBColor[1, 0, 0]"], Appearance -> None, BaseStyle -> {}, 
               BaselinePosition -> Baseline, ButtonFunction :> 
               With[{Typeset`box$ = EvaluationBox[]}, 
                 If[
                  Not[
                   AbsoluteCurrentValue["Deployed"]], 
                  SelectionMove[Typeset`box$, All, Expression]; 
                  FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                  FrontEnd`Private`$ColorSelectorInitialColor = 
                   RGBColor[1, 0, 0]; 
                  FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                  MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], DefaultBaseStyle -> {}, Evaluator -> 
               Automatic, Method -> "Preemptive"], 
              RGBColor[1, 0, 0], Editable -> False, Selectable -> False], ",",
              "5", ",", "6", ",", "1", ",", "4", ",", 
             InterpretationBox[
              ButtonBox[
               TooltipBox[
                GraphicsBox[{{{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}}}, {{{
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}}}, {{{
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}}}, AspectRatio -> 1, 
                 Frame -> True, FrameStyle -> 
                 RGBColor[0.6666666666666666, 0., 0.], FrameTicks -> None, 
                 ImageSize -> 
                 Dynamic[{
                   Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], PlotRangePadding -> None], 
                "RGBColor[1, 0, 0]"], Appearance -> None, BaseStyle -> {}, 
               BaselinePosition -> Baseline, ButtonFunction :> 
               With[{Typeset`box$ = EvaluationBox[]}, 
                 If[
                  Not[
                   AbsoluteCurrentValue["Deployed"]], 
                  SelectionMove[Typeset`box$, All, Expression]; 
                  FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                  FrontEnd`Private`$ColorSelectorInitialColor = 
                   RGBColor[1, 0, 0]; 
                  FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                  MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], DefaultBaseStyle -> {}, Evaluator -> 
               Automatic, Method -> "Preemptive"], 
              RGBColor[1, 0, 0], Editable -> False, Selectable -> False], ",",
              "4", ",", "8", ",", "1", ",", "1", ",", "7", ",", 
             InterpretationBox[
              ButtonBox[
               TooltipBox[
                GraphicsBox[{{{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}}}, {{{
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}}}, {{{
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}}}, AspectRatio -> 1, 
                 Frame -> True, FrameStyle -> 
                 RGBColor[0.6666666666666666, 0., 0.], FrameTicks -> None, 
                 ImageSize -> 
                 Dynamic[{
                   Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], PlotRangePadding -> None], 
                "RGBColor[1, 0, 0]"], Appearance -> None, BaseStyle -> {}, 
               BaselinePosition -> Baseline, ButtonFunction :> 
               With[{Typeset`box$ = EvaluationBox[]}, 
                 If[
                  Not[
                   AbsoluteCurrentValue["Deployed"]], 
                  SelectionMove[Typeset`box$, All, Expression]; 
                  FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                  FrontEnd`Private`$ColorSelectorInitialColor = 
                   RGBColor[1, 0, 0]; 
                  FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                  MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], DefaultBaseStyle -> {}, Evaluator -> 
               Automatic, Method -> "Preemptive"], 
              RGBColor[1, 0, 0], Editable -> False, Selectable -> False], ",",
              "5", ",", "5", ",", "3", ",", "3", ",", "6", ",", 
             InterpretationBox[
              ButtonBox[
               TooltipBox[
                GraphicsBox[{{{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}}}, {{{
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}}}, {{{
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}}}, AspectRatio -> 1, 
                 Frame -> True, FrameStyle -> 
                 RGBColor[0.6666666666666666, 0., 0.], FrameTicks -> None, 
                 ImageSize -> 
                 Dynamic[{
                   Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], PlotRangePadding -> None], 
                "RGBColor[1, 0, 0]"], Appearance -> None, BaseStyle -> {}, 
               BaselinePosition -> Baseline, ButtonFunction :> 
               With[{Typeset`box$ = EvaluationBox[]}, 
                 If[
                  Not[
                   AbsoluteCurrentValue["Deployed"]], 
                  SelectionMove[Typeset`box$, All, Expression]; 
                  FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                  FrontEnd`Private`$ColorSelectorInitialColor = 
                   RGBColor[1, 0, 0]; 
                  FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                  MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], DefaultBaseStyle -> {}, Evaluator -> 
               Automatic, Method -> "Preemptive"], 
              RGBColor[1, 0, 0], Editable -> False, Selectable -> False], ",",
              "7", ",", "4", ",", "4", ",", "3", ",", "7", ",", "5", ",", 
             InterpretationBox[
              ButtonBox[
               TooltipBox[
                GraphicsBox[{{{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}}}, {{{
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}}}, {{{
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}}}, AspectRatio -> 1, 
                 Frame -> True, FrameStyle -> 
                 RGBColor[0.6666666666666666, 0., 0.], FrameTicks -> None, 
                 ImageSize -> 
                 Dynamic[{
                   Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], PlotRangePadding -> None], 
                "RGBColor[1, 0, 0]"], Appearance -> None, BaseStyle -> {}, 
               BaselinePosition -> Baseline, ButtonFunction :> 
               With[{Typeset`box$ = EvaluationBox[]}, 
                 If[
                  Not[
                   AbsoluteCurrentValue["Deployed"]], 
                  SelectionMove[Typeset`box$, All, Expression]; 
                  FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                  FrontEnd`Private`$ColorSelectorInitialColor = 
                   RGBColor[1, 0, 0]; 
                  FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                  MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], DefaultBaseStyle -> {}, Evaluator -> 
               Automatic, Method -> "Preemptive"], 
              RGBColor[1, 0, 0], Editable -> False, Selectable -> False], ",",
              "3", ",", "8", ",", "8", ",", "3", ",", "7", ",", 
             InterpretationBox[
              ButtonBox[
               TooltipBox[
                GraphicsBox[{{{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}}}, {{{
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}}}, {{{
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}}}, AspectRatio -> 1, 
                 Frame -> True, FrameStyle -> 
                 RGBColor[0.6666666666666666, 0., 0.], FrameTicks -> None, 
                 ImageSize -> 
                 Dynamic[{
                   Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], PlotRangePadding -> None], 
                "RGBColor[1, 0, 0]"], Appearance -> None, BaseStyle -> {}, 
               BaselinePosition -> Baseline, ButtonFunction :> 
               With[{Typeset`box$ = EvaluationBox[]}, 
                 If[
                  Not[
                   AbsoluteCurrentValue["Deployed"]], 
                  SelectionMove[Typeset`box$, All, Expression]; 
                  FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                  FrontEnd`Private`$ColorSelectorInitialColor = 
                   RGBColor[1, 0, 0]; 
                  FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                  MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], DefaultBaseStyle -> {}, Evaluator -> 
               Automatic, Method -> "Preemptive"], 
              RGBColor[1, 0, 0], Editable -> False, Selectable -> False], ",",
              "3", ",", "5", ",", "1", ",", 
             InterpretationBox[
              ButtonBox[
               TooltipBox[
                GraphicsBox[{{{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}}}, {{{
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}}}, {{{
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}}}, AspectRatio -> 1, 
                 Frame -> True, FrameStyle -> 
                 RGBColor[0.6666666666666666, 0., 0.], FrameTicks -> None, 
                 ImageSize -> 
                 Dynamic[{
                   Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], PlotRangePadding -> None], 
                "RGBColor[1, 0, 0]"], Appearance -> None, BaseStyle -> {}, 
               BaselinePosition -> Baseline, ButtonFunction :> 
               With[{Typeset`box$ = EvaluationBox[]}, 
                 If[
                  Not[
                   AbsoluteCurrentValue["Deployed"]], 
                  SelectionMove[Typeset`box$, All, Expression]; 
                  FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                  FrontEnd`Private`$ColorSelectorInitialColor = 
                   RGBColor[1, 0, 0]; 
                  FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                  MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], DefaultBaseStyle -> {}, Evaluator -> 
               Automatic, Method -> "Preemptive"], 
              RGBColor[1, 0, 0], Editable -> False, Selectable -> False], ",",
              "5", ",", "1", ",", "1", ",", "2", ",", "4", ",", "9", ",", "3",
              ",", "6", ",", "1", ",", "2", ",", "2", ",", "4", ",", "9", ",",
              "3", ",", "1", ",", "9", ",", "8", ",", "3", ",", "7", ",", "8",
              ",", "8", ",", "1", ",", "5", ",", "6", ",", "9", ",", "5", ",",
              "8", ",", "5", ",", "8", ",", "1", ",", "2", ",", "7", ",", "5",
              ",", "9", ",", "4", ",", "6", ",", "7", ",", "2", ",", "9", ",",
              "1", ",", "7", ",", "5", ",", "5", ",", "3", ",", "1", ",", "4",
              ",", "6", ",", "8", ",", "2", ",", "5", ",", "1", ",", "8", ",",
              "7", ",", "1", ",", "4", ",", "5", ",", "2", ",", "8", ",", "5",
              ",", "6", ",", "9", ",", "2", ",", "3", ",", "1", ",", "4", ",", 
             InterpretationBox[
              ButtonBox[
               TooltipBox[
                GraphicsBox[{{{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}}}, {{{
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}}}, {{{
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}}}, AspectRatio -> 1, 
                 Frame -> True, FrameStyle -> 
                 RGBColor[0.6666666666666666, 0., 0.], FrameTicks -> None, 
                 ImageSize -> 
                 Dynamic[{
                   Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], PlotRangePadding -> None], 
                "RGBColor[1, 0, 0]"], Appearance -> None, BaseStyle -> {}, 
               BaselinePosition -> Baseline, ButtonFunction :> 
               With[{Typeset`box$ = EvaluationBox[]}, 
                 If[
                  Not[
                   AbsoluteCurrentValue["Deployed"]], 
                  SelectionMove[Typeset`box$, All, Expression]; 
                  FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                  FrontEnd`Private`$ColorSelectorInitialColor = 
                   RGBColor[1, 0, 0]; 
                  FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                  MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], DefaultBaseStyle -> {}, Evaluator -> 
               Automatic, Method -> "Preemptive"], 
              RGBColor[1, 0, 0], Editable -> False, Selectable -> False], ",",
              "4", ",", "3", ",", "5", ",", "9", ",", "8", ",", "4", ",", "5",
              ",", "7", ",", "7", ",", "5", ",", "7", ",", "4", ",", "6", ",",
              "9", ",", "8", ",", "5", ",", "7", ",", "4", ",", "8", ",", 
             InterpretationBox[
              ButtonBox[
               TooltipBox[
                GraphicsBox[{{{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}}}, {{{
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}}}, {{{
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}}}, AspectRatio -> 1, 
                 Frame -> True, FrameStyle -> 
                 RGBColor[0.6666666666666666, 0., 0.], FrameTicks -> None, 
                 ImageSize -> 
                 Dynamic[{
                   Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], PlotRangePadding -> None], 
                "RGBColor[1, 0, 0]"], Appearance -> None, BaseStyle -> {}, 
               BaselinePosition -> Baseline, ButtonFunction :> 
               With[{Typeset`box$ = EvaluationBox[]}, 
                 If[
                  Not[
                   AbsoluteCurrentValue["Deployed"]], 
                  SelectionMove[Typeset`box$, All, Expression]; 
                  FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                  FrontEnd`Private`$ColorSelectorInitialColor = 
                   RGBColor[1, 0, 0]; 
                  FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                  MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], DefaultBaseStyle -> {}, Evaluator -> 
               Automatic, Method -> "Preemptive"], 
              RGBColor[1, 0, 0], Editable -> False, Selectable -> False], ",",
              "3", ",", "9", ",", "3", ",", "4", ",", "5", ",", "6", ",", "7",
              ",", "7", ",", "7", ",", "4", ",", "8", ",", "2", ",", "4", ",",
              "2", ",", "3", ",", 
             InterpretationBox[
              ButtonBox[
               TooltipBox[
                GraphicsBox[{{{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}}}, {{{
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}}}, {{{
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}}}, AspectRatio -> 1, 
                 Frame -> True, FrameStyle -> 
                 RGBColor[0.6666666666666666, 0., 0.], FrameTicks -> None, 
                 ImageSize -> 
                 Dynamic[{
                   Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], PlotRangePadding -> None], 
                "RGBColor[1, 0, 0]"], Appearance -> None, BaseStyle -> {}, 
               BaselinePosition -> Baseline, ButtonFunction :> 
               With[{Typeset`box$ = EvaluationBox[]}, 
                 If[
                  Not[
                   AbsoluteCurrentValue["Deployed"]], 
                  SelectionMove[Typeset`box$, All, Expression]; 
                  FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                  FrontEnd`Private`$ColorSelectorInitialColor = 
                   RGBColor[1, 0, 0]; 
                  FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                  MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], DefaultBaseStyle -> {}, Evaluator -> 
               Automatic, Method -> "Preemptive"], 
              RGBColor[1, 0, 0], Editable -> False, Selectable -> False], ",",
              "9", ",", "8", ",", "5", ",", "4", ",", "2", ",", "1", ",", 
             InterpretationBox[
              ButtonBox[
               TooltipBox[
                GraphicsBox[{{{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}}}, {{{
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}}}, {{{
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}}}, AspectRatio -> 1, 
                 Frame -> True, FrameStyle -> 
                 RGBColor[0.6666666666666666, 0., 0.], FrameTicks -> None, 
                 ImageSize -> 
                 Dynamic[{
                   Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], PlotRangePadding -> None], 
                "RGBColor[1, 0, 0]"], Appearance -> None, BaseStyle -> {}, 
               BaselinePosition -> Baseline, ButtonFunction :> 
               With[{Typeset`box$ = EvaluationBox[]}, 
                 If[
                  Not[
                   AbsoluteCurrentValue["Deployed"]], 
                  SelectionMove[Typeset`box$, All, Expression]; 
                  FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                  FrontEnd`Private`$ColorSelectorInitialColor = 
                   RGBColor[1, 0, 0]; 
                  FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                  MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], DefaultBaseStyle -> {}, Evaluator -> 
               Automatic, Method -> "Preemptive"], 
              RGBColor[1, 0, 0], Editable -> False, Selectable -> False], ",",
              "7", ",", "4", ",", "6", ",", 
             InterpretationBox[
              ButtonBox[
               TooltipBox[
                GraphicsBox[{{{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}}}, {{{
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}}}, {{{
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}}}, AspectRatio -> 1, 
                 Frame -> True, FrameStyle -> 
                 RGBColor[0.6666666666666666, 0., 0.], FrameTicks -> None, 
                 ImageSize -> 
                 Dynamic[{
                   Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], PlotRangePadding -> None], 
                "RGBColor[1, 0, 0]"], Appearance -> None, BaseStyle -> {}, 
               BaselinePosition -> Baseline, ButtonFunction :> 
               With[{Typeset`box$ = EvaluationBox[]}, 
                 If[
                  Not[
                   AbsoluteCurrentValue["Deployed"]], 
                  SelectionMove[Typeset`box$, All, Expression]; 
                  FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                  FrontEnd`Private`$ColorSelectorInitialColor = 
                   RGBColor[1, 0, 0]; 
                  FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                  MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], DefaultBaseStyle -> {}, Evaluator -> 
               Automatic, Method -> "Preemptive"], 
              RGBColor[1, 0, 0], Editable -> False, Selectable -> False], ",",
              "5", ",", 
             InterpretationBox[
              ButtonBox[
               TooltipBox[
                GraphicsBox[{{{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}}}, {{{
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}}}, {{{
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}}}, AspectRatio -> 1, 
                 Frame -> True, FrameStyle -> 
                 RGBColor[0.6666666666666666, 0., 0.], FrameTicks -> None, 
                 ImageSize -> 
                 Dynamic[{
                   Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], PlotRangePadding -> None], 
                "RGBColor[1, 0, 0]"], Appearance -> None, BaseStyle -> {}, 
               BaselinePosition -> Baseline, ButtonFunction :> 
               With[{Typeset`box$ = EvaluationBox[]}, 
                 If[
                  Not[
                   AbsoluteCurrentValue["Deployed"]], 
                  SelectionMove[Typeset`box$, All, Expression]; 
                  FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                  FrontEnd`Private`$ColorSelectorInitialColor = 
                   RGBColor[1, 0, 0]; 
                  FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                  MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], DefaultBaseStyle -> {}, Evaluator -> 
               Automatic, Method -> "Preemptive"], 
              RGBColor[1, 0, 0], Editable -> False, Selectable -> False], ",",
              "6", ",", "2", ",", "3", ",", "7", ",", "1", ",", "1", ",", "4",
              ",", "1", ",", "8", ",", "7", ",", "7", ",", "9", ",", "5", ",",
              "4", ",", "1", ",", "8", ",", "2", ",", "1", ",", "5", ",", "3",
              ",", 
             InterpretationBox[
              ButtonBox[
               TooltipBox[
                GraphicsBox[{{{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}}}, {{{
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}}}, {{{
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}}}, AspectRatio -> 1, 
                 Frame -> True, FrameStyle -> 
                 RGBColor[0.6666666666666666, 0., 0.], FrameTicks -> None, 
                 ImageSize -> 
                 Dynamic[{
                   Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], PlotRangePadding -> None], 
                "RGBColor[1, 0, 0]"], Appearance -> None, BaseStyle -> {}, 
               BaselinePosition -> Baseline, ButtonFunction :> 
               With[{Typeset`box$ = EvaluationBox[]}, 
                 If[
                  Not[
                   AbsoluteCurrentValue["Deployed"]], 
                  SelectionMove[Typeset`box$, All, Expression]; 
                  FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                  FrontEnd`Private`$ColorSelectorInitialColor = 
                   RGBColor[1, 0, 0]; 
                  FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                  MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], DefaultBaseStyle -> {}, Evaluator -> 
               Automatic, Method -> "Preemptive"], 
              RGBColor[1, 0, 0], Editable -> False, Selectable -> False], ",",
              "4", ",", "6", ",", "4", ",", "7", ",", "4", ",", "9", ",", "8",
              ",", "3", ",", "5", ",", "8", ",", "1", ",", "9", ",", "4", ",",
              "1", ",", "2", ",", "6", ",", "7", ",", "3", ",", "9", ",", "8",
              ",", "7", ",", "6", ",", "7", ",", "5", ",", "5", ",", "9", ",",
              "1", ",", "6", ",", "5", ",", "5", ",", "4", ",", "3", ",", "9",
              ",", "4", ",", "6", ",", 
             InterpretationBox[
              ButtonBox[
               TooltipBox[
                GraphicsBox[{{{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}}}, {{{
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}}}, {{{
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}}}, AspectRatio -> 1, 
                 Frame -> True, FrameStyle -> 
                 RGBColor[0.6666666666666666, 0., 0.], FrameTicks -> None, 
                 ImageSize -> 
                 Dynamic[{
                   Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], PlotRangePadding -> None], 
                "RGBColor[1, 0, 0]"], Appearance -> None, BaseStyle -> {}, 
               BaselinePosition -> Baseline, ButtonFunction :> 
               With[{Typeset`box$ = EvaluationBox[]}, 
                 If[
                  Not[
                   AbsoluteCurrentValue["Deployed"]], 
                  SelectionMove[Typeset`box$, All, Expression]; 
                  FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                  FrontEnd`Private`$ColorSelectorInitialColor = 
                   RGBColor[1, 0, 0]; 
                  FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                  MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], DefaultBaseStyle -> {}, Evaluator -> 
               Automatic, Method -> "Preemptive"], 
              RGBColor[1, 0, 0], Editable -> False, Selectable -> False], ",",
              "7", ",", "7", ",", 
             InterpretationBox[
              ButtonBox[
               TooltipBox[
                GraphicsBox[{{{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}}}, {{{
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}}}, {{{
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}}}, AspectRatio -> 1, 
                 Frame -> True, FrameStyle -> 
                 RGBColor[0.6666666666666666, 0., 0.], FrameTicks -> None, 
                 ImageSize -> 
                 Dynamic[{
                   Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], PlotRangePadding -> None], 
                "RGBColor[1, 0, 0]"], Appearance -> None, BaseStyle -> {}, 
               BaselinePosition -> Baseline, ButtonFunction :> 
               With[{Typeset`box$ = EvaluationBox[]}, 
                 If[
                  Not[
                   AbsoluteCurrentValue["Deployed"]], 
                  SelectionMove[Typeset`box$, All, Expression]; 
                  FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                  FrontEnd`Private`$ColorSelectorInitialColor = 
                   RGBColor[1, 0, 0]; 
                  FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                  MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], DefaultBaseStyle -> {}, Evaluator -> 
               Automatic, Method -> "Preemptive"], 
              RGBColor[1, 0, 0], Editable -> False, Selectable -> False], ",",
              "6", ",", "2", ",", "9", ",", "1", ",", "4", ",", "5", ",", "7",
              ",", "1", ",", "1", ",", "9", ",", "6", ",", "4", ",", "7", ",",
              "7", ",", "6", ",", "8", ",", "6", ",", "5", ",", "4", ",", "2",
              ",", "1", ",", "6", ",", "7", ",", "6", ",", "6", ",", 
             InterpretationBox[
              ButtonBox[
               TooltipBox[
                GraphicsBox[{{{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}}}, {{{
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}}}, {{{
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}}}, AspectRatio -> 1, 
                 Frame -> True, FrameStyle -> 
                 RGBColor[0.6666666666666666, 0., 0.], FrameTicks -> None, 
                 ImageSize -> 
                 Dynamic[{
                   Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], PlotRangePadding -> None], 
                "RGBColor[1, 0, 0]"], Appearance -> None, BaseStyle -> {}, 
               BaselinePosition -> Baseline, ButtonFunction :> 
               With[{Typeset`box$ = EvaluationBox[]}, 
                 If[
                  Not[
                   AbsoluteCurrentValue["Deployed"]], 
                  SelectionMove[Typeset`box$, All, Expression]; 
                  FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                  FrontEnd`Private`$ColorSelectorInitialColor = 
                   RGBColor[1, 0, 0]; 
                  FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                  MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], DefaultBaseStyle -> {}, Evaluator -> 
               Automatic, Method -> "Preemptive"], 
              RGBColor[1, 0, 0], Editable -> False, Selectable -> False], ",",
              "4", ",", "2", ",", "9", ",", "8", ",", "3", ",", "1", ",", "6",
              ",", "5", ",", "2", ",", "6", ",", "2", ",", "4", ",", "3", ",",
              "8", ",", "6", ",", "8", ",", "3", ",", "7", ",", "2", ",", 
             InterpretationBox[
              ButtonBox[
               TooltipBox[
                GraphicsBox[{{{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}}}, {{{
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}}}, {{{
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}}}, AspectRatio -> 1, 
                 Frame -> True, FrameStyle -> 
                 RGBColor[0.6666666666666666, 0., 0.], FrameTicks -> None, 
                 ImageSize -> 
                 Dynamic[{
                   Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], PlotRangePadding -> None], 
                "RGBColor[1, 0, 0]"], Appearance -> None, BaseStyle -> {}, 
               BaselinePosition -> Baseline, ButtonFunction :> 
               With[{Typeset`box$ = EvaluationBox[]}, 
                 If[
                  Not[
                   AbsoluteCurrentValue["Deployed"]], 
                  SelectionMove[Typeset`box$, All, Expression]; 
                  FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                  FrontEnd`Private`$ColorSelectorInitialColor = 
                   RGBColor[1, 0, 0]; 
                  FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                  MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], DefaultBaseStyle -> {}, Evaluator -> 
               Automatic, Method -> "Preemptive"], 
              RGBColor[1, 0, 0], Editable -> False, Selectable -> False], ",",
              "5", ",", "6", ",", "6", ",", "8", ",", 
             InterpretationBox[
              ButtonBox[
               TooltipBox[
                GraphicsBox[{{{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}}}, {{{
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}}}, {{{
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}}}, AspectRatio -> 1, 
                 Frame -> True, FrameStyle -> 
                 RGBColor[0.6666666666666666, 0., 0.], FrameTicks -> None, 
                 ImageSize -> 
                 Dynamic[{
                   Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], PlotRangePadding -> None], 
                "RGBColor[1, 0, 0]"], Appearance -> None, BaseStyle -> {}, 
               BaselinePosition -> Baseline, ButtonFunction :> 
               With[{Typeset`box$ = EvaluationBox[]}, 
                 If[
                  Not[
                   AbsoluteCurrentValue["Deployed"]], 
                  SelectionMove[Typeset`box$, All, Expression]; 
                  FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                  FrontEnd`Private`$ColorSelectorInitialColor = 
                   RGBColor[1, 0, 0]; 
                  FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                  MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], DefaultBaseStyle -> {}, Evaluator -> 
               Automatic, Method -> "Preemptive"], 
              RGBColor[1, 0, 0], Editable -> False, Selectable -> False], ",",
              "6", ",", "9", ",", "3", ",", "7", ",", "6"}], "}"}]], 
        "ExerciseOutput", Selectable -> False, Copyable -> False, Editable -> 
        False, ShowCellBracket -> False]]], " "}
   },
   GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Center}}},
   GridBoxBackground->{"Columns" -> {{
        RGBColor[1, 1, 1]}}},
   GridBoxSpacings->{"Columns" -> {{Automatic}}, "Rows" -> {{1}}}],
  FrameMargins->0]], "ExerciseOutput",
 Editable->False,
 Selectable->False,
 Deletable->False,
 CellFrame->{{1, 1}, {1, 1}},
 ShowCellBracket->False,
 CellFrameColor->RGBColor[0.85, 0.85, 0.85],
 LineBreakWithin->Automatic]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 "Elimine las vocales a, e, i, o y u de la lista de los caracteres en \
\[OpenCurlyDoubleQuote]The Wolfram Language\[CloseCurlyDoubleQuote].",
 StyleBox[ButtonBox["\[NonBreakingSpace]\[RightGuillemet]",
  Appearance->None,
  Evaluator->Automatic,
  Method->"Preemptive",
  ButtonFunction:>(SelectionMove[
     ButtonNotebook[], All, ButtonCell, AutoScroll -> False]; 
   FrontEndExecute[
     FrontEndToken[
      ButtonNotebook[], "OpenCloseGroup"]])],
  FontColor->RGBColor[1, 0.501961, 0]]
}], "Exercise",
 Editable->False,
 Selectable->False,
 Deletable->False,
 CellDingbat->Cell[
  "32.6", "ExerciseNumber", FontColor -> 
   RGBColor[0.9019607843137255, 0.4117647058823529, 0.027450980392156862`]],
 ShowCellBracket->False],

Cell[BoxData[
 PaneBox[GridBox[{
    {" ", 
     StyleBox[
      RowBox[{"Expected", " ", 
       RowBox[{"output", ":"}]}],
      Editable->False,
      Selectable->False,
      StripOnInput->False,
      FontColor->RGBColor[0.45, 0.45, 0.45]], " "},
    {" ", 
     InterpretationBox[Cell[BoxData[
       RowBox[{"{", 
        RowBox[{"\<\"T\"\>", ",", "\<\"h\"\>", ",", "\<\" \"\>", 
         ",", "\<\"W\"\>", ",", "\<\"l\"\>", ",", "\<\"f\"\>", 
         ",", "\<\"r\"\>", ",", "\<\"m\"\>", ",", "\<\" \"\>", 
         ",", "\<\"L\"\>", ",", "\<\"n\"\>", ",", "\<\"g\"\>", 
         ",", "\<\"g\"\>"}], "}"}]], "ExerciseOutput"],
      Apply[TextCell, 
       Cell[
        BoxData[
         RowBox[{"{", 
           
           RowBox[{"\"T\"", ",", "\"h\"", ",", "\" \"", ",", "\"W\"", ",", 
             "\"l\"", ",", "\"f\"", ",", "\"r\"", ",", "\"m\"", ",", "\" \"", 
             ",", "\"L\"", ",", "\"n\"", ",", "\"g\"", ",", "\"g\""}], "}"}]],
         "ExerciseOutput", Selectable -> False, Copyable -> False, Editable -> 
        False, ShowCellBracket -> False]]], " "}
   },
   GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Center}}},
   GridBoxBackground->{"Columns" -> {{
        RGBColor[1, 1, 1]}}},
   GridBoxSpacings->{"Columns" -> {{Automatic}}, "Rows" -> {{1}}}],
  FrameMargins->0]], "ExerciseOutput",
 Editable->False,
 Selectable->False,
 Deletable->False,
 CellFrame->{{1, 1}, {1, 1}},
 ShowCellBracket->False,
 CellFrameColor->RGBColor[0.85, 0.85, 0.85],
 LineBreakWithin->Automatic]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 "Encuentre una forma m\[AAcute]s simple para ",
 Cell[BoxData[
  RowBox[{
   ButtonBox["Select",
    BaseStyle->"CodeLink"], "[", 
   RowBox[{
    RowBox[{
     ButtonBox["IntegerDigits",
      BaseStyle->"CodeLink"], "[", 
     RowBox[{"2", 
      ButtonBox["^",
       BaseStyle->"Link",
       ButtonData->"Power"], "1000"}], "]"}], ",", 
    RowBox[{
     RowBox[{
      ButtonBox["#",
       BaseStyle->"Link",
       ButtonData->"Slot"], 
      ButtonBox["\[Equal]",
       BaseStyle->"CodeLink"], "0"}], "||", 
     RowBox[{
      ButtonBox["#",
       BaseStyle->"Link",
       ButtonData->"Slot"], 
      ButtonBox["\[Equal]",
       BaseStyle->"CodeLink"], "1", 
      ButtonBox["&",
       BaseStyle->"Link",
       ButtonData->"Function"]}]}]}], "]"}]], "InlineCode"],
 ".",
 StyleBox[ButtonBox["\[NonBreakingSpace]\[RightGuillemet]",
  Appearance->None,
  Evaluator->Automatic,
  Method->"Preemptive",
  ButtonFunction:>(SelectionMove[
     ButtonNotebook[], All, ButtonCell, AutoScroll -> False]; 
   FrontEndExecute[
     FrontEndToken[
      ButtonNotebook[], "OpenCloseGroup"]])],
  FontColor->RGBColor[1, 0.501961, 0]]
}], "Exercise",
 Editable->False,
 Selectable->False,
 Deletable->False,
 CellDingbat->Cell[
  "32.7", "ExerciseNumber", FontColor -> 
   RGBColor[0.9019607843137255, 0.4117647058823529, 0.027450980392156862`]],
 ShowCellBracket->False],

Cell[BoxData[
 PaneBox[GridBox[{
    {" ", 
     StyleBox[
      RowBox[{"Expected", " ", 
       RowBox[{"output", ":"}]}],
      Editable->False,
      Selectable->False,
      StripOnInput->False,
      FontColor->RGBColor[0.45, 0.45, 0.45]], " "},
    {" ", 
     InterpretationBox[Cell[BoxData[
       RowBox[{"{", 
        RowBox[{
        "1", ",", "0", ",", "1", ",", "0", ",", "0", ",", "1", ",", "0", ",", 
         "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "1", ",", "1", ",",
          "0", ",", "1", ",", "0", ",", "1", ",", "1", ",", "0", ",", "0", 
         ",", "0", ",", "0", ",", "1", ",", "0", ",", "1", ",", "1", ",", "1",
          ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", 
         "1", ",", "1", ",", "0", ",", "0", ",", "0", ",", "1", ",", "0", ",",
          "0", ",", "0", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", 
         ",", "0", ",", "1", ",", "1", ",", "1", ",", "0", ",", "0", ",", "1",
          ",", "1", ",", "1", ",", "1", ",", "0", ",", "1", ",", "0", ",", 
         "0"}], "}"}]], "ExerciseOutput"],
      Apply[TextCell, 
       Cell[
        BoxData[
         RowBox[{"{", 
           
           RowBox[{"1", ",", "0", ",", "1", ",", "0", ",", "0", ",", "1", ",",
              "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "1",
              ",", "1", ",", "0", ",", "1", ",", "0", ",", "1", ",", "1", ",",
              "0", ",", "0", ",", "0", ",", "0", ",", "1", ",", "0", ",", "1",
              ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",",
              "1", ",", "1", ",", "1", ",", "1", ",", "0", ",", "0", ",", "0",
              ",", "1", ",", "0", ",", "0", ",", "0", ",", "1", ",", "1", ",",
              "1", ",", "1", ",", "1", ",", "0", ",", "1", ",", "1", ",", "1",
              ",", "0", ",", "0", ",", "1", ",", "1", ",", "1", ",", "1", ",",
              "0", ",", "1", ",", "0", ",", "0"}], "}"}]], "ExerciseOutput", 
        Selectable -> False, Copyable -> False, Editable -> False, 
        ShowCellBracket -> False]]], " "}
   },
   GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Center}}},
   GridBoxBackground->{"Columns" -> {{
        RGBColor[1, 1, 1]}}},
   GridBoxSpacings->{"Columns" -> {{Automatic}}, "Rows" -> {{1}}}],
  FrameMargins->0]], "ExerciseOutput",
 Editable->False,
 Selectable->False,
 Deletable->False,
 CellFrame->{{1, 1}, {1, 1}},
 ShowCellBracket->False,
 CellFrameColor->RGBColor[0.85, 0.85, 0.85],
 LineBreakWithin->Automatic]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 "Encuentre una forma m\[AAcute]s simple para ",
 Cell[BoxData[
  RowBox[{
   ButtonBox["Select",
    BaseStyle->"CodeLink"], "[", 
   RowBox[{
    RowBox[{
     ButtonBox["IntegerDigits",
      BaseStyle->"CodeLink"], "[", 
     RowBox[{
      ButtonBox["Range",
       BaseStyle->"CodeLink"], "[", 
      RowBox[{"100", ",", "999"}], "]"}], "]"}], ",", 
    RowBox[{
     RowBox[{
      ButtonBox["First",
       BaseStyle->"CodeLink"], "[", 
      ButtonBox["#",
       BaseStyle->"Link",
       ButtonData->"Slot"], "]"}], 
     ButtonBox["\[Equal]",
      BaseStyle->"CodeLink"], 
     RowBox[{
      ButtonBox["Last",
       BaseStyle->"CodeLink"], "[", 
      ButtonBox["#",
       BaseStyle->"Link",
       ButtonData->"Slot"], "]"}], 
     ButtonBox["&",
      BaseStyle->"Link",
      ButtonData->"Function"]}]}], "]"}]], "InlineCode"],
 ".",
 StyleBox[ButtonBox["\[NonBreakingSpace]\[RightGuillemet]",
  Appearance->None,
  Evaluator->Automatic,
  Method->"Preemptive",
  ButtonFunction:>(SelectionMove[
     ButtonNotebook[], All, ButtonCell, AutoScroll -> False]; 
   FrontEndExecute[
     FrontEndToken[
      ButtonNotebook[], "OpenCloseGroup"]])],
  FontColor->RGBColor[1, 0.501961, 0]]
}], "Exercise",
 Editable->False,
 Selectable->False,
 Deletable->False,
 CellDingbat->Cell[
  "32.8", "ExerciseNumber", FontColor -> 
   RGBColor[0.9019607843137255, 0.4117647058823529, 0.027450980392156862`]],
 ShowCellBracket->False],

Cell[BoxData[
 PaneBox[GridBox[{
    {" ", 
     StyleBox[
      RowBox[{"Expected", " ", 
       RowBox[{"output", ":"}]}],
      Editable->False,
      Selectable->False,
      StripOnInput->False,
      FontColor->RGBColor[0.45, 0.45, 0.45]], " "},
    {" ", 
     InterpretationBox[Cell[BoxData[
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"1", ",", "0", ",", "1"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"1", ",", "1", ",", "1"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"1", ",", "2", ",", "1"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"1", ",", "3", ",", "1"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"1", ",", "4", ",", "1"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"1", ",", "5", ",", "1"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"1", ",", "6", ",", "1"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"1", ",", "7", ",", "1"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"1", ",", "8", ",", "1"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"1", ",", "9", ",", "1"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"2", ",", "0", ",", "2"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"2", ",", "1", ",", "2"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"2", ",", "2", ",", "2"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"2", ",", "3", ",", "2"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"2", ",", "4", ",", "2"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"2", ",", "5", ",", "2"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"2", ",", "6", ",", "2"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"2", ",", "7", ",", "2"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"2", ",", "8", ",", "2"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"2", ",", "9", ",", "2"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"3", ",", "0", ",", "3"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"3", ",", "1", ",", "3"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"3", ",", "2", ",", "3"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"3", ",", "3", ",", "3"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"3", ",", "4", ",", "3"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"3", ",", "5", ",", "3"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"3", ",", "6", ",", "3"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"3", ",", "7", ",", "3"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"3", ",", "8", ",", "3"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"3", ",", "9", ",", "3"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"4", ",", "0", ",", "4"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"4", ",", "1", ",", "4"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"4", ",", "2", ",", "4"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"4", ",", "3", ",", "4"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"4", ",", "4", ",", "4"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"4", ",", "5", ",", "4"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"4", ",", "6", ",", "4"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"4", ",", "7", ",", "4"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"4", ",", "8", ",", "4"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"4", ",", "9", ",", "4"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"5", ",", "0", ",", "5"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"5", ",", "1", ",", "5"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"5", ",", "2", ",", "5"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"5", ",", "3", ",", "5"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"5", ",", "4", ",", "5"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"5", ",", "5", ",", "5"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"5", ",", "6", ",", "5"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"5", ",", "7", ",", "5"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"5", ",", "8", ",", "5"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"5", ",", "9", ",", "5"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"6", ",", "0", ",", "6"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"6", ",", "1", ",", "6"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"6", ",", "2", ",", "6"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"6", ",", "3", ",", "6"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"6", ",", "4", ",", "6"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"6", ",", "5", ",", "6"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"6", ",", "6", ",", "6"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"6", ",", "7", ",", "6"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"6", ",", "8", ",", "6"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"6", ",", "9", ",", "6"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"7", ",", "0", ",", "7"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"7", ",", "1", ",", "7"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"7", ",", "2", ",", "7"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"7", ",", "3", ",", "7"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"7", ",", "4", ",", "7"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"7", ",", "5", ",", "7"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"7", ",", "6", ",", "7"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"7", ",", "7", ",", "7"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"7", ",", "8", ",", "7"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"7", ",", "9", ",", "7"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"8", ",", "0", ",", "8"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"8", ",", "1", ",", "8"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"8", ",", "2", ",", "8"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"8", ",", "3", ",", "8"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"8", ",", "4", ",", "8"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"8", ",", "5", ",", "8"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"8", ",", "6", ",", "8"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"8", ",", "7", ",", "8"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"8", ",", "8", ",", "8"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"8", ",", "9", ",", "8"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"9", ",", "0", ",", "9"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"9", ",", "1", ",", "9"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"9", ",", "2", ",", "9"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"9", ",", "3", ",", "9"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"9", ",", "4", ",", "9"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"9", ",", "5", ",", "9"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"9", ",", "6", ",", "9"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"9", ",", "7", ",", "9"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"9", ",", "8", ",", "9"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"9", ",", "9", ",", "9"}], "}"}]}], "}"}]], 
       "ExerciseOutput"],
      Apply[TextCell, 
       Cell[
        BoxData[
         RowBox[{"{", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{"1", ",", "0", ",", "1"}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{"1", ",", "1", ",", "1"}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{"1", ",", "2", ",", "1"}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{"1", ",", "3", ",", "1"}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{"1", ",", "4", ",", "1"}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{"1", ",", "5", ",", "1"}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{"1", ",", "6", ",", "1"}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{"1", ",", "7", ",", "1"}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{"1", ",", "8", ",", "1"}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{"1", ",", "9", ",", "1"}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{"2", ",", "0", ",", "2"}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{"2", ",", "1", ",", "2"}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{"2", ",", "2", ",", "2"}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{"2", ",", "3", ",", "2"}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{"2", ",", "4", ",", "2"}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{"2", ",", "5", ",", "2"}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{"2", ",", "6", ",", "2"}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{"2", ",", "7", ",", "2"}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{"2", ",", "8", ",", "2"}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{"2", ",", "9", ",", "2"}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{"3", ",", "0", ",", "3"}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{"3", ",", "1", ",", "3"}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{"3", ",", "2", ",", "3"}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{"3", ",", "3", ",", "3"}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{"3", ",", "4", ",", "3"}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{"3", ",", "5", ",", "3"}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{"3", ",", "6", ",", "3"}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{"3", ",", "7", ",", "3"}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{"3", ",", "8", ",", "3"}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{"3", ",", "9", ",", "3"}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{"4", ",", "0", ",", "4"}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{"4", ",", "1", ",", "4"}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{"4", ",", "2", ",", "4"}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{"4", ",", "3", ",", "4"}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{"4", ",", "4", ",", "4"}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{"4", ",", "5", ",", "4"}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{"4", ",", "6", ",", "4"}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{"4", ",", "7", ",", "4"}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{"4", ",", "8", ",", "4"}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{"4", ",", "9", ",", "4"}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{"5", ",", "0", ",", "5"}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{"5", ",", "1", ",", "5"}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{"5", ",", "2", ",", "5"}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{"5", ",", "3", ",", "5"}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{"5", ",", "4", ",", "5"}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{"5", ",", "5", ",", "5"}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{"5", ",", "6", ",", "5"}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{"5", ",", "7", ",", "5"}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{"5", ",", "8", ",", "5"}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{"5", ",", "9", ",", "5"}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{"6", ",", "0", ",", "6"}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{"6", ",", "1", ",", "6"}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{"6", ",", "2", ",", "6"}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{"6", ",", "3", ",", "6"}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{"6", ",", "4", ",", "6"}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{"6", ",", "5", ",", "6"}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{"6", ",", "6", ",", "6"}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{"6", ",", "7", ",", "6"}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{"6", ",", "8", ",", "6"}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{"6", ",", "9", ",", "6"}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{"7", ",", "0", ",", "7"}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{"7", ",", "1", ",", "7"}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{"7", ",", "2", ",", "7"}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{"7", ",", "3", ",", "7"}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{"7", ",", "4", ",", "7"}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{"7", ",", "5", ",", "7"}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{"7", ",", "6", ",", "7"}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{"7", ",", "7", ",", "7"}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{"7", ",", "8", ",", "7"}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{"7", ",", "9", ",", "7"}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{"8", ",", "0", ",", "8"}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{"8", ",", "1", ",", "8"}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{"8", ",", "2", ",", "8"}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{"8", ",", "3", ",", "8"}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{"8", ",", "4", ",", "8"}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{"8", ",", "5", ",", "8"}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{"8", ",", "6", ",", "8"}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{"8", ",", "7", ",", "8"}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{"8", ",", "8", ",", "8"}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{"8", ",", "9", ",", "8"}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{"9", ",", "0", ",", "9"}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{"9", ",", "1", ",", "9"}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{"9", ",", "2", ",", "9"}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{"9", ",", "3", ",", "9"}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{"9", ",", "4", ",", "9"}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{"9", ",", "5", ",", "9"}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{"9", ",", "6", ",", "9"}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{"9", ",", "7", ",", "9"}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{"9", ",", "8", ",", "9"}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{"9", ",", "9", ",", "9"}], "}"}]}], "}"}]], 
        "ExerciseOutput", Selectable -> False, Copyable -> False, Editable -> 
        False, ShowCellBracket -> False]]], " "}
   },
   GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Center}}},
   GridBoxBackground->{"Columns" -> {{
        RGBColor[1, 1, 1]}}},
   GridBoxSpacings->{"Columns" -> {{Automatic}}, "Rows" -> {{1}}}],
  FrameMargins->0]], "ExerciseOutput",
 Editable->False,
 Selectable->False,
 Deletable->False,
 CellFrame->{{1, 1}, {1, 1}},
 ShowCellBracket->False,
 CellFrameColor->RGBColor[0.85, 0.85, 0.85],
 LineBreakWithin->Automatic]
}, Closed]]
}, Closed]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Preguntas y respuestas", "QASection",
 Editable->False,
 Deletable->False,
 ShowCellBracket->False],

Cell[TextData[{
 "\[DownQuestion]Son importantes los nombres de las variables en patrones (",
 Cell[BoxData[
  RowBox[{"x", 
   ButtonBox["_",
    BaseStyle->"Link",
    ButtonData->"Blank"]}]], "InlineCode"],
 ", etc.)?"
}], "Question",
 Editable->False,
 Deletable->False,
 ShowCellBracket->False],

Cell["\<\
No. Solo se pide que sean consistentes dentro de un patr\[OAcute]n dado. \
Diferentes patrones pueden volver a usar los mismos nombres para otros prop\
\[OAcute]sitos, y el mismo nombre puede aparecer fuera del patr\[OAcute]n.\
\>", "Answer",
 Editable->False,
 Deletable->False,
 ShowCellBracket->False],

Cell["\<\
\[DownQuestion]Qu\[EAcute] otras cosas se pueden usar en la \
definici\[OAcute]n de los patrones?\
\>", "Question",
 Editable->False,
 Deletable->False,
 ShowCellBracket->False],

Cell[TextData[{
 "Se ver\[AAcute]n algunas en la ",
 ButtonBox["Secci\[OAcute]n 41",
  BaseStyle->"Hyperlink",
  ButtonData->{"EIWL2-41-more-about-patterns.nb", None}],
 "."
}], "Answer",
 Editable->False,
 Deletable->False,
 ShowCellBracket->False],

Cell[TextData[{
 "\[DownQuestion]Qu\[EAcute] diferencia existe entre ",
 Cell[BoxData[
  ButtonBox["|",
   BaseStyle->"Link",
   ButtonData->"Alternatives"]], "InlineCode"],
 " y ",
 Cell[BoxData[
  ButtonBox["||",
   BaseStyle->"Link",
   ButtonData->"Or"]], "InlineCode"],
 "?"
}], "Question",
 Editable->False,
 Deletable->False,
 ShowCellBracket->False],

Cell[TextData[{
 Cell[BoxData[
  RowBox[{"p", 
   ButtonBox["|",
    BaseStyle->"Link",
    ButtonData->"Alternatives"], "q"}]], "InlineCode"],
 " es una forma de patr\[OAcute]n, que coincide con cualquiera de ",
 Cell[BoxData["p"], "InlineCode"],
 " y ",
 Cell[BoxData["q"], "InlineCode"],
 ". ",
 Cell[BoxData[
  RowBox[{"p", 
   ButtonBox["||",
    BaseStyle->"Link",
    ButtonData->"Or"], "q"}]], "InlineCode"],
 " es una forma l\[OAcute]gica que comprueba si ",
 Cell[BoxData["p"], "InlineCode"],
 " o ",
 Cell[BoxData["q"], "InlineCode"],
 " es ",
 ButtonBox["True",
  BaseStyle->"Link"],
 "."
}], "Answer",
 Editable->False,
 Deletable->False,
 ShowCellBracket->False],

Cell[TextData[{
 "\[DownQuestion]C\[OAcute]mo se dice a",
 ButtonBox["|",
  BaseStyle->"Link",
  ButtonData->"Alternatives"],
 "b?"
}], "Question",
 Editable->False,
 Deletable->False,
 ShowCellBracket->False,
 CellTags->"i:10"],

Cell["Como \[OpenCurlyDoubleQuote]a o b\[CloseCurlyDoubleQuote] o bien como \
\[OpenCurlyDoubleQuote]a barra vertical b\[CloseCurlyDoubleQuote].", "Answer",\

 Editable->False,
 Deletable->False,
 ShowCellBracket->False,
 CellTags->"LastCellOfAPage"],

Cell[TextData[{
 "\[DownQuestion]C\[OAcute]mo se interpreta ",
 Cell[BoxData[
  ButtonBox["/.",
   BaseStyle->"Link",
   ButtonData->"ReplaceAll"]], "InlineCode"],
 " ?"
}], "Question",
 Editable->False,
 Deletable->False,
 ShowCellBracket->False],

Cell[TextData[{
 "Es la funci\[OAcute]n ",
 ButtonBox["ReplaceAll",
  BaseStyle->"Link"],
 ". ",
 ButtonBox["Replace",
  BaseStyle->"Link"],
 " intenta sustituir una expresi\[OAcute]n completa. ",
 ButtonBox["ReplaceList",
  BaseStyle->"Link"],
 " obtiene la lista de los resultados de todas las formas posibles de \
coincidir con un patr\[OAcute]n dado."
}], "Answer",
 Editable->False,
 Deletable->False,
 ShowCellBracket->False,
 CellTags->"i:11"],

Cell[TextData[{
 "Si ",
 Cell[BoxData[
  ButtonBox["/.",
   BaseStyle->"Link",
   ButtonData->"ReplaceAll"]], "InlineCode"],
 " tiene varias sustituciones, \[DownQuestion]cu\[AAcute]l de ellas utilizar\
\[AAcute]?"
}], "Question",
 Editable->False,
 Deletable->False,
 ShowCellBracket->False],

Cell[TextData[{
 "Usar\[AAcute] la primera que sea v\[AAcute]lida. Si las sustituciones son v\
\[AAcute]lidas en varios niveles de una expresi\[OAcute]n, ",
 Cell[BoxData[
  ButtonBox["/.",
   BaseStyle->"Link",
   ButtonData->"ReplaceAll"]], "InlineCode"],
 " las usar\[AAcute] en el nivel m\[AAcute]s externo."
}], "Answer",
 Editable->False,
 Deletable->False,
 ShowCellBracket->False]
}, Open  ]],

Cell[CellGroupData[{

Cell["Notas t\[EAcute]cnicas", "TechNoteSection",
 Editable->False,
 Deletable->False,
 ShowCellBracket->False,
 CellTags->"p:196"],

Cell[TextData[{
 "Los patrones para cadenas de caracteres se tratan en la ",
 ButtonBox["Secci\[OAcute]n 42",
  BaseStyle->"Hyperlink",
  ButtonData->{"EIWL2-42-string-patterns-and-templates.nb", None}],
 "."
}], "TechNote",
 Editable->False,
 Deletable->False,
 ShowCellBracket->False],

Cell[TextData[{
 "En Wolfram Language, la coincidencia de patrones toma en cuenta los hechos \
tales como la equivalencia de ",
 Cell[BoxData[
  RowBox[{"x", 
   ButtonBox["+",
    BaseStyle->"Link",
    ButtonData->"Plus"], "y"}]], "InlineCode"],
 " y ",
 Cell[BoxData[
  RowBox[{"y", 
   ButtonBox["+",
    BaseStyle->"Link",
    ButtonData->"Plus"], "x"}]], "InlineCode"],
 ", o ",
 Cell[BoxData[
  RowBox[{"x", 
   ButtonBox["+",
    BaseStyle->"Link",
    ButtonData->"Plus"], 
   RowBox[{"(", 
    RowBox[{"y", 
     ButtonBox["+",
      BaseStyle->"Link",
      ButtonData->"Plus"], "z"}], ")"}]}]], "InlineCode"],
 " y ",
 Cell[BoxData[
  RowBox[{
   RowBox[{"(", 
    RowBox[{"x", 
     ButtonBox["+",
      BaseStyle->"Link",
      ButtonData->"Plus"], "y"}], ")"}], 
   ButtonBox["+",
    BaseStyle->"Link",
    ButtonData->"Plus"], "z"}]], "InlineCode"],
 ". Vea la ",
 ButtonBox["Secci\[OAcute]n 41",
  BaseStyle->"Hyperlink",
  ButtonData->{"EIWL2-41-more-about-patterns.nb", "Orderless"}],
 "."
}], "TechNote",
 Editable->False,
 Deletable->False,
 ShowCellBracket->False],

Cell[TextData[{
 "Al escribir ",
 Cell[BoxData[
  RowBox[{
   StyleBox["lhs", "CodeVariable"], 
   ButtonBox["\[Rule]",
    BaseStyle->"Link",
    ButtonData->"Rule"], 
   StyleBox["rhs", "CodeVariable"]}]], "InlineCode"],
 ", la ",
 Cell[BoxData[
  StyleBox["lhs", "CodeVariable"]], "InlineCode"],
 " significa \[OpenCurlyDoubleQuote]lado izquierdo\[CloseCurlyDoubleQuote] y \
la ",
 Cell[BoxData[
  StyleBox["rhs", "CodeVariable"]], "InlineCode"],
 " \[OpenCurlyDoubleQuote]lado derecho\[CloseCurlyDoubleQuote]."
}], "TechNote",
 Editable->False,
 Deletable->False,
 ShowCellBracket->False,
 CellTags->"i:12"],

Cell[TextData[{
 "Los patrones son ",
 StyleBox["formas con \[AAcute]mbito de alcance",
  FontSlant->"Italic"],
 ", en el sentido de que localizan nombres solamente dentro del \
\[AAcute]mbito del patr\[OAcute]n, tales como la ",
 Cell[BoxData["x"], "InlineCode"],
 " en ",
 Cell[BoxData["x_"], "InlineCode"],
 " ."
}], "TechNote",
 Editable->False,
 Deletable->False,
 ShowCellBracket->False,
 CellTags->"i:13"],

Cell[TextData[{
 "En el caso poco frecuente de que ",
 Cell[BoxData[
  ButtonBox["/.",
   BaseStyle->"Link",
   ButtonData->"ReplaceAll"]], "InlineCode"],
 " venga seguido de un d\[IAcute]gito (como ",
 Cell[BoxData["0"], "InlineCode"],
 "), hay que dejar un espacio en blanco antes del d\[IAcute]gito, a fin de \
evitar la confusi\[OAcute]n con una divisi\[OAcute]n."
}], "TechNote",
 Editable->False,
 Deletable->False,
 ShowCellBracket->False]
}, Open  ]],

Cell[CellGroupData[{

Cell["Para explorar m\[AAcute]s", "MoreExploreSection",
 Editable->False,
 Deletable->False,
 ShowCellBracket->False],

Cell[TextData[ButtonBox["Gu\[IAcute]a para patrones en Wolfram Language\
\[NonBreakingSpace]\[RightGuillemet]",
 BaseStyle->"Link",
 ButtonData->"paclet:guide/Patterns"]], "MoreExplore",
 Editable->False,
 Deletable->False,
 ShowCellBracket->False,
 CellTags->"LastCellOfAPage"]
}, Open  ]]
},
Saveable->False,
WindowToolbars->{},
BlinkingCellInsertionPoint->False,
CellInsertionPointCell->None,
WindowSize->{830, 800},
WindowMargins->Automatic,
WindowPersistentStyles->{
 WindowFrame, WindowMargins, WindowSize, Magnification},
WindowTitle->"Patrones: Una introducci\[OAcute]n elemental a Wolfram Language",
DockedCells->{
  Cell[
   BoxData[
    TagBox[
     GridBox[{{
        TemplateBox[{
         "\[ThickSpace]\[ThickSpace]\[ThickSpace]\[ThickSpace]", 
          "\"\[ThickSpace]\[ThickSpace]\[ThickSpace]\[ThickSpace]\"", 
          GraphicsBox[
           TagBox[
            RasterBox[CompressedData["
1:eJztl01IVFEUxyctMFzUysjIyUDCTauiIJFM6ENpM4NEtJrBUaSYZMYPhCRm
rYuoICgiW0VEBVIUEbTNEMTAIqRsk6JGCVFBHx7//+4JLo/36DqvB4Ie+Mk7
7+t3733nHpzq9NlEW0ksFsuX4U8i1duQy6X6kpuRtGTzHe3ZTOuxbFemPZPb
ny7FyZ2gEqwHInICfJToguOIReywPVHHlYDzcY4hJHZ486giyBOXtfms5Pms
Bs9zUBDTow6DJOgBT8DP/+B5CepAPbgqZm+zT70Bt9VXCx6H8DwE28Gw5ufB
IT2eA1N6PKquC0V4xtUxqfkE6ARD4BHYAx5Y938Gu8GdZXq4VsNWngIfwDzY
Aa6Bm55nOKYq8NXRw29eb+Uz4JSVd4Nn4IbPs2fARUdPQcfLWAQJ8Mq6Tkdd
gGcEHHT0sHYn9Jg1dcnnnhf6vnee8xzXVkcP9wdr97eY7z0NnlrX74qpxffg
iOZ2VDp6kvqOe6AVXAb7xNQB462YNfsCfoBzoE1MzTEqHD096mgE98WsEec4
Jqamvvk8cx2kwWuw19HDXnIAbNAx03ka9IO8mO+3ScyebRZTi01i1rqguHjY
r3aJWaugOA5O6vEC+K6ebWDW0cNgv6oBnwKus87KwKDmv8BRMOBz77/6G/sV
e8lkwHWuTwm4pQ7WzGIRHgb7FXsJ9/mI5z2si42gXMw8/ByuHgb7FXsJ9yX3
IPfHFjF1xTl5v0exnrCx5gnn+fu7JC7h/z/0Y52+P+rfWX9iCXVYErg=
             "], {{0,
              34}, {26, 0}}, {0, 255}, ColorFunction -> RGBColor], 
            BoxForm`ImageTag[
            "Byte", ColorSpace -> "RGB", Interleaving -> True, Magnification -> 
             1], Selectable -> False], DefaultBaseStyle -> "ImageGraphics", 
           ImageSize -> Magnification[1], ImageSizeRaw -> {26, 34}, 
           PlotRange -> {{0, 26}, {0, 34}}], 
          GraphicsBox[
           TagBox[
            RasterBox[CompressedData["
1:eJztXUuS47gRLX8WXtYRaJ+gl17SS+8U4/CeM+H2hDdtRY8jHF6ZR9AReATt
qrwyj6AjcO+ZaN0gLZCZwEMiQVJqSd2qwYvgdBGf/AF4+LFqfvvd37/56y+f
np5++M3pP998+88/fPz47b/+9Hx6+fOHH/72/Yf3f/njh3+8//79x99/96tT
4u9Oz79/8fT066cY9NNLSz++9uPz0+uOPv3n3Zj+40vj083npZktd5IVdJzk
hvT9pHOq78uc9I75rD/KA31n6/z03+dY1lRX64jkQh3LLpevbWI7t6N/Esv/
vdSJDpcOdpr5M74lvk/tt6VPL1VG3j7v79Qedr2XLlevoKDgsTHx8Cud+OTA
XDKM7yfOijnmlB+XC9zvuGfMm+HhqfwR8sjLY54ddbJuw05yesL7Sp2qHtY1
4+F8VjZ4Xajf2/q6Gd/HuUDH6OTvZOM21jHZmm0TsTvH/d531WZOn5o3x3lL
Ys22pnFN87Bezs6CgoLHhFsnMqd1IW1cz26TsrO8nOdSX8bgO+CwZlmHzf2L
OoXbYE08y/2e80AXcDGkbVEuzEXbIAvmA9S/kvuz+aIL5yeJHbTlVHbcQwzT
/BDncT5l6xXuLyh4k4C1Xfb8wZe9Bfcrnr0J949r43H9vV9bl2Oyn2w88Te/
Yx0+DxmiOiddiSyDk2/B/cEGFWPm/GkOeDmavo5zQ5wnaYX7CwreJvy61HGb
cc7uy63g/rEMPLEeg/tl7cxrZa/DpStZ2TOfFTo1Vy5yP88Zk02vGzkTic54
prjx/JDuFWJ501nXXCwS/Wev+9m+aN/Bdrk8dUYVZE1zv7n/4vScHQUFBY8L
f2fpz99PP1v8vob71ROV8efSruxYfj9xojujVuf92cfg/mWdPf88yDp9ed0f
8uXMZJIxroP5zN3ar6Tn6cGOsK5efd6f8S1/3n/6Nzrbirl7sj852yFuk87P
Zfzzmr1VQUHBY2M6+x/HPJnnCddY9yOXjevmkz7kqhut+xPZS9zv1/juvnvc
N3STTv5+R8XCsi+2Y+Joyy67fLijxifxXbhf5uzkeyZ/zt/yt0ADzrXs06RH
fJ7uKI7TnXfh/oKCnwvgDiD67u8W5/1JmZuc92vOndbus9wvd+D+TEq+ZQ3v
wpNTebkTMO5S4b4gZ5dp9xlnPp7/cR7F73v0g9/K4v7Ff4c17VEK9xcUvE2M
vJR828dcpc/m3wL3e05fvsPktW/0jY7n02m9PSS6FP+infHvJlyZ+4352p/h
671AWi5wv/+2R/Y5hfsLCt4icKzD2cpe3xmOZS8484nuIm/E/efqpJXfLkIc
hihdvtnP7YvcuYq/Ww1nM7EM/v5I2y5zzCV3vXJeF/YCg7Yx8kv2LMj9MofI
7/YV7i8oeJOY1vhwxh+e5JvPS+5643vGG3H/mTr9efYi9/vf5+qUHebc6O0P
c4M8e+Mc3rzLDWcvF3C/P6fnuSdno5xX+d/Lm7mnKNxfUPDmodeeBZdjXD+P
sYw5v6CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoOBr
BxE9n57aPV/aloLr4dSeFbdr9m/CXlmf60fVPXTdGi5mHLvqS9uyhNz45fTm
9LTu3y9jXcFacHu1/NRXktlmnprzXb8ZcQ19Pxdw3K7WTtcG2+bQ30nf4fQc
7zXX3BIuZhy79kryKhl3Kt1K23J6tVK2OX7Bh69mbFv+FkzgeVpg/r9bL5CZ
Q8v5D8n99+S1jP4W43hm3Zvbfivuz/nN6Y7/b/57dCcdwzX6K/T9VqXfgvuj
MYZpBPPluWPRGr9KdkdfyXz8iDxzLzi+5/Ac+d/PHkfQB7bcT+SpOP/huJ+m
PflDcj/Eu7+NZV7PXbn/nrhWf70X97NMGdM1v+M6b8tp0q+T/+/cCh/ISrsG
h1wLj8Yz9wJN5z3C+x3/3KgyY7/g8XeE8vn/z1dAncnP7Rk3xOsrRof9SHiF
6x/gXc4Zxb6dkvuO4v1oT/G6R/JQhvt3w/mNsmuUAbL3Kk/rF50tlNnyv3tV
VvQk8SWDA0HeJba3UFfi2UIbYb2Dtol9HyBf4thr+1a0/Vbpk3bdUYoWZRP0
M8Nu3dai38ntVLmEs9jHAylAvu6zkT4lC9tI+yKx2yt5jZJh6TO5FmQKz6O/
e7DJv4PPOF6cPh1jHweK+4H2S2yUdnT+yzkz1hkobifpmxsK3HNkeysKYy6q
Z8TA25nJrykdv63hK/ogequZmCFqMtZfZI9nHIsSr0bZvKW0H3nZNMW3W5Cx
4bwOftZcRErG0SqXqROt+4146jEkcPZIv+gytmC/ORpp77hOBfk9hfY5gFxs
syPIGYz2OHL5HeftVLqgUXajjcJrggr6j9drxHWO+0XHEWUs2N5COnG5DduB
aVhfbMW4DqT4SNu30PYt1JUz/IEC9+vYNcr3WsVvzu6aYuA4S//+Xcr9PYUx
Vis5EoOR3wxZDZTRvmjewHg+G/51YFevdam4SnsPYOfR6lOUtiv6LmPK4n4d
I91G6HMFaRi33rBdxwPXN6u5aCa/A3nYBtKndH/BdulADtoXjQUK9/g5H1tD
jo59ZdiD+a68tDPOix3EqTb8dn0SuUivtYntdGU8Ry/FWwPyrfEvfjT8/sw2
Hw25so4R3h0otNWg5EgZbCdp43fqfc96fd80bPZtB3Zu4F307SBN0Km6En/x
p9V1Vfk57u8usB25H9dcYheuBSVGnRH7Z1Wvh3o5WzBN+qbEYfTD0O39Vr7X
/C593rJbxoXo92sh8MXkEMtmpa+DNOl/yTyiYq59ETt7CuM8GrOgbwv1RJ81
12xQptgKunCtKjokFr3hp+wVrDbMxUig98IbitcRWp7E6cD5yE/S18W/41MG
lk0q38nG8St9uNV+UeifjREjgV47VUoO1rHGs6uLY1F4sTbigvviDuo74LgU
e5GTxL4NxecoTS52ZLRTLt4cx1YeyLf6jqCH52iVMWKH8Yx4At4PIFfGS63K
1DO6TP6E2O4hntomwbOqJzIP/C7xrzJxneP+s22nzFwDduCYiPq7jrOSl/hu
2ELWe8bvtdwv7Tpn99wYjOKTszmnf6WsJe5vjTTxD/di0RhBG6C+jFVXRniy
ARsaUnMH6MT5Rfw/qvfV3J+xbUfqPG0uTpSO2zV9Zzafy1jjt13ha2/YJnEU
v/ReCetYPjo+30I7aHsiHieY3/l9y++yj+lJ7Q8pPmPRwHVTEjsrzcqnM877
oU6vn5xeupz75dHr/npGV44/8cynA1lZu1V935/Fzpm43or7W5U+GDJ1H/sa
ud/a22q7H5n7BVZfrjL6JCbST/H8we/dDJ1Nzn8rHksxUmm4Lu4hJkvcr+Px
2dxP8ZnPTrfDgq89pAknu7EjXHtYqBP5SBPvH0BOS2EsYhwkrYc4bpRM5H55
RE8H9Vt+pC9k19or4ymoM/lWPMWfjVXH0kvruL/D94zcc7jf2WmdidUzNmXj
BeWlzc2zAlW2hbQk1mfYvsRDuEeMzkUgrp1RJvGdwt5X1iXCI7iX9z5k7OlU
uo69xZ9ipz6vQBuX+BrP2a39eGPo6zKyTF0Z2zXXJby8BKjjoM9PPf/O2a9t
ps/n/tbQoeXdnPspvneQ9brm47Xc731iO7cUjzWpg/OBnKVpXdhOms/ceHHj
WOb/PcVj34/1mZhIu+tvNyIOtmK3Nt6kznwonK/WUEbSJHbjOSyFfdhGyzXi
jW2gY4W6XPmN2GXUqWd04fjvKb3LOpD6bmRNvCjufw7VTFw/l/u17Tnuxz1h
C+W8Hoq/F9zN+C79aU9qH2vE/8i6OoL7UiXb6ZL92pxNObvP5n6ly/nTqnrO
1i3F34HUGTlbKOPHLa3jfvFP4iRjpJmxG2Ng3YNondhXdhS+sSEK/QbHQqPr
WXGbsWlHcDdqlJmLx2rup5iHWq6LY8/Jxn7W5nSQ3YfEhx2F71twnYAxi3y2
dFE6XqSM9IGBfxZdlWGLq79hfXKXKWN7MGIl/nczbZekZeKtgbGaW3MIjmTw
HLwvcr+KF8IaB/Wcj6S+veI0HO/OXpnL+zlZSq7Umf3Gmi7k/hnbTe43/CKr
HKXfkUkc0fdWyfD9GcrgXhfL1Zxfq7x2xnfLbuvs2rLRp62IR2XEQNDMyHG+
JvdCtIL7M3aMZxUz+qJ5PCNno+pY40XfCUXjl87jfjzzIYI7OChzbe7XaJVM
iWVuLb523a8x3skauhyk76CPOA4GsvsFzhsI/J0NXebA6RWpeQnkRnn8c63K
JGlWvvHgPOj0bLUNbJ9LT85+tF7LD8r8XRQu2/Cj71yljt6jJT7SNJYaZccG
5Ro2ZeNFExdI+2bPe5S/FaTVa2ynMOd72y15hj6JWa6MtJfpO5RpQW8utjWX
S3RBf9lQ/O1E5PuS3RT+Fo3ui+Z4UHU3FL5bxnhLDLJxMmwQ+2ScJf3W6pfK
v+z5qOGvtrmy0g0dpk96/KIeVS7X1lK/Ql8N+7LxyOm09BsPyh3HhZJZqXe0
zepDbgwPFP4+hoxpUnWlD1VaF8j2bavjQGHe6Sic0yfraCi7pRV9suC+4H4g
87w/4ygoKHgcUNhb4f2YnMsTLawpztTVa5kUzhH7a+kpuC0o3vc2X9qegoKC
80Hp78Phmr+7si48q5O9hqwdrzbHFNwWFL61rr60LQUFBZeDwt9N7Sl8O1nf
SFdD4XuijtQ3RXP4P6lulfg=
             "], {{0, 34}, {383, 0}}, {0, 255}, 
             ColorFunction -> RGBColor], 
            BoxForm`ImageTag[
            "Byte", ColorSpace -> "RGB", Interleaving -> True, Magnification -> 
             1], Selectable -> False], DefaultBaseStyle -> "ImageGraphics", 
           ImageSize -> Magnification[1], ImageSizeRaw -> {383, 34}, 
           PlotRange -> {{0, 383}, {0, 34}}]}, "RowWithSeparators"], 
        PaneBox[
         StyleBox["\[VeryThinSpace]", ShowStringCharacters -> False], 
         Alignment -> Right, ImageSize -> {174, 47}], 
        PaneBox[
         PaneBox[
          TemplateBox[{"\[ThinSpace]", "\" \"", 
            TagBox[
             TooltipBox[
              PaneSelectorBox[{False -> ButtonBox[
                  PaneBox[
                   GraphicsBox[
                    TagBox[
                    RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UJAPiDmBmIUBO/j//z8jEDcA8W8g3oBFnhmIZ/9HgE9o8mxAvBZJ/hsQuyPJ
8wPxfiT5N0BsjiQvCsTnkOSfALEWkrwSEN9Bkr8OxDJobniAJP8ZZCYWfxCj
RpGQXcS4mVi/ExuGxMYFmlp4nAIAG14fWQ==
                    "], {{0, 14}, {9, 
                    0}}, {0, 255}, ColorFunction -> RGBColor], 
                    BoxForm`ImageTag[
                    "Byte", ColorSpace -> "RGB", Interleaving -> True], 
                    Selectable -> False], DefaultBaseStyle -> "ImageGraphics",
                     ImageSizeRaw -> {9, 14}, PlotRange -> {{0, 9}, {0, 14}}, 
                    ImageSize -> Magnification[1]], ImageSize -> {35, 30}, 
                   Alignment -> Center], 
                  ButtonFunction :> (
                   NotebookLocate[{"EIWL2-31-parts-of-lists.nb", ""}, 
                    FrontEnd`HistoryData :> {
                    EvaluationNotebook[]}]& ), Enabled -> True, Appearance -> 
                  None, Evaluator -> Automatic, Method -> "Preemptive"], True -> 
                ButtonBox[
                  PaneBox[
                   GraphicsBox[
                    TagBox[
                    RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UJAPiDmBmIUBO/j//z8jEDcA8W8g3oBFnhmIZ/9HgE9o8mxAvBZJ/hsQuyPJ
8wPxfiT5N0BsjiQvCsTnkOSfALEWkrwSEN9Bkr8OxDJobniAJP8ZZCYWfxCj
RpGQXcS4mVi/ExuGxMYFmlp4nAIAG14fWQ==
                    "], {{0, 14}, {9, 
                    0}}, {0, 255}, ColorFunction -> RGBColor], 
                    BoxForm`ImageTag[
                    "Byte", ColorSpace -> "RGB", Interleaving -> True], 
                    Selectable -> False], DefaultBaseStyle -> "ImageGraphics",
                     ImageSizeRaw -> {9, 14}, PlotRange -> {{0, 9}, {0, 14}}, 
                    ImageSize -> Magnification[1]], ImageSize -> {35, 30}, 
                   Alignment -> Center], 
                  ButtonFunction :> (
                   NotebookLocate[{"EIWL2-31-parts-of-lists.nb", ""}, 
                    FrontEnd`HistoryData :> {
                    EvaluationNotebook[]}]& ), Enabled -> True, Appearance -> 
                  None, Background -> RGBColor[0.835294, 0.364706, 0.0196078],
                   Evaluator -> Automatic, Method -> "Preemptive"]}, 
               Dynamic[
                CurrentValue["MouseOver"]], ImageSize -> Automatic, 
               FrameMargins -> 0], "\"Partes de listas\"", TooltipDelay -> 
              0.15, LabelStyle -> "TextStyling"], 
             Annotation[#, "Partes de listas", "Tooltip"]& ], 
            TemplateBox[{5}, "Spacer1"], 
            TagBox[
             TooltipBox[
              PaneSelectorBox[{False -> ButtonBox[
                  PaneBox[
                   GraphicsBox[
                    TagBox[
                    RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UJAfiDmBmAWI////vwKIfwFxMQMOAJT7+R8B6nGoSf+PCjpwqMskUl0SEP9F
UtcHxIxY1EWjqZuOQ10Mmr2TcNj7BEnNP1LNIeQeIDsZn78IhQ8x4fwfNb4a
cPgTFu8l2ORBAAC+1hnm
                    "], {{0, 15}, {9, 0}}, {0, 255}, 
                    ColorFunction -> RGBColor], 
                    BoxForm`ImageTag[
                    "Byte", ColorSpace -> "RGB", Interleaving -> True], 
                    Selectable -> False], DefaultBaseStyle -> "ImageGraphics",
                     ImageSizeRaw -> {9, 15}, PlotRange -> {{0, 9}, {0, 15}}, 
                    ImageSize -> Magnification[1]], ImageSize -> {35, 30}, 
                   Alignment -> Center], 
                  ButtonFunction :> (
                   NotebookLocate[{
                    "EIWL2-33-expressions-and-their-structure.nb", ""}, 
                    FrontEnd`HistoryData :> {
                    EvaluationNotebook[]}]& ), Appearance -> None, Evaluator -> 
                  Automatic, Method -> "Preemptive"], True -> ButtonBox[
                  PaneBox[
                   GraphicsBox[
                    TagBox[
                    RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UJAfiDmBmAWI////vwKIfwFxMQMOAJT7+R8B6nGoSf+PCjpwqMskUl0SEP9F
UtcHxIxY1EWjqZuOQ10Mmr2TcNj7BEnNP1LNIeQeIDsZn78IhQ8x4fwfNb4a
cPgTFu8l2ORBAAC+1hnm
                    "], {{0, 15}, {9, 0}}, {0, 255}, 
                    ColorFunction -> RGBColor], 
                    BoxForm`ImageTag[
                    "Byte", ColorSpace -> "RGB", Interleaving -> True], 
                    Selectable -> False], DefaultBaseStyle -> "ImageGraphics",
                     ImageSizeRaw -> {9, 15}, PlotRange -> {{0, 9}, {0, 15}}, 
                    ImageSize -> Magnification[1]], ImageSize -> {35, 30}, 
                   Alignment -> Center], 
                  ButtonFunction :> (
                   NotebookLocate[{
                    "EIWL2-33-expressions-and-their-structure.nb", ""}, 
                    FrontEnd`HistoryData :> {
                    EvaluationNotebook[]}]& ), Appearance -> None, Background -> 
                  RGBColor[0.835294, 0.364706, 0.0196078], Evaluator -> 
                  Automatic, Method -> "Preemptive"]}, 
               Dynamic[
                CurrentValue["MouseOver"]], ImageSize -> Automatic, 
               FrameMargins -> 0], "\"Expresiones y su estructura\"", 
              TooltipDelay -> 0.15, LabelStyle -> "TextStyling"], 
             Annotation[#, "Expresiones y su estructura", "Tooltip"]& ]}, 
           "RowWithSeparators"], Alignment -> Right], ImageSize -> {100, 30}, 
         FrameMargins -> {{0, 6}, {0, 0}}, Alignment -> Right], 
        ActionMenuBox[
         PaneSelectorBox[{True -> PanelBox[
             GraphicsBox[
              TagBox[
               RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UBAkIQ3ELED8////Jf/pA0D2/KWTXSB7ZtPBPrA9DKOAYgAMR1Eg9gPiABpi
P6g912mcLmAAZM9XOtkFsicKiNcD8QYaYpD5UQOdXoYD+E/HMooO9iDbR7c6
BQDxtyEt
                "], {{0, 16}, {27, 0}}, {0, 255}, ColorFunction -> 
                RGBColor], 
               BoxForm`ImageTag[
               "Byte", ColorSpace -> "RGB", Interleaving -> True, 
                Magnification -> 1], Selectable -> False], DefaultBaseStyle -> 
              "ImageGraphics", ImageSize -> Magnification[1], 
              ImageSizeRaw -> {27, 16}, PlotRange -> {{0, 27}, {0, 16}}], 
             Appearance -> None, Background -> 
             RGBColor[0.835294, 0.364706, 0.0196078], ImageSize -> {35, 30}, 
             Alignment -> Center], False -> PanelBox[
             GraphicsBox[
              TagBox[
               RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UBAkIQ3ELED8////Jf/pA0D2/KWTXSB7ZtPBPrA9DKOAYgAMR1Eg9gPiABpi
P6g912mcLmAAZM9XOtkFsicKiNcD8QYaYpD5UQOdXoYD+E/HMooO9iDbR7c6
BQDxtyEt
                "], {{0, 16}, {27, 0}}, {0, 255}, ColorFunction -> 
                RGBColor], 
               BoxForm`ImageTag[
               "Byte", ColorSpace -> "RGB", Interleaving -> True, 
                Magnification -> 1], Selectable -> False], DefaultBaseStyle -> 
              "ImageGraphics", ImageSize -> Magnification[1], 
              ImageSizeRaw -> {27, 16}, PlotRange -> {{0, 27}, {0, 16}}], 
             Appearance -> None, Background -> 
             RGBColor[0.952941, 0.509804, 0], ImageSize -> {35, 30}, 
             Alignment -> Center]}, 
          Dynamic[
           CurrentValue["MouseOver"]]], {
         "Prefacio" :> 
          NotebookLocate[{"EIWL2-0a-preface.nb", ""}, FrontEnd`HistoryData :> {
              EvaluationNotebook[]}], 
          "\[DownQuestion]Qu\[EAcute] es Wolfram Language?" :> 
          NotebookLocate[{"EIWL2-0b-what-is-the-wolfram-language.nb", ""}, 
            FrontEnd`HistoryData :> {
              EvaluationNotebook[]}], 
          "Aspectos pr\[AAcute]cticos en el uso de Wolfram Language" :> 
          NotebookLocate[{
            "EIWL2-0c-practicalities-of-using-the-wolfram-language.nb", ""}, 
            FrontEnd`HistoryData :> {
              EvaluationNotebook[]}], "Otros recursos" :> 
          NotebookLocate[{"EIWL2-0d-other-resources.nb", ""}, 
            FrontEnd`HistoryData :> {
              EvaluationNotebook[]}], 
          "Sobre la traducci\[OAcute]n al espa\[NTilde]ol" :> 
          NotebookLocate[{"EIWL2-0e-translation-notes.nb", ""}, 
            FrontEnd`HistoryData :> {
              EvaluationNotebook[]}], 
          "\[ThickSpace]\[ThickSpace]\[ThinSpace]1\[ThickSpace]\[ThickSpace]|\
\[ThickSpace]\[ThickSpace]Inicio: aritm\[EAcute]tica elemental" :> 
          NotebookLocate[{
            "EIWL2-01-starting-out-elementary-arithmetic.nb", ""}, 
            FrontEnd`HistoryData :> {
              EvaluationNotebook[]}], 
          "\[ThickSpace]\[ThickSpace]\[ThinSpace]2\[ThickSpace]\[ThickSpace]|\
\[ThickSpace]\[ThickSpace]Introducci\[OAcute]n a las funciones" :> 
          NotebookLocate[{"EIWL2-02-introducing-functions.nb", ""}, 
            FrontEnd`HistoryData :> {
              EvaluationNotebook[]}], 
          "\[ThickSpace]\[ThickSpace]\[ThinSpace]3\[ThickSpace]\[ThickSpace]|\
\[ThickSpace]\[ThickSpace]Un primer vistazo a las listas" :> 
          NotebookLocate[{"EIWL2-03-first-look-at-lists.nb", ""}, 
            FrontEnd`HistoryData :> {
              EvaluationNotebook[]}], 
          "\[ThickSpace]\[ThickSpace]\[ThinSpace]4\[ThickSpace]\[ThickSpace]|\
\[ThickSpace]\[ThickSpace]Visualizaci\[OAcute]n de listas" :> 
          NotebookLocate[{"EIWL2-04-displaying-lists.nb", ""}, 
            FrontEnd`HistoryData :> {
              EvaluationNotebook[]}], 
          "\[ThickSpace]\[ThickSpace]\[ThinSpace]5\[ThickSpace]\[ThickSpace]|\
\[ThickSpace]\[ThickSpace]Operaciones con listas" :> 
          NotebookLocate[{"EIWL2-05-operations-on-lists.nb", ""}, 
            FrontEnd`HistoryData :> {
              EvaluationNotebook[]}], 
          "\[ThickSpace]\[ThickSpace]\[ThinSpace]6\[ThickSpace]\[ThickSpace]|\
\[ThickSpace]\[ThickSpace]Construcci\[OAcute]n de tablas" :> 
          NotebookLocate[{"EIWL2-06-making-tables.nb", ""}, 
            FrontEnd`HistoryData :> {
              EvaluationNotebook[]}], 
          "\[ThickSpace]\[ThickSpace]\[ThinSpace]7\[ThickSpace]\[ThickSpace]|\
\[ThickSpace]\[ThickSpace]Colores y estilos" :> 
          NotebookLocate[{"EIWL2-07-colors-and-styles.nb", ""}, 
            FrontEnd`HistoryData :> {
              EvaluationNotebook[]}], 
          "\[ThickSpace]\[ThickSpace]\[ThinSpace]8\[ThickSpace]\[ThickSpace]|\
\[ThickSpace]\[ThickSpace]Objetos gr\[AAcute]ficos elementales" :> 
          NotebookLocate[{"EIWL2-08-basic-graphics-objects.nb", ""}, 
            FrontEnd`HistoryData :> {
              EvaluationNotebook[]}], 
          "\[ThickSpace]\[ThickSpace]\[ThinSpace]9\[ThickSpace]\[ThickSpace]|\
\[ThickSpace]\[ThickSpace]Manipulaci\[OAcute]n interactiva" :> 
          NotebookLocate[{"EIWL2-09-interactive-manipulation.nb", ""}, 
            FrontEnd`HistoryData :> {
              EvaluationNotebook[]}], 
          "10\[ThickSpace]\[ThickSpace]|\[ThickSpace]\[ThickSpace]Im\[AAcute]\
genes" :> NotebookLocate[{"EIWL2-10-images.nb", ""}, 
            FrontEnd`HistoryData :> {
              EvaluationNotebook[]}], 
          "11\[ThickSpace]\[ThickSpace]|\[ThickSpace]\[ThickSpace]Cadenas de \
caracteres y texto" :> 
          NotebookLocate[{"EIWL2-11-strings-and-text.nb", ""}, 
            FrontEnd`HistoryData :> {
              EvaluationNotebook[]}], 
          "12\[ThickSpace]\[ThickSpace]|\[ThickSpace]\[ThickSpace]Sonido" :> 
          NotebookLocate[{"EIWL2-12-sound.nb", ""}, FrontEnd`HistoryData :> {
              EvaluationNotebook[]}], 
          "13\[ThickSpace]\[ThickSpace]|\[ThickSpace]\[ThickSpace]Arreglos o \
listas de listas" :> 
          NotebookLocate[{"EIWL2-13-arrays-or-lists-of-lists.nb", ""}, 
            FrontEnd`HistoryData :> {
              EvaluationNotebook[]}], 
          "14\[ThickSpace]\[ThickSpace]|\[ThickSpace]\[ThickSpace]Coordenadas \
y gr\[AAcute]ficos" :> 
          NotebookLocate[{"EIWL2-14-coordinates-and-graphics.nb", ""}, 
            FrontEnd`HistoryData :> {
              EvaluationNotebook[]}], 
          "15\[ThickSpace]\[ThickSpace]|\[ThickSpace]\[ThickSpace]El alcance \
de Wolfram Language" :> 
          NotebookLocate[{
            "EIWL2-15-the-scope-of-the-wolfram-language.nb", ""}, 
            FrontEnd`HistoryData :> {
              EvaluationNotebook[]}], 
          "16\[ThickSpace]\[ThickSpace]|\[ThickSpace]\[ThickSpace]Datos del \
mundo real" :> 
          NotebookLocate[{"EIWL2-16-real-world-data.nb", ""}, 
            FrontEnd`HistoryData :> {
              EvaluationNotebook[]}], 
          "17\[ThickSpace]\[ThickSpace]|\[ThickSpace]\[ThickSpace]Unidades" :> 
          NotebookLocate[{"EIWL2-17-units.nb", ""}, FrontEnd`HistoryData :> {
              EvaluationNotebook[]}], 
          "18\[ThickSpace]\[ThickSpace]|\[ThickSpace]\[ThickSpace]\
Geocomputaci\[OAcute]n" :> 
          NotebookLocate[{"EIWL2-18-geocomputation.nb", ""}, 
            FrontEnd`HistoryData :> {
              EvaluationNotebook[]}], 
          "19\[ThickSpace]\[ThickSpace]|\[ThickSpace]\[ThickSpace]Fechas y \
horas" :> NotebookLocate[{"EIWL2-19-dates-and-times.nb", ""}, 
            FrontEnd`HistoryData :> {
              EvaluationNotebook[]}], 
          "20\[ThickSpace]\[ThickSpace]|\[ThickSpace]\[ThickSpace]Opciones" :> 
          NotebookLocate[{"EIWL2-20-options.nb", ""}, FrontEnd`HistoryData :> {
              EvaluationNotebook[]}], 
          "21\[ThickSpace]\[ThickSpace]|\[ThickSpace]\[ThickSpace]Grafos y \
redes" :> NotebookLocate[{"EIWL2-21-graphs-and-networks.nb", ""}, 
            FrontEnd`HistoryData :> {
              EvaluationNotebook[]}], 
          "22\[ThickSpace]\[ThickSpace]|\[ThickSpace]\[ThickSpace]Aprendizaje \
autom\[AAcute]tico" :> 
          NotebookLocate[{"EIWL2-22-machine-learning.nb", ""}, 
            FrontEnd`HistoryData :> {
              EvaluationNotebook[]}], 
          "23\[ThickSpace]\[ThickSpace]|\[ThickSpace]\[ThickSpace]M\[AAcute]s \
sobre n\[UAcute]meros" :> 
          NotebookLocate[{"EIWL2-23-more-about-numbers.nb", ""}, 
            FrontEnd`HistoryData :> {
              EvaluationNotebook[]}], 
          "24\[ThickSpace]\[ThickSpace]|\[ThickSpace]\[ThickSpace]M\[AAcute]s \
formas de visualizaci\[OAcute]n" :> 
          NotebookLocate[{"EIWL2-24-more-forms-of-visualization.nb", ""}, 
            FrontEnd`HistoryData :> {
              EvaluationNotebook[]}], 
          "25\[ThickSpace]\[ThickSpace]|\[ThickSpace]\[ThickSpace]Maneras de \
aplicar funciones" :> 
          NotebookLocate[{"EIWL2-25-ways-to-apply-functions.nb", ""}, 
            FrontEnd`HistoryData :> {
              EvaluationNotebook[]}], 
          "26\[ThickSpace]\[ThickSpace]|\[ThickSpace]\[ThickSpace]Funciones \
puras an\[OAcute]nimas" :> 
          NotebookLocate[{"EIWL2-26-pure-anonymous-functions.nb", ""}, 
            FrontEnd`HistoryData :> {
              EvaluationNotebook[]}], 
          "27\[ThickSpace]\[ThickSpace]|\[ThickSpace]\[ThickSpace]Aplicaci\
\[OAcute]n repetida de funciones " :> 
          NotebookLocate[{"EIWL2-27-applying-functions-repeatedly.nb", ""}, 
            FrontEnd`HistoryData :> {
              EvaluationNotebook[]}], 
          "28\[ThickSpace]\[ThickSpace]|\[ThickSpace]\[ThickSpace]Pruebas y \
condicionales" :> 
          NotebookLocate[{"EIWL2-28-tests-and-conditionals.nb", ""}, 
            FrontEnd`HistoryData :> {
              EvaluationNotebook[]}], 
          "29\[ThickSpace]\[ThickSpace]|\[ThickSpace]\[ThickSpace]M\[AAcute]s \
sobre las funciones puras" :> 
          NotebookLocate[{"EIWL2-29-more-about-pure-functions.nb", ""}, 
            FrontEnd`HistoryData :> {
              EvaluationNotebook[]}], 
          "30\[ThickSpace]\[ThickSpace]|\[ThickSpace]\[ThickSpace]\
Reorganizaci\[OAcute]n de listas" :> 
          NotebookLocate[{"EIWL2-30-rearranging-lists.nb", ""}, 
            FrontEnd`HistoryData :> {
              EvaluationNotebook[]}], 
          "31\[ThickSpace]\[ThickSpace]|\[ThickSpace]\[ThickSpace]Partes de \
listas" :> NotebookLocate[{"EIWL2-31-parts-of-lists.nb", ""}, 
            FrontEnd`HistoryData :> {
              EvaluationNotebook[]}], 
          "32\[ThickSpace]\[ThickSpace]|\[ThickSpace]\[ThickSpace]Patrones" :> 
          NotebookLocate[{"EIWL2-32-patterns.nb", ""}, FrontEnd`HistoryData :> {
              EvaluationNotebook[]}], 
          "33\[ThickSpace]\[ThickSpace]|\[ThickSpace]\[ThickSpace]Expresiones \
y su estructura" :> 
          NotebookLocate[{"EIWL2-33-expressions-and-their-structure.nb", ""}, 
            FrontEnd`HistoryData :> {
              EvaluationNotebook[]}], 
          "34\[ThickSpace]\[ThickSpace]|\[ThickSpace]\[ThickSpace]\
Asociaciones" :> 
          NotebookLocate[{"EIWL2-34-associations.nb", ""}, 
            FrontEnd`HistoryData :> {
              EvaluationNotebook[]}], 
          "35\[ThickSpace]\[ThickSpace]|\[ThickSpace]\[ThickSpace]Comprensi\
\[OAcute]n del lenguaje natural" :> 
          NotebookLocate[{"EIWL2-35-natural-language-understanding.nb", ""}, 
            FrontEnd`HistoryData :> {
              EvaluationNotebook[]}], 
          "36\[ThickSpace]\[ThickSpace]|\[ThickSpace]\[ThickSpace]Construcci\
\[OAcute]n de sitios web y aplicaciones" :> 
          NotebookLocate[{"EIWL2-36-creating-websites-and-apps.nb", ""}, 
            FrontEnd`HistoryData :> {
              EvaluationNotebook[]}], 
          "37\[ThickSpace]\[ThickSpace]|\[ThickSpace]\[ThickSpace]Composici\
\[OAcute]n y visualizaci\[OAcute]n" :> 
          NotebookLocate[{"EIWL2-37-layout-and-display.nb", ""}, 
            FrontEnd`HistoryData :> {
              EvaluationNotebook[]}], 
          "38\[ThickSpace]\[ThickSpace]|\[ThickSpace]\[ThickSpace]Asignaci\
\[OAcute]n de nombres a cosas" :> 
          NotebookLocate[{"EIWL2-38-assigning-names-to-things.nb", ""}, 
            FrontEnd`HistoryData :> {
              EvaluationNotebook[]}], 
          "39\[ThickSpace]\[ThickSpace]|\[ThickSpace]\[ThickSpace]Valores \
inmediatos y diferidos" :> 
          NotebookLocate[{"EIWL2-39-immediate-and-delayed-values.nb", ""}, 
            FrontEnd`HistoryData :> {
              EvaluationNotebook[]}], 
          "40\[ThickSpace]\[ThickSpace]|\[ThickSpace]\[ThickSpace]Funciones \
definidas por el usuario" :> 
          NotebookLocate[{"EIWL2-40-defining-your-own-functions.nb", ""}, 
            FrontEnd`HistoryData :> {
              EvaluationNotebook[]}], 
          "41\[ThickSpace]\[ThickSpace]|\[ThickSpace]\[ThickSpace]M\[AAcute]s \
informaci\[OAcute]n sobre los patrones" :> 
          NotebookLocate[{"EIWL2-41-more-about-patterns.nb", ""}, 
            FrontEnd`HistoryData :> {
              EvaluationNotebook[]}], 
          "42\[ThickSpace]\[ThickSpace]|\[ThickSpace]\[ThickSpace]Cadenas de \
caracteres y plantillas " :> 
          NotebookLocate[{"EIWL2-42-string-patterns-and-templates.nb", ""}, 
            FrontEnd`HistoryData :> {
              EvaluationNotebook[]}], 
          "43\[ThickSpace]\[ThickSpace]|\[ThickSpace]\[ThickSpace]C\[OAcute]\
mo guardar cosas" :> 
          NotebookLocate[{"EIWL2-43-storing-things.nb", ""}, 
            FrontEnd`HistoryData :> {
              EvaluationNotebook[]}], 
          "44\[ThickSpace]\[ThickSpace]|\[ThickSpace]\[ThickSpace]Importar y \
exportar" :> 
          NotebookLocate[{"EIWL2-44-importing-and-exporting.nb", ""}, 
            FrontEnd`HistoryData :> {
              EvaluationNotebook[]}], 
          "45\[ThickSpace]\[ThickSpace]|\[ThickSpace]\[ThickSpace]Conjuntos \
de datos" :> 
          NotebookLocate[{"EIWL2-45-datasets.nb", ""}, FrontEnd`HistoryData :> {
              EvaluationNotebook[]}], 
          "46\[ThickSpace]\[ThickSpace]|\[ThickSpace]\[ThickSpace]C\[OAcute]\
mo escribir c\[OAcute]digo de buena calidad" :> 
          NotebookLocate[{"EIWL2-46-writing-good-code.nb", ""}, 
            FrontEnd`HistoryData :> {
              EvaluationNotebook[]}], 
          "47\[ThickSpace]\[ThickSpace]|\[ThickSpace]\[ThickSpace]Depuraci\
\[OAcute]n de c\[OAcute]digo" :> 
          NotebookLocate[{"EIWL2-47-debugging-your-code.nb", ""}, 
            FrontEnd`HistoryData :> {
              EvaluationNotebook[]}], "Lo que no se vio en el libro" :> 
          NotebookLocate[{"EIWL2-what-we-havent-discussed.nb", ""}, 
            FrontEnd`HistoryData :> {
              EvaluationNotebook[]}], "Ep\[IAcute]logo: ser un programador" :> 
          NotebookLocate[{"EIWL2-being-a-programmer.nb", ""}, 
            FrontEnd`HistoryData :> {
              EvaluationNotebook[]}], "Respuestas a los ejercicios" :> 
          NotebookLocate[{"EIWL2-answers-to-exercises.nb", ""}, 
            FrontEnd`HistoryData :> {
              EvaluationNotebook[]}], "\[CapitalIAcute]ndice" :> 
          NotebookLocate[{"EIWL2-book-index.nb", ""}, FrontEnd`HistoryData :> {
              EvaluationNotebook[]}]}, Appearance -> None]}}, 
      GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Center}}}, 
      GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Grid"]], 
   "Text", ShowCellBracket -> False, CellFrame -> {{0, 0}, {3, 0}}, 
   Selectable -> False, CellFrameColor -> 
   RGBColor[0.835294, 0.364706, 0.0196078], CellMargins -> {{0, 0}, {0, -1}}, 
   CellFrameMargins -> {{27, 0}, {1, 7}}, Background -> 
   RGBColor[0.952941, 0.509804, 0], CellTags -> "DockedCellLogoCell"], 
  Cell["SEGUNDA EDICI\[CapitalOAcute]N", "Text", FontFamily -> 
   "Source Sans Pro", CellFrame -> {{0, 0}, {3, 0}}, ShowCellBracket -> False,
    CellMargins -> {{0, 0}, {-1, -1}}, CellFrameMargins -> {{66, 0}, {2, 4}}, 
   CellFrameColor -> RGBColor[0.952941, 0.509804, 0], FontSize -> 10, 
   FontTracking -> "Extended", FontColor -> RGBColor[1, 0.929412, 0.721569], 
   Background -> RGBColor[0.862745, 0.309804, 0], CellTags -> 
   "DockedCellLogoCell"]},
PrintingStartingPageNumber->273,
PageHeaders->{{
   Cell[
    TextData[{
      StyleBox[
       CounterBox["Page"], "PageNumber"], 
      StyleBox[
      "    An Elementary Introduction to the Wolfram Language", "Header"]}], 
    "Header", CellMargins -> {{37, Inherited}, {Inherited, Inherited}}], None,
    None}, {None, None, 
   Cell[
    TextData[{
      StyleBox[
       CounterBox["Section"], "Header"], 
      StyleBox[" | Patterns \[LongDash] wolfr.am/eiwl-", "Header"], 
      StyleBox[
       CounterBox["Section"], "Header"], 
      StyleBox["    ", "Header"], 
      StyleBox[
       CounterBox["Page"], "PageNumber"]}], "Header", 
    CellMargins -> {{Inherited, 17}, {Inherited, Inherited}}]}},
PrintingOptions->{"FirstPageHeader"->True},
ShowCellBracket->Automatic,
ShowAutoSpellCheck->False,
ShowPredictiveInterface->False,
ShowSyntaxStyles->False,
AutoStyleOptions->{"HighlightMisspelledWords"->False},
Magnification->1.25,
FrontEndVersion->"11.3 for Mac OS X x86 (32-bit, 64-bit Kernel) (March 5, \
2018)",
StyleDefinitions->Notebook[{
   Cell[
    StyleData[StyleDefinitions -> "Default.nb"]], 
   Cell[
    CellGroupData[{
      Cell[
      "Style Environments", "Section", 
       CellChangeTimes -> {{3.64661165091824*^9, 3.646611654013329*^9}, 
         3.6485723794335403`*^9, 3.651347081728628*^9, 3.651347179462186*^9, 
         3.651347384135805*^9, 3.651348171662589*^9}], 
      Cell[
       StyleData[All, "Working"], CellInsertionPointCell -> 
       FEPrivate`FrontEndResource["FEExpressions", "CellInsertionMenu"], 
       CreateCellID -> True, $CellContext`GhostCellInEmptyNotebook -> False], 
      
      Cell[
       StyleData[All, "Printout"], 
       PrintingOptions -> {
        "PageSize" -> {504, 720}, "PrintRegistrationMarks" -> True}, 
       Magnification -> 0.6]}, Closed]], 
   Cell[
    CellGroupData[{
      Cell["Styles for Headers and Footers", "Section"], 
      Cell[
       StyleData["Header"], StyleMenuListing -> None, FontFamily -> "Verdana",
        FontSize -> 7, FontSlant -> "Plain", FontColor -> GrayLevel[0.6]], 
      Cell[
       StyleData["PageNumber"], CellMargins -> {{0, 0}, {4, 1}}, 
       StyleMenuListing -> None, FontFamily -> "Verdana", FontSize -> 7, 
       FontWeight -> "Bold", FontSlant -> "Plain", FontColor -> 
       GrayLevel[0]]}, Closed]], 
   Cell[
    CellGroupData[{
      Cell[
      "WPL Specific", "Section", 
       CellChangeTimes -> {{3.6556608433734913`*^9, 3.6556608489412746`*^9}}], 
      Cell[
       StyleData["Link"], FontFamily -> "Source Sans Pro", FontSize :> 
       If[CurrentValue[
           EvaluationCell[], "FontFamily"] === "Source Sans Pro", Inherited, 
         If[CurrentValue[
            EvaluationCell[], "FontFamily"] === "WolframCodeSans", Inherited, 
          Inherited 0.9]], FontColor -> GrayLevel[0]], 
      Cell[
       StyleData["CodeLink"], 
       ButtonBoxOptions -> {
        Appearance -> None, ButtonFunction :> (FEPrivate`FrontEndExecute[
           FrontEndToken["OpenHelpLink", {
             Part[#, 1], Null}]]& ), ButtonSource -> ButtonContents, 
         Evaluator -> None, Method -> "Preemptive"}]}, Closed]], 
   Cell[
    CellGroupData[{
      Cell[
      "Custom Styles", "Section", 
       CellChangeTimes -> {{3.646611660445352*^9, 3.646611669493331*^9}}], 
      Cell[
       StyleData["Notebook"], PageWidth -> 700, 
       PrintingOptions -> {
        "InnerOuterMargins" -> {35, 16}, "PaperOrientation" -> "Portrait", 
         "PaperSize" -> {504, 720}, 
         "PrintingMargins" -> {{20, 20}, {54, 54}}}, CellLabelAutoDelete -> 
       False, ShowSyntaxStyles -> True, 
       AutoStyleOptions -> {
        "FormattingErrorTooltips" -> False, "HighlightComments" -> False, 
         "HighlightEmphasizedSyntaxErrors" -> False, 
         "HighlightExcessArguments" -> False, "HighlightFormattingErrors" -> 
         False, "HighlightGlobalToLocalScopeConflicts" -> False, 
         "HighlightGraphicsCompatibilityProblems" -> False, 
         "HighlightLocalScopeConflicts" -> False, "HighlightMissingArguments" -> 
         False, "HighlightNoKernelPresent" -> False, 
         "HighlightOrderOfEvaluationConflicts" -> False, "HighlightStrings" -> 
         True, "HighlightSymbolContexts" -> False, "HighlightSymbolShadowing" -> 
         False, "HighlightSyntaxErrors" -> False, "HighlightUndefinedSymbols" -> 
         False, "HighlightUnknownOptions" -> False, 
         "HighlightUnwantedAssignments" -> False}, MenuSortingValue -> None, 
       GraphicsBoxOptions -> {ImageSize -> 240}, 
       Graphics3DBoxOptions -> {ImageSize -> 240}], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["Title"], CellMargins -> {{64, Inherited}, {50, 72}}, 
          MenuCommandKey -> None, FontFamily -> "Verdana", FontSize -> 42, 
          FontWeight -> "Bold", FontColor -> GrayLevel[0.4]], 
         Cell[
          StyleData["Title", "Printout"], 
          CellMargins -> {{64, Inherited}, {50, 72}}]}, Closed]], 
      Cell[
       StyleData["Chapter"], MenuCommandKey -> None], 
      Cell[
       StyleData["Subchapter"], MenuCommandKey -> None], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["Section"], CellFrame -> {{0, 0}, {0, 0}}, CellDingbat -> 
          Cell[
            TextData[
             CounterBox["Section"], 
             StyleBox[
             "|\[NegativeThinSpace]", FontColor -> 
              RGBColor[
               0.9019607843137255, 0.4117647058823529, 0.027450980392156862`],
               FontFamily -> "Courier", FontSize -> 36, FontWeight -> Plain]],
             "SectionNumber"], CellMargins -> {{96, Inherited}, {12, 44}}, 
          Evaluatable -> True, CellGroupingRules -> {"SectionGrouping", 60}, 
          PageBreakAbove -> True, ShowCellLabel -> False, 
          CellFrameLabelMargins -> {{2, Inherited}, {Inherited, Inherited}}, 
          CellChangeTimes -> {3.652728456208679*^9, 3.652728527108994*^9}, 
          CounterIncrements -> "Section", 
          CounterAssignments -> {{"Subsection", 0}, {"Subsubsection", 0}, {
            "Exercise", 0}}, FontFamily -> "Source Sans Pro Semibold", 
          FontSize -> 26, FontSlant -> "Plain", FontColor -> 
          RGBColor[
           0.9019607843137255, 0.4117647058823529, 0.027450980392156862`], 
          InterpretationBoxOptions -> {Editable -> True}], 
         Cell[
          StyleData["Section", "Printout"], 
          CellMargins -> {{96, Inherited}, {12, 2}}]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["SectionDoubleDigit"], CellFrame -> {{0, 0}, {0, 0}}, 
          CellDingbat -> Cell[
            TextData[
             CounterBox["Section"], 
             StyleBox[
             "|\[NegativeThinSpace]", FontColor -> 
              RGBColor[
               0.9019607843137255, 0.4117647058823529, 0.027450980392156862`],
               FontFamily -> "Courier", FontSize -> 36, FontWeight -> Plain]],
             "SectionNumber"], CellMargins -> {{112, Inherited}, {12, 44}}, 
          Evaluatable -> True, CellGroupingRules -> {"SectionGrouping", 60}, 
          PageBreakAbove -> True, ShowCellLabel -> False, 
          CellFrameLabelMargins -> {{2, Inherited}, {Inherited, Inherited}}, 
          CellChangeTimes -> {3.652728456208679*^9, 3.652728527108994*^9}, 
          CounterIncrements -> "Section", 
          CounterAssignments -> {{"Subsection", 0}, {"Subsubsection", 0}, {
            "Exercise", 0}}, FontFamily -> "Source Sans Pro Semibold", 
          FontSize -> 26, FontSlant -> "Plain", FontColor -> 
          RGBColor[
           0.9019607843137255, 0.4117647058823529, 0.027450980392156862`], 
          InterpretationBoxOptions -> {Editable -> True}], 
         Cell[
          StyleData["SectionDoubleDigit", "Printout"], 
          CellMargins -> {{112, Inherited}, {12, 2}}]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["SectionNumber"], CellBaseline -> Baseline, FontFamily -> 
          "Source Sans Pro Semibold", FontSize -> 26, FontColor -> 
          RGBColor[
           0.9019607843137255, 0.4117647058823529, 0.027450980392156862`]], 
         Cell[
          StyleData["SectionNumber", "Printout"]]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["SectionInline"], FontFamily -> 
          "Source Sans Pro Semibold", FontColor -> 
          RGBColor[
           0.9019607843137255, 0.4117647058823529, 0.027450980392156862`]], 
         Cell[
          StyleData["SectionInline", "Printout"]]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["SectionNoDingbat"], 
          CellMargins -> {{64, Inherited}, {12, 44}}, Evaluatable -> True, 
          CellGroupingRules -> {"SectionGrouping", 60}, PageBreakAbove -> 
          True, ShowCellLabel -> False, 
          CellFrameLabelMargins -> {{2, Inherited}, {Inherited, Inherited}}, 
          CellChangeTimes -> {3.652728456208679*^9, 3.652728527108994*^9}, 
          CounterIncrements -> "Section", 
          CounterAssignments -> {{"Subsection", 0}, {"Subsubsection", 0}, {
            "Exercise", 0}}, FontFamily -> "Source Sans Pro Semibold", 
          FontSize -> 26, FontSlant -> "Plain", FontColor -> 
          RGBColor[
           0.9019607843137255, 0.4117647058823529, 0.027450980392156862`], 
          InterpretationBoxOptions -> {Editable -> True}], 
         Cell[
          StyleData["SectionNoDingbat", "Printout"], 
          CellMargins -> {{64, Inherited}, {12, 2}}]}, Closed]], 
      Cell[
       StyleData["AnswerKeyNumberedSection"], 
       CellMargins -> {{64, Inherited}, {8, 28}}, Evaluatable -> True, 
       CellGroupingRules -> {"SectionGrouping", 60}, PageBreakAbove -> True, 
       ShowCellLabel -> False, 
       CellFrameLabelMargins -> {{2, Inherited}, {Inherited, Inherited}}, 
       CellChangeTimes -> {3.652728456208679*^9, 3.652728527108994*^9}, 
       CounterIncrements -> "Section", 
       CounterAssignments -> {{"Subsection", 0}, {"Subsubsection", 0}, {
         "Exercise", 0}}, FontFamily -> "Source Sans Pro Semibold", FontSize -> 
       18, FontSlant -> "Plain", FontColor -> 
       RGBColor[
        0.9019607843137255, 0.4117647058823529, 0.027450980392156862`], 
       InterpretationBoxOptions -> {Editable -> True}], 
      Cell[
       StyleData["AnswerKeySectionNumber"], CellBaseline -> Baseline, 
       FontFamily -> "Source Sans Pro Semibold", FontSize -> 18, FontColor -> 
       RGBColor[
        0.9019607843137255, 0.4117647058823529, 0.027450980392156862`]], 
      Cell[
       StyleData["IndexLinkGuide"], 
       CellMargins -> {{64, Inherited}, {48, 28}}, Evaluatable -> True, 
       CellGroupingRules -> {"SectionGrouping", 60}, PageBreakAbove -> True, 
       ShowCellLabel -> False, 
       CellFrameLabelMargins -> {{2, Inherited}, {Inherited, Inherited}}, 
       CellChangeTimes -> {3.652728456208679*^9, 3.652728527108994*^9}, 
       CounterIncrements -> "Section", 
       CounterAssignments -> {{"Subsection", 0}, {"Subsubsection", 0}, {
         "Exercise", 0}}, FontFamily -> "Source Sans Pro", FontSize -> 14, 
       FontSlant -> "Plain", FontColor -> 
       RGBColor[
        0.9019607843137255, 0.4117647058823529, 0.027450980392156862`], 
       InterpretationBoxOptions -> {Editable -> True}], 
      Cell[
       StyleData["Index"], MenuSortingValue -> 10000, FontFamily -> 
       "Source Sans Pro", FontSize -> 11], 
      Cell[
       StyleData["IndexSubentry"], MenuSortingValue -> 10000, FontFamily -> 
       "Source Sans Pro", FontSize -> 11], 
      Cell[
       StyleData["FunctionName"], MenuSortingValue -> 10000, FontFamily -> 
       "Source Sans Pro Semibold", FontWeight -> "Bold"], 
      Cell[
       StyleData["IndexColumn"], 
       CellMargins -> {{66, 0}, {Inherited, Inherited}}, TabSpacings -> {2.}, 
       MenuSortingValue -> 10000, FontFamily -> "Source Sans Pro", 
       GridBoxOptions -> {
        GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
         GridBoxItemSize -> {"Columns" -> {{25}}}, 
         GridBoxSpacings -> {"Columns" -> {{2}}}}], 
      Cell[
       StyleData["IndexSubsection"], 
       CellMargins -> {{64, Inherited}, {9, 28}}, 
       CellGroupingRules -> {"SectionGrouping", 40}, MenuSortingValue -> 
       10000, FontFamily -> "Source Sans Pro", FontSize -> 24], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["Subsection"], CellMargins -> {{64, Inherited}, {12, 32}},
           FontFamily -> "Source Sans Pro Semibold", FontSize -> 18, 
          FontColor -> 
          RGBColor[
           0.9019607843137255, 0.4117647058823529, 0.027450980392156862`]], 
         Cell[
          StyleData["Subsection", "Printout"], 
          CellMargins -> {{64, Inherited}, {12, 32}}]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["ResourcesSubsection"], 
          CellMargins -> {{64, Inherited}, {4, 16}}, FontFamily -> 
          "Source Sans Pro Semibold", FontSize -> 15, FontSlant -> "Plain", 
          FontColor -> GrayLevel[0]], 
         Cell[
          StyleData["ResourcesSubsection", "Printout"], 
          CellMargins -> {{64, Inherited}, {4, 16}}]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["Subsubsection"], 
          CellMargins -> {{64, Inherited}, {6, 12}}, FontFamily -> 
          "Source Sans Pro Semibold", FontSize -> 16, FontColor -> 
          RGBColor[
           0.9019607843137255, 0.4117647058823529, 0.027450980392156862`]], 
         Cell[
          StyleData["Subsubsection", "Printout"], 
          CellMargins -> {{64, Inherited}, {6, 12}}]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["VocabularySection"], PageWidth -> 700, 
          CellFrame -> {{0, 0}, {0, 3}}, 
          CellMargins -> {{64, Inherited}, {8, 24}}, 
          CellGroupingRules -> {"SectionGrouping", 60}, PageBreakBelow -> 
          False, CellFrameMargins -> {{8, 8}, {4, 6}}, CellFrameColor -> 
          RGBColor[0.901961, 0.411765, 0.027451], FontFamily -> 
          "Source Sans Pro", FontSize -> 18, FontSlant -> "Italic", FontColor -> 
          RGBColor[
           0.9019607843137255, 0.4117647058823529, 0.027450980392156862`], 
          GridBoxOptions -> {GridBoxAlignment -> {}}], 
         Cell[
          StyleData["VocabularySection", "Printout"], 
          CellMargins -> {{64, Inherited}, {8, 24}}]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["VocabularyTable", StyleDefinitions -> StyleData["Text"]],
           SpanMaxSize -> 1, FontFamily -> "Source Sans Pro Light", FontColor -> 
          GrayLevel[0.8], 
          GridBoxOptions -> {
           GridBoxAlignment -> {"Columns" -> {{Left}}}, 
            GridBoxDividers -> {"Columns" -> {{False}}, "Rows" -> {False, {
                 Directive[
                  Thickness[0.5], "VocabDivColor"]}, False}}, 
            GridBoxItemStyle -> {
             "Columns" -> {"VocabularyCode", Inherited, Inherited}, 
              "Rows" -> {{Automatic}}}, 
            GridBoxSpacings -> {
             "Columns" -> {{0, 1, 2, 1, 2}}, "Rows" -> {{1}}}}], 
         Cell[
          StyleData["VocabularyTable", "Printout"]]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData[
          "VocabularyTable3Column", StyleDefinitions -> StyleData["Text"]], 
          SpanMaxSize -> 1, FontFamily -> "Source Sans Pro Light", FontColor -> 
          GrayLevel[0.8], 
          GridBoxOptions -> {
           GridBoxAlignment -> {"Columns" -> {{Left}}}, 
            GridBoxDividers -> {"Columns" -> {{False}}, "Rows" -> {False, {
                 Directive[
                  Thickness[0.5], "VocabDivColor"]}, False}}, 
            GridBoxItemStyle -> {
             "Columns" -> {
               "VocabularyCode", Inherited, "VocabularyCode", Inherited, 
                Inherited}, "Rows" -> {{Automatic}}}, 
            GridBoxSpacings -> {
             "Columns" -> {{0, 1, 2, 1, 2}}, "Rows" -> {{1}}}}], 
         Cell[
          StyleData["VocabularyTable3Column", "Printout"]]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["VocabularyText"], FontFamily -> "Source Sans Pro", 
          FontSize -> 14, FontWeight -> "Plain", FontSlant -> "Plain", 
          FontColor -> GrayLevel[0.25]], 
         Cell[
          StyleData["VocabularyText", "Printout"], 
          CellMargins -> {{66, 10}, {7, 7}}]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["VocabularyCode", StyleDefinitions -> StyleData["Text"]], 
          Deletable -> False, FontFamily -> "Source Sans Pro", FontSize -> 14,
           FontWeight -> "Bold", FontColor -> GrayLevel[0.25], 
          GridBoxOptions -> {
           GridBoxAlignment -> {"Columns" -> {{Left}}}, 
            GridBoxDividers -> {
             "Columns" -> {{False}}, "ColumnsIndexed" -> {}, 
              "Rows" -> {True, {True}, True}, "RowsIndexed" -> {}}}], 
         Cell[
          StyleData["VocabularyCode", "Printout"], FontColor -> 
          GrayLevel[0.25]]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["VocabDivColor"], FontColor -> GrayLevel[0.8]], 
         Cell[
          StyleData["VocabDivColor", "Printout"]]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["ExerciseSection"], PageWidth -> 700, 
          CellFrame -> {{0, 0}, {0, 3}}, 
          CellMargins -> {{64, Inherited}, {8, 30}}, Evaluatable -> True, 
          CellGroupingRules -> {"SectionGrouping", 60}, PageBreakBelow -> 
          False, ShowCellLabel -> False, CellFrameMargins -> {{8, 8}, {4, 6}},
           CellFrameColor -> RGBColor[0.901961, 0.411765, 0.027451], 
          CounterAssignments -> {{"Subsection", 0}, {"Subsubsection", 0}, {
            "Exercise", 0}}, FontFamily -> "Source Sans Pro", FontSize -> 18, 
          FontSlant -> "Italic", FontColor -> 
          RGBColor[
           0.9019607843137255, 0.4117647058823529, 0.027450980392156862`], 
          GridBoxOptions -> {GridBoxAlignment -> {}}], 
         Cell[
          StyleData["ExerciseSection", "Printout"], 
          CellMargins -> {{64, Inherited}, {8, 30}}]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["Exercise"], PageWidth -> 700, CellDingbat -> Cell[
            TextData[{"  ", 
              CounterBox["Section"], ".", 
              CounterBox["Exercise"]}], "ExerciseNumber", FontColor -> 
            RGBColor[
             0.9019607843137255, 0.4117647058823529, 0.027450980392156862`]], 
          ShowGroupOpener -> True, CellMargins -> {{108, Inherited}, {4, 8}}, 
          CellGroupingRules -> {"SectionGrouping", 67}, CounterIncrements -> 
          "Exercise", MenuSortingValue -> 10020, MenuCommandKey -> "2", 
          FontFamily -> "Source Sans Pro", FontSize -> 14, FontWeight -> 
          "Plain", FontSlant -> "Plain", FontColor -> GrayLevel[0.25]], 
         Cell[
          StyleData["Exercise", "Printout"], ShowGroupOpener -> False, 
          CellMargins -> {{110, Inherited}, {4, 8}}]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["ExerciseNumber"], FontFamily -> "Source Sans Pro", 
          FontSize -> 14, FontWeight -> "Bold", FontColor -> GrayLevel[0.25]], 
         Cell[
          StyleData["ExerciseNumber", "Printout"]]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["ExerciseSubsection"], PageWidth -> 500, 
          CellFrame -> {{False, False}, {1, False}}, 
          CellMargins -> {{64, Inherited}, {8, 18}}, 
          CellGroupingRules -> {"SectionGrouping", 60}, CellFrameColor -> 
          RGBColor[0.65, 0.6, 0.6], FontFamily -> "Source Sans Pro", FontSize -> 
          18, FontSlant -> "Italic", FontColor -> RGBColor[0.65, 0.6, 0.6]], 
         Cell[
          StyleData["ExerciseSubsection", "Printout"], 
          CellFrame -> {{False, False}, {1, False}}, CellFrameColor -> 
          RGBColor[0.65, 0.6, 0.6]]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["ExerciseNote"], PageWidth -> 700, 
          CellMargins -> {{64, Inherited}, {4, 8}}, PageBreakBelow -> False, 
          MenuSortingValue -> 10050, FontFamily -> "Source Sans Pro", 
          FontSize -> 14, FontWeight -> "Plain", FontSlant -> "Plain", 
          FontColor -> GrayLevel[0.25], $CellContext`ReturnCreatesNewCell -> 
          True], 
         Cell[
          StyleData["ExerciseNote", "Printout"], 
          CellMargins -> {{64, Inherited}, {4, 8}}]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["QASection"], PageWidth -> 700, 
          CellFrame -> {{0, 0}, {0, 3}}, 
          CellMargins -> {{64, Inherited}, {8, 30}}, 
          CellGroupingRules -> {"SectionGrouping", 60}, PageBreakBelow -> 
          False, CellFrameMargins -> {{8, 8}, {4, 6}}, CellFrameColor -> 
          RGBColor[0.901961, 0.411765, 0.027451], 
          CounterAssignments -> {{"Subsection", 0}, {"Subsubsection", 0}, {
            "Question", 0}}, FontFamily -> "Source Sans Pro", FontSize -> 18, 
          FontSlant -> "Italic", FontColor -> 
          RGBColor[
           0.9019607843137255, 0.4117647058823529, 0.027450980392156862`], 
          GridBoxOptions -> {GridBoxAlignment -> {}}], 
         Cell[
          StyleData["QASection", "Printout"], 
          CellMargins -> {{64, Inherited}, {8, 30}}]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["Question"], PageWidth -> 700, 
          CellMargins -> {{64, Inherited}, {2, 12}}, PageBreakBelow -> False, 
          CounterIncrements -> "Question", MenuSortingValue -> 10030, 
          MenuCommandKey -> "3", FontFamily -> "Source Sans Pro", FontSize -> 
          14, FontWeight -> "Bold", FontSlant -> 
          "Plain", $CellContext`ReturnCreatesNewCell -> 
          True, $CellContext`DefaultReturnCreatedCellStyle -> "Answer"], 
         Cell[
          StyleData["Question", "Printout"], 
          CellMargins -> {{65, Inherited}, {2, 12}}]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["Answer"], PageWidth -> 700, 
          CellMargins -> {{66, 10}, {4, 1}}, LineSpacing -> {1.125, 1., 2.}, 
          MenuSortingValue -> 10032, FontFamily -> "Source Sans Pro", 
          FontSize -> 14, FontWeight -> "Plain", FontSlant -> "Plain", 
          FontColor -> GrayLevel[0.25], $CellContext`ReturnCreatesNewCell -> 
          True, $CellContext`DefaultReturnCreatedCellStyle -> "Question"], 
         Cell[
          StyleData["Answer", "Printout"], 
          CellMargins -> {{66, 10}, {4, 1}}]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["QuestionNumber"], FontFamily -> "Source Sans Pro", 
          FontSize -> 14, FontWeight -> "Bold", FontColor -> GrayLevel[0.25]], 
         Cell[
          StyleData["QuestionNumber", "Printout"]]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["TechNoteSection"], PageWidth -> 700, 
          CellFrame -> {{0, 0}, {0, 3}}, 
          CellMargins -> {{64, Inherited}, {8, 30}}, 
          CellGroupingRules -> {"SectionGrouping", 60}, PageBreakBelow -> 
          False, CellFrameMargins -> {{8, 8}, {4, 6}}, CellFrameColor -> 
          RGBColor[0.901961, 0.411765, 0.027451], FontFamily -> 
          "Source Sans Pro", FontSize -> 18, FontSlant -> "Italic", FontColor -> 
          RGBColor[
           0.9019607843137255, 0.4117647058823529, 0.027450980392156862`], 
          GridBoxOptions -> {GridBoxAlignment -> {}}], 
         Cell[
          StyleData["TechNoteSection", "Printout"], 
          CellMargins -> {{64, Inherited}, {8, 30}}]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["TechNote"], PageWidth -> 700, CellDingbat -> Cell[
            TextData[{"\[FilledSmallSquare]"}], FontSize -> 12, FontColor -> 
            GrayLevel[0.5]], CellMargins -> {{78, Inherited}, {4, 8}}, 
          CellChangeTimes -> {{3.651515120816633*^9, 3.651515125814807*^9}, 
            3.6515155174947033`*^9}, LineSpacing -> {1.25, 1., 2.}, 
          MenuSortingValue -> 10040, FontFamily -> "Source Sans Pro", 
          FontSize -> 14, FontWeight -> "Plain", FontSlant -> "Plain", 
          FontColor -> GrayLevel[0.25], $CellContext`ReturnCreatesNewCell -> 
          True], 
         Cell[
          StyleData["TechNote", "Printout"], 
          CellMargins -> {{82, Inherited}, {4, 8}}]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["MoreExploreSection"], PageWidth -> 700, 
          CellFrame -> {{0, 0}, {0, 3}}, 
          CellMargins -> {{64, Inherited}, {8, 30}}, 
          CellGroupingRules -> {"SectionGrouping", 60}, PageBreakBelow -> 
          False, CellFrameMargins -> {{8, 8}, {4, 6}}, CellFrameColor -> 
          RGBColor[0.901961, 0.411765, 0.027451], FontFamily -> 
          "Source Sans Pro", FontSize -> 18, FontSlant -> "Italic", FontColor -> 
          RGBColor[
           0.9019607843137255, 0.4117647058823529, 0.027450980392156862`], 
          GridBoxOptions -> {GridBoxAlignment -> {}}], 
         Cell[
          StyleData["MoreExploreSection", "Printout"], 
          CellMargins -> {{64, Inherited}, {8, 30}}]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["MoreExplore"], PageWidth -> 700, 
          CellMargins -> {{64, Inherited}, {4, 8}}, PageBreakBelow -> False, 
          MenuSortingValue -> 10050, FontFamily -> "Source Sans Pro", 
          FontSize -> 14, FontWeight -> "Plain", FontSlant -> "Plain", 
          FontColor -> GrayLevel[0], $CellContext`ReturnCreatesNewCell -> 
          True], 
         Cell[
          StyleData["MoreExplore", "Printout"], 
          CellMargins -> {{64, Inherited}, {4, 8}}]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["MoreExploreShortURL"], 
          CellMargins -> {{64, Inherited}, {4, 8}}, PageBreakBelow -> False, 
          FontFamily -> "Source Sans Pro Light", FontSize -> 14, FontSlant -> 
          "Plain", FontColor -> GrayLevel[0]], 
         Cell[
          StyleData["MoreExploreShortURL", "Printout"], 
          CellMargins -> {{64, Inherited}, {4, 8}}]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["Text"], CellMargins -> {{66, 10}, {4, 14}}, FontFamily -> 
          "Baskerville", FontSize -> 18, FontColor -> 
          GrayLevel[0], $CellContext`ReturnCreatesNewCell -> True], 
         Cell[
          StyleData["Text", "Printout"], CellMargins -> {{66, 10}, {7, 7}}]}, 
        Closed]], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["ResourcesText"], CellMargins -> {{66, 10}, {2, 0}}, 
          FontFamily -> "Source Sans Pro", FontSize -> 14, FontWeight -> 
          "Plain", FontSlant -> "Plain", FontColor -> 
          GrayLevel[0], $CellContext`ReturnCreatesNewCell -> True], 
         Cell[
          StyleData["ResourcesText", "Printout"], 
          CellMargins -> {{66, 10}, {2, 0}}]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["ResourcesLink"], CellMargins -> {{66, 10}, {2, 0}}, 
          FontFamily -> "Source Sans Pro", FontSize -> 14, FontWeight -> 
          "Plain", FontSlant -> "Italic", FontColor -> 
          GrayLevel[0], $CellContext`ReturnCreatesNewCell -> True], 
         Cell[
          StyleData["ResourcesLink", "Printout"], 
          CellMargins -> {{66, 10}, {2, 0}}]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["CodeCaption"], CellFrame -> {{0, 0}, {0, 0}}, 
          CellMargins -> {{66, 10}, {4, 12}}, PageBreakBelow -> False, 
          CellFrameColor -> GrayLevel[0.4], MenuSortingValue -> 10010, 
          MenuCommandKey -> "1", FontFamily -> "Source Sans Pro", FontSize -> 
          16, FontColor -> GrayLevel[0.25]], 
         Cell[
          StyleData["CodeCaption", "Printout"], 
          CellMargins -> {{66, 10}, {4, 12}}]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["Input"], CellMargins -> {{99, 10}, {3, 7}}, SpanMaxSize -> 
          1, FontSize -> 15], 
         Cell[
          StyleData["Input", "Printout"], CellMargins -> {{99, 10}, {3, 7}}]},
         Closed]], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["Output"], CellMargins -> {{99, 10}, {14, 7}}, FontSize -> 
          15], 
         Cell[
          StyleData["Output", "Printout"], 
          CellMargins -> {{99, 10}, {14, 7}}]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["InputOnly"], CellMargins -> {{99, 10}, {25, 10}}, 
          SpanMaxSize -> 1, MenuSortingValue -> 1500, FontSize -> 15], 
         Cell[
          StyleData["InputOnly", "Printout"], 
          CellMargins -> {{99, 10}, {15, 10}}]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["CellLabel"], 
          CellLabelMargins -> {{12, Inherited}, {Inherited, Inherited}}, 
          LanguageCategory -> None, StyleMenuListing -> None, FontFamily -> 
          "Helvetica Neue", FontSize -> 9, FontWeight -> "Plain", FontSlant -> 
          "Plain", FontColor -> GrayLevel[0.5]], 
         Cell[
          StyleData["CellLabel", "Printout"], FontSize -> 8, FontColor -> 
          GrayLevel[0.5]]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["Message"], Editable -> False, 
          CellMargins -> {{66, Inherited}, {Inherited, Inherited}}, 
          CellGroupingRules -> "OutputGrouping", TextClipboardType -> 
          "PlainText", PageBreakWithin -> False, GroupPageBreakWithin -> 
          False, GeneratedCell -> True, CellAutoOverwrite -> True, 
          ShowCellLabel -> False, DefaultFormatType -> 
          DefaultOutputFormatType, ContextMenu -> 
          FEPrivate`FrontEndResource["ContextMenus", "Output"], 
          ShowAutoStyles -> False, ShowSyntaxStyles -> False, 
          AutoStyleOptions -> {
           "StringStyle" -> None, "SyntaxErrorStyle" -> None}, 
          HyphenationOptions -> {"HyphenationCharacter" -> "\[Continuation]"},
           AutoItalicWords -> {}, AutoQuoteCharacters -> {}, 
          PasteAutoQuoteCharacters -> {}, LanguageCategory -> None, 
          FormatType -> InputForm, ShowStringCharacters -> False, 
          CounterIncrements -> "Message", MenuSortingValue -> 1600, 
          StyleMenuListing -> None, FontFamily :> 
          CurrentValue["PanelFontFamily"], FontSize -> 11, FontColor -> 
          RGBColor[0.5072, 0.16933, 0.15221], $CellContext`StripStyleOnPaste -> 
          True], 
         Cell[
          StyleData["Message", "Printout"], 
          CellMargins -> {{100, Inherited}, {Inherited, Inherited}}, 
          CellFrameLabels -> {{None, None}, {None, None}}, FontColor -> 
          GrayLevel[0]]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["ExerciseInput", StyleDefinitions -> StyleData["Input"]], 
          CellMargins -> {{88, 10}, {4, 7}}, ShowCellLabel -> False, 
          SpanMaxSize -> 1, FontSize -> 
          14, $CellContext`GeneratedCellStyles -> {
           "Output" -> "ExerciseOutput"}], 
         Cell[
          StyleData["ExerciseInput", "Printout"], 
          CellMargins -> {{88, 10}, {4, 7}}]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData[
          "ExerciseOutput", StyleDefinitions -> StyleData["Output"]], 
          CellMargins -> {{88, 10}, {10, 4}}, ShowCellLabel -> False, 
          FontSize -> 14], 
         Cell[
          StyleData["ExerciseOutput", "Printout"], 
          CellMargins -> {{88, 10}, {10, 4}}]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["Picture"], CellMargins -> {{66, 10}, {10, 10}}, 
          CellGroupingRules -> "GraphicsGrouping", StyleMenuListing -> None], 
         
         Cell[
          StyleData["Picture", "Printout"], 
          CellMargins -> {{66, 10}, {8, 8}}]}, Closed]], 
      Cell[
       StyleData["ExerciseSummaryCell"], PageWidth -> 700, CellFrame -> 0, 
       CellMargins -> {{64, Inherited}, {8, 10}}, 
       CellGroupingRules -> {"SectionGrouping", 64}, PageBreakBelow -> False, 
       ShowCellLabel -> False, CellFrameMargins -> 0, ShowStringCharacters -> 
       False, FontFamily -> "Source Sans Pro", FontSize -> 18, FontColor -> 
       RGBColor[1, 1, 1], 
       GridBoxOptions -> {GridBoxBackground -> {"Columns" -> {{
              RGBColor[0.990997, 0.539528, 0.155779], 
              RGBColor[0.989487, 0.434699, 0.0320439]}}, "Rows" -> {{None}}}, 
         GridBoxItemSize -> {"Columns" -> {
             Scaled[0.7], 
             Scaled[0.3]}, "Rows" -> {{Automatic}}}}], 
      Cell[
       StyleData["ExerciseSummaryHeading"], ShowStringCharacters -> False, 
       FontFamily -> "Source Sans Pro", FontSize -> 18, FontColor -> 
       RGBColor[1, 1, 1]], 
      Cell[
       StyleData["ExerciseSummarySubheading"], ShowStringCharacters -> False, 
       FontFamily -> "Source Sans Pro", FontSize -> 15, FontColor -> 
       RGBColor[1., 0.9294117647058824, 0.7215686274509804]], 
      Cell[
       StyleData["ExercisePreviewButtonText"], ShowStringCharacters -> False, 
       FontFamily -> "Source Sans Pro", FontSize -> 14, FontSlant -> "Plain", 
       FontColor -> RGBColor[0.6, 0.6, 0.6]], 
      Cell[
       StyleData["ExercisePreviewButtonTextHighlight"], ShowStringCharacters -> 
       False, FontFamily -> "Source Sans Pro", FontSize -> 14, FontSlant -> 
       "Plain", FontColor -> 
       RGBColor[
        0.9019607843137255, 0.4117647058823529, 0.027450980392156862`]]}, 
     Open]], 
   Cell[
    CellGroupData[{
      Cell[
      "Inline and special formatting", "Section", 
       CellChangeTimes -> {{3.646681732592888*^9, 3.646681749414035*^9}}], 
      Cell[
       StyleData["Graphics"], MenuSortingValue -> None], 
      Cell[
       StyleData["Graphics3D"], MenuSortingValue -> None], 
      Cell[
       StyleData["StandardForm"], 
       InputAutoReplacements -> {
        "->" -> "\[Rule]", ":>" -> "\[RuleDelayed]", "<=" -> "\[LessEqual]", 
         ">=" -> "\[GreaterEqual]", "!=" -> "\[NotEqual]", "==" -> "\[Equal]",
          "@>" -> "\\[InlinePart]", "<->" -> "\[UndirectedEdge]", ParentList},
        LineSpacing -> {1.25, 0, 2}, SingleLetterItalics -> False, 
       StyleMenuListing -> None, FontFamily -> "Source Sans Pro", 
       PrivateFontOptions -> {"OperatorSubstitution" -> True}], 
      Cell[
       StyleData["OutputForm"], PageWidth -> DirectedInfinity[1], 
       TextAlignment -> Left, LineSpacing -> {0.6, 1}, 
       AutoQuoteCharacters -> {}, PasteAutoQuoteCharacters -> {}, 
       StyleMenuListing -> None, FontFamily -> "Source Sans Pro", 
       PrivateFontOptions -> {"OperatorSubstitution" -> True}], 
      Cell[
       StyleData["InputForm"], PageWidth -> DirectedInfinity[1], 
       InputAutoReplacements -> {}, AllowInlineCells -> False, Hyphenation -> 
       False, AutoQuoteCharacters -> {}, PasteAutoQuoteCharacters -> {}, 
       AutoSpacing -> False, NumberMarks -> True, AutoNumberFormatting -> 
       False, StyleMenuListing -> None, FontFamily -> "Source Sans Pro", 
       PrivateFontOptions -> {"OperatorSubstitution" -> True}], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["DetailsLink"], FontFamily -> "Source Sans Pro", FontSize :> 
          If[CurrentValue[
              EvaluationCell[], "FontFamily"] === "Source Sans Pro", 
            Inherited, 
            If[CurrentValue[
               EvaluationCell[], "FontFamily"] === "WolframCodeSans", 
             Inherited, Inherited 0.9]], FontColor -> GrayLevel[0], 
          ButtonBoxOptions -> {
           ButtonFunction :> (
             Function[$CellContext`t, 
              NotebookFind[$CellContext`t, "Notes", All, CellStyle]; 
              NotebookFind[$CellContext`t, "NotesSection", All, CellStyle, 
                AutoScroll -> Top]][
              Documentation`HelpLookup[
               StringJoin["ref/", #]]]& ), ButtonSource -> ButtonContents, 
            Evaluator -> Automatic}], 
         Cell[
          StyleData["DetailsLink", "Printout"], FontFamily -> 
          "Source Sans Pro", FontSize :> If[CurrentValue[
              EvaluationCell[], "FontFamily"] === "Source Sans Pro", 
            Inherited, 
            If[CurrentValue[
               EvaluationCell[], "FontFamily"] === "WolframCodeSans", 
             Inherited, Inherited 0.88]], FontColor -> GrayLevel[0]]}, 
        Closed]], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["LinkAlt"], FontFamily -> "Source Sans Pro", FontSize :> 
          If[CurrentValue[
              EvaluationCell[], "FontFamily"] === "Source Sans Pro", 
            Inherited, 
            If[CurrentValue[
               EvaluationCell[], "FontFamily"] === "WolframCodeSans", 
             Inherited, Inherited 0.9]], FontColor -> GrayLevel[0]], 
         Cell[
          StyleData["LinkAlt", "Printout"], FontFamily -> "Source Sans Pro", 
          FontSize :> If[CurrentValue[
              EvaluationCell[], "FontFamily"] === "Source Sans Pro", 
            Inherited, 
            If[CurrentValue[
               EvaluationCell[], "FontFamily"] === "WolframCodeSans", 
             Inherited, Inherited 0.88]], FontColor -> GrayLevel[0]]}, 
        Closed]], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["Hyperlink"], MenuSortingValue -> None, FontColor -> 
          RGBColor[0.3, 0.35, 0.5]], 
         Cell[
          StyleData["Hyperlink", "Printout"]]}, Closed]], 
      Cell[
       StyleData[
       "IndexNavigationLink", StyleDefinitions -> StyleData["Hyperlink"]], 
       MenuSortingValue -> None, FontColor -> 
       RGBColor[
        0.9019607843137255, 0.4117647058823529, 0.027450980392156862`]], 
      Cell[
       StyleData["Crosslink"], 
       ButtonBoxOptions -> {ButtonFunction :> (FrontEndExecute[{
            
            NotebookLocate[#2, "OpenInNewWindow" -> 
             CurrentValue["HyperlinkModifierKey"]]}]& ), Evaluator -> None, 
         Method -> "Queued"}], 
      Cell[
       StyleData["VocabularyLink"], FontColor -> GrayLevel[0], 
       ButtonBoxOptions -> {ButtonFunction :> (FrontEndExecute[{
            
            NotebookLocate[#2, "OpenInNewWindow" -> 
             CurrentValue["HyperlinkModifierKey"]]}]& ), Evaluator -> None, 
         Method -> "Queued"}], 
      Cell[
       StyleData["InlineCode"], SpanMaxSize -> 1, FontColor -> GrayLevel[0]], 
      
      Cell[
       StyleData["InlineCodeText"], SpanMaxSize -> 1, FontFamily -> 
       "Source Sans Pro", FontSize -> 0.95 Inherited], 
      Cell[
       StyleData["NoLabel"], ShowCellLabel -> 
       False, $CellContext`GeneratedCellStyles -> {
        "Output" -> "ExerciseOutput"}], 
      Cell[
       StyleData["MenuName"], FontFamily -> "Verdana", FontWeight -> "Bold", 
       FontColor -> GrayLevel[0.286275]], 
      Cell[
       StyleData["KeyEvent"], CellFrame -> {{0.5, 0.5}, {0.5, 0.5}}, 
       CellFrameMargins -> {{2, 2}, {2, 2}}, CellFrameColor -> GrayLevel[0.7],
        FontFamily -> "Verdana", FontColor -> GrayLevel[0.4]], 
      Cell[
       StyleData["KeyEventDelimiter"], FontColor -> GrayLevel[0.5]], 
      Cell[
       CellGroupData[{
         Cell["Key Styles", "Subsubsection"], 
         Cell[
          StyleData["Key0"], 
          TemplateBoxOptions -> {DisplayFunction -> (FrameBox[
              TagBox[
               GridBox[{{
                  ItemBox[
                   
                   TemplateBox[{"\[ThickSpace]", #, "\[ThickSpace]"}, 
                    "RowDefault"], Background -> GrayLevel[1], StripOnInput -> 
                   False]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Center}}, "Rows" -> {{Baseline}}}, AutoDelete -> 
                False, GridBoxDividers -> {"Rows" -> {{None}}}, 
                GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{1.45}}},
                 GridBoxSpacings -> {"Columns" -> {{0}}}, 
                BaselinePosition -> {{1, 1}, Baseline}], "Grid"], 
              RoundingRadius -> 4, Background -> 
              GrayLevel[0.9333333333333333], 
              FrameMargins -> {{0, 0}, {-2, -2}}, FrameStyle -> {
                GrayLevel[0.8352941176470589], 
                AbsoluteThickness[1]}, BaselinePosition -> Baseline, 
              StripOnInput -> False]& )}], 
         Cell[
          StyleData["Key1"], 
          TemplateBoxOptions -> {DisplayFunction -> (FrameBox[
              TagBox[
               GridBox[{{
                  ItemBox[
                   
                   TemplateBox[{"\[ThickSpace]", #, "\[ThickSpace]"}, 
                    "RowDefault"], Background -> 
                   GrayLevel[0.9333333333333333], StripOnInput -> False], 
                  ItemBox[
                   
                   TemplateBox[{"\[ThickSpace]", #2, "\[ThickSpace]"}, 
                    "RowDefault"], Background -> GrayLevel[1], StripOnInput -> 
                   False]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Center}}, "Rows" -> {{Baseline}}}, AutoDelete -> 
                False, GridBoxDividers -> {
                 "ColumnsIndexed" -> {2 -> GrayLevel[0.8352941176470589]}, 
                  "Rows" -> {{None}}}, 
                GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{1.45}}},
                 GridBoxSpacings -> {"Columns" -> {{0}}}, 
                BaselinePosition -> {{1, 1}, Baseline}], "Grid"], 
              RoundingRadius -> 4, Background -> 
              GrayLevel[0.9333333333333333], 
              FrameMargins -> {{0, 0}, {-2, -2}}, FrameStyle -> {
                GrayLevel[0.8352941176470589], 
                AbsoluteThickness[1]}, BaselinePosition -> Baseline, 
              StripOnInput -> False]& )}], 
         Cell[
          StyleData["Key2"], 
          TemplateBoxOptions -> {DisplayFunction -> (FrameBox[
              TagBox[
               GridBox[{{
                  ItemBox[
                   
                   TemplateBox[{"\[ThickSpace]", #, "\[ThickSpace]"}, 
                    "RowDefault"], Background -> 
                   GrayLevel[0.9333333333333333], StripOnInput -> False], 
                  ItemBox[
                   
                   TemplateBox[{"\[ThickSpace]", #2, "\[ThickSpace]"}, 
                    "RowDefault"], Background -> 
                   GrayLevel[0.9333333333333333], StripOnInput -> False], 
                  ItemBox[
                   
                   TemplateBox[{"\[ThickSpace]", #3, "\[ThickSpace]"}, 
                    "RowDefault"], Background -> GrayLevel[1], StripOnInput -> 
                   False]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Center}}, "Rows" -> {{Baseline}}}, AutoDelete -> 
                False, GridBoxDividers -> {
                 "ColumnsIndexed" -> {
                   2 -> GrayLevel[0.8352941176470589], 3 -> 
                    GrayLevel[0.8352941176470589]}, "Rows" -> {{None}}}, 
                GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{1.45}}},
                 GridBoxSpacings -> {"Columns" -> {{0}}}, 
                BaselinePosition -> {{1, 1}, Baseline}], "Grid"], 
              RoundingRadius -> 4, Background -> 
              GrayLevel[0.9333333333333333], 
              FrameMargins -> {{0, 0}, {-2, -2}}, FrameStyle -> {
                GrayLevel[0.8352941176470589], 
                AbsoluteThickness[1]}, BaselinePosition -> Baseline, 
              StripOnInput -> False]& )}], 
         Cell[
          StyleData["Key3"], 
          TemplateBoxOptions -> {DisplayFunction -> (FrameBox[
              TagBox[
               GridBox[{{
                  ItemBox[
                   
                   TemplateBox[{"\[ThickSpace]", #, "\[ThickSpace]"}, 
                    "RowDefault"], Background -> 
                   GrayLevel[0.9333333333333333], StripOnInput -> False], 
                  ItemBox[
                   
                   TemplateBox[{"\[ThickSpace]", #2, "\[ThickSpace]"}, 
                    "RowDefault"], Background -> 
                   GrayLevel[0.9333333333333333], StripOnInput -> False], 
                  ItemBox[
                   
                   TemplateBox[{"\[ThickSpace]", #3, "\[ThickSpace]"}, 
                    "RowDefault"], Background -> 
                   GrayLevel[0.9333333333333333], StripOnInput -> False], 
                  ItemBox[
                   
                   TemplateBox[{"\[ThickSpace]", #4, "\[ThickSpace]"}, 
                    "RowDefault"], Background -> GrayLevel[1], StripOnInput -> 
                   False]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Center}}, "Rows" -> {{Baseline}}}, AutoDelete -> 
                False, GridBoxDividers -> {
                 "ColumnsIndexed" -> {
                   2 -> GrayLevel[0.8352941176470589], 3 -> 
                    GrayLevel[0.8352941176470589], 4 -> 
                    GrayLevel[0.8352941176470589]}, "Rows" -> {{None}}}, 
                GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{1.45}}},
                 GridBoxSpacings -> {"Columns" -> {{0}}}, 
                BaselinePosition -> {{1, 1}, Baseline}], "Grid"], 
              RoundingRadius -> 4, Background -> 
              GrayLevel[0.9333333333333333], 
              FrameMargins -> {{0, 0}, {-2, -2}}, FrameStyle -> {
                GrayLevel[0.8352941176470589], 
                AbsoluteThickness[1]}, BaselinePosition -> Baseline, 
              StripOnInput -> False]& )}]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell["Entity styles", "Subsubsection"], 
         Cell[
          StyleData["Entity"], ShowStringCharacters -> False, 
          TemplateBoxOptions -> {DisplayFunction -> (TooltipBox[
              FrameBox[
               PaneSelectorBox[{True -> GridBox[{{
                    
                    StyleBox[#, FontWeight -> "Bold", FontFamily -> 
                    "Source Sans Pro", FontColor -> 
                    RGBColor[0.395437, 0.20595, 0.061158]], 
                    StyleBox[
                    RowBox[{"(", #4, ")"}], FontFamily -> "Source Sans Pro", 
                    FontWeight -> "Plain", FontColor -> GrayLevel[0.65], 
                    Selectable -> False]}}, 
                   GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                   GridBoxSpacings -> {"Columns" -> {{0.2}}, "Rows" -> {{0}}},
                    BaselinePosition -> {1, 1}], False -> 
                 PaneBox[#, 
                   BaseStyle -> {
                    FontColor -> RGBColor[0.395437, 0.20595, 0.061158]}, 
                   BaselinePosition -> Baseline]}, 
                Dynamic[
                 CurrentValue[Evaluatable]], ImageSize -> Automatic, 
                BaselinePosition -> Baseline, 
                BaseStyle -> {FontFamily -> "Helvetica"}], FrameStyle -> 
               RGBColor[1., 0.504768, 0.], Background -> 
               RGBColor[1., 0.980392, 0.921569], 
               FrameMargins -> {{5, 5}, {1.5, 1.5}}, 
               ImageMargins -> {{2, 2}, {2, 2}}, BaselinePosition -> Baseline,
                RoundingRadius -> 4], #3, 
              BaseStyle -> {
               FontWeight -> "Plain", ShowStringCharacters -> False, 
                LineIndent -> 0, 
                PrivateFontOptions -> {"OperatorSubstitution" -> False}}]& ), 
            Editable -> False, InterpretationFunction -> (#2& )}], 
         Cell[
          StyleData["EntityFrameless"], ShowStringCharacters -> False, 
          TemplateBoxOptions -> {DisplayFunction -> (TooltipBox[
              PaneSelectorBox[{True -> GridBox[{{
                    
                    StyleBox[#, FontWeight -> "Bold", FontFamily -> 
                    "Source Sans Pro", FontColor -> 
                    RGBColor[0.395437, 0.20595, 0.061158]], 
                    StyleBox[
                    RowBox[{"(", #4, ")"}], FontFamily -> "Source Sans Pro", 
                    FontWeight -> "Plain", FontColor -> GrayLevel[0.65], 
                    Selectable -> False]}}, 
                  GridBoxItemSize -> {
                   "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                  GridBoxSpacings -> {"Columns" -> {{0.2}}, "Rows" -> {{0}}}, 
                  BaselinePosition -> {1, 1}], False -> 
                PaneBox[#, 
                  BaseStyle -> {
                   FontColor -> RGBColor[0.395437, 0.20595, 0.061158]}, 
                  BaselinePosition -> Baseline]}, 
               Dynamic[
                CurrentValue[Evaluatable]], ImageSize -> Automatic, 
               BaselinePosition -> Baseline, 
               BaseStyle -> {FontFamily -> "Helvetica"}], #3, 
              BaseStyle -> {
               ShowStringCharacters -> False, LineIndent -> 0, 
                PrivateFontOptions -> {
                 FontWeight -> "Plain", "OperatorSubstitution" -> False}}]& ),
             Editable -> False, InterpretationFunction -> (#2& )}], 
         Cell[
          StyleData["EntityFramelessHot"], ShowStringCharacters -> False, 
          TemplateBoxOptions -> {
           DisplayFunction -> (PaneSelectorBox[{True -> GridBox[{{
                   
                   StyleBox[#, FontWeight -> "Bold", FontFamily -> 
                    "Source Sans Pro", FontColor -> GrayLevel[0]], 
                   StyleBox[
                    RowBox[{"(", #4, ")"}], FontWeight -> "Plain", FontFamily -> 
                    "Source Sans Pro", FontColor -> GrayLevel[0], Selectable -> 
                    False]}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {"Columns" -> {{0.2}}, "Rows" -> {{0}}}, 
                 BaselinePosition -> {1, 1}], False -> 
               PaneBox[#, BaseStyle -> {FontColor -> GrayLevel[0]}, 
                 BaselinePosition -> Baseline]}, 
              Dynamic[
               CurrentValue[Evaluatable]], ImageSize -> Automatic, 
              BaselinePosition -> Baseline, 
              BaseStyle -> {
               FontWeight -> "Plain", FontFamily -> "Helvetica", 
                ShowStringCharacters -> False, LineIndent -> 0, 
                PrivateFontOptions -> {"OperatorSubstitution" -> False}}]& ), 
            Editable -> False, InterpretationFunction -> (#2& )}], 
         Cell[
          StyleData["EntityClass"], ShowStringCharacters -> False, 
          TemplateBoxOptions -> {DisplayFunction -> (TooltipBox[
              FrameBox[
               PaneSelectorBox[{True -> GridBox[{{
                    PaneBox[
                    DynamicBox[
                    FEPrivate`ImportImage[
                    
                    FrontEnd`ToFileName[{"Typeset", "Entity"}, 
                    "EntityClass.png"]], ImageSizeCache -> {8., {2., 6.}}], 
                    BaselinePosition -> Bottom], 
                    
                    StyleBox[#, FontWeight -> "Bold", FontFamily -> 
                    "Source Sans Pro", FontColor -> 
                    RGBColor[0.395437, 0.20595, 0.061158]], 
                    StyleBox[
                    RowBox[{"(", #4, ")"}], FontWeight -> "Plain", FontFamily -> 
                    "Source Sans Pro", FontColor -> GrayLevel[0.65], 
                    Selectable -> False]}}, 
                   GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                   GridBoxSpacings -> {"Columns" -> {{0.2}}, "Rows" -> {{0}}},
                    BaselinePosition -> {1, 2}], False -> GridBox[{{
                    PaneBox[
                    DynamicBox[
                    FEPrivate`ImportImage[
                    
                    FrontEnd`ToFileName[{"Typeset", "Entity"}, 
                    "EntityClass.png"]], ImageSizeCache -> {8., {2., 6.}}], 
                    BaselinePosition -> Bottom], 
                    
                    StyleBox[#, FontColor -> 
                    RGBColor[0.395437, 0.20595, 0.061158]]}}, 
                   GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                   GridBoxSpacings -> {"Columns" -> {{0.2}}, "Rows" -> {{0}}},
                    BaselinePosition -> {1, 2}]}, 
                Dynamic[
                 CurrentValue[Evaluatable]], ImageSize -> Automatic, 
                BaselinePosition -> Baseline, 
                BaseStyle -> {FontFamily -> "Helvetica"}], FrameStyle -> 
               RGBColor[1., 0.504768, 0.], Background -> 
               RGBColor[1., 0.980392, 0.921569], 
               FrameMargins -> {{5, 5}, {1.5, 1.5}}, 
               ImageMargins -> {{2, 2}, {2, 2}}, BaselinePosition -> Baseline,
                RoundingRadius -> 4], #3, 
              BaseStyle -> {
               FontWeight -> "Plain", ShowStringCharacters -> False, 
                LineIndent -> 0, 
                PrivateFontOptions -> {"OperatorSubstitution" -> False}}]& ), 
            Editable -> False, InterpretationFunction -> (#2& )}], 
         Cell[
          StyleData["EntityClassFrameless"], ShowStringCharacters -> False, 
          TemplateBoxOptions -> {DisplayFunction -> (TooltipBox[
              PaneSelectorBox[{True -> GridBox[{{
                    PaneBox[
                    DynamicBox[
                    FEPrivate`ImportImage[
                    
                    FrontEnd`ToFileName[{"Typeset", "Entity"}, 
                    "EntityClass.png"]], ImageSizeCache -> {8., {2., 6.}}], 
                    BaselinePosition -> Bottom], 
                    
                    StyleBox[#, FontWeight -> "Bold", FontFamily -> 
                    "Source Sans Pro", FontColor -> 
                    RGBColor[0.395437, 0.20595, 0.061158]], 
                    StyleBox[
                    RowBox[{"(", #4, ")"}], FontWeight -> "Plain", FontFamily -> 
                    "Source Sans Pro", FontColor -> GrayLevel[0.65], 
                    Selectable -> False]}}, 
                  GridBoxItemSize -> {
                   "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                  GridBoxSpacings -> {"Columns" -> {{0.2}}, "Rows" -> {{0}}}, 
                  BaselinePosition -> {1, 2}], False -> GridBox[{{
                    PaneBox[
                    DynamicBox[
                    FEPrivate`ImportImage[
                    
                    FrontEnd`ToFileName[{"Typeset", "Entity"}, 
                    "EntityClass.png"]], ImageSizeCache -> {8., {2., 6.}}], 
                    BaselinePosition -> Bottom], 
                    
                    StyleBox[#, FontColor -> 
                    RGBColor[0.395437, 0.20595, 0.061158]]}}, 
                  GridBoxItemSize -> {
                   "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                  GridBoxSpacings -> {"Columns" -> {{0.2}}, "Rows" -> {{0}}}, 
                  BaselinePosition -> {1, 2}]}, 
               Dynamic[
                CurrentValue[Evaluatable]], ImageSize -> Automatic, 
               BaselinePosition -> Baseline, 
               BaseStyle -> {FontFamily -> "Helvetica"}], #3, 
              BaseStyle -> {
               FontWeight -> "Plain", ShowStringCharacters -> False, 
                LineIndent -> 0, 
                PrivateFontOptions -> {"OperatorSubstitution" -> False}}]& ), 
            Editable -> False, InterpretationFunction -> (#2& )}], 
         Cell[
          StyleData["EntityClassFramelessHot"], ShowStringCharacters -> False,
           TemplateBoxOptions -> {
           DisplayFunction -> (PaneSelectorBox[{True -> GridBox[{{
                   PaneBox[
                    DynamicBox[
                    FEPrivate`ImportImage[
                    
                    FrontEnd`ToFileName[{"Typeset", "Entity"}, 
                    "EntityClass.png"]], ImageSizeCache -> {8., {2., 6.}}], 
                    BaselinePosition -> Bottom], 
                   
                   StyleBox[#, FontWeight -> "Bold", FontFamily -> 
                    "Source Sans Pro", FontColor -> GrayLevel[0]], 
                   StyleBox[
                    RowBox[{"(", #4, ")"}], FontWeight -> "Plain", FontFamily -> 
                    "Source Sans Pro", FontColor -> GrayLevel[0], Selectable -> 
                    False]}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {"Columns" -> {{0.2}}, "Rows" -> {{0}}}, 
                 BaselinePosition -> {1, 2}], False -> GridBox[{{
                   PaneBox[
                    DynamicBox[
                    FEPrivate`ImportImage[
                    
                    FrontEnd`ToFileName[{"Typeset", "Entity"}, 
                    "EntityClass.png"]], ImageSizeCache -> {8., {2., 6.}}], 
                    BaselinePosition -> Bottom], 
                   StyleBox[#, FontColor -> GrayLevel[0]]}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {"Columns" -> {{0.2}}, "Rows" -> {{0}}}, 
                 BaselinePosition -> {1, 2}]}, 
              Dynamic[
               CurrentValue[Evaluatable]], ImageSize -> Automatic, 
              BaselinePosition -> Baseline, 
              BaseStyle -> {
               FontWeight -> "Plain", FontFamily -> "Helvetica", 
                ShowStringCharacters -> False, LineIndent -> 0, 
                PrivateFontOptions -> {"OperatorSubstitution" -> False}}]& ), 
            Editable -> False, InterpretationFunction -> (#2& )}], 
         Cell[
          StyleData["EntityProperty"], ShowStringCharacters -> False, 
          TemplateBoxOptions -> {DisplayFunction -> (TooltipBox[
              FrameBox[
               
               PaneBox[#, 
                BaseStyle -> {
                 FontSlant -> Italic, FontWeight -> Plain, FontFamily -> 
                  "Source Sans Pro", FontColor -> 
                  RGBColor[0.395437, 0.20595, 0.061158]}, BaselinePosition -> 
                Baseline], FrameStyle -> 
               RGBColor[0.94227, 0.703639, 0.033387], Background -> 
               RGBColor[1., 0.980392, 0.921569], 
               FrameMargins -> {{5, 5}, {1.5, 1.5}}, 
               ImageMargins -> {{2, 2}, {2, 2}}, BaselinePosition -> Baseline,
                RoundingRadius -> 4], #3, 
              BaseStyle -> {
               FontWeight -> "Plain", ShowStringCharacters -> False, 
                LineIndent -> 0, 
                PrivateFontOptions -> {"OperatorSubstitution" -> False}}]& ), 
            Editable -> False, InterpretationFunction -> (#2& )}], 
         Cell[
          StyleData["EntityPropertyClass"], ShowStringCharacters -> False, 
          TemplateBoxOptions -> {DisplayFunction -> (TooltipBox[
              FrameBox[
               PaneBox[
                GridBox[{{
                   PaneBox[
                    DynamicBox[
                    FEPrivate`ImportImage[
                    
                    FrontEnd`ToFileName[{"Typeset", "Entity"}, 
                    "EntityClass.png"]], ImageSizeCache -> {8., {2., 6.}}], 
                    BaselinePosition -> Bottom], #}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {"Columns" -> {{0.2}}, "Rows" -> {{0}}}, 
                 BaselinePosition -> {1, 2}], 
                BaseStyle -> {
                 FontSlant -> Italic, FontWeight -> Plain, FontFamily -> 
                  "Source Sans Pro", FontColor -> 
                  RGBColor[0.395437, 0.20595, 0.061158]}, BaselinePosition -> 
                Baseline], FrameStyle -> 
               RGBColor[0.94227, 0.703639, 0.033387], Background -> 
               RGBColor[1., 0.980392, 0.921569], 
               FrameMargins -> {{5, 5}, {1.5, 1.5}}, 
               ImageMargins -> {{2, 2}, {2, 2}}, BaselinePosition -> Baseline,
                RoundingRadius -> 4], #3, 
              BaseStyle -> {
               FontWeight -> "Plain", ShowStringCharacters -> False, 
                LineIndent -> 0, 
                PrivateFontOptions -> {"OperatorSubstitution" -> False}}]& ), 
            Editable -> False, InterpretationFunction -> (#2& )}], 
         Cell[
          StyleData["EntityValue"], ShowStringCharacters -> False, 
          TemplateBoxOptions -> {DisplayFunction -> (FrameBox[
              
              GridBox[{{#, #2}}, GridBoxAlignment -> {"Rows" -> {{Baseline}}},
                GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}}, 
               GridBoxSpacings -> {"Columns" -> {{0}}}, 
               BaselinePosition -> {1, 1}], Background -> 
              RGBColor[{0.9921568627450981, 0.9529411764705882, 
                0.8509803921568627}], BaselinePosition -> Baseline, 
              FrameMargins -> {{1, 1}, {1, 1}}, ImageMargins -> 2, FrameStyle -> 
              RGBColor[{0.9333333333333333, 0.8470588235294118, 
                0.5529411764705883}], RoundingRadius -> 5]& )}]}, Closed]]}, 
     Closed]]}, Visible -> False, FrontEndVersion -> 
  "11.3 for Mac OS X x86 (32-bit, 64-bit Kernel) (March 5, 2018)", 
  StyleDefinitions -> "StylesheetFormatting.nb"]
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{
 "p:193"->{
  Cell[652, 23, 318, 9, 87, "SectionDoubleDigit",ExpressionUUID->"2c7f981f-69c5-4045-984c-91a129b56a64",
   CounterAssignments->{{"Section", 31}, {"Subsection", 0}, {"Subsubsection", 0}, {"Exercise", 0}},
   CellTags->"p:193"]},
 "i:1"->{
  Cell[973, 34, 427, 15, 87, "Text",ExpressionUUID->"1fba5147-7c0c-4899-b108-611fb6716846",
   CellTags->"i:1"]},
 "i:2"->{
  Cell[1403, 51, 204, 8, 87, "Text",ExpressionUUID->"067e3a6d-af7a-4b14-92e2-1ac86a02a48b",
   CellTags->"i:2"]},
 "i:3"->{
  Cell[4761, 205, 405, 13, 87, "Text",ExpressionUUID->"1647e429-936d-480e-97b8-4a626c0e1b3c",
   CellTags->"i:3"]},
 "i:4"->{
  Cell[9079, 382, 295, 12, 87, "CodeCaption",ExpressionUUID->"91b7ec99-5228-4d76-bfb0-ffcfa462f5c3",
   CellTags->"i:4"]},
 "LastCellOfAPage"->{
  Cell[10088, 423, 290, 11, 87, "Output",ExpressionUUID->"ac62a52d-de79-46a7-a8bc-9d324b82b138",
   Evaluatable->False,
   CellTags->"LastCellOfAPage"],
  Cell[19993, 827, 6123, 172, 87, "Output",ExpressionUUID->"3fd2f72f-1819-4c75-b5bd-17f3a2cc9376",
   Evaluatable->False,
   CellTags->"LastCellOfAPage"],
  Cell[81198, 2638, 392, 10, 87, "Text",ExpressionUUID->"9bbe3477-0ad9-40b4-9779-a196f123b0d3",
   CellTags->"LastCellOfAPage"],
  Cell[375327, 9444, 250, 6, 87, "Answer",ExpressionUUID->"d58e8657-171f-4708-8f21-1adfc5ef7e09",
   CellTags->"LastCellOfAPage"],
  Cell[380148, 9636, 278, 7, 87, "MoreExplore",ExpressionUUID->"fcb6f4a2-757a-41d3-82a3-90396741dde7",
   CellTags->"LastCellOfAPage"]},
 "i:5"->{
  Cell[10393, 437, 277, 10, 87, "Text",ExpressionUUID->"77052449-6970-45bf-a4c4-0d94aa9f526d",
   CellTags->"i:5"]},
 "i:6"->{
  Cell[14828, 615, 375, 12, 87, "Text",ExpressionUUID->"b04503da-0a20-42b7-a044-5a6a540387df",
   CellTags->"i:6"]},
 "i:7"->{
  Cell[19091, 790, 421, 13, 87, "Text",ExpressionUUID->"d07aad43-d11e-42ea-8c63-9563a0b829b1",
   CellTags->"i:7"]},
 "p:194"->{
  Cell[26131, 1002, 189, 6, 87, "CodeCaption",ExpressionUUID->"1e0747eb-8fca-46e9-b3c4-018bb054c691",
   CellTags->"p:194"]},
 "i:8"->{
  Cell[41768, 1516, 468, 16, 87, "Text",ExpressionUUID->"9a3a0216-7467-4d4e-bfa8-ed85d5c41e19",
   CellTags->"i:8"]},
 "i:9"->{
  Cell[78067, 2505, 810, 33, 87, "Text",ExpressionUUID->"e79eb943-6a86-42c5-9f1a-192ce023595d",
   CellTags->"i:9"]},
 "p:195"->{
  Cell[81627, 2653, 122, 4, 87, "VocabularySection",ExpressionUUID->"31d9c860-b8e8-4576-8fbb-b776e550f1e4",
   CellTags->"p:195"]},
 "i:10"->{
  Cell[375096, 9432, 228, 10, 87, "Question",ExpressionUUID->"4321fcce-2fd8-4afc-8434-042646c4caa7",
   CellTags->"i:10"]},
 "i:11"->{
  Cell[375830, 9464, 450, 16, 87, "Answer",ExpressionUUID->"db1f5038-58eb-4299-bf1a-ea2bcf00212a",
   CellTags->"i:11"]},
 "p:196"->{
  Cell[377003, 9511, 131, 4, 87, "TechNoteSection",ExpressionUUID->"9c1daece-9eb4-4276-9954-58dfe8f22177",
   CellTags->"p:196"]},
 "i:12"->{
  Cell[378516, 9574, 611, 21, 87, "TechNote",ExpressionUUID->"ad4c0d92-8233-4c93-aca7-d7649b83036a",
   CellTags->"i:12"]},
 "i:13"->{
  Cell[379130, 9597, 412, 14, 87, "TechNote",ExpressionUUID->"69aa6921-680b-43eb-b9ec-47ec391cda76",
   CellTags->"i:13"]}
 }
*)
(*CellTagsIndex
CellTagsIndex->{
 {"p:193", 471621, 11485},
 {"i:1", 471860, 11489},
 {"i:2", 471984, 11492},
 {"i:3", 472108, 11495},
 {"i:4", 472234, 11498},
 {"LastCellOfAPage", 472379, 11501},
 {"i:5", 473094, 11514},
 {"i:6", 473221, 11517},
 {"i:7", 473348, 11520},
 {"p:194", 473477, 11523},
 {"i:8", 473613, 11526},
 {"i:9", 473741, 11529},
 {"p:195", 473871, 11532},
 {"i:10", 474014, 11535},
 {"i:11", 474149, 11538},
 {"p:196", 474283, 11541},
 {"i:12", 474425, 11544},
 {"i:13", 474560, 11547}
 }
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[652, 23, 318, 9, 87, "SectionDoubleDigit",ExpressionUUID->"2c7f981f-69c5-4045-984c-91a129b56a64",
 CounterAssignments->{{"Section", 31}, {"Subsection", 0}, {"Subsubsection", 0}, {"Exercise", 0}},
 CellTags->"p:193"],
Cell[973, 34, 427, 15, 87, "Text",ExpressionUUID->"1fba5147-7c0c-4899-b108-611fb6716846",
 CellTags->"i:1"],
Cell[1403, 51, 204, 8, 87, "Text",ExpressionUUID->"067e3a6d-af7a-4b14-92e2-1ac86a02a48b",
 CellTags->"i:2"],
Cell[1610, 61, 455, 18, 87, "CodeCaption",ExpressionUUID->"a51f21e9-60c0-4290-9bd3-0c72175ea426"],
Cell[CellGroupData[{
Cell[2090, 83, 242, 8, 87, "Input",ExpressionUUID->"bb5e8cab-f6a9-4be7-9809-72595d8f7793"],
Cell[2335, 93, 120, 4, 87, "Output",ExpressionUUID->"491346af-f542-45f8-87d4-c80def69260f",
 Evaluatable->False]
}, Open  ]],
Cell[2470, 100, 324, 12, 87, "CodeCaption",ExpressionUUID->"4795b146-0e20-4011-b7ee-f186a7dc9958"],
Cell[CellGroupData[{
Cell[2819, 116, 242, 8, 87, "Input",ExpressionUUID->"921d20a0-adce-4d5a-b5ef-e870252310f6"],
Cell[3064, 126, 121, 4, 87, "Output",ExpressionUUID->"9749f214-8840-4cb0-832b-7cb802cc7543",
 Evaluatable->False]
}, Open  ]],
Cell[3200, 133, 391, 15, 87, "CodeCaption",ExpressionUUID->"7d60547c-779a-47ba-8db2-b41299c7fe46"],
Cell[CellGroupData[{
Cell[3616, 152, 222, 8, 87, "Input",ExpressionUUID->"e03e5871-7aee-4058-a133-8cfd2ace063b"],
Cell[3841, 162, 120, 4, 87, "Output",ExpressionUUID->"66f8cc6d-ceee-4353-b676-ce3264bba96e",
 Evaluatable->False]
}, Open  ]],
Cell[3976, 169, 389, 15, 87, "CodeCaption",ExpressionUUID->"8354084c-af09-4822-9757-6227de21f2a5"],
Cell[CellGroupData[{
Cell[4390, 188, 232, 8, 87, "Input",ExpressionUUID->"a28390d0-b3ad-49c4-9f22-ba93c3054807"],
Cell[4625, 198, 121, 4, 87, "Output",ExpressionUUID->"d514e542-05b5-40f4-a167-6a7acc6d6d02",
 Evaluatable->False]
}, Open  ]],
Cell[4761, 205, 405, 13, 87, "Text",ExpressionUUID->"1647e429-936d-480e-97b8-4a626c0e1b3c",
 CellTags->"i:3"],
Cell[5169, 220, 386, 15, 87, "CodeCaption",ExpressionUUID->"e637745a-667f-45ad-8b59-bf56e84a4c0f"],
Cell[CellGroupData[{
Cell[5580, 239, 599, 20, 87, "Input",ExpressionUUID->"134a0334-9b76-4e72-89f7-6eeafd1956f9"],
Cell[6182, 261, 378, 14, 87, "Output",ExpressionUUID->"e5e09eea-0cb7-41a3-85ab-abeba6031987",
 Evaluatable->False]
}, Open  ]],
Cell[6575, 278, 377, 14, 87, "CodeCaption",ExpressionUUID->"d58909b4-135f-4633-a80f-71354e1c8997"],
Cell[CellGroupData[{
Cell[6977, 296, 599, 20, 87, "Input",ExpressionUUID->"db1bff30-f96d-4deb-bac5-6264c66aae4c"],
Cell[7579, 318, 260, 10, 87, "Output",ExpressionUUID->"05d11cd9-aa1f-4b2c-830b-1ec406846744",
 Evaluatable->False]
}, Open  ]],
Cell[7854, 331, 316, 12, 87, "CodeCaption",ExpressionUUID->"6ccaf90f-9c1a-4e9a-9b2c-4af06086193f"],
Cell[CellGroupData[{
Cell[8195, 347, 635, 22, 87, "Input",ExpressionUUID->"3d9ba4d5-4d7b-4943-938e-caf9037a527a"],
Cell[8833, 371, 231, 8, 87, "Output",ExpressionUUID->"b4190d27-75c8-4bf9-b7eb-4fa9a56aa335",
 Evaluatable->False]
}, Open  ]],
Cell[9079, 382, 295, 12, 87, "CodeCaption",ExpressionUUID->"91b7ec99-5228-4d76-bfb0-ffcfa462f5c3",
 CellTags->"i:4"],
Cell[CellGroupData[{
Cell[9399, 398, 686, 23, 87, "Input",ExpressionUUID->"8d7f72dd-5c80-4bff-8c00-720020e13dab"],
Cell[10088, 423, 290, 11, 87, "Output",ExpressionUUID->"ac62a52d-de79-46a7-a8bc-9d324b82b138",
 Evaluatable->False,
 CellTags->"LastCellOfAPage"]
}, Open  ]],
Cell[10393, 437, 277, 10, 87, "Text",ExpressionUUID->"77052449-6970-45bf-a4c4-0d94aa9f526d",
 CellTags->"i:5"],
Cell[10673, 449, 244, 9, 87, "CodeCaption",ExpressionUUID->"23cf6d58-2c7c-4725-b2bd-d14fe9b570bb"],
Cell[CellGroupData[{
Cell[10942, 462, 625, 21, 87, "Input",ExpressionUUID->"c5c0b58a-9d16-4e84-a9d8-09381f9b5ec3"],
Cell[11570, 485, 319, 12, 87, "Output",ExpressionUUID->"7c9663ac-faa6-4235-b02d-0d940890407d",
 Evaluatable->False]
}, Open  ]],
Cell[11904, 500, 186, 6, 87, "Text",ExpressionUUID->"97b67eda-431b-48a2-bd7c-6899766f8883"],
Cell[12093, 508, 153, 4, 87, "CodeCaption",ExpressionUUID->"7e87a834-8483-4396-b52f-92bb6862eb19"],
Cell[CellGroupData[{
Cell[12271, 516, 180, 5, 87, "Input",ExpressionUUID->"5c6a04fc-9d73-4249-b0bd-15bf4dba8535"],
Cell[12454, 523, 695, 22, 87, "Output",ExpressionUUID->"f8f64b99-af1a-40e8-916b-cc50ff0c2055",
 Evaluatable->False]
}, Open  ]],
Cell[13164, 548, 123, 3, 87, "CodeCaption",ExpressionUUID->"da93f097-fb71-489b-bf2a-46a710080cbb"],
Cell[CellGroupData[{
Cell[13312, 555, 299, 9, 87, "Input",ExpressionUUID->"65c2f502-d185-4d82-804c-00ed3e2fc7d3"],
Cell[13614, 566, 419, 14, 87, "Output",ExpressionUUID->"57a7309c-cc6a-44a4-867e-8649302a4e93",
 Evaluatable->False]
}, Open  ]],
Cell[14048, 583, 131, 3, 87, "CodeCaption",ExpressionUUID->"6a18ebe1-8596-425d-bf06-e6679f287d6e"],
Cell[CellGroupData[{
Cell[14204, 590, 325, 10, 87, "Input",ExpressionUUID->"12ce6e59-1efe-4980-b652-935fe2a10f53"],
Cell[14532, 602, 281, 10, 87, "Output",ExpressionUUID->"e2fd1f5a-62c4-47a4-a794-299e8026e5a9",
 Evaluatable->False]
}, Open  ]],
Cell[14828, 615, 375, 12, 87, "Text",ExpressionUUID->"b04503da-0a20-42b7-a044-5a6a540387df",
 CellTags->"i:6"],
Cell[15206, 629, 220, 8, 87, "CodeCaption",ExpressionUUID->"106dd8c4-944b-427d-8856-4d51601e65b7"],
Cell[CellGroupData[{
Cell[15451, 641, 601, 20, 87, "Input",ExpressionUUID->"645c8a7d-f543-4833-9ff3-07c833ad9342"],
Cell[16055, 663, 271, 10, 87, "Output",ExpressionUUID->"3acec3e8-a69e-4e45-b188-0a31ceeb96fc",
 Evaluatable->False]
}, Open  ]],
Cell[16341, 676, 295, 11, 87, "CodeCaption",ExpressionUUID->"fdfe3cf0-d0be-4c53-bb98-6c6c1dcd09cc"],
Cell[CellGroupData[{
Cell[16661, 691, 706, 24, 87, "Input",ExpressionUUID->"58bdeef2-a5b1-480b-8024-e2815e25d24b"],
Cell[17370, 717, 448, 16, 87, "Output",ExpressionUUID->"c54d8472-2d0c-4bd9-bc3c-82ea019c4eb5",
 Evaluatable->False]
}, Open  ]],
Cell[17833, 736, 168, 6, 87, "Text",ExpressionUUID->"d9431371-962f-4f60-afce-aa51843770ec"],
Cell[18004, 744, 350, 14, 87, "CodeCaption",ExpressionUUID->"b1ba0554-cb86-4624-95d1-70fb7599d907"],
Cell[CellGroupData[{
Cell[18379, 762, 473, 15, 87, "Input",ExpressionUUID->"57924756-3472-4c9b-a6b0-36e62b5de150"],
Cell[18855, 779, 221, 8, 87, "Output",ExpressionUUID->"aba6f782-9065-41ef-9177-790255cdaad5",
 Evaluatable->False]
}, Open  ]],
Cell[19091, 790, 421, 13, 87, "Text",ExpressionUUID->"d07aad43-d11e-42ea-8c63-9563a0b829b1",
 CellTags->"i:7"],
Cell[19515, 805, 200, 8, 87, "CodeCaption",ExpressionUUID->"6edde111-11b7-4fb9-8977-5813cc2c0bed"],
Cell[CellGroupData[{
Cell[19740, 817, 250, 8, 87, "Input",ExpressionUUID->"148d1bef-427d-4a27-8605-33c695038bd1"],
Cell[19993, 827, 6123, 172, 87, "Output",ExpressionUUID->"3fd2f72f-1819-4c75-b5bd-17f3a2cc9376",
 Evaluatable->False,
 CellTags->"LastCellOfAPage"]
}, Open  ]],
Cell[26131, 1002, 189, 6, 87, "CodeCaption",ExpressionUUID->"1e0747eb-8fca-46e9-b3c4-018bb054c691",
 CellTags->"p:194"],
Cell[CellGroupData[{
Cell[26345, 1012, 525, 18, 87, "Input",ExpressionUUID->"a12a4b29-348e-40fc-87dd-7ce3d9294c14"],
Cell[26873, 1032, 3268, 94, 87, "Output",ExpressionUUID->"19e2df2a-f672-43a8-9335-681f79f70f9f",
 Evaluatable->False]
}, Open  ]],
Cell[30156, 1129, 133, 3, 87, "CodeCaption",ExpressionUUID->"afc77f17-ac90-4df3-afa3-b33e3e013595"],
Cell[CellGroupData[{
Cell[30314, 1136, 731, 25, 87, "Input",ExpressionUUID->"e29e30c0-2fef-4ba1-b977-f532b929fee3"],
Cell[31048, 1163, 6100, 172, 87, "Output",ExpressionUUID->"14569711-98f4-4e9f-a818-a5e5a3f8cd7b",
 Evaluatable->False]
}, Open  ]],
Cell[37163, 1338, 1077, 38, 87, "Text",ExpressionUUID->"038f6321-0172-4e9f-a42c-f814df9943ca"],
Cell[38243, 1378, 533, 21, 87, "CodeCaption",ExpressionUUID->"35e72192-9b39-4656-9023-e0e2844ed515"],
Cell[CellGroupData[{
Cell[38801, 1403, 757, 24, 87, "Input",ExpressionUUID->"aa71853f-9ea1-4ca2-bbbd-60c486f49fdd"],
Cell[39561, 1429, 492, 17, 87, "Output",ExpressionUUID->"035c7bf4-1b59-45c7-b8db-7e8cd4b092c1",
 Evaluatable->False]
}, Open  ]],
Cell[40068, 1449, 583, 23, 87, "CodeCaption",ExpressionUUID->"ae45a6ff-7a69-4b8b-b1c8-0c136713d9db"],
Cell[CellGroupData[{
Cell[40676, 1476, 759, 24, 87, "Input",ExpressionUUID->"26e32698-88f6-42d6-9ce9-8a76eed47ec5"],
Cell[41438, 1502, 315, 11, 87, "Output",ExpressionUUID->"a30dc577-005b-4a62-9712-9b181dbbbf3b",
 Evaluatable->False]
}, Open  ]],
Cell[41768, 1516, 468, 16, 87, "Text",ExpressionUUID->"9a3a0216-7467-4d4e-bfa8-ed85d5c41e19",
 CellTags->"i:8"],
Cell[42239, 1534, 348, 14, 87, "CodeCaption",ExpressionUUID->"7d9d90be-2a29-447a-a4df-d33a61106a1c"],
Cell[CellGroupData[{
Cell[42612, 1552, 11793, 316, 87, "Input",ExpressionUUID->"ca6189d7-bd7a-44d0-84f4-1b5fa0541e16"],
Cell[54408, 1870, 23644, 632, 87, "Output",ExpressionUUID->"66cf2c79-c18d-47b1-b1c3-b40adf8e1411",
 Evaluatable->False]
}, Open  ]],
Cell[78067, 2505, 810, 33, 87, "Text",ExpressionUUID->"e79eb943-6a86-42c5-9f1a-192ce023595d",
 CellTags->"i:9"],
Cell[78880, 2540, 342, 14, 87, "CodeCaption",ExpressionUUID->"5c3344de-856b-4488-a2b4-d0b07e56a17a"],
Cell[CellGroupData[{
Cell[79247, 2558, 404, 13, 87, "Input",ExpressionUUID->"1dab7ac4-17c9-4059-b93b-d28e13eca362"],
Cell[79654, 2573, 254, 8, 87, "Output",ExpressionUUID->"9c1fb57d-3cd9-486e-bab2-c27d6f8d2a43",
 Evaluatable->False]
}, Open  ]],
Cell[79923, 2584, 190, 8, 87, "Text",ExpressionUUID->"31e06b6c-c2ed-4a9a-9cab-ea085df86f4b"],
Cell[80116, 2594, 418, 15, 87, "CodeCaption",ExpressionUUID->"d37022e6-d052-4a52-9fb1-7dd5ff6b04f9"],
Cell[CellGroupData[{
Cell[80559, 2613, 445, 14, 87, "Input",ExpressionUUID->"ae8ed1c0-e5db-4a9f-86b7-db3f3937c7c6"],
Cell[81007, 2629, 176, 6, 87, "Output",ExpressionUUID->"4650157f-4f52-4796-852b-76b10fdb3edd",
 Evaluatable->False]
}, Open  ]],
Cell[81198, 2638, 392, 10, 87, "Text",ExpressionUUID->"9bbe3477-0ad9-40b4-9779-a196f123b0d3",
 CellTags->"LastCellOfAPage"]
}, Open  ]],
Cell[CellGroupData[{
Cell[81627, 2653, 122, 4, 87, "VocabularySection",ExpressionUUID->"31d9c860-b8e8-4576-8fbb-b776e550f1e4",
 CellTags->"p:195"],
Cell[81752, 2659, 3403, 107, 87, "VocabularyTable",ExpressionUUID->"a860f216-8ece-4961-bc22-a0a2bb0b9db9"]
}, Open  ]],
Cell[CellGroupData[{
Cell[85192, 2771, 1722, 45, 87, "ExerciseSection",ExpressionUUID->"36d17a67-0904-458f-80b9-983242244fff"],
Cell[CellGroupData[{
Cell[86939, 2820, 1180, 37, 87, "ExerciseSummaryCell",ExpressionUUID->"c37be587-6074-4bac-8d2a-dabe622d4dbd"],
Cell[CellGroupData[{
Cell[88144, 2861, 903, 28, 87, "Exercise",ExpressionUUID->"9257a9c7-2cd1-4ecd-9471-ed6b76562c28"],
Cell[89050, 2891, 2743, 74, 87, "ExerciseOutput",ExpressionUUID->"0d810198-8f4b-439c-9b8c-f18475b1d036"]
}, Closed]],
Cell[CellGroupData[{
Cell[91830, 2970, 871, 27, 87, "Exercise",ExpressionUUID->"db8482ef-3731-4085-9fa8-bac9f7ca7e38"],
Cell[92704, 2999, 2572, 70, 87, "ExerciseOutput",ExpressionUUID->"3ec3b85d-4835-4636-bfd2-edbd29ae7d6d"]
}, Closed]],
Cell[CellGroupData[{
Cell[95313, 3074, 733, 20, 87, "Exercise",ExpressionUUID->"adecd729-5855-40e3-a004-e5f84bae5826"],
Cell[96049, 3096, 7330, 197, 87, "ExerciseOutput",ExpressionUUID->"0726b14a-a4b3-4f33-b6e4-cb3933f248af"]
}, Closed]],
Cell[CellGroupData[{
Cell[103416, 3298, 955, 33, 87, "Exercise",ExpressionUUID->"fa1c475b-2bbc-4a5f-859b-a6bc3a93a382"],
Cell[104374, 3333, 134420, 2982, 87, "ExerciseOutput",ExpressionUUID->"8a2284d0-de55-42ad-8298-ec3838ad67ed"]
}, Closed]],
Cell[CellGroupData[{
Cell[238831, 6320, 762, 23, 87, "Exercise",ExpressionUUID->"9430c9e9-5a55-43f8-a8b1-b373502d1d79"],
Cell[239596, 6345, 109075, 2362, 87, "ExerciseOutput",ExpressionUUID->"57358b84-2759-4566-97ad-5d41a47180a7"]
}, Closed]],
Cell[CellGroupData[{
Cell[348708, 8712, 745, 20, 87, "Exercise",ExpressionUUID->"f3a072e4-e314-45b7-a47e-af2912648116"],
Cell[349456, 8734, 1521, 40, 87, "ExerciseOutput",ExpressionUUID->"75f673ae-d288-46d7-938a-36b5dfbffe11"]
}, Closed]],
Cell[CellGroupData[{
Cell[351014, 8779, 1390, 48, 87, "Exercise",ExpressionUUID->"d5b91fc1-6ef8-43cc-bb46-9df6b83a41a9"],
Cell[352407, 8829, 2502, 53, 87, "ExerciseOutput",ExpressionUUID->"5833b143-f4ac-4529-99e9-042a86bb8c65"]
}, Closed]],
Cell[CellGroupData[{
Cell[354946, 8887, 1455, 50, 87, "Exercise",ExpressionUUID->"2bd5f4fe-99e8-4d8b-b695-79449532e793"],
Cell[356404, 8939, 16423, 394, 87, "ExerciseOutput",ExpressionUUID->"8ab64bfa-693f-411f-98d4-113b8be1c73e"]
}, Closed]]
}, Closed]]
}, Open  ]],
Cell[CellGroupData[{
Cell[372888, 9340, 105, 3, 87, "QASection",ExpressionUUID->"0aca8979-f079-4580-baa2-e360acad5c87"],
Cell[372996, 9345, 299, 11, 87, "Question",ExpressionUUID->"1e55239d-5e34-4124-9626-839958009722"],
Cell[373298, 9358, 314, 7, 87, "Answer",ExpressionUUID->"4a76f433-1d92-48b2-b311-0462bc5ccba5"],
Cell[373615, 9367, 187, 6, 87, "Question",ExpressionUUID->"94cac4d3-39c9-47e5-9c13-79cfe7cbd08a"],
Cell[373805, 9375, 249, 9, 87, "Answer",ExpressionUUID->"b1d2b643-e668-4881-82bb-c01ca2f65090"],
Cell[374057, 9386, 357, 15, 87, "Question",ExpressionUUID->"da328003-c2ec-40f5-aaf9-2d2c7a242cc1"],
Cell[374417, 9403, 676, 27, 87, "Answer",ExpressionUUID->"e1914bfb-5a6f-4bac-b9b0-f0f084d39742"],
Cell[375096, 9432, 228, 10, 87, "Question",ExpressionUUID->"4321fcce-2fd8-4afc-8434-042646c4caa7",
 CellTags->"i:10"],
Cell[375327, 9444, 250, 6, 87, "Answer",ExpressionUUID->"d58e8657-171f-4708-8f21-1adfc5ef7e09",
 CellTags->"LastCellOfAPage"],
Cell[375580, 9452, 247, 10, 87, "Question",ExpressionUUID->"3cd39ca6-7039-4ceb-b584-59fc6b9349d6"],
Cell[375830, 9464, 450, 16, 87, "Answer",ExpressionUUID->"db1f5038-58eb-4299-bf1a-ea2bcf00212a",
 CellTags->"i:11"],
Cell[376283, 9482, 292, 11, 87, "Question",ExpressionUUID->"094fad3d-9964-41f6-bac9-49be17d31448"],
Cell[376578, 9495, 388, 11, 87, "Answer",ExpressionUUID->"cf1e93cf-eded-48a2-a579-9180718f7d5b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[377003, 9511, 131, 4, 87, "TechNoteSection",ExpressionUUID->"9c1daece-9eb4-4276-9954-58dfe8f22177",
 CellTags->"p:196"],
Cell[377137, 9517, 286, 9, 87, "TechNote",ExpressionUUID->"4f434d2c-8b94-4fe0-a081-906bcc4689fd"],
Cell[377426, 9528, 1087, 44, 87, "TechNote",ExpressionUUID->"bc9e85f5-85ba-4946-8569-df4b3ac33c28"],
Cell[378516, 9574, 611, 21, 87, "TechNote",ExpressionUUID->"ad4c0d92-8233-4c93-aca7-d7649b83036a",
 CellTags->"i:12"],
Cell[379130, 9597, 412, 14, 87, "TechNote",ExpressionUUID->"69aa6921-680b-43eb-b9ec-47ec391cda76",
 CellTags->"i:13"],
Cell[379545, 9613, 446, 13, 87, "TechNote",ExpressionUUID->"8b420aa5-72b6-44d3-9e21-8fb8186b9b67"]
}, Open  ]],
Cell[CellGroupData[{
Cell[380028, 9631, 117, 3, 87, "MoreExploreSection",ExpressionUUID->"a7a349f8-2370-4eab-b912-1684a8d8f032"],
Cell[380148, 9636, 278, 7, 87, "MoreExplore",ExpressionUUID->"fcb6f4a2-757a-41d3-82a3-90396741dde7",
 CellTags->"LastCellOfAPage"]
}, Open  ]]
}
]
*)

(* End of internal cache information *)
(* NotebookSignature uQGPfXKYDWqbCieOVjw8JZGh *)
