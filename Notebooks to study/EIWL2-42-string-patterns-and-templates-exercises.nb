(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 11.3' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    272780,       5429]
NotebookOptionsPosition[    206833,       4111]
NotebookOutlinePosition[    266205,       5322]
CellTagsIndexPosition[    266126,       5317]
WindowTitle->Cadenas de caracteres y plantillas : Una introducci\363n \
elemental a Wolfram Language
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[TextData[{
 "Sustituya cada espacio en ",
 Cell[BoxData["\"\<1 2 3 4\>\""], "InlineCode"],
 " con ",
 Cell[BoxData["\"\<---\>\""], "InlineCode"],
 "."
}], "Exercise",
 Editable->False,
 Selectable->False,
 Deletable->False,
 CellDingbat->Cell[
  "42.1", "ExerciseNumber", FontColor -> 
   RGBColor[0.9019607843137255, 0.4117647058823529, 0.027450980392156862`]],
 ShowCellBracket->False,
 CounterAssignments->{{"SectionNumber", 42}, {"ExerciseNumber", 1}, {
   "WebOnly", 0}}],

Cell[CellGroupData[{

Cell[BoxData[
 TagBox[
  ButtonBox[
   StyleBox[
    RowBox[{"EXPECTED", " ", "OUTPUT", " ", "\[RightGuillemet]"}],
    FontFamily->"Source Sans Pro",
    FontSize->12,
    FontColor->GrayLevel[0.6]],
   Appearance->None,
   ButtonFunction:>(SelectionMove[
      ButtonNotebook[], All, ButtonCell, AutoScroll -> False]; FrontEndExecute[
      FrontEndToken[
       ButtonNotebook[], "OpenCloseGroup"]]),
   Evaluator->Automatic,
   Method->"Preemptive"],
  MouseAppearanceTag["LinkHand"]]], "ExerciseExpectedResult",
 Editable->False,
 Deletable->False,
 ShowCellBracket->False],

Cell[BoxData[
 FrameBox[
  TagBox[GridBox[{
     {
      PaneBox[
       InterpretationBox[Cell[BoxData[
         GraphicsBox[
          TagBox[RasterBox[CompressedData["
1:eJztlq2O3DAUha2WFFbqE/QFgksNiyJtVRYyq86sSqaj2UrV0LBAs7CgoKCg
oJAgExOTEIMQFwQYmBgETG1nfrOdkt5dLcgnJbKt6Ng+9/o6H+9/3K3eIIQe
39nX3eIX3m4Xuy/vbefr+vH7w3r57fP65/Jhuf10/9YOfrDPwj6uvZ+ZmZl5
RWjBeacHaFVJq7IoStr2wMqmp3VZlBVtJbDyAdUy1ikzdkSxQ56EKsg5eBF4
2fG9KVoo5UHW4YVymDTQod1T4mYIEjp2uzqPN24kZZAWiTyyrvsY63zlIgCV
SYOscBAL70udYIQw1UDSHiOKMWfClF0Mt9YjAmqRdUYdT66iCfhGDspNDK0s
E5udOIoChMmFRYZheIvOMGLlY9iqoXvJm8JmKlrlgA7xzElWncxDFPzDItOL
Vlwjzd5IMaU3tz4+M3Sl30cLqqxTPJ6G47IhlMel7ioXzAwjnLa3LNIsQVMC
+psGT0Zjqv7+8SmuirqoRIdAQyrbHZm+Ik6+7AYIZZ35a2CTEEJi3wzTujtO
xl0t4vo0t5qgncd6OqrMcOtjT09dncakv9gVhLI5Z+nA8XgXAyibJk9JmhJH
Ejpzw6zpXP3mnDeZ7e/ypuX86pD8B0bWkQ9PWjPOGKVUKJjLudrYmO/qVqq+
KxMX7VwALfrM4A8ad03DwuuEIwym+PF0Igz232Uki6PTAQpIJUBkr3G1Lsz4
Myi/HIPRFvCfxpmZmZnXyR+VXLq+
            "], {{0, 19}, {97, 0}}, {0, 255},
            ColorFunction->RGBColor],
           BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
           Selectable->False],
          DefaultBaseStyle->"ImageGraphics",
          ImageSize->Magnification[1],
          ImageSizeRaw->{97, 19},
          PlotRange->{{0, 97}, {0, 19}}]], "ExerciseOutput",
         ImageSize->{101, 19},
         ImageMargins->{{0, 0}, {0, 0}},
         ImageRegion->{{0, 1}, {0, 1}},
         Magnification->1],
        Apply[TextCell, 
         Cell[
          BoxData[
           GraphicsBox[
            TagBox[
             RasterBox[CompressedData["
1:eJztlq2O3DAUha2WFFbqE/QFgksNiyJtVRYyq86sSqaj2UrV0LBAs7CgoKCg
oJAgExOTEIMQFwQYmBgETG1nfrOdkt5dLcgnJbKt6Ng+9/o6H+9/3K3eIIQe
39nX3eIX3m4Xuy/vbefr+vH7w3r57fP65/Jhuf10/9YOfrDPwj6uvZ+ZmZl5
RWjBeacHaFVJq7IoStr2wMqmp3VZlBVtJbDyAdUy1ikzdkSxQ56EKsg5eBF4
2fG9KVoo5UHW4YVymDTQod1T4mYIEjp2uzqPN24kZZAWiTyyrvsY63zlIgCV
SYOscBAL70udYIQw1UDSHiOKMWfClF0Mt9YjAmqRdUYdT66iCfhGDspNDK0s
E5udOIoChMmFRYZheIvOMGLlY9iqoXvJm8JmKlrlgA7xzElWncxDFPzDItOL
Vlwjzd5IMaU3tz4+M3Sl30cLqqxTPJ6G47IhlMel7ioXzAwjnLa3LNIsQVMC
+psGT0Zjqv7+8SmuirqoRIdAQyrbHZm+Ik6+7AYIZZ35a2CTEEJi3wzTujtO
xl0t4vo0t5qgncd6OqrMcOtjT09dncakv9gVhLI5Z+nA8XgXAyibJk9JmhJH
Ejpzw6zpXP3mnDeZ7e/ypuX86pD8B0bWkQ9PWjPOGKVUKJjLudrYmO/qVqq+
KxMX7VwALfrM4A8ad03DwuuEIwym+PF0Igz232Uki6PTAQpIJUBkr3G1Lsz4
Myi/HIPRFvCfxpmZmZnXyR+VXLq+
              "], {{0, 19}, {97, 0}}, {0, 255}, 
              ColorFunction -> RGBColor], 
             BoxForm`ImageTag[
             "Byte", ColorSpace -> "RGB", Interleaving -> True], Selectable -> 
             False], DefaultBaseStyle -> "ImageGraphics", ImageSize -> 
            Magnification[1], ImageSizeRaw -> {97, 19}, 
            PlotRange -> {{0, 97}, {0, 19}}]], "ExerciseOutput", 
          Magnification -> 1, CellFrameColor -> GrayLevel[0], Selectable -> 
          False, Copyable -> False, Editable -> False, ShowCellBracket -> 
          False, CellLabel -> "Out[]=", CellFrame -> False]]],
       FrameMargins->{{10, 0}, {10, 12}},
       ImageMargins->0,
       ImageSize->Full], 
      ButtonBox[
       PaneBox[
        StyleBox["\[Times]",
         FontFamily->"MathematicaMono",
         FontSize->18,
         FontWeight->"Bold",
         FontColor->GrayLevel[0.75]],
        Alignment->Right,
        FrameMargins->{{0, 6}, {0, 0}},
        ImageMargins->0],
       Appearance->None,
       ButtonFunction:>(SelectionMove[
          ButtonNotebook[], All, ButtonCell, AutoScroll -> False]; 
        NotebookFind[
          EvaluationNotebook[], "Exercise", Previous, CellStyle, WrapAround -> 
          False, AutoScroll -> False]; FrontEndExecute[
          FrontEndToken[
           ButtonNotebook[], "OpenCloseGroup"]])]}
    },
    GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {Top}},
    GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
   "Grid"],
  FrameMargins->0,
  FrameStyle->GrayLevel[0.7],
  StripOnInput->False]], "ExerciseOutput",
 Editable->False,
 Selectable->False,
 Deletable->False,
 CellFrame->{{1, 1}, {1, 1}},
 ShowCellBracket->False,
 CellFrameMargins->{{0, 0}, {0, 0}},
 CellFrameColor->GrayLevel[1],
 LineBreakWithin->Automatic]
}, Closed]],

Cell[CellGroupData[{

Cell[BoxData[
 StyleBox[
  DynamicBox[ToBoxes[
    $CellContext`SolutionResponseText["42.1"], StandardForm],
   ImageSizeCache->{140., {3., 9.}}], "SolutionResponseText"]], "Subsection",
 Editable->False,
 Selectable->False,
 Deletable->False,
 ShowCellBracket->False,
 CellMargins->{{24, 25}, {3, 0}},
 CellFrameMargins->{{8, 0}, {0, 0}},
 TextAlignment->Right,
 ShowStringCharacters->False,
 FontFamily->"Source Sans Pro",
 FontSize->12,
 FontWeight->"Plain",
 FontSlant->"Plain",
 Background->GrayLevel[1]],

Cell[BoxData[
 ButtonBox[
  PaneBox[
   StyleBox[
    RowBox[{"[", " ", 
     RowBox[{"Click", " ", "to", " ", "enter", " ", "code"}], " ", "]"}],
    Selectable->False,
    StripOnInput->False,
    FontFamily->"Source Sans Pro",
    FontSize->14,
    FontWeight->Plain,
    FontColor->GrayLevel[0.6]],
   ImageSize->Full],
  Appearance->None,
  ButtonFunction:>(SelectionMove[
     InputNotebook[], All, ButtonCell]; NotebookWrite[
     InputNotebook[], 
     Cell[
      BoxData[""], "Input"]]; SelectionMove[
     InputNotebook[], Before, CellContents]; Null),
  Evaluator->Automatic,
  Method->"Preemptive"]], "Input",
 CellFrameLabels->{{None, None}, {None, None}},
 ShowSyntaxStyles->False,
 ShowStringCharacters->False,
 CellTags->"FirstInputCell"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 PaneBox["\[ThickSpace]",
  ImageSize->Full]], "CodeSectionDividerCloud",
 Editable->False,
 Selectable->False,
 Deletable->False,
 CellMargins->{{0, 0}, {0, 35}},
 CellBracketOptions->{"OverlapContent"->True}],

Cell["\<\
Obtenga una lista ordenada de todas las secuencias de 4 d\[IAcute]gitos (que \
posiblemente representan fechas) en el art\[IAcute]culo de Wikipedia sobre \
\[OpenCurlyDoubleQuote]computers\[CloseCurlyDoubleQuote].\
\>", "Exercise",
 Editable->False,
 Selectable->False,
 Deletable->False,
 CellDingbat->Cell[
  "42.2", "ExerciseNumber", FontColor -> 
   RGBColor[0.9019607843137255, 0.4117647058823529, 0.027450980392156862`]],
 ShowCellBracket->False,
 TaggingRules->{"MultipleSolutions" -> "True"},
 CounterAssignments->{{"SectionNumber", 42}, {"ExerciseNumber", 2}, {
   "WebOnly", 0}}],

Cell[CellGroupData[{

Cell[BoxData[
 TagBox[
  ButtonBox[
   StyleBox[
    RowBox[{
    "SAMPLE", " ", "EXPECTED", " ", "OUTPUT", " ", "\[RightGuillemet]"}],
    FontFamily->"Source Sans Pro",
    FontSize->12,
    FontColor->GrayLevel[0.6]],
   Appearance->None,
   ButtonFunction:>(SelectionMove[
      ButtonNotebook[], All, ButtonCell, AutoScroll -> False]; FrontEndExecute[
      FrontEndToken[
       ButtonNotebook[], "OpenCloseGroup"]]),
   Evaluator->Automatic,
   Method->"Preemptive"],
  MouseAppearanceTag["LinkHand"]]], "ExerciseExpectedResult",
 Editable->False,
 Deletable->False,
 ShowCellBracket->False],

Cell[BoxData[
 FrameBox[
  TagBox[GridBox[{
     {
      PaneBox[
       InterpretationBox[Cell[BoxData[
         GraphicsBox[
          TagBox[RasterBox[CompressedData["
1:eJztnT+r+0p+xp1Nk3Lfwr4B12ldpjJsSHeaXXK9BMJdc3chuHWnUp06V66c
xpUhYAKGG0xAjdhFLIhgFrwLWlChW6hQ4Wgk2Zat78gjzdce2b/nA/dyPEee
j+aPRn+Of35+8evf/nLys8Fg8Lt/yP73y1/9x+iHH341++efZy/+5fvf/dtv
vv/uX//p+99/95vvfvjHX/99Vvjv2X9/+bvBQPx8AgAAAAAAAAAAAAAAAAD6
TrSxJsPh1EuKl3HgeYc4vf4+DXeb1XK19o5Jl0Kae0t08Dar1Wq9PUTXwvjo
bdar9WYXhEn1jRf8Y9zKolhhWC3Ki6v90Q+LpB+Yx4W2pFGwFQ3cV7pfa1xE
b/juRoy/G1WnXjYtvKBaF9W3WhZy4unMZNJC73ZXCzlzpNNJpy1p5O5EU9xD
dN2IaovWuNQssrbQg2XSYoDYcwaDwcRaH9NTsJoNcqz9ZYAO1mhwZrgOkpaF
BHWLu5jkbxrmxaNttiun1F1Mi6qKjRdevnHiXiV5FcoW9Qpjezi4ZbiTrECG
LLJ+YB4X0pL4q+G1geNdmOqNi2DvfFXePAtElcl6WlQ53J9PFHTfalioiafX
Y4RFttudLeTMkU0nndH386LhOK9hvj1IhkBvXAgL3RbJYBmzmCJ27cHALo/t
7XI+HWc76rhlS49b0dCVOIQO4qfJOm1TSFKzJIvRYOy44sdon033kS1+9heT
sZ0f+GkgKpxtxY/HdfZ7sUqkBdJ21dvSosL08uJoZUM3WckmuikLWSH3uJCW
ZJltMrSOJ3Gyzyb3cL7THJfTcZO9HFs7cZ4+7ixnV5wDtgtrNsn6ZeyeT2Rk
32pY6Imn02NkW8jd1rKQM4cq1LHkK8OoWPNENUM7krRFZ1xIC9UWerAMWkyR
eGLFrlzc+VlT7bKl6To7eY6c4rf+MmvBxE/UCxu0VcspjaPztrFN9FJsZb3/
tUzKnh97que9G0uHCiPx28Hm2DsLVSH/uFCW2Bll870cIH+RVTg/6o1LsMoW
/i+fem/qL7K9d4lbj2vf6lioiafVYw1tud1tLcsFcuZUCvVHfx7mP4dimbNv
9eQQtB6XZku1gY9WCSMWAwTZOA4r+5/f3p5bGjvD6z4n4vnJaB+rF8qtN5Yq
x/nguiBk3Rcegu0iP2+vg9P5Gc7wazqdzpxVk4G2tKtQrE4NFwwGLVSF/ONC
WaKswssAHbfzokKNcUk30+xCfXvwtwvHWW1ulue82tsVu9a3+paiKeeJp9Nj
csv9brMcL+TMqRZqWdLjJns5mi6Do2eNBiNrJ2mLvFDHIm3g6X6VMGh5OVGw
FSfh6lPHuxV7dB3x8+GjXigXS1ZsT1yzDTfnZ0f5mbFgWlwbJMEqu2uxV+t1
PjcaniSQllYVpsFK3FEeHl04mrBQFfKPC7nbriPuN6eWY8+LB7ZfWYUa4xLn
9YlnCbN5/jh0vLh0ZX2H632rbzndTDydHpNaarvNcLyQM+e2UNMSLyrPwLfh
uZQagq7jIrXIGniqrRImLS/HKva/OhHMXWMftxZ1gk7jozsfXm/uLhzyW772
VyaqFV5u+R9g0lKt8Kn3PtXdTrzNcj6bWYuNK4Zs7CayLVUs+RXOZFm+uN1D
ySIj7dtultuJp9NjTZbb3WYYF3Lm3BZqWXbZvg6tIElDfzMdir9YVFzkEHQY
lyYL2UDJKmHI8nLSyBc9PK/cEaSeeP7jFV0u7vIGo0VxRAbLiXgOlqoXNoir
FsEh76LJwrtuklwXgnAzKyZbmlwrDc+35IqWlhXGi+zNs83jU6wZS71C/nF5
2NviiWBeuc64uHZ2IegUe5geVtX3Jn6+Yp97lOxbTUtt4mn1GGmhdlv3eJHM
nLtCHUtkDwfjZXD+jS1vi8640BZZA+urhGGLCYLV1/k5fCI+n7hbiJPLcud7
4vObxfPJ+doLg+3X+YMB6oWn1J9lZ/n5pnIVRliC9by4n9p5nuvu93svSvwv
8Tf3VRBGx2A3G4nPJ4SpKPyyN4cwDPbLUX7XGStafmpToeDmjlK1LS+01Ctk
HheJxV/NJ9Y6OB52S/EAxNqFJ51xSbKipRj75T6KgvyjVdMgFZdrnufvltmK
M1zsXM8/pinVt3oWYuKlWjOZsJAzWe94oWcOVahhScQfUQeTbRDG8XFjZeva
lyef3l3HhbJIGkgOljmLMa6fFUnc8eAGO78dLT+gKA5D+/KwR7Uw8cSzzmHl
syiE5c/O6LYoPwMedpUnT6PpTszU1N9Wth3Py1OokiVuUaFAfBrq5ojokSWS
Vcg6LrTFX1uXstmy2HOtccnrnF/evPZFSeW5aE7+x3Gqb3UsETnxNHqMbgu9
23oWYuZICrtbksC6lo5X+aesybZojQtlodoiGSxTFnPkh4bVvCdJHEXR/T/I
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
4qHeq17Yf0u5tTxovjlLvW7Ja8tXpPFsNiqzUNnbYtCS3e5lC/qX3/3Yz69Y
Rl9fZTBfu92u7w9FmDXAudlFhjnmiaOrl9+2+poM4o4WWbZ7d8uZakAzf5b6
SyxkYUtLjmuPylMA8V71wv5bym2IEEz1LPUby0ksFyIc0A5jb1wq2Nti0CIC
9Ybz7cHfLhxntXHbHvt5cPNgczgux8VcbbXb9f2hiPNEg2zhmEzm9tLPH0vq
zzGxevcz0eA1GcRdLeSWOpaC24Bm/iz111iowpaWbCcPInl5svQle6he2H/L
SVZViyz1G0uxIhWXfyJQL79DZG+LUUuZzzKe5ancg/Ein5FKx35R+Sy/w8y2
HzmtRp/cH1ITzEfDibXYbJbicVf2lohhjhUHr7VuSnw1w2syiLvnKT/Yspvl
9vHFs7LUn2+pF7a0RPuv/DlALN1Djmu5vljKDSVLmVqWesVSrEgiZ86xrXkZ
Wr09/I23LYYtI7GgR5V+Uz7281BdcUVh2/Z8XDzJ3v5Rcbd//CO5P4/OptFu
KP5e/2eOOZY4+R80d327zn5NBrFeMvjdljqWnLuAZv4s9Rda7grbWMK9+KPT
yD5fIpHvVS/sv6X83V3QfIss9VtLGrqObTtO9j/btspVZXf4ibctRi2JeGYy
cooK08OqzbGf7JaOXVRoW+P86nexCxR3+w9/ofeHakl6bWK8z84wlhvqz7FE
/LFjsNg3/t3s1bwmg1grT5nOdu9sKbkPaGbOUn+VhSxUtCTHbfEkxdm6RRp6
EKXke9UL+28hguaVs9RJy3XQUnHn7qbSgdZpi0FLEizFdfJyH0VBHl49DdIO
+eNp/lTEa7fb1P7ULfnt+HwfHMODa+d5upuj9hwrPk4zdPqVQ/OaDGI9C53t
3t1SUAtoZs5Sf5FFplaxeM6dpPzsN/Fe9cLeW8igecUsdZnlMmqjyqUme1sM
Wvz1/LzVeO3npa3zxy8fwGuz2+T+1CzxYTe77sxosQ/bWsjC/n5WpM5rMojV
LdSWehYa7iz1l1gk6u4W6r3qhW9hodDIUm+j1mmLQUt2XGYV3l1w6uSPq49+
HdJSjF+36UQW+uIO+U1WbA0+KekYFlhg+SYtyT7/uNrdDfJn8klJx7DAAsu3
aEk21nQ6XwQff4UNAAAAAAAAAAAAYJr/Byf6ZmE=
            "], {{0, 108}, {486, 
            0}}, {0, 255},
            ColorFunction->RGBColor],
           BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
           Selectable->False],
          DefaultBaseStyle->"ImageGraphics",
          ImageSize->Magnification[1],
          ImageSizeRaw->{486, 108},
          PlotRange->{{0, 486}, {0, 108}}]], "ExerciseOutput",
         ImageSize->{490, 108},
         ImageMargins->{{0, 0}, {0, 0}},
         ImageRegion->{{0, 1}, {0, 1}},
         Magnification->1],
        Apply[TextCell, 
         Cell[
          BoxData[
           GraphicsBox[
            TagBox[
             RasterBox[CompressedData["
1:eJztnT+r+0p+xp1Nk3Lfwr4B12ldpjJsSHeaXXK9BMJdc3chuHWnUp06V66c
xpUhYAKGG0xAjdhFLIhgFrwLWlChW6hQ4Wgk2Zat78gjzdce2b/nA/dyPEee
j+aPRn+Of35+8evf/nLys8Fg8Lt/yP73y1/9x+iHH341++efZy/+5fvf/dtv
vv/uX//p+99/95vvfvjHX/99Vvjv2X9/+bvBQPx8AgAAAAAAAAAAAAAAAAD6
TrSxJsPh1EuKl3HgeYc4vf4+DXeb1XK19o5Jl0Kae0t08Dar1Wq9PUTXwvjo
bdar9WYXhEn1jRf8Y9zKolhhWC3Ki6v90Q+LpB+Yx4W2pFGwFQ3cV7pfa1xE
b/juRoy/G1WnXjYtvKBaF9W3WhZy4unMZNJC73ZXCzlzpNNJpy1p5O5EU9xD
dN2IaovWuNQssrbQg2XSYoDYcwaDwcRaH9NTsJoNcqz9ZYAO1mhwZrgOkpaF
BHWLu5jkbxrmxaNttiun1F1Mi6qKjRdevnHiXiV5FcoW9Qpjezi4ZbiTrECG
LLJ+YB4X0pL4q+G1geNdmOqNi2DvfFXePAtElcl6WlQ53J9PFHTfalioiafX
Y4RFttudLeTMkU0nndH386LhOK9hvj1IhkBvXAgL3RbJYBmzmCJ27cHALo/t
7XI+HWc76rhlS49b0dCVOIQO4qfJOm1TSFKzJIvRYOy44sdon033kS1+9heT
sZ0f+GkgKpxtxY/HdfZ7sUqkBdJ21dvSosL08uJoZUM3WckmuikLWSH3uJCW
ZJltMrSOJ3Gyzyb3cL7THJfTcZO9HFs7cZ4+7ixnV5wDtgtrNsn6ZeyeT2Rk
32pY6Imn02NkW8jd1rKQM4cq1LHkK8OoWPNENUM7krRFZ1xIC9UWerAMWkyR
eGLFrlzc+VlT7bKl6To7eY6c4rf+MmvBxE/UCxu0VcspjaPztrFN9FJsZb3/
tUzKnh97que9G0uHCiPx28Hm2DsLVSH/uFCW2Bll870cIH+RVTg/6o1LsMoW
/i+fem/qL7K9d4lbj2vf6lioiafVYw1tud1tLcsFcuZUCvVHfx7mP4dimbNv
9eQQtB6XZku1gY9WCSMWAwTZOA4r+5/f3p5bGjvD6z4n4vnJaB+rF8qtN5Yq
x/nguiBk3Rcegu0iP2+vg9P5Gc7wazqdzpxVk4G2tKtQrE4NFwwGLVSF/ONC
WaKswssAHbfzokKNcUk30+xCfXvwtwvHWW1ulue82tsVu9a3+paiKeeJp9Nj
csv9brMcL+TMqRZqWdLjJns5mi6Do2eNBiNrJ2mLvFDHIm3g6X6VMGh5OVGw
FSfh6lPHuxV7dB3x8+GjXigXS1ZsT1yzDTfnZ0f5mbFgWlwbJMEqu2uxV+t1
PjcaniSQllYVpsFK3FEeHl04mrBQFfKPC7nbriPuN6eWY8+LB7ZfWYUa4xLn
9YlnCbN5/jh0vLh0ZX2H632rbzndTDydHpNaarvNcLyQM+e2UNMSLyrPwLfh
uZQagq7jIrXIGniqrRImLS/HKva/OhHMXWMftxZ1gk7jozsfXm/uLhzyW772
VyaqFV5u+R9g0lKt8Kn3PtXdTrzNcj6bWYuNK4Zs7CayLVUs+RXOZFm+uN1D
ySIj7dtultuJp9NjTZbb3WYYF3Lm3BZqWXbZvg6tIElDfzMdir9YVFzkEHQY
lyYL2UDJKmHI8nLSyBc9PK/cEaSeeP7jFV0u7vIGo0VxRAbLiXgOlqoXNoir
FsEh76LJwrtuklwXgnAzKyZbmlwrDc+35IqWlhXGi+zNs83jU6wZS71C/nF5
2NviiWBeuc64uHZ2IegUe5geVtX3Jn6+Yp97lOxbTUtt4mn1GGmhdlv3eJHM
nLtCHUtkDwfjZXD+jS1vi8640BZZA+urhGGLCYLV1/k5fCI+n7hbiJPLcud7
4vObxfPJ+doLg+3X+YMB6oWn1J9lZ/n5pnIVRliC9by4n9p5nuvu93svSvwv
8Tf3VRBGx2A3G4nPJ4SpKPyyN4cwDPbLUX7XGStafmpToeDmjlK1LS+01Ctk
HheJxV/NJ9Y6OB52S/EAxNqFJ51xSbKipRj75T6KgvyjVdMgFZdrnufvltmK
M1zsXM8/pinVt3oWYuKlWjOZsJAzWe94oWcOVahhScQfUQeTbRDG8XFjZeva
lyef3l3HhbJIGkgOljmLMa6fFUnc8eAGO78dLT+gKA5D+/KwR7Uw8cSzzmHl
syiE5c/O6LYoPwMedpUnT6PpTszU1N9Wth3Py1OokiVuUaFAfBrq5ojokSWS
Vcg6LrTFX1uXstmy2HOtccnrnF/evPZFSeW5aE7+x3Gqb3UsETnxNHqMbgu9
23oWYuZICrtbksC6lo5X+aesybZojQtlodoiGSxTFnPkh4bVvCdJHEXR/T/I
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
4qHeq17Yf0u5tTxovjlLvW7Ja8tXpPFsNiqzUNnbYtCS3e5lC/qX3/3Yz69Y
Rl9fZTBfu92u7w9FmDXAudlFhjnmiaOrl9+2+poM4o4WWbZ7d8uZakAzf5b6
SyxkYUtLjmuPylMA8V71wv5bym2IEEz1LPUby0ksFyIc0A5jb1wq2Nti0CIC
9Ybz7cHfLhxntXHbHvt5cPNgczgux8VcbbXb9f2hiPNEg2zhmEzm9tLPH0vq
zzGxevcz0eA1GcRdLeSWOpaC24Bm/iz111iowpaWbCcPInl5svQle6he2H/L
SVZViyz1G0uxIhWXfyJQL79DZG+LUUuZzzKe5ancg/Ein5FKx35R+Sy/w8y2
HzmtRp/cH1ITzEfDibXYbJbicVf2lohhjhUHr7VuSnw1w2syiLvnKT/Yspvl
9vHFs7LUn2+pF7a0RPuv/DlALN1Djmu5vljKDSVLmVqWesVSrEgiZ86xrXkZ
Wr09/I23LYYtI7GgR5V+Uz7281BdcUVh2/Z8XDzJ3v5Rcbd//CO5P4/OptFu
KP5e/2eOOZY4+R80d327zn5NBrFeMvjdljqWnLuAZv4s9Rda7grbWMK9+KPT
yD5fIpHvVS/sv6X83V3QfIss9VtLGrqObTtO9j/btspVZXf4ibctRi2JeGYy
cooK08OqzbGf7JaOXVRoW+P86nexCxR3+w9/ofeHakl6bWK8z84wlhvqz7FE
/LFjsNg3/t3s1bwmg1grT5nOdu9sKbkPaGbOUn+VhSxUtCTHbfEkxdm6RRp6
EKXke9UL+28hguaVs9RJy3XQUnHn7qbSgdZpi0FLEizFdfJyH0VBHl49DdIO
+eNp/lTEa7fb1P7ULfnt+HwfHMODa+d5upuj9hwrPk4zdPqVQ/OaDGI9C53t
3t1SUAtoZs5Sf5FFplaxeM6dpPzsN/Fe9cLeW8igecUsdZnlMmqjyqUme1sM
Wvz1/LzVeO3npa3zxy8fwGuz2+T+1CzxYTe77sxosQ/bWsjC/n5WpM5rMojV
LdSWehYa7iz1l1gk6u4W6r3qhW9hodDIUm+j1mmLQUt2XGYV3l1w6uSPq49+
HdJSjF+36UQW+uIO+U1WbA0+KekYFlhg+SYtyT7/uNrdDfJn8klJx7DAAsu3
aEk21nQ6XwQff4UNAAAAAAAAAAAAYJr/Byf6ZmE=
              "], {{0, 108}, {486, 
              0}}, {0, 255}, ColorFunction -> RGBColor], 
             BoxForm`ImageTag[
             "Byte", ColorSpace -> "RGB", Interleaving -> True], Selectable -> 
             False], DefaultBaseStyle -> "ImageGraphics", ImageSize -> 
            Magnification[1], ImageSizeRaw -> {486, 108}, 
            PlotRange -> {{0, 486}, {0, 108}}]], "ExerciseOutput", 
          Magnification -> 1, CellFrameColor -> GrayLevel[0], Selectable -> 
          False, Copyable -> False, Editable -> False, ShowCellBracket -> 
          False, CellLabel -> "Out[]=", CellFrame -> False]]],
       FrameMargins->{{10, 0}, {10, 12}},
       ImageMargins->0,
       ImageSize->Full], 
      ButtonBox[
       PaneBox[
        StyleBox["\[Times]",
         FontFamily->"MathematicaMono",
         FontSize->18,
         FontWeight->"Bold",
         FontColor->GrayLevel[0.75]],
        Alignment->Right,
        FrameMargins->{{0, 6}, {0, 0}},
        ImageMargins->0],
       Appearance->None,
       ButtonFunction:>(SelectionMove[
          ButtonNotebook[], All, ButtonCell, AutoScroll -> False]; 
        NotebookFind[
          EvaluationNotebook[], "Exercise", Previous, CellStyle, WrapAround -> 
          False, AutoScroll -> False]; FrontEndExecute[
          FrontEndToken[
           ButtonNotebook[], "OpenCloseGroup"]])]}
    },
    GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {Top}},
    GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
   "Grid"],
  FrameMargins->0,
  FrameStyle->GrayLevel[0.7],
  StripOnInput->False]], "ExerciseOutput",
 Editable->False,
 Selectable->False,
 Deletable->False,
 CellFrame->{{1, 1}, {1, 1}},
 ShowCellBracket->False,
 CellFrameMargins->{{0, 0}, {0, 0}},
 CellFrameColor->GrayLevel[1],
 LineBreakWithin->Automatic]
}, Closed]],

Cell[CellGroupData[{

Cell[BoxData[
 StyleBox[
  DynamicBox[ToBoxes[
    $CellContext`SolutionResponseText["42.2"], StandardForm],
   ImageSizeCache->{140., {3., 9.}}], "SolutionResponseText"]], "Subsection",
 Editable->False,
 Selectable->False,
 Deletable->False,
 ShowCellBracket->False,
 CellMargins->{{24, 25}, {3, 0}},
 CellFrameMargins->{{8, 0}, {0, 0}},
 TextAlignment->Right,
 ShowStringCharacters->False,
 FontFamily->"Source Sans Pro",
 FontSize->12,
 FontWeight->"Plain",
 FontSlant->"Plain",
 Background->GrayLevel[1]],

Cell[BoxData[
 ButtonBox[
  PaneBox[
   StyleBox[
    RowBox[{"[", " ", 
     RowBox[{"Click", " ", "to", " ", "enter", " ", "code"}], " ", "]"}],
    Selectable->False,
    StripOnInput->False,
    FontFamily->"Source Sans Pro",
    FontSize->14,
    FontWeight->Plain,
    FontColor->GrayLevel[0.6]],
   ImageSize->Full],
  Appearance->None,
  ButtonFunction:>(SelectionMove[
     InputNotebook[], All, ButtonCell]; NotebookWrite[
     InputNotebook[], 
     Cell[
      BoxData[""], "Input"]]; SelectionMove[
     InputNotebook[], Before, CellContents]; Null),
  Evaluator->Automatic,
  Method->"Preemptive"]], "Input",
 CellFrameLabels->{{None, None}, {None, None}},
 ShowSyntaxStyles->False,
 ShowStringCharacters->False,
 CellTags->"FirstInputCell"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 PaneBox["\[ThickSpace]",
  ImageSize->Full]], "CodeSectionDividerCloud",
 Editable->False,
 Selectable->False,
 Deletable->False,
 CellMargins->{{0, 0}, {0, 35}},
 CellBracketOptions->{"OverlapContent"->True}],

Cell[TextData[{
 "Extraiga los \[OpenCurlyDoubleQuote]encabezados\[CloseCurlyDoubleQuote] en \
el art\[IAcute]culo de Wikipedia sobre \[OpenCurlyDoubleQuote]computers\
\[CloseCurlyDoubleQuote], que se indican mediante cadenas de caracteres que \
comienzan y terminan con ",
 Cell[BoxData["\"\<===\>\""], "InlineCode"],
 "."
}], "Exercise",
 Editable->False,
 Selectable->False,
 Deletable->False,
 CellDingbat->Cell[
  "42.3", "ExerciseNumber", FontColor -> 
   RGBColor[0.9019607843137255, 0.4117647058823529, 0.027450980392156862`]],
 ShowCellBracket->False,
 TaggingRules->{"MultipleSolutions" -> "True"},
 CounterAssignments->{{"SectionNumber", 42}, {"ExerciseNumber", 3}, {
   "WebOnly", 0}}],

Cell[CellGroupData[{

Cell[BoxData[
 TagBox[
  ButtonBox[
   StyleBox[
    RowBox[{
    "SAMPLE", " ", "EXPECTED", " ", "OUTPUT", " ", "\[RightGuillemet]"}],
    FontFamily->"Source Sans Pro",
    FontSize->12,
    FontColor->GrayLevel[0.6]],
   Appearance->None,
   ButtonFunction:>(SelectionMove[
      ButtonNotebook[], All, ButtonCell, AutoScroll -> False]; FrontEndExecute[
      FrontEndToken[
       ButtonNotebook[], "OpenCloseGroup"]]),
   Evaluator->Automatic,
   Method->"Preemptive"],
  MouseAppearanceTag["LinkHand"]]], "ExerciseExpectedResult",
 Editable->False,
 Deletable->False,
 ShowCellBracket->False],

Cell[BoxData[
 FrameBox[
  TagBox[GridBox[{
     {
      PaneBox[
       InterpretationBox[Cell[BoxData[
         GraphicsBox[
          TagBox[RasterBox[CompressedData["
1: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
a0FmA9Yer5USeBlUwjIJ/cepb5o5QBs0/kBcTgWxreVBs4QHEZ/XYNkahjJQ
ssqG3sL43sAmXknUG0qAKN4a/DGQqPUQc5Akzl+1gRWu8ctWLVLCIcss089v
dyXq1zDE/4DGnjbjg3MjapD9vdEsAIFdHodoidv1yadRu3eTrNGYSAm5O1Hd
y7R0faKGqzdrGqIMJQLLBfR11TQVhX0NdlUNoh1P2D0S1NXMTwRKWCah/zDV
eIbmhaeirqv8jJbEyIiaR2wv8aDnyISIz2uw7B5mKEMly2zoLYzvDWzitUS9
gW4MwJ01+GMhUa9DzAGSuHDVOitc5xdOj1LCdZZZoJ8LdZPXqIHR3UsY4jVZ
+4iz9lqTlVtyU5DTvdEs0MxLnjBqiNt4/rUPaxa15NMIZcVAMeydqO7FRK2Q
6PmJBlS9WTgVuFE+4BG7G41WbcgaODeiVn0NdVUNoh3hsKxD0bYleQVMRtRw
Z18koX9fpDis6/SiHNvKz8hrVhmxreVBz4kXJD4vw7JJorbt6e70WSmXDLCh
tzC+N7CJ0RdobGmri/dKB9xANwbgzhr8scizXoWYQ5hs8apVVrjWL3MDH6WE
g5aB6qzBRs8m0nLeX8EQH088HdjHF64v+AXgdG8ziw0shypsd5i4jbMTLye7
isxxjWHvQnVraekgiZ6zOVg93i7kNW3azSBvy/FHq+/D4qbzNdhVbzCi/ZpH
lnJQX4KehP4jkeIDCGoGEdsr3+JCBelh2WRdsezRKdcVi0ps6K2M7zvZxJC2
lQDAnTeVrIOY6w8KV62zwulpWlz0E+RlnWXuoZ+v6SUM8R4mgS+xv18DpJaI
2+QHI2NCwVE75hnNLyWfD9qHtKl6M3pehxmXtNRVQUT70EsHFzu7NtgMUvxl
EpcI7pJhfL9EhrwM6qPMgn9f5id5Nz7W2aLB6X0+KvuY6j3fVR8owQT2K4W+
hLQi5Ucm2641jO9XyJCXQX2UWQZ+vQV/57z58+3P0MdU7/mu+kAJJrDfSobx
bfT9RKP2q6uh08dU7/muajq7kZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGR
kZGRkZGRkZGRkZHRT9CLcMZdk2eF8rt2w0qetQz71iHCNTJeu1vPQNiHrs6z
8p1/BG2+av5q9VkcAPscvkovwhnDZPNfx0qWndU3aRCc0PZaa7BvGBGuk/Ea
pCYND8m/zE9RQNDkSOgfQRDm7fAMhB02FPpDfY4Cz3Vdz4/OxWf+cmbgfnJS
JTOO51F9cJ75+UJbXO6O2fqJj+lFOGOYbP7rWMmys8hWmaiDr8G+YUS4TsZr
gPoE7Rj3r04Hx947+2k/OMex7X1S9c9A2EFDDc2F7AboeL7v4n96508b16Ln
zoFG2jWPHccX9qy7Wx+cZ36+4E13sR4ANytSmD7bMdk8dFjX5b8HK/kRMjgo
2VmwWdg9+VvegQi/Ga9NJ3K3x2TzCVRH2AR7Diuw3cLCrXBthipSDIWRBDtr
Yq80lyjhx7Sa24Bsdg2/W4gRCYY+JmorkKEJy3dhfwAdpM8zsJvuxKZDgvDu
35dvDhtQBSt3ZWwxIgPeS9YhNMKhPtk7V4s3EjErEmwa0Ub3wTQdygLH9k7I
Ygp0eLXLvysruU9DCme3vbB6dhVSZo7MeEoO9g0CpmFEuE7Ga4rXMEnBm0fG
nbymsQphFxHkaPd+iuIaL+PAAVTtZeJeqWGgQtt1RgNaN1QH2z7GMb73vuhV
ynyX0J2RLERhScq+SmzLoysvc4E7P6LkFz1ffq4zkGcgN92DTW9h79/UFt3l
/S9QX509d5w4zfL8sBaeMiCXCgArD815x/rXhXA1MD6pRA9+X7v2xOOMFdh0
j7nedO1rKB2CWIKgw6td/j1ZyRS3NB4aM5LrL0/3NzprTAZpll4ulzTNzhFj
hc8byWr41yAi3Hhts9dQ4d6Fb4WcqNcg7AKCvKMsdT++FPnZt+VEvcCfAqHt
sNFAfjd+xKD+G53SrBwgynyD7Ta65pJe8rrrCoYqplB495QVF4xLIPhCHV9e
Cl0pz4BuugebDnv/BrXozfnmfXVy947LyXGPIsdSNaAOrNweEch7/EfjE1qL
k4xGiTHq+9a3VVmJatB9OIYpBJtGZRJiLEYm2dl1AdW9Pol+N1YyOejH2ZZv
HLY4KyI8UCYyvhDRhDr+NYgIN17b6LXr2E4/5R5uaqJeg7ALCHIBcM/NjCab
cAhdmrvG3jeOGDXQ9gWjyfxu8dZTe0QYeo+ISGzpQ8Q1zus/mHvolr2Odc5L
u/QBuWkjNn3J+1KLvj/fXDWgDqxMnllhXZ8QhaFIkI+uiINzzK7ktbUoSwhU
DWy6Qk8Fd4xeNDhwk0EDHV7t8u/KSh7GJzXNp36y/fO4jc6aOcJrgGkYk2q8
ttFr1wuyzFVoBZSol9i+QiYRWeqqociI+kJWF7s6LzDtZGyIxiPg3eHWTeBa
disIhi5EmljgDIUXnwgQxlEfujeNm+7Bpmu8D7bovfnmXRFZiOlrW+R/iO7r
FeqIWkAta8HKfYmeRAd/v3PP5LnmB4z1NvRXSWR5fooKHWz6mo62DM4nh8GA
YFT3Qpf/BqzkoUpjTKvQvp25bXcW+DJxDTCtyX7Ga5u8hjAi0hcdTyZqylJn
42tlRD3OVdACx2FebKEN0XhE8yCGWicmUg0MXUgLYoG7M5tsZ2gRxmEYxw2J
Wox/0E33YNNh72ta9NZ8877J2AefVGF0btVlTzccH9lZNv4vK+pOA1amT6VR
PnbVmSA9nXhpWWfCGWth08OJvlHxKlIxCDpMTHqWVpDenpVcxN5+fIi3Xddk
DjIV97ZCoSdvdJaaqDNhjXoD/1r/rYjxGuS1/+fsKg9Z4GXiCoSdP4GtYjmn
ornWqTcPZWeR8d7ej/KqqooUdUS0OAB7RHN3mHovJGoYhk7WhA9FU1dNxz13
cIH2ISurAq8Vk6n3xkQt5RnQTXdh00Hvwy369nxzuuw5icQeCFYeq45fe9hk
RtZe0MTZS5ZflU44Yy1smjwX+EUzADrcXtCVeBULKvxNWcl1ylnXCYQ3g4/Q
k2Uu9kSmXgVMa0xhvLbBaz36MC8q5ceNi15pzdl7FcIuIMhHtZnH6uMdx5Sg
emRegSFtiTJsfMgjOv8CTuH576ghGsp8EdOLjplY4Gkq0CZQeCmipPJZdKh5
BnTTXdh00PuaFv1cvvnwAG4bVM/Tohdh08LtpRNJdRYKf1dWspY0/SH05K38
6/WCjNeo10YrltXHDKtI1Zf7GLG9ylvfDoBfhcVrQrTv1ftyBb7ipwGKm2At
RDXofaVFhm/+7fQlrGRVv5R//ajexGtGX6Ono9rwzb+fvoSVrOqX8q8f1Zt4
zehr9HRUG775N9UPZyW/Of/6Uf1wrxkt6+moNt43MjIyMjIyMjIyMjIyMjIy
MjIyMjIyMjIyMjIyMjIyMjIyMjIyMjJ6uWDe9JvKfEj5w3QnY/2GPqg1IfA6
3W9/WXcxtn60+izByGSiIIjTFeDmqnjbajHKvAxS+dtojpYoTs7pu/+G7z7G
OsURsn3/XizOdFF8vuSfbbprdQqPCDrhHU75IyE63P+TkDvtr0jcM/Z3J228
TyDaotvZj7JtL17aG3ldQ+1R9BsufW3nTINU/lYi0WIjygz93a1fvvHPHO9j
rCMkoucy2uCrxUzneQ7etn5nHT7tiT7UZ+Iu1z94uJMFi5skguI7y0bdaX9F
PKtdTCy/T2QrYzA530sbx0+8ocDbvwuIigLTKSEMsUEqfylS+W4MurRvPGJo
ClvwCeXB8aNrHX8y1Cha4jD/e6nupLRypgNoq6RBnc830ZR/73qeYLo2RTPN
aHX6BjVyscKgSC+zz3QQMqQRf2dtN5fiH+4six5/IFHrO52QWH6fttLGbzqy
swAv/q+c/3za4MRlMDUrjAOy56uMITZIZamoz0MqP4ZBFxvI0HV9Ge/d8EK2
x8ETCih+wNZ1IoP7j2CjyDkJ3U3YOZf1hcaAFSkLTUObE5DTeGvXZnQAvkq2
lzYEOlgyNvjuEKP1ufFGZDti2JI4qILTiVbE8vJ2e8YUUSbNaUfW2frSs5Ad
iIHGmHRjss37MO39Pt7etnYoBpQKbxLuZfwW2ZNAN0G9TOks2zwOJGpNe+Gu
PbHa0VU7Jvf+2cAPEJ6R+ecWAQ6apkUrZyBt/KYhOwvw4n/2z//PE8rJTnBK
02yM4mUMsUEqfxVS+S4MutxAlm3GRxvOrlfWnH18uWRlq4kfDQadZ3BfoUYx
v9t+nOdnmjCcICtSlDCl/dspbMhJ0jzDoUjQgZgWh+BEdVNith5adkiRMcb6
NPk5cA/oWUl4KMgYoCVZUPlxWuC8BM+e9KYjKJP0gtOedUTPGIGrgrGkuMwG
c5LCtGqri4tbMdpVrfCmG2t6mcZNcC9TOssWj0OJWtNeuGtPJw/XTEwsv08S
YcHKOh1tXMP2leDFeJQl0Tl1GGKDVBaL+jyk8l0YdL6BOFpsZ1qj3gcNexzH
dLVaHz8wBp1jcMNuEvyOVjN2RzJiw9mMxg+tn1CTW0nNRap0rHE8dYjCPMb5
gHPh+KycATsSX0+Gm+OgOhCO0W1APBo32TwVpx3NHkUx8Xhg38uJi6KUxrRk
hTP1z0mGG1DhTTfmehknnZs02HSgs6x6HBxRw+1dZbVLieX3ibLFB7rT3zAd
YSdMtHEN21eCFwOITC00zSCVxaI+E6n8GAa9Q2l1f0hOSXI6Z2XDuIh8KtDF
zzoGXeMm4Rz+3/2EhmSqYpdPSuzkLtxLNnAwD6uOPLpKcsRcublwEG5OPdWx
wvcKTWzRdPzLoL5GU0b3NGgSV4uJZsdzUReIKrWPSnKVVOFNN+Z6mVQfyE06
iLDaWVY9fm+iXkIAa3rc75GaW3S0cZjtKxtQzJAryc0glcWiPh2pvAmDvtzA
m9QcPa1+GwZdbZQ2UavfFNHGsiPsZFwlO9K8F2wxGQSlMq5wCG4uOv3ON2Xy
W3uMcA2uHd9f0FdDtDO2Zzz8Rvx5P0rFXDdXeJOuqdTL8KtWrZuWErXSWUhx
W4piZoDbuzVRP/X17LcWMAjU0cZBtq8ELybTQzdKm6a+DuvJzSCVvwSpfBcG
fTlaZMto42cDBh12k3CO2qOFl2r4xdl477JpR99ZO0pWumboKws3vDTXa52f
wzgbbm3o7I+n/Nr3JVpTmBI1efMCWlJN1OKIes10Oy8uq6ossgS/X3bQe7Qa
/yus2vpE2ozNi03hZqPL6P1HYwEV3nZr2sucY1LUdZkluJMVum6uAdNrOsuS
x8m61kFcqYHbu8pqlxLLllb/LMkAayKQNq5h+0pw4RkhPU4SN2CIDVL5C5DK
j2LQ4WhR8eVg/Kxi0HVu4s/hv7ibYeuc6kswxRL6MH9PL+SZTbhrX+kyC7ld
lA/CjSBLik5HJ+8jwUqLphNiw9of44xUPI/YR0FuEPk2eQ4OdSLaanc4/99q
hbfdGpWXRbNHrPFBhr8uBN2k7WWazrLg8QovXrtJxVcFbO8qq11KLNta/TsE
0sZhtq8sfOVdTzmDVP58pPIHY9Cl+NmKQdfW6g7pEOZDLxcOBvmKJZf0mOn6
bhwz8xf15E1ldyP3xwvm5IdUmgpvuvUA9Sd9gVBFdZ1FWxRYutLerVITiwGC
G322vgKprMpg0G+PWvJ1pkNfyOz2YXVF1qpS/G1hvPT28HeisX9nq42+Wl+B
VFZlMOi3Ry35OtP19cXl1l688LIyaPydaOzf2Wqjt9DPRip/Kwz6V1sS3f/Z
ZSAjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjo/dR
X+V5/b5g1E9FUf8sZCdsuudp1A/cVNSDIfcR3vlZHjf6RD1JKNZyzjTCW5Md
5H0e3oRw/aEoavVumzjLXRnbe/YTZtVZQ50wjHycnLKCenBo8zCIuV9pD3kS
Esp8GXv7eQPhzRqaZCzxUmn+LJiOb8uzNGq1InPh2/wFh9yaRO+8Rg94XDF7
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
Mg==
            "], {{0, 262}, {483, 0}}, {0, 255},
            ColorFunction->RGBColor],
           BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
           Selectable->False],
          DefaultBaseStyle->"ImageGraphics",
          ImageSize->Magnification[1],
          ImageSizeRaw->{483, 262},
          PlotRange->{{0, 483}, {0, 262}}]], "ExerciseOutput",
         ImageSize->{487, 262},
         ImageMargins->{{0, 0}, {0, 0}},
         ImageRegion->{{0, 1}, {0, 1}},
         Magnification->1],
        Apply[TextCell, 
         Cell[
          BoxData[
           GraphicsBox[
            TagBox[
             RasterBox[CompressedData["
1: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
a0FmA9Yer5USeBlUwjIJ/cepb5o5QBs0/kBcTgWxreVBs4QHEZ/XYNkahjJQ
ssqG3sL43sAmXknUG0qAKN4a/DGQqPUQc5Akzl+1gRWu8ctWLVLCIcss089v
dyXq1zDE/4DGnjbjg3MjapD9vdEsAIFdHodoidv1yadRu3eTrNGYSAm5O1Hd
y7R0faKGqzdrGqIMJQLLBfR11TQVhX0NdlUNoh1P2D0S1NXMTwRKWCah/zDV
eIbmhaeirqv8jJbEyIiaR2wv8aDnyISIz2uw7B5mKEMly2zoLYzvDWzitUS9
gW4MwJ01+GMhUa9DzAGSuHDVOitc5xdOj1LCdZZZoJ8LdZPXqIHR3UsY4jVZ
+4iz9lqTlVtyU5DTvdEs0MxLnjBqiNt4/rUPaxa15NMIZcVAMeydqO7FRK2Q
6PmJBlS9WTgVuFE+4BG7G41WbcgaODeiVn0NdVUNoh3hsKxD0bYleQVMRtRw
Z18koX9fpDis6/SiHNvKz8hrVhmxreVBz4kXJD4vw7JJorbt6e70WSmXDLCh
tzC+N7CJ0RdobGmri/dKB9xANwbgzhr8scizXoWYQ5hs8apVVrjWL3MDH6WE
g5aB6qzBRs8m0nLeX8EQH088HdjHF64v+AXgdG8ziw0shypsd5i4jbMTLye7
isxxjWHvQnVraekgiZ6zOVg93i7kNW3azSBvy/FHq+/D4qbzNdhVbzCi/ZpH
lnJQX4KehP4jkeIDCGoGEdsr3+JCBelh2WRdsezRKdcVi0ps6K2M7zvZxJC2
lQDAnTeVrIOY6w8KV62zwulpWlz0E+RlnWXuoZ+v6SUM8R4mgS+xv18DpJaI
2+QHI2NCwVE75hnNLyWfD9qHtKl6M3pehxmXtNRVQUT70EsHFzu7NtgMUvxl
EpcI7pJhfL9EhrwM6qPMgn9f5id5Nz7W2aLB6X0+KvuY6j3fVR8owQT2K4W+
hLQi5Ucm2641jO9XyJCXQX2UWQZ+vQV/57z58+3P0MdU7/mu+kAJJrDfSobx
bfT9RKP2q6uh08dU7/muajq7kZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGR
kZGRkZGRkZGRkZHRT9CLcMZdk2eF8rt2w0qetQz71iHCNTJeu1vPQNiHrs6z
8p1/BG2+av5q9VkcAPscvkovwhnDZPNfx0qWndU3aRCc0PZaa7BvGBGuk/Ea
pCYND8m/zE9RQNDkSOgfQRDm7fAMhB02FPpDfY4Cz3Vdz4/OxWf+cmbgfnJS
JTOO51F9cJ75+UJbXO6O2fqJj+lFOGOYbP7rWMmys8hWmaiDr8G+YUS4TsZr
gPoE7Rj3r04Hx947+2k/OMex7X1S9c9A2EFDDc2F7AboeL7v4n96508b16Ln
zoFG2jWPHccX9qy7Wx+cZ36+4E13sR4ANytSmD7bMdk8dFjX5b8HK/kRMjgo
2VmwWdg9+VvegQi/Ga9NJ3K3x2TzCVRH2AR7Diuw3cLCrXBthipSDIWRBDtr
Yq80lyjhx7Sa24Bsdg2/W4gRCYY+JmorkKEJy3dhfwAdpM8zsJvuxKZDgvDu
35dvDhtQBSt3ZWwxIgPeS9YhNMKhPtk7V4s3EjErEmwa0Ub3wTQdygLH9k7I
Ygp0eLXLvysruU9DCme3vbB6dhVSZo7MeEoO9g0CpmFEuE7Ga4rXMEnBm0fG
nbymsQphFxHkaPd+iuIaL+PAAVTtZeJeqWGgQtt1RgNaN1QH2z7GMb73vuhV
ynyX0J2RLERhScq+SmzLoysvc4E7P6LkFz1ffq4zkGcgN92DTW9h79/UFt3l
/S9QX509d5w4zfL8sBaeMiCXCgArD815x/rXhXA1MD6pRA9+X7v2xOOMFdh0
j7nedO1rKB2CWIKgw6td/j1ZyRS3NB4aM5LrL0/3NzprTAZpll4ulzTNzhFj
hc8byWr41yAi3Hhts9dQ4d6Fb4WcqNcg7AKCvKMsdT++FPnZt+VEvcCfAqHt
sNFAfjd+xKD+G53SrBwgynyD7Ta65pJe8rrrCoYqplB495QVF4xLIPhCHV9e
Cl0pz4BuugebDnv/BrXozfnmfXVy947LyXGPIsdSNaAOrNweEch7/EfjE1qL
k4xGiTHq+9a3VVmJatB9OIYpBJtGZRJiLEYm2dl1AdW9Pol+N1YyOejH2ZZv
HLY4KyI8UCYyvhDRhDr+NYgIN17b6LXr2E4/5R5uaqJeg7ALCHIBcM/NjCab
cAhdmrvG3jeOGDXQ9gWjyfxu8dZTe0QYeo+ISGzpQ8Q1zus/mHvolr2Odc5L
u/QBuWkjNn3J+1KLvj/fXDWgDqxMnllhXZ8QhaFIkI+uiINzzK7ktbUoSwhU
DWy6Qk8Fd4xeNDhwk0EDHV7t8u/KSh7GJzXNp36y/fO4jc6aOcJrgGkYk2q8
ttFr1wuyzFVoBZSol9i+QiYRWeqqociI+kJWF7s6LzDtZGyIxiPg3eHWTeBa
disIhi5EmljgDIUXnwgQxlEfujeNm+7Bpmu8D7bovfnmXRFZiOlrW+R/iO7r
FeqIWkAta8HKfYmeRAd/v3PP5LnmB4z1NvRXSWR5fooKHWz6mo62DM4nh8GA
YFT3Qpf/BqzkoUpjTKvQvp25bXcW+DJxDTCtyX7Ga5u8hjAi0hcdTyZqylJn
42tlRD3OVdACx2FebKEN0XhE8yCGWicmUg0MXUgLYoG7M5tsZ2gRxmEYxw2J
Wox/0E33YNNh72ta9NZ8877J2AefVGF0btVlTzccH9lZNv4vK+pOA1amT6VR
PnbVmSA9nXhpWWfCGWth08OJvlHxKlIxCDpMTHqWVpDenpVcxN5+fIi3Xddk
DjIV97ZCoSdvdJaaqDNhjXoD/1r/rYjxGuS1/+fsKg9Z4GXiCoSdP4GtYjmn
ornWqTcPZWeR8d7ej/KqqooUdUS0OAB7RHN3mHovJGoYhk7WhA9FU1dNxz13
cIH2ISurAq8Vk6n3xkQt5RnQTXdh00Hvwy369nxzuuw5icQeCFYeq45fe9hk
RtZe0MTZS5ZflU44Yy1smjwX+EUzADrcXtCVeBULKvxNWcl1ylnXCYQ3g4/Q
k2Uu9kSmXgVMa0xhvLbBaz36MC8q5ceNi15pzdl7FcIuIMhHtZnH6uMdx5Sg
emRegSFtiTJsfMgjOv8CTuH576ghGsp8EdOLjplY4Gkq0CZQeCmipPJZdKh5
BnTTXdh00PuaFv1cvvnwAG4bVM/Tohdh08LtpRNJdRYKf1dWspY0/SH05K38
6/WCjNeo10YrltXHDKtI1Zf7GLG9ylvfDoBfhcVrQrTv1ftyBb7ipwGKm2At
RDXofaVFhm/+7fQlrGRVv5R//ajexGtGX6Ono9rwzb+fvoSVrOqX8q8f1Zt4
zehr9HRUG775N9UPZyW/Of/6Uf1wrxkt6+moNt43MjIyMjIyMjIyMjIyMjIy
MjIyMjIyMjIyMjIyMjIyMjIyMjIyMjJ6uWDe9JvKfEj5w3QnY/2GPqg1IfA6
3W9/WXcxtn60+izByGSiIIjTFeDmqnjbajHKvAxS+dtojpYoTs7pu/+G7z7G
OsURsn3/XizOdFF8vuSfbbprdQqPCDrhHU75IyE63P+TkDvtr0jcM/Z3J228
TyDaotvZj7JtL17aG3ldQ+1R9BsufW3nTINU/lYi0WIjygz93a1fvvHPHO9j
rCMkoucy2uCrxUzneQ7etn5nHT7tiT7UZ+Iu1z94uJMFi5skguI7y0bdaX9F
PKtdTCy/T2QrYzA530sbx0+8ocDbvwuIigLTKSEMsUEqfylS+W4MurRvPGJo
ClvwCeXB8aNrHX8y1Cha4jD/e6nupLRypgNoq6RBnc830ZR/73qeYLo2RTPN
aHX6BjVyscKgSC+zz3QQMqQRf2dtN5fiH+4six5/IFHrO52QWH6fttLGbzqy
swAv/q+c/3za4MRlMDUrjAOy56uMITZIZamoz0MqP4ZBFxvI0HV9Ge/d8EK2
x8ETCih+wNZ1IoP7j2CjyDkJ3U3YOZf1hcaAFSkLTUObE5DTeGvXZnQAvkq2
lzYEOlgyNvjuEKP1ufFGZDti2JI4qILTiVbE8vJ2e8YUUSbNaUfW2frSs5Ad
iIHGmHRjss37MO39Pt7etnYoBpQKbxLuZfwW2ZNAN0G9TOks2zwOJGpNe+Gu
PbHa0VU7Jvf+2cAPEJ6R+ecWAQ6apkUrZyBt/KYhOwvw4n/2z//PE8rJTnBK
02yM4mUMsUEqfxVS+S4MutxAlm3GRxvOrlfWnH18uWRlq4kfDQadZ3BfoUYx
v9t+nOdnmjCcICtSlDCl/dspbMhJ0jzDoUjQgZgWh+BEdVNith5adkiRMcb6
NPk5cA/oWUl4KMgYoCVZUPlxWuC8BM+e9KYjKJP0gtOedUTPGIGrgrGkuMwG
c5LCtGqri4tbMdpVrfCmG2t6mcZNcC9TOssWj0OJWtNeuGtPJw/XTEwsv08S
YcHKOh1tXMP2leDFeJQl0Tl1GGKDVBaL+jyk8l0YdL6BOFpsZ1qj3gcNexzH
dLVaHz8wBp1jcMNuEvyOVjN2RzJiw9mMxg+tn1CTW0nNRap0rHE8dYjCPMb5
gHPh+KycATsSX0+Gm+OgOhCO0W1APBo32TwVpx3NHkUx8Xhg38uJi6KUxrRk
hTP1z0mGG1DhTTfmehknnZs02HSgs6x6HBxRw+1dZbVLieX3ibLFB7rT3zAd
YSdMtHEN21eCFwOITC00zSCVxaI+E6n8GAa9Q2l1f0hOSXI6Z2XDuIh8KtDF
zzoGXeMm4Rz+3/2EhmSqYpdPSuzkLtxLNnAwD6uOPLpKcsRcublwEG5OPdWx
wvcKTWzRdPzLoL5GU0b3NGgSV4uJZsdzUReIKrWPSnKVVOFNN+Z6mVQfyE06
iLDaWVY9fm+iXkIAa3rc75GaW3S0cZjtKxtQzJAryc0glcWiPh2pvAmDvtzA
m9QcPa1+GwZdbZQ2UavfFNHGsiPsZFwlO9K8F2wxGQSlMq5wCG4uOv3ON2Xy
W3uMcA2uHd9f0FdDtDO2Zzz8Rvx5P0rFXDdXeJOuqdTL8KtWrZuWErXSWUhx
W4piZoDbuzVRP/X17LcWMAjU0cZBtq8ELybTQzdKm6a+DuvJzSCVvwSpfBcG
fTlaZMto42cDBh12k3CO2qOFl2r4xdl477JpR99ZO0pWumboKws3vDTXa52f
wzgbbm3o7I+n/Nr3JVpTmBI1efMCWlJN1OKIes10Oy8uq6ossgS/X3bQe7Qa
/yus2vpE2ozNi03hZqPL6P1HYwEV3nZr2sucY1LUdZkluJMVum6uAdNrOsuS
x8m61kFcqYHbu8pqlxLLllb/LMkAayKQNq5h+0pw4RkhPU4SN2CIDVL5C5DK
j2LQ4WhR8eVg/Kxi0HVu4s/hv7ibYeuc6kswxRL6MH9PL+SZTbhrX+kyC7ld
lA/CjSBLik5HJ+8jwUqLphNiw9of44xUPI/YR0FuEPk2eQ4OdSLaanc4/99q
hbfdGpWXRbNHrPFBhr8uBN2k7WWazrLg8QovXrtJxVcFbO8qq11KLNta/TsE
0sZhtq8sfOVdTzmDVP58pPIHY9Cl+NmKQdfW6g7pEOZDLxcOBvmKJZf0mOn6
bhwz8xf15E1ldyP3xwvm5IdUmgpvuvUA9Sd9gVBFdZ1FWxRYutLerVITiwGC
G322vgKprMpg0G+PWvJ1pkNfyOz2YXVF1qpS/G1hvPT28HeisX9nq42+Wl+B
VFZlMOi3Ry35OtP19cXl1l688LIyaPydaOzf2Wqjt9DPRip/Kwz6V1sS3f/Z
ZSAjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjo/dR
X+V5/b5g1E9FUf8sZCdsuudp1A/cVNSDIfcR3vlZHjf6RD1JKNZyzjTCW5Md
5H0e3oRw/aEoavVumzjLXRnbe/YTZtVZQ50wjHycnLKCenBo8zCIuV9pD3kS
Esp8GXv7eQPhzRqaZCzxUmn+LJiOb8uzNGq1InPh2/wFh9yaRO+8Rg94XDF7
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
Mg==
              "], {{0, 262}, {483, 0}}, {0, 255}, ColorFunction -> 
              RGBColor], 
             BoxForm`ImageTag[
             "Byte", ColorSpace -> "RGB", Interleaving -> True], Selectable -> 
             False], DefaultBaseStyle -> "ImageGraphics", ImageSize -> 
            Magnification[1], ImageSizeRaw -> {483, 262}, 
            PlotRange -> {{0, 483}, {0, 262}}]], "ExerciseOutput", 
          Magnification -> 1, CellFrameColor -> GrayLevel[0], Selectable -> 
          False, Copyable -> False, Editable -> False, ShowCellBracket -> 
          False, CellLabel -> "Out[]=", CellFrame -> False]]],
       FrameMargins->{{10, 0}, {10, 12}},
       ImageMargins->0,
       ImageSize->Full], 
      ButtonBox[
       PaneBox[
        StyleBox["\[Times]",
         FontFamily->"MathematicaMono",
         FontSize->18,
         FontWeight->"Bold",
         FontColor->GrayLevel[0.75]],
        Alignment->Right,
        FrameMargins->{{0, 6}, {0, 0}},
        ImageMargins->0],
       Appearance->None,
       ButtonFunction:>(SelectionMove[
          ButtonNotebook[], All, ButtonCell, AutoScroll -> False]; 
        NotebookFind[
          EvaluationNotebook[], "Exercise", Previous, CellStyle, WrapAround -> 
          False, AutoScroll -> False]; FrontEndExecute[
          FrontEndToken[
           ButtonNotebook[], "OpenCloseGroup"]])]}
    },
    GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {Top}},
    GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
   "Grid"],
  FrameMargins->0,
  FrameStyle->GrayLevel[0.7],
  StripOnInput->False]], "ExerciseOutput",
 Editable->False,
 Selectable->False,
 Deletable->False,
 CellFrame->{{1, 1}, {1, 1}},
 ShowCellBracket->False,
 CellFrameMargins->{{0, 0}, {0, 0}},
 CellFrameColor->GrayLevel[1],
 LineBreakWithin->Automatic]
}, Closed]],

Cell[CellGroupData[{

Cell[BoxData[
 StyleBox[
  DynamicBox[ToBoxes[
    $CellContext`SolutionResponseText["42.3"], StandardForm],
   ImageSizeCache->{140., {3., 9.}}], "SolutionResponseText"]], "Subsection",
 Editable->False,
 Selectable->False,
 Deletable->False,
 ShowCellBracket->False,
 CellMargins->{{24, 25}, {3, 0}},
 CellFrameMargins->{{8, 0}, {0, 0}},
 TextAlignment->Right,
 ShowStringCharacters->False,
 FontFamily->"Source Sans Pro",
 FontSize->12,
 FontWeight->"Plain",
 FontSlant->"Plain",
 Background->GrayLevel[1]],

Cell[BoxData[
 ButtonBox[
  PaneBox[
   StyleBox[
    RowBox[{"[", " ", 
     RowBox[{"Click", " ", "to", " ", "enter", " ", "code"}], " ", "]"}],
    Selectable->False,
    StripOnInput->False,
    FontFamily->"Source Sans Pro",
    FontSize->14,
    FontWeight->Plain,
    FontColor->GrayLevel[0.6]],
   ImageSize->Full],
  Appearance->None,
  ButtonFunction:>(SelectionMove[
     InputNotebook[], All, ButtonCell]; NotebookWrite[
     InputNotebook[], 
     Cell[
      BoxData[""], "Input"]]; SelectionMove[
     InputNotebook[], Before, CellContents]; Null),
  Evaluator->Automatic,
  Method->"Preemptive"]], "Input",
 CellFrameLabels->{{None, None}, {None, None}},
 ShowSyntaxStyles->False,
 ShowStringCharacters->False,
 CellTags->"FirstInputCell"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 PaneBox["\[ThickSpace]",
  ImageSize->Full]], "CodeSectionDividerCloud",
 Editable->False,
 Selectable->False,
 Deletable->False,
 CellMargins->{{0, 0}, {0, 35}},
 CellBracketOptions->{"OverlapContent"->True}],

Cell[TextData[{
 "Use una plantilla para cadena de caracteres para hacer una rejilla con los \
resultados de la forma ",
 Cell[BoxData[
  RowBox[{
   RowBox[{"i", "+", "j"}], "=", 
   StyleBox["...", "GrayPointSix"]}]], "InlineCode"],
 " para ",
 Cell[BoxData["i"], "InlineCode"],
 " y ",
 Cell[BoxData["j"], "InlineCode"],
 " hasta el 9."
}], "Exercise",
 Editable->False,
 Selectable->False,
 Deletable->False,
 CellDingbat->Cell[
  "42.4", "ExerciseNumber", FontColor -> 
   RGBColor[0.9019607843137255, 0.4117647058823529, 0.027450980392156862`]],
 ShowCellBracket->False,
 CounterAssignments->{{"SectionNumber", 42}, {"ExerciseNumber", 4}, {
   "WebOnly", 0}}],

Cell[CellGroupData[{

Cell[BoxData[
 TagBox[
  ButtonBox[
   StyleBox[
    RowBox[{"EXPECTED", " ", "OUTPUT", " ", "\[RightGuillemet]"}],
    FontFamily->"Source Sans Pro",
    FontSize->12,
    FontColor->GrayLevel[0.6]],
   Appearance->None,
   ButtonFunction:>(SelectionMove[
      ButtonNotebook[], All, ButtonCell, AutoScroll -> False]; FrontEndExecute[
      FrontEndToken[
       ButtonNotebook[], "OpenCloseGroup"]]),
   Evaluator->Automatic,
   Method->"Preemptive"],
  MouseAppearanceTag["LinkHand"]]], "ExerciseExpectedResult",
 Editable->False,
 Deletable->False,
 ShowCellBracket->False],

Cell[BoxData[
 FrameBox[
  TagBox[GridBox[{
     {
      PaneBox[
       InterpretationBox[Cell[BoxData[
         GraphicsBox[
          TagBox[RasterBox[CompressedData["
1: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
PB6PR5X/BxM7Fc8=
            "], {{0, 167}, {476, 0}}, {0, 255},
            ColorFunction->RGBColor],
           BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
           Selectable->False],
          DefaultBaseStyle->"ImageGraphics",
          ImageSize->Magnification[1],
          ImageSizeRaw->{476, 167},
          PlotRange->{{0, 476}, {0, 167}}]], "ExerciseOutput",
         ImageSize->{480, 167},
         ImageMargins->{{0, 0}, {0, 0}},
         ImageRegion->{{0, 1}, {0, 1}},
         Magnification->1],
        Apply[TextCell, 
         Cell[
          BoxData[
           GraphicsBox[
            TagBox[
             RasterBox[CompressedData["
1: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
PB6PR5X/BxM7Fc8=
              "], {{0, 167}, {476, 0}}, {0, 255}, 
              ColorFunction -> RGBColor], 
             BoxForm`ImageTag[
             "Byte", ColorSpace -> "RGB", Interleaving -> True], Selectable -> 
             False], DefaultBaseStyle -> "ImageGraphics", ImageSize -> 
            Magnification[1], ImageSizeRaw -> {476, 167}, 
            PlotRange -> {{0, 476}, {0, 167}}]], "ExerciseOutput", 
          Magnification -> 1, CellFrameColor -> GrayLevel[0], Selectable -> 
          False, Copyable -> False, Editable -> False, ShowCellBracket -> 
          False, CellLabel -> "Out[]=", CellFrame -> False]]],
       FrameMargins->{{10, 0}, {10, 12}},
       ImageMargins->0,
       ImageSize->Full], 
      ButtonBox[
       PaneBox[
        StyleBox["\[Times]",
         FontFamily->"MathematicaMono",
         FontSize->18,
         FontWeight->"Bold",
         FontColor->GrayLevel[0.75]],
        Alignment->Right,
        FrameMargins->{{0, 6}, {0, 0}},
        ImageMargins->0],
       Appearance->None,
       ButtonFunction:>(SelectionMove[
          ButtonNotebook[], All, ButtonCell, AutoScroll -> False]; 
        NotebookFind[
          EvaluationNotebook[], "Exercise", Previous, CellStyle, WrapAround -> 
          False, AutoScroll -> False]; FrontEndExecute[
          FrontEndToken[
           ButtonNotebook[], "OpenCloseGroup"]])]}
    },
    GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {Top}},
    GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
   "Grid"],
  FrameMargins->0,
  FrameStyle->GrayLevel[0.7],
  StripOnInput->False]], "ExerciseOutput",
 Editable->False,
 Selectable->False,
 Deletable->False,
 CellFrame->{{1, 1}, {1, 1}},
 ShowCellBracket->False,
 CellFrameMargins->{{0, 0}, {0, 0}},
 CellFrameColor->GrayLevel[1],
 LineBreakWithin->Automatic]
}, Closed]],

Cell[CellGroupData[{

Cell[BoxData[
 StyleBox[
  DynamicBox[ToBoxes[
    $CellContext`SolutionResponseText["42.4"], StandardForm],
   ImageSizeCache->{140., {3., 9.}}], "SolutionResponseText"]], "Subsection",
 Editable->False,
 Selectable->False,
 Deletable->False,
 ShowCellBracket->False,
 CellMargins->{{24, 25}, {3, 0}},
 CellFrameMargins->{{8, 0}, {0, 0}},
 TextAlignment->Right,
 ShowStringCharacters->False,
 FontFamily->"Source Sans Pro",
 FontSize->12,
 FontWeight->"Plain",
 FontSlant->"Plain",
 Background->GrayLevel[1]],

Cell[BoxData[
 ButtonBox[
  PaneBox[
   StyleBox[
    RowBox[{"[", " ", 
     RowBox[{"Click", " ", "to", " ", "enter", " ", "code"}], " ", "]"}],
    Selectable->False,
    StripOnInput->False,
    FontFamily->"Source Sans Pro",
    FontSize->14,
    FontWeight->Plain,
    FontColor->GrayLevel[0.6]],
   ImageSize->Full],
  Appearance->None,
  ButtonFunction:>(SelectionMove[
     InputNotebook[], All, ButtonCell]; NotebookWrite[
     InputNotebook[], 
     Cell[
      BoxData[""], "Input"]]; SelectionMove[
     InputNotebook[], Before, CellContents]; Null),
  Evaluator->Automatic,
  Method->"Preemptive"]], "Input",
 CellFrameLabels->{{None, None}, {None, None}},
 ShowSyntaxStyles->False,
 ShowStringCharacters->False,
 CellTags->"FirstInputCell"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 PaneBox["\[ThickSpace]",
  ImageSize->Full]], "CodeSectionDividerCloud",
 Editable->False,
 Selectable->False,
 Deletable->False,
 CellMargins->{{0, 0}, {0, 35}},
 CellBracketOptions->{"OverlapContent"->True}],

Cell["\<\
Encuentre los nombres en ingl\[EAcute]s de aquellos enteros menores que 50 \
que contengan una \[OpenCurlyDoubleQuote]i\[CloseCurlyDoubleQuote] en alg\
\[UAcute]n lugar antes de una \
\[OpenCurlyDoubleQuote]e\[CloseCurlyDoubleQuote].\
\>", "Exercise",
 Editable->False,
 Selectable->False,
 Deletable->False,
 CellDingbat->Cell[
  "42.5", "ExerciseNumber", FontColor -> 
   RGBColor[0.9019607843137255, 0.4117647058823529, 0.027450980392156862`]],
 ShowCellBracket->False,
 CounterAssignments->{{"SectionNumber", 42}, {"ExerciseNumber", 5}, {
   "WebOnly", 0}}],

Cell[CellGroupData[{

Cell[BoxData[
 TagBox[
  ButtonBox[
   StyleBox[
    RowBox[{"EXPECTED", " ", "OUTPUT", " ", "\[RightGuillemet]"}],
    FontFamily->"Source Sans Pro",
    FontSize->12,
    FontColor->GrayLevel[0.6]],
   Appearance->None,
   ButtonFunction:>(SelectionMove[
      ButtonNotebook[], All, ButtonCell, AutoScroll -> False]; FrontEndExecute[
      FrontEndToken[
       ButtonNotebook[], "OpenCloseGroup"]]),
   Evaluator->Automatic,
   Method->"Preemptive"],
  MouseAppearanceTag["LinkHand"]]], "ExerciseExpectedResult",
 Editable->False,
 Deletable->False,
 ShowCellBracket->False],

Cell[BoxData[
 FrameBox[
  TagBox[GridBox[{
     {
      PaneBox[
       InterpretationBox[Cell[BoxData[
         GraphicsBox[
          TagBox[RasterBox[CompressedData["
1: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
oDLwa2Hiyj+f2dZtlmb7fkxbpvs8Rkf0+3Yjb6U8nvGO7hjjfdBZkk5ntZoK
5+k/d7S4q/W2bNnntmdgDy8ilr4Tu95Is516SSOquTbxjN9/kzvTJb7U26SA
vP2HSI+Cg8ZrYeLKf25bt5Fk269pS3afx+jIPuO/PXYkR0czpjmMuwNrZYb+
862rfU3vrmRltcuohxcUS9+JXe+k2U4Q28zdKiD1xgRv8XY4TiL6ijRJ99uV
39r1vxQmvvxntjWabHs0bfHu8wQ92WfWoU4OPWkpAoWuYO4j01T959tAixtv
sTxyrwmvs5cWS9+JXe+l2U7cRN7nKFXvyhkEKXHvnpdP9vXOGZQTnx8m7vzn
tFWbPEOzfTvTlu8+zzFL9Hua/jMr2ta+jsma+7TQl06miaW/n11PKHHXbM/I
C1Os+EH6MM9PbI1DmKAmZvB/pa1Jmu3bmzazZo7vGlgC18h3LDJvqs4rz4Wf
YisBZ9529cDXTJR6rk1e6i6bnPz47vwf4K1N24H+OQD2isCT6fHSk91IwJm7
XT3wNBNF9G0XR32ZqQzEu/N/gLc2TeifCwgICAgICAgICAgICAgICAgICAgI
CAgICAgICAgICAi8Bd5dznoKtrDxscRxkUZhPPzp4kxsE7sFK2/0tJeqcaz+
hfS6eRMGsYue+O5y1lOwrY2J0yg1gSAKtAd9mHlPBdW3jt2SsuqNnrYdT7ph
a71u3oQhvObwwlZl+XgOrot11XeXs56CbW3MQ/t41PxsNGRtDYcx2iC2jt2C
suotPe2JN2ys182bMIjXHF7GFzLAsZ97L4K15azL4ez5XHN7/F7K5dkPCdeX
7H6s9txbHrNBAw3seyqovr5dN16y6oCe9ujMvAu9bt6EW3cv4fDYqlTjPoyV
5azxOKnWagxmQqvuaW6X2UU5yE5S3VdElnRQ6bq+YHKsRByAjbTjOt6b2gio
PaPEkaVTJZSHUlOthBKUoyIdZJswUoiKsN4W9O7T3tguvrLqXT1tBMuej/Nf
X+6eO+HFHT62mn0Bq2om03utIElj76xquCCkuU1kzSSqhlopcNKfA/tEXE6y
/DiNiN4h2ZCO6HhvayOo9lxElZxmreakhdk1puJXR8u/olq5Ue0Ievdob2wX
Z1n1jp42gmXPH/BfX+6eN+HFHU5UX+bK7IxibTlrzQ7yqjysuU3Pl+hRD4ro
rjFlkt1HO6IFy5Cp744Ife/BRki/mm1mCxOvLUy2bCBaxEarX7d0KasRpk17
W7vWlFUfkz1/xH9TuXsuhJd2eJmQeUF34yUOQ9fUTC7x0M3WcIrmXMc0t68e
mfUiVJDaqAAaCocaysWI0Pe2Nv4VUntu1YAu5C08qhcnAZ0G2EYM1Obt0d44
divKqkcjsucP+W8pd8+F8PIORybte/4Cq401NZMrdyW+LZMB/B8jmtsIL7ak
s+No9ek01Uo9ud3j7hGh721thPWrWxWmLtl+ydJBUlQnyIbk+4PGo7O7FWO3
jqw67YNjsueP+W8jd8+P8NIOZ9sWKwB3h3OxnmZyZJ8UzU6uRZEFR7prhjW3
8VrD19koWX+3AblkWpbtIMnzLHAsB7Ma0fHeWBcaUnvujQN46krz/Hq94nUo
O2yHBb17guob28VbVr3dqWHZ82f8V5a750x4WYfjNRU50zCX0udaTTM59a1m
6XQ02BYQ0Ny+kRiRQUI6N2uLMrNU+V5S99JRHe/NJa8Has/tCkOjsYLViee3
UUHvtqD6tnZxl1Vv6WnfYNnzp/zXlbvnTHhZhy/69KRmuJpmcgkofk+WAUeQ
KvQQO9CFBvWrq8MrA2chPWXDySnVq+JRtGjvwK5XMVFWfcDtmWVby90Dt2xF
uNdO3+Ex3cpyCO3HsKkc9B271oUuAjyVa05Y4J6eZxf6pnV32ht4d23XTCxu
y9vJ3a+rY48Ciz5G/vA35xfHxnLQd+xaF7psLx3J6fn0g6ld2zUTS9vydnL3
6+rYo4t+Op2tZHfrDIHpoL8ze/xNbwEBAQEBAQEBAYH/L/wPRpBETQ==
            "], {{0, 
            64}, {359, 0}}, {0, 255},
            ColorFunction->RGBColor],
           BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
           Selectable->False],
          DefaultBaseStyle->"ImageGraphics",
          ImageSize->Magnification[1],
          ImageSizeRaw->{359, 64},
          PlotRange->{{0, 359}, {0, 64}}]], "ExerciseOutput",
         ImageSize->{363, 64},
         ImageMargins->{{0, 0}, {0, 0}},
         ImageRegion->{{0, 1}, {0, 1}},
         Magnification->1],
        Apply[TextCell, 
         Cell[
          BoxData[
           GraphicsBox[
            TagBox[
             RasterBox[CompressedData["
1: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
oDLwa2Hiyj+f2dZtlmb7fkxbpvs8Rkf0+3Yjb6U8nvGO7hjjfdBZkk5ntZoK
5+k/d7S4q/W2bNnntmdgDy8ilr4Tu95Is516SSOquTbxjN9/kzvTJb7U26SA
vP2HSI+Cg8ZrYeLKf25bt5Fk269pS3afx+jIPuO/PXYkR0czpjmMuwNrZYb+
862rfU3vrmRltcuohxcUS9+JXe+k2U4Q28zdKiD1xgRv8XY4TiL6ijRJ99uV
39r1vxQmvvxntjWabHs0bfHu8wQ92WfWoU4OPWkpAoWuYO4j01T959tAixtv
sTxyrwmvs5cWS9+JXe+l2U7cRN7nKFXvyhkEKXHvnpdP9vXOGZQTnx8m7vzn
tFWbPEOzfTvTlu8+zzFL9Hua/jMr2ta+jsma+7TQl06miaW/n11PKHHXbM/I
C1Os+EH6MM9PbI1DmKAmZvB/pa1Jmu3bmzazZo7vGlgC18h3LDJvqs4rz4Wf
YisBZ9529cDXTJR6rk1e6i6bnPz47vwf4K1N24H+OQD2isCT6fHSk91IwJm7
XT3wNBNF9G0XR32ZqQzEu/N/gLc2TeifCwgICAgICAgICAgICAgICAgICAgI
CAgICAgICAgICAi8Bd5dznoKtrDxscRxkUZhPPzp4kxsE7sFK2/0tJeqcaz+
hfS6eRMGsYue+O5y1lOwrY2J0yg1gSAKtAd9mHlPBdW3jt2SsuqNnrYdT7ph
a71u3oQhvObwwlZl+XgOrot11XeXs56CbW3MQ/t41PxsNGRtDYcx2iC2jt2C
suotPe2JN2ys182bMIjXHF7GFzLAsZ97L4K15azL4ez5XHN7/F7K5dkPCdeX
7H6s9txbHrNBAw3seyqovr5dN16y6oCe9ujMvAu9bt6EW3cv4fDYqlTjPoyV
5azxOKnWagxmQqvuaW6X2UU5yE5S3VdElnRQ6bq+YHKsRByAjbTjOt6b2gio
PaPEkaVTJZSHUlOthBKUoyIdZJswUoiKsN4W9O7T3tguvrLqXT1tBMuej/Nf
X+6eO+HFHT62mn0Bq2om03utIElj76xquCCkuU1kzSSqhlopcNKfA/tEXE6y
/DiNiN4h2ZCO6HhvayOo9lxElZxmreakhdk1puJXR8u/olq5Ue0Ievdob2wX
Z1n1jp42gmXPH/BfX+6eN+HFHU5UX+bK7IxibTlrzQ7yqjysuU3Pl+hRD4ro
rjFlkt1HO6IFy5Cp744Ife/BRki/mm1mCxOvLUy2bCBaxEarX7d0KasRpk17
W7vWlFUfkz1/xH9TuXsuhJd2eJmQeUF34yUOQ9fUTC7x0M3WcIrmXMc0t68e
mfUiVJDaqAAaCocaysWI0Pe2Nv4VUntu1YAu5C08qhcnAZ0G2EYM1Obt0d44
divKqkcjsucP+W8pd8+F8PIORybte/4Cq401NZMrdyW+LZMB/B8jmtsIL7ak
s+No9ek01Uo9ud3j7hGh721thPWrWxWmLtl+ydJBUlQnyIbk+4PGo7O7FWO3
jqw67YNjsueP+W8jd8+P8NIOZ9sWKwB3h3OxnmZyZJ8UzU6uRZEFR7prhjW3
8VrD19koWX+3AblkWpbtIMnzLHAsB7Ma0fHeWBcaUnvujQN46krz/Hq94nUo
O2yHBb17guob28VbVr3dqWHZ82f8V5a750x4WYfjNRU50zCX0udaTTM59a1m
6XQ02BYQ0Ny+kRiRQUI6N2uLMrNU+V5S99JRHe/NJa8Has/tCkOjsYLViee3
UUHvtqD6tnZxl1Vv6WnfYNnzp/zXlbvnTHhZhy/69KRmuJpmcgkofk+WAUeQ
KvQQO9CFBvWrq8MrA2chPWXDySnVq+JRtGjvwK5XMVFWfcDtmWVby90Dt2xF
uNdO3+Ex3cpyCO3HsKkc9B271oUuAjyVa05Y4J6eZxf6pnV32ht4d23XTCxu
y9vJ3a+rY48Ciz5G/vA35xfHxnLQd+xaF7psLx3J6fn0g6ld2zUTS9vydnL3
6+rYo4t+Op2tZHfrDIHpoL8ze/xNbwEBAQEBAQEBAYH/L/wPRpBETQ==
              "], {{
              0, 64}, {359, 0}}, {0, 255}, ColorFunction -> RGBColor], 
             BoxForm`ImageTag[
             "Byte", ColorSpace -> "RGB", Interleaving -> True], Selectable -> 
             False], DefaultBaseStyle -> "ImageGraphics", ImageSize -> 
            Magnification[1], ImageSizeRaw -> {359, 64}, 
            PlotRange -> {{0, 359}, {0, 64}}]], "ExerciseOutput", 
          Magnification -> 1, CellFrameColor -> GrayLevel[0], Selectable -> 
          False, Copyable -> False, Editable -> False, ShowCellBracket -> 
          False, CellLabel -> "Out[]=", CellFrame -> False]]],
       FrameMargins->{{10, 0}, {10, 12}},
       ImageMargins->0,
       ImageSize->Full], 
      ButtonBox[
       PaneBox[
        StyleBox["\[Times]",
         FontFamily->"MathematicaMono",
         FontSize->18,
         FontWeight->"Bold",
         FontColor->GrayLevel[0.75]],
        Alignment->Right,
        FrameMargins->{{0, 6}, {0, 0}},
        ImageMargins->0],
       Appearance->None,
       ButtonFunction:>(SelectionMove[
          ButtonNotebook[], All, ButtonCell, AutoScroll -> False]; 
        NotebookFind[
          EvaluationNotebook[], "Exercise", Previous, CellStyle, WrapAround -> 
          False, AutoScroll -> False]; FrontEndExecute[
          FrontEndToken[
           ButtonNotebook[], "OpenCloseGroup"]])]}
    },
    GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {Top}},
    GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
   "Grid"],
  FrameMargins->0,
  FrameStyle->GrayLevel[0.7],
  StripOnInput->False]], "ExerciseOutput",
 Editable->False,
 Selectable->False,
 Deletable->False,
 CellFrame->{{1, 1}, {1, 1}},
 ShowCellBracket->False,
 CellFrameMargins->{{0, 0}, {0, 0}},
 CellFrameColor->GrayLevel[1],
 LineBreakWithin->Automatic]
}, Closed]],

Cell[CellGroupData[{

Cell[BoxData[
 StyleBox[
  DynamicBox[ToBoxes[
    $CellContext`SolutionResponseText["42.5"], StandardForm],
   ImageSizeCache->{140., {3., 9.}}], "SolutionResponseText"]], "Subsection",
 Editable->False,
 Selectable->False,
 Deletable->False,
 ShowCellBracket->False,
 CellMargins->{{24, 25}, {3, 0}},
 CellFrameMargins->{{8, 0}, {0, 0}},
 TextAlignment->Right,
 ShowStringCharacters->False,
 FontFamily->"Source Sans Pro",
 FontSize->12,
 FontWeight->"Plain",
 FontSlant->"Plain",
 Background->GrayLevel[1]],

Cell[BoxData[
 ButtonBox[
  PaneBox[
   StyleBox[
    RowBox[{"[", " ", 
     RowBox[{"Click", " ", "to", " ", "enter", " ", "code"}], " ", "]"}],
    Selectable->False,
    StripOnInput->False,
    FontFamily->"Source Sans Pro",
    FontSize->14,
    FontWeight->Plain,
    FontColor->GrayLevel[0.6]],
   ImageSize->Full],
  Appearance->None,
  ButtonFunction:>(SelectionMove[
     InputNotebook[], All, ButtonCell]; NotebookWrite[
     InputNotebook[], 
     Cell[
      BoxData[""], "Input"]]; SelectionMove[
     InputNotebook[], Before, CellContents]; Null),
  Evaluator->Automatic,
  Method->"Preemptive"]], "Input",
 CellFrameLabels->{{None, None}, {None, None}},
 ShowSyntaxStyles->False,
 ShowStringCharacters->False,
 CellTags->"FirstInputCell"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 PaneBox["\[ThickSpace]",
  ImageSize->Full]], "CodeSectionDividerCloud",
 Editable->False,
 Selectable->False,
 Deletable->False,
 CellMargins->{{0, 0}, {0, 35}},
 CellBracketOptions->{"OverlapContent"->True}],

Cell["\<\
Convierta a may\[UAcute]sculas las palabras que consten de 2 letras en la \
primera oraci\[OAcute]n del art\[IAcute]culo de Wikipedia sobre \
\[OpenCurlyDoubleQuote]computers\[CloseCurlyDoubleQuote].\
\>", "Exercise",
 Editable->False,
 Selectable->False,
 Deletable->False,
 CellDingbat->Cell[
  "42.6", "ExerciseNumber", FontColor -> 
   RGBColor[0.9019607843137255, 0.4117647058823529, 0.027450980392156862`]],
 ShowCellBracket->False,
 TaggingRules->{"MultipleSolutions" -> "True"},
 CounterAssignments->{{"SectionNumber", 42}, {"ExerciseNumber", 6}, {
   "WebOnly", 0}}],

Cell[CellGroupData[{

Cell[BoxData[
 TagBox[
  ButtonBox[
   StyleBox[
    RowBox[{
    "SAMPLE", " ", "EXPECTED", " ", "OUTPUT", " ", "\[RightGuillemet]"}],
    FontFamily->"Source Sans Pro",
    FontSize->12,
    FontColor->GrayLevel[0.6]],
   Appearance->None,
   ButtonFunction:>(SelectionMove[
      ButtonNotebook[], All, ButtonCell, AutoScroll -> False]; FrontEndExecute[
      FrontEndToken[
       ButtonNotebook[], "OpenCloseGroup"]]),
   Evaluator->Automatic,
   Method->"Preemptive"],
  MouseAppearanceTag["LinkHand"]]], "ExerciseExpectedResult",
 Editable->False,
 Deletable->False,
 ShowCellBracket->False],

Cell[BoxData[
 FrameBox[
  TagBox[GridBox[{
     {
      PaneBox[
       InterpretationBox[Cell[BoxData[
         GraphicsBox[
          TagBox[RasterBox[CompressedData["
1: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
2oD+0gv8nUWG8PZ6Gmsgg87V5beRmG45rDh6MDHQJlFlHRKm97Dor6LYt2Ga
jg/0imqk1w7VwrbFXQI8OyzauOWThf460PYMN4AVPWwIrlPls9AW29AsbG7m
TTHQzwW/dJSN6+ZGRbTd79o0wMosiJpq0QwOaHLAanKtEm97JMiaq1T5rOGb
lPwmrHif3JqVK/y6dAF92duyWyHR/+WPs+rl+qXNJGwpwLTDtFr21w1DXNMV
lhK7kE1Juffyjir3f+6eObG2ousMMgomBp7Md7mTjNX2yYcXgoD94e9E7sQ6
Q/ArLrr00If1cK1EfgLWpN3XhvMk+f4M9cJ+3bSibh//nh8/p3hwVf1qLMCc
9ZoZl3WXOnEZx5PoRIXl7NZF9vvleKS4tNIuUHWT4Ebo0pPPXunQ+HxEpqOj
cUmHdH3KgsteE4fKR/cfd6CQbkUdST6xE7pTDe71OLEUfy9vtkPvZaH0/5dA
5iR4tn+Lf8RId4hfDTpYkLLzdlyWZcLVMLSt+xTgNzVf7lmNL4k3WOpTe++3
ijZ1TTf7IsvniwCSee+WzJtO2Ijfb30c4JddZvLc3/295VmNL4k3WfkTe6/G
1wX0d/ivOstEQ+OLQnuvhoaGhoaGhoaGhoaGhoaGhoaGhoaGhoaGhoaGhoaG
hoaGhobGjxeKz8OWrq77d/tu9v2/SXtS/se5ut5XUQ/hW/rSb31wrIyZvjSl
4FpfkohwZgFggqyYHCa/TmUWey6AH2fqQ48+E9b3/Kb0YAIuQ5NGAeS/88O8
3k4heCv1WJfdjlDmKCfQuSJB9TKbsHrjOj3D+cCT9JJXg0ga85T8T/DWvVpR
D+Fprb6fPO83N5g/IkYnp+1Ptj8AY6Yvzli3XALHsh17O/zFcSzLhjwRKzmL
w3Z9H58gYYVH50F9DrDcZC+GmiyPHnhier6P+e+cGMvwVuqxqU4dx8fnq3Ds
acwJqy8Bqze202OcDdwCyyf1LZf7k//n5H+Ct+7VinoIz2n1vfAmtscT8NR+
SwnstKOqOQJjpg87nRUdYGszB0LiA6B86m/9BZIzqM6Dup+6S2RGu3tdupNC
luUmk/WubkRBv8f8S0qWd6Xz3aaJ8owWQROdzX8X9ZiSF0w4b4VlT2PO55Rw
4V3PKcMEcrdjvaETYx4fOHWnFR6/fztV/iY/Ox8fI1Y7EozT574j/mkFv6L8
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
hoaGhoYGj38BOtyvTQ==
            "], {{0, 42}, {428, 0}}, {0, 255},
            ColorFunction->RGBColor],
           BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
           Selectable->False],
          DefaultBaseStyle->"ImageGraphics",
          ImageSize->Magnification[1],
          ImageSizeRaw->{428, 42},
          PlotRange->{{0, 428}, {0, 42}}]], "ExerciseOutput",
         ImageSize->{432, 42},
         ImageMargins->{{0, 0}, {0, 0}},
         ImageRegion->{{0, 1}, {0, 1}},
         Magnification->1],
        Apply[TextCell, 
         Cell[
          BoxData[
           GraphicsBox[
            TagBox[
             RasterBox[CompressedData["
1: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
2oD+0gv8nUWG8PZ6Gmsgg87V5beRmG45rDh6MDHQJlFlHRKm97Dor6LYt2Ga
jg/0imqk1w7VwrbFXQI8OyzauOWThf460PYMN4AVPWwIrlPls9AW29AsbG7m
TTHQzwW/dJSN6+ZGRbTd79o0wMosiJpq0QwOaHLAanKtEm97JMiaq1T5rOGb
lPwmrHif3JqVK/y6dAF92duyWyHR/+WPs+rl+qXNJGwpwLTDtFr21w1DXNMV
lhK7kE1Juffyjir3f+6eObG2ousMMgomBp7Md7mTjNX2yYcXgoD94e9E7sQ6
Q/ArLrr00If1cK1EfgLWpN3XhvMk+f4M9cJ+3bSibh//nh8/p3hwVf1qLMCc
9ZoZl3WXOnEZx5PoRIXl7NZF9vvleKS4tNIuUHWT4Ebo0pPPXunQ+HxEpqOj
cUmHdH3KgsteE4fKR/cfd6CQbkUdST6xE7pTDe71OLEUfy9vtkPvZaH0/5dA
5iR4tn+Lf8RId4hfDTpYkLLzdlyWZcLVMLSt+xTgNzVf7lmNL4k3WOpTe++3
ijZ1TTf7IsvniwCSee+WzJtO2Ijfb30c4JddZvLc3/295VmNL4k3WfkTe6/G
1wX0d/ivOstEQ+OLQnuvhoaGhoaGhoaGhoaGhoaGhoaGhoaGhoaGhoaGhoaG
hoaGhobGjxeKz8OWrq77d/tu9v2/SXtS/se5ut5XUQ/hW/rSb31wrIyZvjSl
4FpfkohwZgFggqyYHCa/TmUWey6AH2fqQ48+E9b3/Kb0YAIuQ5NGAeS/88O8
3k4heCv1WJfdjlDmKCfQuSJB9TKbsHrjOj3D+cCT9JJXg0ga85T8T/DWvVpR
D+Fprb6fPO83N5g/IkYnp+1Ptj8AY6Yvzli3XALHsh17O/zFcSzLhjwRKzmL
w3Z9H58gYYVH50F9DrDcZC+GmiyPHnhier6P+e+cGMvwVuqxqU4dx8fnq3Ds
acwJqy8Bqze202OcDdwCyyf1LZf7k//n5H+Ct+7VinoIz2n1vfAmtscT8NR+
SwnstKOqOQJjpg87nRUdYGszB0LiA6B86m/9BZIzqM6Dup+6S2RGu3tdupNC
luUmk/WubkRBv8f8S0qWd6Xz3aaJ8owWQROdzX8X9ZiSF0w4b4VlT2PO55Rw
4V3PKcMEcrdjvaETYx4fOHWnFR6/fztV/iY/Ox8fI1Y7EozT574j/mkFv6L8
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
hoaGhoYGj38BOtyvTQ==
              "], {{0, 42}, {428, 0}}, {0, 255}, 
              ColorFunction -> RGBColor], 
             BoxForm`ImageTag[
             "Byte", ColorSpace -> "RGB", Interleaving -> True], Selectable -> 
             False], DefaultBaseStyle -> "ImageGraphics", ImageSize -> 
            Magnification[1], ImageSizeRaw -> {428, 42}, 
            PlotRange -> {{0, 428}, {0, 42}}]], "ExerciseOutput", 
          Magnification -> 1, CellFrameColor -> GrayLevel[0], Selectable -> 
          False, Copyable -> False, Editable -> False, ShowCellBracket -> 
          False, CellLabel -> "Out[]=", CellFrame -> False]]],
       FrameMargins->{{10, 0}, {10, 12}},
       ImageMargins->0,
       ImageSize->Full], 
      ButtonBox[
       PaneBox[
        StyleBox["\[Times]",
         FontFamily->"MathematicaMono",
         FontSize->18,
         FontWeight->"Bold",
         FontColor->GrayLevel[0.75]],
        Alignment->Right,
        FrameMargins->{{0, 6}, {0, 0}},
        ImageMargins->0],
       Appearance->None,
       ButtonFunction:>(SelectionMove[
          ButtonNotebook[], All, ButtonCell, AutoScroll -> False]; 
        NotebookFind[
          EvaluationNotebook[], "Exercise", Previous, CellStyle, WrapAround -> 
          False, AutoScroll -> False]; FrontEndExecute[
          FrontEndToken[
           ButtonNotebook[], "OpenCloseGroup"]])]}
    },
    GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {Top}},
    GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
   "Grid"],
  FrameMargins->0,
  FrameStyle->GrayLevel[0.7],
  StripOnInput->False]], "ExerciseOutput",
 Editable->False,
 Selectable->False,
 Deletable->False,
 CellFrame->{{1, 1}, {1, 1}},
 ShowCellBracket->False,
 CellFrameMargins->{{0, 0}, {0, 0}},
 CellFrameColor->GrayLevel[1],
 LineBreakWithin->Automatic]
}, Closed]],

Cell[CellGroupData[{

Cell[BoxData[
 StyleBox[
  DynamicBox[ToBoxes[
    $CellContext`SolutionResponseText["42.6"], StandardForm],
   ImageSizeCache->{140., {3., 9.}}], "SolutionResponseText"]], "Subsection",
 Editable->False,
 Selectable->False,
 Deletable->False,
 ShowCellBracket->False,
 CellMargins->{{24, 25}, {3, 0}},
 CellFrameMargins->{{8, 0}, {0, 0}},
 TextAlignment->Right,
 ShowStringCharacters->False,
 FontFamily->"Source Sans Pro",
 FontSize->12,
 FontWeight->"Plain",
 FontSlant->"Plain",
 Background->GrayLevel[1]],

Cell[BoxData[
 ButtonBox[
  PaneBox[
   StyleBox[
    RowBox[{"[", " ", 
     RowBox[{"Click", " ", "to", " ", "enter", " ", "code"}], " ", "]"}],
    Selectable->False,
    StripOnInput->False,
    FontFamily->"Source Sans Pro",
    FontSize->14,
    FontWeight->Plain,
    FontColor->GrayLevel[0.6]],
   ImageSize->Full],
  Appearance->None,
  ButtonFunction:>(SelectionMove[
     InputNotebook[], All, ButtonCell]; NotebookWrite[
     InputNotebook[], 
     Cell[
      BoxData[""], "Input"]]; SelectionMove[
     InputNotebook[], Before, CellContents]; Null),
  Evaluator->Automatic,
  Method->"Preemptive"]], "Input",
 CellFrameLabels->{{None, None}, {None, None}},
 ShowSyntaxStyles->False,
 ShowStringCharacters->False,
 CellTags->"FirstInputCell"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 PaneBox["\[ThickSpace]",
  ImageSize->Full]], "CodeSectionDividerCloud",
 Editable->False,
 Selectable->False,
 Deletable->False,
 CellMargins->{{0, 0}, {0, 35}},
 CellBracketOptions->{"OverlapContent"->True}],

Cell[TextData[{
 "Haga una gr\[AAcute]fica de barras, con etiquetas, del n\[UAcute]mero de pa\
\[IAcute]ses cuyos nombres, formados con ",
 StyleBox["TextString,",
  FontFamily->"Source Sans Pro"],
 " comiencen con cada letra posible."
}], "Exercise",
 Editable->False,
 Selectable->False,
 Deletable->False,
 CellDingbat->Cell[
  "42.7", "ExerciseNumber", FontColor -> 
   RGBColor[0.9019607843137255, 0.4117647058823529, 0.027450980392156862`]],
 ShowCellBracket->False,
 TaggingRules->{"MultipleSolutions" -> "True"},
 CounterAssignments->{{"SectionNumber", 42}, {"ExerciseNumber", 7}, {
   "WebOnly", 0}}],

Cell[CellGroupData[{

Cell[BoxData[
 TagBox[
  ButtonBox[
   StyleBox[
    RowBox[{
    "SAMPLE", " ", "EXPECTED", " ", "OUTPUT", " ", "\[RightGuillemet]"}],
    FontFamily->"Source Sans Pro",
    FontSize->12,
    FontColor->GrayLevel[0.6]],
   Appearance->None,
   ButtonFunction:>(SelectionMove[
      ButtonNotebook[], All, ButtonCell, AutoScroll -> False]; FrontEndExecute[
      FrontEndToken[
       ButtonNotebook[], "OpenCloseGroup"]]),
   Evaluator->Automatic,
   Method->"Preemptive"],
  MouseAppearanceTag["LinkHand"]]], "ExerciseExpectedResult",
 Editable->False,
 Deletable->False,
 ShowCellBracket->False],

Cell[BoxData[
 FrameBox[
  TagBox[GridBox[{
     {
      PaneBox[
       InterpretationBox[Cell[BoxData[
         GraphicsBox[
          TagBox[RasterBox[CompressedData["
1:eJztna+P68x6gL+2pLBS/4Ki/gulhaX3qqTsXvXzVYkrfbfyUYFZWFBQSFBI
UEjAkkhVgElAQIhBQECApb1SgCUDS8dSrsfZzXp/jTOpx5k3fh7t/e5udnb2
nXfeeTJj+5zzT3/87995f/vLL7/8+e/L//zuDz/+9bff/vC/v/+H8ot/9//8
X3/yf/3Pf/P/59c//frbv/zx78oX//FvfvllUf5PfX66Gs/zrm8MAPDwYEUA
gDpYEQCgDlYEAKiDFQEA6niv3DsQAAAnwIcAAHWwIgBAHawIAFAHKwIA1MGK
AAB1sCIAQB2sCABQh+cVAbrhx3/8s9HHvePtL/gQoBtK0f38v99f+YEV7whW
BOgGrCgFrAjQDVhRClgRoBuw4r15Xgz96i7KIEry8uv8EIXV1+EkymvtsCJA
N2DF+5IsB543PZafrEaeP89O6cz3xlFyypNJ+Y04vbTEigDdgBXvS/a83yVZ
+UkSjb1gnmVb3wviao+4mwXedHtpiRUBugErOkD+NArUkXkRn7Jt6E+O1avp
dhJM3lmxzr1iBXh4sOK9KV7+Py13if7mL9vAe7XiZvzBineIDqB/YMX7slOX
Edfqs3RTnp23WTLyvMU+VxvI0Auf9peWWBGgG7Dincl2Y3V6VrehJyvlwDRe
vBySB4tjrSFWBOgGrOgCWZblRe3rIi9f+NAGKwJ0A1aUAlYE6AasKAWsCNAN
WFEKWBGgG7CiFHhSEaAbsKIU8CFAN2BFKWBFgG7AilLAigDdgBWlgBUBugEr
SgErAnQDVpQCVgToBqwoBawI0A1YUQo8rwjQDVhRCvgQoBuwohSwIkA3YEUp
YEWAbsCKUsCKAN2AFaWAFQG6AStKASsCdANWlAJWBOgGrCgFnlcE6AasKAV8
CNANWFEKWBGgG7CiFLAiQDdgRSlgRYBuwIpSwIoA3YAVpYAVAboBK0oBKwJ0
A1aUAs8rAnQDVpQCPgToBqwoBawI0A1YUQpYEaAbsOKdKZL50D9fMJxGh/KF
bLfwXy8hzuP00hArAnQDVrwvyTL0/NmxOKW7hecN9sUpngXBdH08HpMkOWbF
pSVWBOgGrHhfjrso2h3VZ/nG8/xtli9CbzBfraMoTrJ6S6wI0A1Y0Q2eZ4Hn
T9ZFkYxLOY5my6dZeY4eRcmlBVYE6AaseHfyZD3wvHC6Pp+Wi/zl1JxuJl74
lL82895zl1AB+gBWvC/5Yanus6zVfZaiKE55HHjeujpSbya+N9leWmJCgG7A
ivdlOaxvAMNtdtotyzO0p25Dh9ND/tYSKwJ0A1Z0kSLPsvzDa1gRoBuwohSw
IkA3YEUpYEWAbsCKUsCKAN2AFaWAFQG6AStKgScVAboBK0oBHwJ0A1aUAlYE
6AasKAWsCNANWFEKWBGgG7CiFLAiQDdgRSlgRYBuwIpSwIoA3YAVpcDzitAi
5Vo2+rh3vJ2CFaWAD6FFWPgaSI4UsCK0CAtfA8mRAlaEFmHhayA5UsCK0CIs
fA0kRwpYEVqEha+B5EgBK0KLsPA1kBwp8GQOtAgLXwPJkQI+hBZh4WsgOVLA
itAiLHwNJEcKWBFahIWvgeRIAStCi7DwNZAcKWBFaBEWvgaSIwWsCC3CwtdA
cqSAFaFFWPgaSI4UeF4RWoSFr4HkSAEfQouw8DWQHClgRWgRFr4GkiMFrAgt
wsLXQHKkgBWhRVj4GkjOnSmS+dA/30aZRofyhfwQhdWX4STKaw2xIrQIC18D
ybkvyTL0/NmxOKW7hecN9kU6871xlJzyZFJ6Mk4vLbEitAgLXwPJuS/HXRTt
juqzfON5/vYvW98L4mqPuJsF3nR7aYkVoUVY+BpIjhs8lwr0J+si24b+pLLk
Kd1Ogsk7K9bpJiz+fcxHhYWvgeTcnTxZDzwvnK6L8otsG3ivVtyMP1ix+9go
j0eFmdVAcu5Lfliq+yxrdZ+lKEovJiPPW+zLI3T+FHrh0/7SEitCizCzGkjO
fVkO68ficJud0njx8tVgcay1xIrQIsysBpLjIkWeZfmH17AitAgzq4HkSAEr
QoswsxpIjhSwIrQIM6uB5EgBK0KLMLMaSI4UWnlS0fT5Q8rjUWFmNZAcKbSy
VzSdbsrjUWFmNZAcKWBFaBFmVgPJkQJWhBZhZjWQHClgRWgRZlYDyZECVoQW
YWY1kBwpYEVoEWZWA8mRAlaEFmFmNZAcKbT1vCJWhBMLXwvJkQJ7RWgRZlYD
yZECVoQWYWY1kBwpYEVoEWZWA8mRAlaEFmFmNZAcKWBFaBFmVgPJkQJWhBZh
ZjWQHClgRWgRZlYDyZECzyua8oN/zPp7RM+sbUiOFNgrmiI6eNuQHA0kRwpY
0RTRwduG5GggOVLAiqaIDt42JEcDyZECVjRFdPC2ITkaSI4UsKIpooO3DcnR
QHKkgBVNER28bUiOBpIjBaxoiujgbUNyNJAcKfC8oimig7cNydFAcqTAXtEU
0cHbhuRoIDlSwIqmiA7eNiRHA8mRAlY0RXTwtiE5GkiOFLCiKaKDtw3J0UBy
pIAVTREdvG1IjgaSIwWsaIro4G1DcjSQHClgRVNEB28bkqOB5EjBe89tnWBF
KcHbhuRoIDlSYK9oiujgbUNyNJAcKWBFU0QHbxuSo4HkSAErmiI6eNuQHA0k
RwpY0RTRwduG5GggOVLAiqaIDt42JEcDyZECVjRFdPC2ITkaSI4UsKIpooO3
DcnRQHKk8OWTij8M/8ljrCgleNvcUAlGH/ce3/8LKkcKX+4VbVtOdHmIDt42
vaoEU3o1WNFgRVNEB2+bXlWCKb0arGiwoimig7dNryrBlF4NVjRY0RTRwdum
V5VgSq8GKxqsaIro4G3Tq0owpVeDFQ1WNEV08LbpVSWY0qvBigYrmiI6eNv0
qhJM6dVgRfPd84pY8TtEB2+bXlWCKTck5/qPew/uoWCvaIro4G3Tq0owxV5y
pGfGNbCiKaKDt02vKsEUrCgFrGiK6OBt06tKMAUrSgErmiI6eNv0qhJMwYpS
wIqmiA7eNr2qBFOwohSwoimig7dNryrBFKwoBaxoiujgbdOrSjAFK0qB5xVN
ER28bXpVCaZgRSmwVzRFdPC26VUlmIIVpYAVTREdvG16VQmmYEUpYEVTRAdv
m15VgilYUQpY0RTRwdumV5VgClaUAlY0RXTwtulVJZiCFaWAFU0RHbxtelUJ
pmBFKWBFU0QHb5teVYIpWFEKPK9oiujgbeNaJfxw6a8oxIpSYK9oiujgbeNa
JTglFqwoBaxoiujgbeNaJTglFqwoBaxoiujgbeNaJTglFqzoAtlu4fmztPo8
P0Rhdf0wnER5rQ1WNEV08LZxrRKcEgtWvDvJZqYkGMwz9VU6871xlJzyZOJ5
0zi9NMOKpogO3jauVYJTYsGKdyaPh8FoMRuUe0VlxWzre0Fc7RF3s8Cbbi8N
saIpooO3jWuV4JRYsKILFPtyu/hixdCfHKsX0+0kmGDF2xEdvG1cqwSnxIIV
XSDbvVkx8F6tuBl/sGKd84tYUUMHC9now8YYb8a1SnBKLFjRBbL41YqnZOR5
i315hM6fQi982l/asFc0xZ2F/ADJcSeZWLEn5Lv5y3XFcosYL162g4PFsdYG
K5rizkJ+gOS4k0ys2FOKPMvyD69hRVPcWcgPkBx3kokV4QJWNMWdhfwAyXEn
mVgRLmBFU9xZyA+QHHeSiRXhAlY0xZ2F/ADJcSeZWBEu8DeJmeLOQu4gOT8M
HxNyrRKcEgtWlAJ7RVPcWcgdJEd6JTglFqwoBaxoijsLuYPkSK8Ep8SCFaWA
FU1xZyF3kBzpleCUWLCiFLCiKe4s5A6SI70SnBILVpQCVjTFnYXcQXKkV4JT
YsGKUsCKprizkDtIjvRKcEosWFEKWNEUdxZyB8mRXglOiQUrSuEhn1f8YfNv
4nJnIXewHB6gEhzJpFEwpsk5B2+17HvFQ+4Vra4Fd4LvYC1TCS3SgRXdGaxo
sKK9zt3s32owvaoEe8GYJgcrtgtWtNe5m/1bDaZXlWAvGNPkYMV2wYr2Onez
f6vB9KoS7AVjmhys2C5Y0V7nbvZvNZheVYK9YEyTgxXbBSva69zN/q0G06tK
sBeMaXKwYrtgRXudu9m/1WB6VQn2gjFNDlZsl0d9XtEoGNMPR4LvoLx7VQk2
EnhbMKbJwYrtwl5RbvAdlHevKsFGAm8LxjQ5WLFdsKLc4Dso715Vgo0E3haM
aXKwYrtgRbnBd1DevaoEGwm8LRjT5GDFdsGKcoPvoLx7VQk2EnhbMKbJwYrt
ghXlBt9BefeqEmwk8LZgTJODFdsFK8oNvoPy7lUl2EjgbcGYJgcrtgtWlBt8
B+Xdq0qwkcDbgjFNDlZsF55XlBv8Df3/sPxwptxkYkW4wF5RbvA39O/azLqT
TKwIF7Ci3OBv6N+1mXUnmVgRLmBFucHf0L9rM+tOMrEiXMCKcoO/oX/XZtad
ZGLF/pEuhv7LbZVwntW+gRXlBn9D/67NrDvJxIq9I48DL1wfno/PSZIci9p3
sKLc4G/o37WZdSeZWLFv5PuF5w1W6yhax+n7b2FFucHf0L9rM+tOMrFi30hW
Y88LZk/L2ag8R4+T2re895xfdG0t3PDhTvCmk4UV75LM2zq3VJamycGKt1AU
r6fmdOJ5i0N++Y6IvaLVcpK7kG/o353Mu5bMDmYKKzrFbhZ447X67LjxPX9b
u92CFeUu5Bv6dyfzriUTK/aOdDd+vQU9jQ7172BFuQv5hv7dybxrycSK/STP
srz4+CJWlLuQb+jfncy7lkysCBewotyFfEP/7mTetWRiRbiAFeUu5Bv6dyfz
riUTK8IFrCh3Id/QvzuZdy2ZWBEuiPj7FUVb8YYPq/07kvnb2puWN1Zsq2xM
kyMa9oruBMNgG9ubljdWvFfmRYMV3QmGwTa2Ny1vrHivzIsGK7oTDINtbG9a
3ljxXpkXDVZ0JxgG29jetLyx4r0yLxqs6E4wDLaxvWl5Y8V7ZV40WNGdYBhs
Y3vT8saK98q8aLCiO8Ew2Mb2puWNFe+VedHwvKI7wTDYxvam5Y0VWwzG6MM0
mU7BXtGdYBhsY3vT8saKUmbKKbCiO8Ew2Mb2puWNFaXMlFNgRXeCYbCN7U3L
GytKmSmnwIruBMNgG9ubljdWlDJTToEV3QmGwTa2Ny1vrChlppwCK7oTDINt
bG9a3lhRykw5BVZ0JxgG29jetLyxopSZcgqeV3QnGAbb2N60vLGioJky+jDt
3wj2iu4Ew2Ab25uWN1Z8vJm6rX8jsKI7wTDYxvam5Y0VH2+mbuvfCKzoTjAM
trG9aXljxcebqdv6NwIruhMMg21sb1reWPHxZuq2/o3Aiu4Ew2Ab25uWN1Z8
vJm6rX8jsKI7wTDYxvam5Y0VH2+mbuvfCKzoTjAMtrG9aXljxcebqdv6N4Ln
Fd0JhsFe0/76D6NKNu3cqeQ4aEXbybRtxc8vujPdHZSTO8Ew2HYH66AoGGxb
7bEiomCwNwy2P6Lo1WB/YkVEwWBvHWx/RNGrwf5szYp5NAmry4fh6pBhRTeD
YbDtDrY/oujVYH+2ZMV0O/W8SZKfkmji+bMUKzoZDINtd7D9EUWvBvuzJSvG
U9+fxuqzIg48f1vbLWJFd4JhsO0Otj+i6NVgf7ZmxXC8PlafplM/3GBFJ4Nh
sO0Otj+i6NVgf7Zkxe00eLXiceIFH6wIAPAYXG/F52jkBYv8dMoPT5432Bfv
rPi5vVHnpsE41d6pYGy3dyoY2+3PLXuSnF4N9mQoqO9JF0P//Kvn8bGxf9cy
gChaae9UMLbb90oUvRrsqTUrKvIsy4uPL2JFd4Kx3d6pYGy375UoejXYU6tW
vL7/u2SgyLM0za5v30o8bXVevuOkWdfBm7Z3KpjW2ldlk3/V+NSGKFTv2afN
RFvBF3mapp/3Kqb9Y8V2udaK+W7geeFid0WX2eL8wHjFYBp9IYuPnR9mg5cD
vuePtsevquTS+27+1rsXzKK9vu/dfODV8WcN8VQjrRHGn5dcjeJ5Mwrehhsd
tN3nceAFlyejsnjm+fMr8lP+VEMYn8jmvjeNU32jeBb4s/j8+VYlKtzok39l
wBVV5oP182uHz1GZoJkmpDwuC2eyfr76d+Wb+fCS+snKqBKCxfaob5/tV28/
MJgdGvL/ruxVna0T/Q8couml9XjZsLJUNt4TvE7cl+zKmZ1eGqhimMXf5lLd
d6g/xpyuNWWfxdPLvOwXZYYGu/w1wm8W12bqe8HbVG4mvjdY6tKZ78L3g51t
35WNbSt+yedf+hyNq+hGB92iOaOmYFTaIUufD+tydNPvp+PcXpXTYPFcpqlI
V+r3zDSLOduV5TE5pOV7+HFX1dVir+u/LA9vHJXNj2fSJrkoBflR8voT6Vcb
hQvFYVQugEmUqkbZdl6OZKhbDB+sqMbSZOlPP3Ud2exKK1ZrZzsLG5V4uj7g
il2lifDpRVY7lRzd2jxbsVzum/Sq33VekutEtX6OFw3KrVVCWTnbp3LehnvN
cKtgBoutqsosUbGHC+3AVdlP1kmRl2T7aFL+wE5Ta2pOvcVOmfm4eyqDj/SS
LrKyFtMk8qviLGvzi8thNeJPVtQVQ2WhZfLS4b6cuFH0beN0478MLZ1X+4H5
Ljv/xu9FnZTpHkVqZVQ3fMMGJagtulp8WZ5ty1krxfu+/V2s+IlU/dmY9Xam
dPfc1Pi8Hs/DOE71C6HkeXV5u1Hkh9VyrVmdHxbLtnwbmmw13b8vjyuoFHTl
xuz8h4Zq5ZxF2uBf/PZanmk8vbsVg9lmq/QybGpbdWpkxflZctMqP89jPxgO
gg9v+u+oROSXh4ZqX5Hrf1exH6o3xLd5SlbDcgOoia3aGL9uyYrYf//HGT6g
zDBYvs1koU4Qy0RTFirhs0sdH8uNsa7/crDlQOfb5Oy2ZLveNb0lnX/qykr4
YMXGYthOfH96XkfP5cZkodsZq97m5TtKti59sJwPfLUA8+rFb38q3ysZ7tLn
suKnmhr48JvUwdCPnq/ITOfk+8V5C3Qsd9retGlIL0cJ3z8fij96/mPr2ob8
Gj4szGrt6EI6n5v8ChVN40WA847ltf1cG736Q0MvCy2PV0+Lp+Vqtd6n309i
rfOX/ARXnqCtWPFFXCovT9d0b2TFcmGGs2W52p7KN9LD3B8uN/OBbkWcLxQc
9yMVziE/zHW/K9v679+8zhbVVkLo+cPpbDqdjtWwRyvNyq9fWzh3r7aCuuWc
qVz6QYWa2fFTrF/Mx3j5ct3ID2fR7qqVf3UlfD5BNxSD2pyoNd6YxlOVyfDp
kG7G3mhTHu/KBXhUgQ0PDT81qN4kN83RVxTJSp0E9fq4H+uxmrwgCIPahvl7
qqPE+aJNkamT93itaV0pt77dOq6jjcYrHxam2iEMVpqKUuUx2ZQNijPa0KuA
VOFtjnl1FNKeUl5++3lHUezWqyhalhOvWzufryu2vVfMs/O9h6uuKypRhItj
/lwqtMxSY+emVgzmu8NyEMzjzTSYxOl+FjYmR4lOHbL82XysuwhcHfrqp85s
O2mwYnkWG863cbzZbOJDw0XFuMzIuJ6QdOLp83k5QR/X6nLESH9VsUiT3UH1
VuRZsl8P1CppCElx/V7x7f36JbamZZsvgnKve1yPms+D5ZoNBvPF0K9m8zjx
g9liHGgO3YbBK9JNULvI7BzZtgxvpc4OSi3qxFo/WXz1A6o8NsfKQ+myPOeM
9cvtqC7BzLcvbnka6CuqWpjTqvf8uI8CtSHXlVP8wYqNXjSfu9Hy5eCUP28H
+gOC9euKqraHqqrVlZyGaxf1HVG6rQaif7evJ785ldUhbnfKNtWGSM3pbtps
xfMwD8th40a6uoY/Pd/dOmd+uNLFb3QtpajuDc3L0lJ33/zRqAxNv4OqXzgq
ViNPf5zP9+qmYVSJ8VQcr7s2ZVAJqXqPGJ+vuKfqumXzRaF0U55ug4bLrS+o
6rpc+IqrE8d002T168s4V+eFsxNUmeVXbGa6pXyv98Knt4xWF0y0187e3Yzz
BzPtzZCKNB5fbuP6o82zbv4+3YNuWMi7xftbyvVrmF+iDrkGx9X83T1of7rU
/uhnK7Z9D/q4ec3P8Knx8s2udoU826kbFk/aW63vk+/NtdatOi+3K0X5Rne+
ZhVPw+YT9EuX+XLUfIMjmr1N7njZYLzdx0NxA+l+dSnk6mpHuNo37BXfNpO5
uuw51L7L7FeTS/DhZHXVtTaD4sxWk7d1OG26IV6RjNUb0VUpWo/VJYizBaob
KFdEdbUVP99w199He2DKo0T2xXNnMnAreBWNM8HYpkq9vb1ENbGq+2O83ugf
u7qFQnVvb64sJwcAAAAAAAAAHo+/AsmJyeo=
            "], {{0, 275}, {434, 0}}, {0,
             255},
            ColorFunction->RGBColor],
           BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
           Selectable->False],
          DefaultBaseStyle->"ImageGraphics",
          ImageSize->Magnification[1],
          ImageSizeRaw->{434, 275},
          PlotRange->{{0, 434}, {0, 275}}]], "ExerciseOutput",
         ImageSize->{438, 275},
         ImageMargins->{{0, 0}, {0, 0}},
         ImageRegion->{{0, 1}, {0, 1}},
         Magnification->1],
        Apply[TextCell, 
         Cell[
          BoxData[
           GraphicsBox[
            TagBox[
             RasterBox[CompressedData["
1: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
u7qFQnVvb64sJwcAAAAAAAAAHo+/AsmJyeo=
              "], {{0, 275}, {434, 0}}, {
              0, 255}, ColorFunction -> RGBColor], 
             BoxForm`ImageTag[
             "Byte", ColorSpace -> "RGB", Interleaving -> True], Selectable -> 
             False], DefaultBaseStyle -> "ImageGraphics", ImageSize -> 
            Magnification[1], ImageSizeRaw -> {434, 275}, 
            PlotRange -> {{0, 434}, {0, 275}}]], "ExerciseOutput", 
          Magnification -> 1, CellFrameColor -> GrayLevel[0], Selectable -> 
          False, Copyable -> False, Editable -> False, ShowCellBracket -> 
          False, CellLabel -> "Out[]=", CellFrame -> False]]],
       FrameMargins->{{10, 0}, {10, 12}},
       ImageMargins->0,
       ImageSize->Full], 
      ButtonBox[
       PaneBox[
        StyleBox["\[Times]",
         FontFamily->"MathematicaMono",
         FontSize->18,
         FontWeight->"Bold",
         FontColor->GrayLevel[0.75]],
        Alignment->Right,
        FrameMargins->{{0, 6}, {0, 0}},
        ImageMargins->0],
       Appearance->None,
       ButtonFunction:>(SelectionMove[
          ButtonNotebook[], All, ButtonCell, AutoScroll -> False]; 
        NotebookFind[
          EvaluationNotebook[], "Exercise", Previous, CellStyle, WrapAround -> 
          False, AutoScroll -> False]; FrontEndExecute[
          FrontEndToken[
           ButtonNotebook[], "OpenCloseGroup"]])]}
    },
    GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {Top}},
    GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
   "Grid"],
  FrameMargins->0,
  FrameStyle->GrayLevel[0.7],
  StripOnInput->False]], "ExerciseOutput",
 Editable->False,
 Selectable->False,
 Deletable->False,
 CellFrame->{{1, 1}, {1, 1}},
 ShowCellBracket->False,
 CellFrameMargins->{{0, 0}, {0, 0}},
 CellFrameColor->GrayLevel[1],
 LineBreakWithin->Automatic]
}, Closed]],

Cell[CellGroupData[{

Cell[BoxData[
 StyleBox[
  DynamicBox[ToBoxes[
    $CellContext`SolutionResponseText["42.7"], StandardForm],
   ImageSizeCache->{140., {3., 9.}}], "SolutionResponseText"]], "Subsection",
 Editable->False,
 Selectable->False,
 Deletable->False,
 ShowCellBracket->False,
 CellMargins->{{24, 25}, {3, 0}},
 CellFrameMargins->{{8, 0}, {0, 0}},
 TextAlignment->Right,
 ShowStringCharacters->False,
 FontFamily->"Source Sans Pro",
 FontSize->12,
 FontWeight->"Plain",
 FontSlant->"Plain",
 Background->GrayLevel[1]],

Cell[BoxData[
 ButtonBox[
  PaneBox[
   StyleBox[
    RowBox[{"[", " ", 
     RowBox[{"Click", " ", "to", " ", "enter", " ", "code"}], " ", "]"}],
    Selectable->False,
    StripOnInput->False,
    FontFamily->"Source Sans Pro",
    FontSize->14,
    FontWeight->Plain,
    FontColor->GrayLevel[0.6]],
   ImageSize->Full],
  Appearance->None,
  ButtonFunction:>(SelectionMove[
     InputNotebook[], All, ButtonCell]; NotebookWrite[
     InputNotebook[], 
     Cell[
      BoxData[""], "Input"]]; SelectionMove[
     InputNotebook[], Before, CellContents]; Null),
  Evaluator->Automatic,
  Method->"Preemptive"]], "Input",
 CellFrameLabels->{{None, None}, {None, None}},
 ShowSyntaxStyles->False,
 ShowStringCharacters->False,
 CellTags->"FirstInputCell"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 PaneBox["\[ThickSpace]",
  ImageSize->Full]], "CodeSectionDividerCloud",
 Editable->False,
 Selectable->False,
 Deletable->False,
 CellMargins->{{0, 0}, {0, 35}},
 CellBracketOptions->{"OverlapContent"->True}],

Cell[TextData[{
 "Encuentre un c\[OAcute]digo m\[AAcute]s simple para \n",
 Cell[BoxData[
  RowBox[{
   StyleBox["Grid",
    FontFamily->"Source Sans Pro"], "[", 
   RowBox[{
    StyleBox["Table",
     FontFamily->"Source Sans Pro"], "[", 
    RowBox[{
     RowBox[{
      StyleBox["StringJoin",
       FontFamily->"Source Sans Pro"], "[", 
      RowBox[{
       RowBox[{
        StyleBox["TextString",
         FontFamily->"Source Sans Pro"], "[", "i", "]"}], ",", "\"\<^\>\"", 
       ",", 
       RowBox[{
        StyleBox["TextString",
         FontFamily->"Source Sans Pro"], "[", "j", "]"}], ",", "\"\<=\>\"", 
       ",", 
       RowBox[{
        StyleBox["TextString",
         FontFamily->"Source Sans Pro"], "[", 
        RowBox[{"i", "^", "j"}], "]"}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "5"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"j", ",", "5"}], "}"}]}], "]"}], "]"}]], "InlineCode"],
 "."
}], "Exercise",
 Editable->False,
 Selectable->False,
 Deletable->False,
 CellDingbat->Cell[
  "42.8", "ExerciseNumber", FontColor -> 
   RGBColor[0.9019607843137255, 0.4117647058823529, 0.027450980392156862`]],
 ShowCellBracket->False,
 CounterAssignments->{{"SectionNumber", 42}, {"ExerciseNumber", 8}, {
   "WebOnly", 0}}],

Cell[CellGroupData[{

Cell[BoxData[
 TagBox[
  ButtonBox[
   StyleBox[
    RowBox[{"EXPECTED", " ", "OUTPUT", " ", "\[RightGuillemet]"}],
    FontFamily->"Source Sans Pro",
    FontSize->12,
    FontColor->GrayLevel[0.6]],
   Appearance->None,
   ButtonFunction:>(SelectionMove[
      ButtonNotebook[], All, ButtonCell, AutoScroll -> False]; FrontEndExecute[
      FrontEndToken[
       ButtonNotebook[], "OpenCloseGroup"]]),
   Evaluator->Automatic,
   Method->"Preemptive"],
  MouseAppearanceTag["LinkHand"]]], "ExerciseExpectedResult",
 Editable->False,
 Deletable->False,
 ShowCellBracket->False],

Cell[BoxData[
 FrameBox[
  TagBox[GridBox[{
     {
      PaneBox[
       InterpretationBox[Cell[BoxData[
         GraphicsBox[
          TagBox[RasterBox[CompressedData["
1:eJztnTGvs8gVhp2kSZkifyA/IK7TUqaJpY1Sxc2u8rFKs7F2I0W0llJYSuNU
dFSuXLmioqFyQ0MKGgoUiYaCgoaCwpkZfG0MA5wzM/hukvPuflf32jPDO2eG
AWMezq+++ctX9k9Xq9UPP2c/vvr6b9b333/t/P4X7I8/fPfDn7/97suffvvd
X798++X733zzM/biH9m/X/5kteK/30gkkpaqNI6zqum+VGf+1rKDrJktiWrW
vKsqv/qX8/lyTYq3uFL1WRfX4HK++Nck/ySfM42PjDhTmURRVtZqzS4jiP8m
T+KnkgzQAZz/9OyshA7Xsvv69WCxF63jdbYkqlmzrsr4vBbF2p+7c7KoK2Wf
TR5sOj43h3B6eIz7VPD8fP3Iva8P/deBzRoX2H91bMN9lxVVKs1OKAtO+x0P
jht1qjTJdrWyHf4jbSZLopoFC+gqPbHfD2Idr0427/f0sUfTlbLPJvet9b79
PeBDbF0nx9G4TwXPrer03M6ojRupNLuAwP4r11ptvJi9J6TU7LwSVufYqVKE
e+6h5H5ed8N+SVSzSEFcVeXHEba8HmbnpAlXaj6fKvm7n+JzqvERz/mBLd3W
drtm6/nMviNtdjFB/BdsQrgJ6gQS77+OrJcq9Yk14QTst4Adx7bneqRknfo7
e+d0tHPc5/lmv1mk4K6EoiMrvs+XdqXhsyryODyzwV3Zp+r9PvGeY4+b9bOc
vbsW+85nesb6ryJxrrnd2fb+eEqKZhH/vSq5z7Z5Svn268RjvwelvGSdXuzN
1u5oax/SeqRZrOCu2FE5u4gpmSzuSt0nP4Vo1RZ+t0+k5zakjs/PiD1rZbmf
EVsN/7cm3Vtr++D5/snmH3w27HBk3n+vSlMXRfmxLzZlUYwdd3DNYgV3VV75
+rg9zZ8H6bvS8Sne9I/c7EVyOWthnxONSzxXnri6sTscj8f9pv3EE2Sf6Xli
Q5Mx5yrDNeQigIL/JuaneTFg6r2WrGJvvVpb7L/2f4v9tYtreWG0gNWLqy0u
rzyuEizrStFn/RzNJrbEOL7bJ85zHZ7co+seuQ4bsW57YfaZnnH+eaHn8lRd
ecwjszGv0ziOQ36Yc05hEsf56EVwSck6v7qu63Xkev79vBLarJarOg+24izI
DaI4iq7Xa1o2i7lS9+nv2Im3EyR5WWSXw6Y9wXijTxXPHTXinC3mlT/Hs4r/
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
In2u/gOgS5xX
            "], {{0, 91}, {276, 0}}, {0, 255},
            ColorFunction->RGBColor],
           BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
           Selectable->False],
          DefaultBaseStyle->"ImageGraphics",
          ImageSize->Magnification[1],
          ImageSizeRaw->{276, 91},
          PlotRange->{{0, 276}, {0, 91}}]], "ExerciseOutput",
         ImageSize->{280, 91},
         ImageMargins->{{0, 0}, {0, 0}},
         ImageRegion->{{0, 1}, {0, 1}},
         Magnification->1],
        Apply[TextCell, 
         Cell[
          BoxData[
           GraphicsBox[
            TagBox[
             RasterBox[CompressedData["
1:eJztnTGvs8gVhp2kSZkifyA/IK7TUqaJpY1Sxc2u8rFKs7F2I0W0llJYSuNU
dFSuXLmioqFyQ0MKGgoUiYaCgoaCwpkZfG0MA5wzM/hukvPuflf32jPDO2eG
AWMezq+++ctX9k9Xq9UPP2c/vvr6b9b333/t/P4X7I8/fPfDn7/97suffvvd
X798++X733zzM/biH9m/X/5kteK/30gkkpaqNI6zqum+VGf+1rKDrJktiWrW
vKsqv/qX8/lyTYq3uFL1WRfX4HK++Nck/ySfM42PjDhTmURRVtZqzS4jiP8m
T+KnkgzQAZz/9OyshA7Xsvv69WCxF63jdbYkqlmzrsr4vBbF2p+7c7KoK2Wf
TR5sOj43h3B6eIz7VPD8fP3Iva8P/deBzRoX2H91bMN9lxVVKs1OKAtO+x0P
jht1qjTJdrWyHf4jbSZLopoFC+gqPbHfD2Idr0427/f0sUfTlbLPJvet9b79
PeBDbF0nx9G4TwXPrer03M6ojRupNLuAwP4r11ptvJi9J6TU7LwSVufYqVKE
e+6h5H5ed8N+SVSzSEFcVeXHEba8HmbnpAlXaj6fKvm7n+JzqvERz/mBLd3W
drtm6/nMviNtdjFB/BdsQrgJ6gQS77+OrJcq9Yk14QTst4Adx7bneqRknfo7
e+d0tHPc5/lmv1mk4K6EoiMrvs+XdqXhsyryODyzwV3Zp+r9PvGeY4+b9bOc
vbsW+85nesb6ryJxrrnd2fb+eEqKZhH/vSq5z7Z5Svn268RjvwelvGSdXuzN
1u5oax/SeqRZrOCu2FE5u4gpmSzuSt0nP4Vo1RZ+t0+k5zakjs/PiD1rZbmf
EVsN/7cm3Vtr++D5/snmH3w27HBk3n+vSlMXRfmxLzZlUYwdd3DNYgV3VV75
+rg9zZ8H6bvS8Sne9I/c7EVyOWthnxONSzxXnri6sTscj8f9pv3EE2Sf6Xli
Q5Mx5yrDNeQigIL/JuaneTFg6r2WrGJvvVpb7L/2f4v9tYtreWG0gNWLqy0u
rzyuEizrStFn/RzNJrbEOL7bJ85zHZ7co+seuQ4bsW57YfaZnnH+eaHn8lRd
ecwjszGv0ziOQ36Yc05hEsf56EVwSck6v7qu63Xkev79vBLarJarOg+24izI
DaI4iq7Xa1o2i7lS9+nv2Im3EyR5WWSXw6Y9wXijTxXPHTXinC3mlT/Hs4r/
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
In2u/gOgS5xX
              "], {{0, 91}, {276, 0}}, {0, 255}, ColorFunction -> 
              RGBColor], 
             BoxForm`ImageTag[
             "Byte", ColorSpace -> "RGB", Interleaving -> True], Selectable -> 
             False], DefaultBaseStyle -> "ImageGraphics", ImageSize -> 
            Magnification[1], ImageSizeRaw -> {276, 91}, 
            PlotRange -> {{0, 276}, {0, 91}}]], "ExerciseOutput", 
          Magnification -> 1, CellFrameColor -> GrayLevel[0], Selectable -> 
          False, Copyable -> False, Editable -> False, ShowCellBracket -> 
          False, CellLabel -> "Out[]=", CellFrame -> False]]],
       FrameMargins->{{10, 0}, {10, 12}},
       ImageMargins->0,
       ImageSize->Full], 
      ButtonBox[
       PaneBox[
        StyleBox["\[Times]",
         FontFamily->"MathematicaMono",
         FontSize->18,
         FontWeight->"Bold",
         FontColor->GrayLevel[0.75]],
        Alignment->Right,
        FrameMargins->{{0, 6}, {0, 0}},
        ImageMargins->0],
       Appearance->None,
       ButtonFunction:>(SelectionMove[
          ButtonNotebook[], All, ButtonCell, AutoScroll -> False]; 
        NotebookFind[
          EvaluationNotebook[], "Exercise", Previous, CellStyle, WrapAround -> 
          False, AutoScroll -> False]; FrontEndExecute[
          FrontEndToken[
           ButtonNotebook[], "OpenCloseGroup"]])]}
    },
    GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {Top}},
    GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
   "Grid"],
  FrameMargins->0,
  FrameStyle->GrayLevel[0.7],
  StripOnInput->False]], "ExerciseOutput",
 Editable->False,
 Selectable->False,
 Deletable->False,
 CellFrame->{{1, 1}, {1, 1}},
 ShowCellBracket->False,
 CellFrameMargins->{{0, 0}, {0, 0}},
 CellFrameColor->GrayLevel[1],
 LineBreakWithin->Automatic]
}, Closed]],

Cell[CellGroupData[{

Cell[BoxData[
 StyleBox[
  DynamicBox[ToBoxes[
    $CellContext`SolutionResponseText["42.8"], StandardForm],
   ImageSizeCache->{140., {3., 9.}}], "SolutionResponseText"]], "Subsection",
 Editable->False,
 Selectable->False,
 Deletable->False,
 ShowCellBracket->False,
 CellMargins->{{24, 25}, {3, 0}},
 CellFrameMargins->{{8, 0}, {0, 0}},
 TextAlignment->Right,
 ShowStringCharacters->False,
 FontFamily->"Source Sans Pro",
 FontSize->12,
 FontWeight->"Plain",
 FontSlant->"Plain",
 Background->GrayLevel[1]],

Cell[BoxData[
 ButtonBox[
  PaneBox[
   StyleBox[
    RowBox[{"[", " ", 
     RowBox[{"Click", " ", "to", " ", "enter", " ", "code"}], " ", "]"}],
    Selectable->False,
    StripOnInput->False,
    FontFamily->"Source Sans Pro",
    FontSize->14,
    FontWeight->Plain,
    FontColor->GrayLevel[0.6]],
   ImageSize->Full],
  Appearance->None,
  ButtonFunction:>(SelectionMove[
     InputNotebook[], All, ButtonCell]; NotebookWrite[
     InputNotebook[], 
     Cell[
      BoxData[""], "Input"]]; SelectionMove[
     InputNotebook[], Before, CellContents]; Null),
  Evaluator->Automatic,
  Method->"Preemptive"]], "Input",
 CellFrameLabels->{{None, None}, {None, None}},
 ShowSyntaxStyles->False,
 ShowStringCharacters->False,
 CellTags->"FirstInputCell"]
}, Open  ]]
}, Open  ]],

Cell[BoxData[
 PaneBox["\[ThickSpace]",
  ImageSize->Full]], "CodeSectionDividerCloud",
 Editable->False,
 Selectable->False,
 Deletable->False,
 CellMargins->{{0, 0}, {0, 35}},
 CellBracketOptions->{"OverlapContent"->True}]
},
WindowSize->{808, 911},
WindowMargins->{{554, Automatic}, {Automatic, 62}},
WindowTitle->"Cadenas de caracteres y plantillas : Una introducci\[OAcute]n \
elemental a Wolfram Language",
DockedCells->{
  Cell[
   BoxData[
    DynamicModuleBox[{}, 
     TagBox[
      GridBox[{{
         TagBox[
          ButtonBox[
           PaneBox[
            GraphicsBox[
             TagBox[
              RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFAEiEGSIPafvQ3/iQM/qxmAiEjFmOohXKwIouDvuQXEGw4xENM6POaT5Hiq
qP97c+uvfvWfDVy/59j/ahX5Pdfx3/sHuNSDFE/UBpI/G3l+TTP9vS7p7+nZ
QBG4FjT1QJOBin+vCAcpaxcHWgEU/HOk7/ciHzzqgSYD2b/XJQO5UPFueezq
J+sDFf/qVQY64PeSgN8b0n5NMfz34DAu9T+beIFm/upV+jXF4PcC9z87K4C6
fk3SwaUeGBq/18QDDQQ5e2f5rw6pP0f7gd4BCmJVD3QG0HygBxHO61UG6sIV
nhAtwNAAOgCEgOEPMxmXevyAEvV4EidaQiU+P0IAAEIjNUM=
               "], {{0, 
               20}, {16, 0}}, {0, 255}, ColorFunction -> RGBColor], 
              BoxForm`ImageTag[
              "Byte", ColorSpace -> ColorProfileData[CompressedData["
1:eJydlndcFNcWx+/MbC+0XZYiZem9twVEehOQXkVh2V1gKQsuuxTFhogKRBQR
EWwgQQEDRkORWBHFQkCw14AEASUGo9hQyax8PokvL++9vPz+uJ/vnHvOnXvP
OXc+o5GQEZIIAwCyCOgQws5xFQrZeaEy6EO4IIufJOBxfQUiXhJPyEqAUKMP
BR0AxcefL8iAUa90gUgY4u3GjIqOYeL7AQyIAAcsAGBzsjIDQr3CJN6+nu7M
LNQJ/Ite3wKSBcF1E58gJhP8f5LlZApFAEBBKFtxeVkclAtRTssRZUrs0yjT
E1IlDGMkLEQ3iLKihJPm2fizzzy7SJibLuCiLNlzJjedK+EelDdni3koI/4o
F2XzeTko30BZO02czkf5rSQ2ncfOAgAjyY62iMdJRtlckihhWIg7ygsBIFCS
vuCEL1jEyxVJDuWekZkn5Ccli5j6HAOmhb09i+nDy0njiUQmQWxOKlvIZbpn
pGeyBXkAzJ/5s+QkuWWiSba1sLe1NbE0tfgiUf918m9KUtt5ehn8uWYQo+8P
21/5ZdQBwJpBc7PtD1vCbgA6NgKgeO8Pm/YBAKTRurUPfHEehqRfkkWiTAcz
s5ycHFM+j2MqSejv+p8Of0NfvM9Ustzv6WF68BLZ4jQRU5I3TkZahljIzMpk
c3hMkz838T8O/Ot9GIfwEnlCngCNiEC7jC9IQsst4PJF/AwBky/4T0X8h2F/
0nxfo6LVfwL0OFMgM0AHyM99AEMjAyR2HzoD/V43f2IEkNy8SPXx+b7/LOjf
V4XLJAP6Gfkc5x4SxuSIhdnzc5JrCbCABKQBHSgBNaAF9IEJsAR2wBG4AE+w
GASCMBANlgMOSAbpQAhyQD5YD4pACdgGdoJqsB/Ug0bQAo6BDnASnAMXwVVw
DdwE98EwGAPPwDR4DWYhCMJDVIgGKUHqkA5kBFlCLGgR5An5QyFQNBQPJUEC
SAzlQxugEqgcqoZqoUboW+gEdA66DA1Cd6ERaBL6FXoPIzAFpsOqsC5sBrNg
V9gPDoOXwUnwCnglXAhvhavgOvgI3A6fg6/CN+Fh+Bk8gwCEjDAQDcQEYSHu
SCASgyQiQmQNUoxUInVIC9KF9CLXkWFkCnmHwWFoGCbGBOOI8cGEYziYFZg1
mFJMNeYwph3Tg7mOGcFMYz5hqVgVrBHWAeuLjcImYXOwRdhKbAO2DXsBexM7
hn2Nw+EYOD2cHc4HF41Lwa3CleL24lpxZ3GDuFHcDB6PV8Ib4Z3wgXg2XoQv
wu/GH8GfwQ/hx/BvCWSCOsGS4EWIIQgIBYRKQhPhNGGIME6YJcoQdYgOxEAi
l5hHLCPWE7uIA8Qx4ixJlqRHciKFkVJI60lVpBbSBdID0ksymaxJticHk/nk
deQq8lHyJfII+R1FjmJIcafEUsSUrZRDlLOUu5SXVCpVl+pCjaGKqFupjdTz
1EfUt1I0KVMpXymu1FqpGql2qSGp59JEaR1pV+nl0iulK6WPSw9IT8kQZXRl
3GXYMmtkamROyNyWmZGlyVrIBsqmy5bKNslelp2Qw8vpynnKceUK5Q7KnZcb
pSE0LZo7jUPbQKunXaCN0XF0PbovPYVeQv+G3k+flpeTt5aPkM+Vr5E/JT/M
QBi6DF9GGqOMcYxxi/FeQVXBVYGnsEWhRWFI4Y3iAkUXRZ5isWKr4k3F90pM
JU+lVKXtSh1KD5UxyobKwco5yvuULyhPLaAvcFzAWVC84NiCeyqwiqFKiMoq
lYMqfSozqmqq3qqZqrtVz6tOqTHUXNRS1CrUTqtNqtPUF6nz1SvUz6g/Zcoz
XZlpzCpmD3NaQ0XDR0OsUavRrzGrqacZrlmg2ar5UIukxdJK1KrQ6taa1lbX
DtDO127WvqdD1GHpJOvs0unVeaOrpxupu0m3Q3dCT1HPV2+lXrPeA32qvrP+
Cv06/RsGOAOWQarBXoNrhrChjWGyYY3hgBFsZGvEN9prNGiMNbY3FhjXGd82
oZi4mmSbNJuMmDJM/U0LTDtMn5tpm8WYbTfrNftkbmOeZl5vft9CzmKxRYFF
l8WvloaWHMsayxtWVCsvq7VWnVYvrI2sedb7rO/Y0GwCbDbZdNt8tLWzFdq2
2E7aadvF2+2xu82is4JYpaxL9lh7N/u19ift3znYOogcjjn84mjimOrY5Dix
UG8hb2H9wlEnTSe2U63T8CLmovhFBxYNO2s4s53rnB+7aLlwXRpcxl0NXFNc
j7g+dzN3E7q1ub1xd3Bf7X7WA/Hw9ij26PeU8wz3rPZ85KXpleTV7DXtbeO9
yvusD9bHz2e7z21fVV+Ob6Pv9GK7xasX9/hR/EL9qv0e+xv6C/27AuCAxQE7
Ah4s0VkiWNIRCAJ9A3cEPgzSC1oR9H0wLjgouCb4SYhFSH5IbygtNC60KfR1
mFtYWdj9cP1wcXh3hHREbERjxJtIj8jyyOEos6jVUVejlaP50Z0x+JiImIaY
maWeS3cuHYu1iS2KvbVMb1nussvLlZenLT8VJx3Hjjsej42PjG+K/8AOZNex
ZxJ8E/YkTHPcObs4z7gu3AruJM+JV84bT3RKLE+cSHJK2pE0meycXJk8xXfn
V/NfpPik7E95kxqYeih1Li0yrTWdkB6ffkIgJ0gV9GSoZeRmDGYaZRZlDq9w
WLFzxbTQT9iQBWUty+oU0dGfqT6xvnijeCR7UXZN9tuciJzjubK5gty+PMO8
LXnjK71Wfr0Ks4qzqjtfI399/shq19W1a6A1CWu612qtLVw7ts573eH1pPWp
638oMC8oL3i1IXJDV6Fq4brC0Y3eG5uLpIqERbc3OW7avxmzmb+5f4vVlt1b
PhVzi6+UmJdUlnwo5ZRe+criq6qv5rYmbu0vsy3btw23TbDt1nbn7YfLZctX
lo/uCNjRXsGsKK54tTNu5+VK68r9u0i7xLuGq/yrOndr7962+0N1cvXNGrea
1j0qe7bsebOXu3don8u+lv2q+0v2vz/AP3Cn1ru2vU63rvIg7mD2wSf1EfW9
X7O+bmxQbihp+HhIcGj4cMjhnka7xsYmlaayZrhZ3Dx5JPbItW88vulsMWmp
bWW0lhwFR8VHn34b/+2tY37Huo+zjrd8p/PdnjZaW3E71J7XPt2R3DHcGd05
eGLxie4ux662702/P3RS42TNKflTZadJpwtPz51ZeWbmbObZqXNJ50a747rv
n486f6MnuKf/gt+FSxe9Lp7vde09c8np0snLDpdPXGFd6bhqe7W9z6av7Qeb
H9r6bfvbB+wGOq/ZX+saXDh4esh56Nx1j+sXb/jeuHpzyc3BW+G37tyOvT18
h3tn4m7a3Rf3su/N3l/3APug+KHMw8pHKo/qfjT4sXXYdvjUiMdI3+PQx/dH
OaPPfsr66cNY4RPqk8px9fHGCcuJk5Nek9eeLn069izz2exU0c+yP+95rv/8
u19cfumbjpoeeyF8Mfdr6Uull4deWb/qngmaefQ6/fXsm+K3Sm8Pv2O9630f
+X58NucD/kPVR4OPXZ/8Pj2YS5+b+w0AsgC3
                 "], "RGB", "XYZ"], 
               Interleaving -> True], Selectable -> False], DefaultBaseStyle -> 
             "ImageGraphics", ImageSizeRaw -> {16, 20}, 
             PlotRange -> {{0, 16}, {0, 20}}], Alignment -> {Center, Center}, 
            ImageMargins -> {{15, 10}, {4, 0}}], Appearance -> None, 
           ButtonFunction :> NotebookLocate[{
              URL[
               StringJoin[
               ElementaryIntroToWLWeb`Private`baseUrl$79098, "index", 
                ElementaryIntroToWLWeb`Private`langext$79098, ".html"]], 
              None}], Evaluator -> Automatic, Method -> "Preemptive"], 
          MouseAppearanceTag["LinkHand"]], 
         ItemBox[
          TagBox[
           GridBox[{{
              TagBox[
               ButtonBox[
                StyleBox[
                 StringJoin["STEPHEN WOLFRAM\[NonBreakingSpace]", 
                  ElementaryIntroToWLWeb`Private`translation[
                  "Elementary Introduction to the Wolfram Language", 
                   ElementaryIntroToWLWeb`Private`language$79098]], 
                 "DockedCellAuthorName"], Appearance -> None, ButtonFunction :> 
                NotebookLocate[{
                   URL[
                    StringJoin[
                    ElementaryIntroToWLWeb`Private`baseUrl$79098, "index", 
                    ElementaryIntroToWLWeb`Private`langext$79098, ".html"]], 
                   None}], Evaluator -> Automatic, Method -> "Preemptive"], 
               MouseAppearanceTag["LinkHand"]]}, {
              TagBox[
               ButtonBox[
                TemplateBox[{
                  StyleBox["Exercises ", "DockedCellSectionTitle"], 
                  StyleBox["|", "DockedCellSectionTitleDivider"], 
                  StyleBox[
                  " 42  Cadenas de caracteres y plantillas", 
                   "DockedCellSectionTitle"]}, "RowDefault"], Appearance -> 
                None, ButtonFunction :> NotebookLocate[{
                   URL[
                   "http://www.wolfram.com/language/elementary-introduction/\
42-string-patterns-and-templates.html"], None}], Evaluator -> Automatic, 
                Method -> "Preemptive"], 
               MouseAppearanceTag["LinkHand"]]}}, DefaultBaseStyle -> 
            "Column", GridBoxAlignment -> {"Columns" -> {{Left}}}, 
            GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{0}}}], 
           "Column"], Alignment -> Left, ItemSize -> 30]}}, AutoDelete -> 
       False, GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{0}}}, 
       GridBoxAlignment -> {"Columns" -> {Left}, "Rows" -> {Center}}, 
       GridBoxItemSize -> {
        "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Grid"], 
     DynamicModuleValues :> {}, 
     Initialization :> (
      Clear[$CellContext`SolutionResponseText]; \
$CellContext`SolutionResponseText[
         Pattern[ElementaryIntroToWLWeb`Private`a, 
          BlankNullSequence[]]] := " "; 
      Map[($CellContext`SolutionResponseText[#] := " ")& , {
        "42.1", "42.2", "42.3", "42.4", "42.5", "42.6", "42.7", "42.8"}]; 
      Clear[$CellContext`SolutionResponseDetails]; \
$CellContext`SolutionResponseDetails[
         Pattern[ElementaryIntroToWLWeb`Private`str, 
          Blank[String]], True] := 
       Style[ElementaryIntroToWLWeb`Private`str, 
         "SolutionTrue"]; $CellContext`SolutionResponseDetails[
         Pattern[ElementaryIntroToWLWeb`Private`str, 
          Blank[String]], False] := 
       Style[ElementaryIntroToWLWeb`Private`str, 
         "SolutionFalse"]; $CellContext`SolutionResponseDetails[
         Pattern[ElementaryIntroToWLWeb`Private`str, 
          Blank[String]]] := 
       ElementaryIntroToWLWeb`Private`str; \
$CellContext`SolutionResponseDetails[
         Missing[
          BlankSequence[]]] := " "; $CellContext`SolutionResponseDetails[
         BlankNullSequence[]] := " "; 
      Clear[$CellContext`GetUserSolutions]; $CellContext`GetUserSolutions[] := 
       Flatten[
         Cases[
          Options[
           EvaluationNotebook[], TaggingRules], ("EIWLExercises" -> 
           Pattern[ElementaryIntroToWLWeb`Private`ex, 
             Blank[]]) :> ElementaryIntroToWLWeb`Private`ex, Infinity]]; 
      Clear[$CellContext`GetUserSolutionsTotal]; \
$CellContext`GetUserSolutionsTotal[] := Length[
         Union[
          Flatten[
           Cases[
            Cases[
             Options[
              EvaluationNotebook[], TaggingRules], ("EIWLExercises" -> 
              Pattern[ElementaryIntroToWLWeb`Private`ex, 
                Blank[]]) :> ElementaryIntroToWLWeb`Private`ex, Infinity], (
             "ExercisesTotal" -> Pattern[ElementaryIntroToWLWeb`Private`t, 
               Blank[]]) :> ElementaryIntroToWLWeb`Private`t, Infinity]]]]; 
      Clear[$CellContext`GetUserSolutionsTried]; \
$CellContext`GetUserSolutionsTried[] := Length[
         Union[
          Flatten[
           Cases[
            Cases[
             Options[
              EvaluationNotebook[], TaggingRules], ("EIWLExercises" -> 
              Pattern[ElementaryIntroToWLWeb`Private`ex, 
                Blank[]]) :> ElementaryIntroToWLWeb`Private`ex, Infinity], (
             "ExercisesTried" -> Pattern[ElementaryIntroToWLWeb`Private`t, 
               Blank[]]) :> ElementaryIntroToWLWeb`Private`t, Infinity]]]]; 
      Clear[$CellContext`GetUserSolutionsCorrect]; \
$CellContext`GetUserSolutionsCorrect[] := Length[
         Union[
          Flatten[
           Cases[
            Cases[
             Options[
              EvaluationNotebook[], TaggingRules], ("EIWLExercises" -> 
              Pattern[ElementaryIntroToWLWeb`Private`ex, 
                Blank[]]) :> ElementaryIntroToWLWeb`Private`ex, Infinity], (
             "ExercisesCorrect" -> Pattern[ElementaryIntroToWLWeb`Private`t, 
               Blank[]]) :> ElementaryIntroToWLWeb`Private`t, 
            Infinity]]]]; $CellContext`EIWLExerciseSolutionsTotal = \
$CellContext`GetUserSolutionsTotal[]; $CellContext`EIWLExerciseSolutionsTried = \
$CellContext`GetUserSolutionsTried[]; \
$CellContext`EIWLExerciseSolutionsCorrect = \
$CellContext`GetUserSolutionsCorrect[]; 
      Clear[$CellContext`SetUserSolutionsTried]; \
$CellContext`SetUserSolutionsTried[
         Pattern[ElementaryIntroToWLWeb`Private`value, 
          Blank[]]] := 
       Module[{ElementaryIntroToWLWeb`Private`data, 
          ElementaryIntroToWLWeb`Private`tr}, 
         ElementaryIntroToWLWeb`Private`data = Flatten[
            Cases[
             Options[
              EvaluationNotebook[], TaggingRules], ("EIWLExercises" -> 
              Pattern[ElementaryIntroToWLWeb`Private`ex, 
                Blank[]]) :> ElementaryIntroToWLWeb`Private`ex, Infinity]]; 
         ElementaryIntroToWLWeb`Private`tr = ReplaceAll[TaggingRules, 
            Options[
             EvaluationNotebook[], TaggingRules]]; 
         ElementaryIntroToWLWeb`Private`tr = 
          DeleteCases[
           ElementaryIntroToWLWeb`Private`tr, "EIWLExercises" -> Blank[], 
            Infinity]; 
         AppendTo[
          ElementaryIntroToWLWeb`Private`tr, 
           "EIWLExercises" -> {
            "ExercisesTotal" -> 
             ReplaceAll[
              "ExercisesTotal", ElementaryIntroToWLWeb`Private`data], 
             "ExercisesTried" -> Append[
               Flatten[
                Cases[
                ElementaryIntroToWLWeb`Private`data, ("ExercisesTried" -> 
                  Pattern[ElementaryIntroToWLWeb`Private`t, 
                    Blank[]]) :> ElementaryIntroToWLWeb`Private`t, Infinity]],
                ElementaryIntroToWLWeb`Private`value], "ExercisesCorrect" -> 
             ReplaceAll[
              "ExercisesCorrect", ElementaryIntroToWLWeb`Private`data]}]; 
         SetOptions[
           EvaluationNotebook[], TaggingRules -> 
           ElementaryIntroToWLWeb`Private`tr]; \
$CellContext`EIWLExerciseSolutionsTried = \
$CellContext`GetUserSolutionsTried[]; Null]; 
      Clear[$CellContext`SetUserSolutionsCorrect]; \
$CellContext`SetUserSolutionsCorrect[
         Pattern[ElementaryIntroToWLWeb`Private`value, 
          Blank[]]] := 
       Module[{ElementaryIntroToWLWeb`Private`data, 
          ElementaryIntroToWLWeb`Private`tr}, 
         ElementaryIntroToWLWeb`Private`data = Flatten[
            Cases[
             Options[
              EvaluationNotebook[], TaggingRules], ("EIWLExercises" -> 
              Pattern[ElementaryIntroToWLWeb`Private`ex, 
                Blank[]]) :> ElementaryIntroToWLWeb`Private`ex, Infinity]]; 
         ElementaryIntroToWLWeb`Private`tr = ReplaceAll[TaggingRules, 
            Options[
             EvaluationNotebook[], TaggingRules]]; 
         ElementaryIntroToWLWeb`Private`tr = 
          DeleteCases[
           ElementaryIntroToWLWeb`Private`tr, "EIWLExercises" -> Blank[], 
            Infinity]; 
         AppendTo[
          ElementaryIntroToWLWeb`Private`tr, 
           "EIWLExercises" -> {
            "ExercisesTotal" -> 
             ReplaceAll[
              "ExercisesTotal", ElementaryIntroToWLWeb`Private`data], 
             "ExercisesTried" -> 
             ReplaceAll[
              "ExercisesTried", ElementaryIntroToWLWeb`Private`data], 
             "ExercisesCorrect" -> Append[
               Flatten[
                Cases[
                ElementaryIntroToWLWeb`Private`data, ("ExercisesCorrect" -> 
                  Pattern[ElementaryIntroToWLWeb`Private`t, 
                    Blank[]]) :> ElementaryIntroToWLWeb`Private`t, Infinity]],
                ElementaryIntroToWLWeb`Private`value]}]; SetOptions[
           EvaluationNotebook[], TaggingRules -> 
           ElementaryIntroToWLWeb`Private`tr]; \
$CellContext`EIWLExerciseSolutionsCorrect = \
$CellContext`GetUserSolutionsCorrect[]; Null]; 
      Clear[ElementaryIntroToWLWeb`Private`GetCurrentTallyCell]; \
$CellContext`GetCurrentTallyCell[] := Module[{}, 
         With[{
          ElementaryIntroToWLWeb`Private`solutionsTried = \
$CellContext`GetUserSolutionsTried[], 
           ElementaryIntroToWLWeb`Private`solutionsTotal = \
$CellContext`GetUserSolutionsTotal[], 
           ElementaryIntroToWLWeb`Private`solutionsCorrect = \
$CellContext`GetUserSolutionsCorrect[]}, 
          Cell[
           BoxData[
            PaneBox[
             TemplateBox[{
               StyleBox[
               "COMPLETED\[ThickSpace]\[ThickSpace]", 
                "DockedCellCompletedExerciseText"], 
               StyleBox[
               ElementaryIntroToWLWeb`Private`solutionsTried, 
                "DockedCellCompletedExerciseText"], 
               StyleBox["/", "DockedCellSolutionDivider"], 
               StyleBox[
               ElementaryIntroToWLWeb`Private`solutionsTotal, 
                "DockedCellCompletedExerciseText"], 
               StyleBox[
               "\[ThinSpace]|\[ThinSpace]", "DockedCellSolutionDivider"], 
               StyleBox[
               ElementaryIntroToWLWeb`Private`solutionsCorrect, 
                "DockedCellCorrectExerciseText"], 
               StyleBox[
               "\[ThickSpace]\[ThickSpace]CORRECT", 
                "DockedCellCorrectExerciseText"]}, "RowDefault"], Alignment -> 
             Right, ImageSize -> Full]], "Output", TextAlignment -> Right, 
           CellFrame -> 1, CellMargins -> {{0, 0}, {10, 0}}, 
           CellFrameMargins -> {{14, 24}, {4, 7}}, CellFrameColor -> 
           RGBColor[1, 0.956862, 0.878431], MenuSortingValue -> 10000, 
           Background -> RGBColor[1, 0.956862, 0.878431], CellTags -> 
           "SolutionTallyCell"]]])]], "Output", CellMargins -> 0, 
   CellFrameMargins -> {{0, 24}, {3, 6}}, Background -> 
   RGBColor[0.97647, 0.482352, 0], CellFrame -> 1, CellFrameColor -> 
   RGBColor[0.97647, 0.482352, 0]], 
  Cell["SECOND EDITION", "Text", FontFamily -> "Source Sans Pro", 
   CellFrame -> {{0, 0}, {3, 0}}, ShowCellBracket -> False, 
   CellMargins -> {{0, 0}, {-1, -1}}, CellFrameMargins -> {{44, 0}, {2, 4}}, 
   CellFrameColor -> RGBColor[0.952941, 0.509804, 0], FontSize -> 10, 
   FontTracking -> "Extended", FontColor -> RGBColor[1, 0.929412, 0.721569], 
   Background -> RGBColor[0.862745, 0.309804, 0], CellTags -> 
   "DockedCellLogoCell"]},
TaggingRules->{
 "EIWLExercises" -> {
   "ExercisesTotal" -> {
     "42.1", "42.2", "42.3", "42.4", "42.5", "42.6", "42.7", "42.8"}, 
    "ExercisesTried" -> {}, "ExercisesCorrect" -> {}}},
ShowAutoSpellCheck->False,
AutoStyleOptions->{"HighlightMisspelledWords"->False},
FrontEndVersion->"11.3 for Mac OS X x86 (32-bit, 64-bit Kernel) (March 5, \
2018)",
StyleDefinitions->Notebook[{
   Cell[
    StyleData[StyleDefinitions -> "Default.nb"]], 
   Cell[
    CellGroupData[{
      Cell[
      "Style Environments", "Section", 
       CellChangeTimes -> {{3.64661165091824*^9, 3.646611654013329*^9}, 
         3.6485723794335403`*^9, 3.651347081728628*^9, 3.651347179462186*^9, 
         3.651347384135805*^9, 3.651348171662589*^9, {3.662385415502224*^9, 
         3.662385415587447*^9}, {3.662385986094821*^9, 
         3.662385986340312*^9}, {3.662386515144682*^9, 
         3.662386515438078*^9}, {3.662386561676188*^9, 
         3.662386561889332*^9}, {3.668356126688795*^9, 
         3.6683561270120687`*^9}, {3.670169943059537*^9, 
         3.670169943254141*^9}}], 
      Cell[
       StyleData[All, "Working"]], 
      Cell[
       StyleData[All, "Printout"], 
       PrintingOptions -> {
        "PageSize" -> {504, 720}, "PrintRegistrationMarks" -> True}, 
       Magnification -> 0.6]}, Closed]], 
   Cell[
    CellGroupData[{
      Cell[
      "Custom Styles", "Section", 
       CellChangeTimes -> {{3.646611660445352*^9, 3.646611669493331*^9}}], 
      Cell[
       StyleData["Notebook"], CreateCellID -> True, CellContext -> Notebook, 
       CellLabelAutoDelete -> False, DefaultNewCellStyle -> "Input", 
       ShowSyntaxStyles -> True, MenuSortingValue -> None], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["Title"], CellMargins -> {{64, Inherited}, {50, 72}}, 
          MenuCommandKey -> None, FontFamily -> "Verdana", FontSize -> 42, 
          FontWeight -> "Bold", FontColor -> GrayLevel[0.4]], 
         Cell[
          StyleData["Title", "Printout"], 
          CellMargins -> {{64, Inherited}, {50, 72}}]}, Closed]], 
      Cell[
       StyleData["Chapter"], MenuCommandKey -> None], 
      Cell[
       StyleData["Subchapter"], MenuCommandKey -> None], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["Section"], CellFrame -> {{0, 0}, {0, 0}}, CellDingbat -> 
          Cell[
            TextData[
             CounterBox["Section"], 
             StyleBox[
             "|\[NegativeThinSpace]", FontColor -> 
              RGBColor[
               0.9019607843137255, 0.4117647058823529, 0.027450980392156862`],
               FontFamily -> "Courier", FontSize -> 36, FontWeight -> Plain]],
             "SectionNumber"], CellMargins -> {{96, Inherited}, {12, 64}}, 
          Evaluatable -> True, CellGroupingRules -> {"SectionGrouping", 60}, 
          PageBreakAbove -> True, ShowCellLabel -> False, 
          CellFrameLabelMargins -> {{2, Inherited}, {Inherited, Inherited}}, 
          CellChangeTimes -> {3.652728456208679*^9, 3.652728527108994*^9}, 
          CounterIncrements -> "Section", 
          CounterAssignments -> {{"Subsection", 0}, {"Subsubsection", 0}, {
            "Exercise", 0}}, FontFamily -> "Source Sans Pro Semibold", 
          FontSize -> 26, FontSlant -> "Plain", FontColor -> 
          RGBColor[
           0.9019607843137255, 0.4117647058823529, 0.027450980392156862`], 
          InterpretationBoxOptions -> {Editable -> True}], 
         Cell[
          StyleData["Section", "Printout"], 
          CellMargins -> {{96, Inherited}, {12, 2}}]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["SectionDoubleDigit"], CellFrame -> {{0, 0}, {0, 0}}, 
          CellDingbat -> Cell[
            TextData[
             CounterBox["Section"], 
             StyleBox[
             "|\[NegativeThinSpace]", FontColor -> 
              RGBColor[
               0.9019607843137255, 0.4117647058823529, 0.027450980392156862`],
               FontFamily -> "Courier", FontSize -> 36, FontWeight -> Plain]],
             "SectionNumber"], CellMargins -> {{112, Inherited}, {12, 64}}, 
          Evaluatable -> True, CellGroupingRules -> {"SectionGrouping", 60}, 
          PageBreakAbove -> True, ShowCellLabel -> False, 
          CellFrameLabelMargins -> {{2, Inherited}, {Inherited, Inherited}}, 
          CellChangeTimes -> {3.652728456208679*^9, 3.652728527108994*^9}, 
          CounterIncrements -> "Section", 
          CounterAssignments -> {{"Subsection", 0}, {"Subsubsection", 0}, {
            "Exercise", 0}}, FontFamily -> "Source Sans Pro Semibold", 
          FontSize -> 26, FontSlant -> "Plain", FontColor -> 
          RGBColor[
           0.9019607843137255, 0.4117647058823529, 0.027450980392156862`], 
          InterpretationBoxOptions -> {Editable -> True}], 
         Cell[
          StyleData["SectionDoubleDigit", "Printout"], 
          CellMargins -> {{112, Inherited}, {12, 2}}]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["SectionNumber"], CellBaseline -> Baseline, FontFamily -> 
          "Source Sans Pro Semibold", FontSize -> 26, FontColor -> 
          RGBColor[
           0.9019607843137255, 0.4117647058823529, 0.027450980392156862`]], 
         Cell[
          StyleData["SectionNumber", "Printout"]]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["SectionInline"], FontFamily -> 
          "Source Sans Pro Semibold", FontColor -> 
          RGBColor[
           0.9019607843137255, 0.4117647058823529, 0.027450980392156862`]], 
         Cell[
          StyleData["SectionInline", "Printout"]]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["SectionNoDingbat"], 
          CellMargins -> {{64, Inherited}, {12, 64}}, Evaluatable -> True, 
          CellGroupingRules -> {"SectionGrouping", 60}, PageBreakAbove -> 
          True, ShowCellLabel -> False, 
          CellFrameLabelMargins -> {{2, Inherited}, {Inherited, Inherited}}, 
          CellChangeTimes -> {3.652728456208679*^9, 3.652728527108994*^9}, 
          CounterIncrements -> "Section", 
          CounterAssignments -> {{"Subsection", 0}, {"Subsubsection", 0}, {
            "Exercise", 0}}, FontFamily -> "Source Sans Pro Semibold", 
          FontSize -> 26, FontSlant -> "Plain", FontColor -> 
          RGBColor[
           0.9019607843137255, 0.4117647058823529, 0.027450980392156862`], 
          InterpretationBoxOptions -> {Editable -> True}], 
         Cell[
          StyleData["SectionNoDingbat", "Printout"], 
          CellMargins -> {{64, Inherited}, {12, 2}}]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["Exercise"], CellDingbat -> Cell[
            TextData[{"  ", 
              CounterBox["Section"], ".", 
              CounterBox["Exercise"]}], "ExerciseNumber", FontColor -> 
            RGBColor[
             0.9019607843137255, 0.4117647058823529, 0.027450980392156862`]], 
          ShowGroupOpener -> True, CellMargins -> {{90, 40}, {4, 18}}, 
          CellGroupingRules -> "InputGrouping", CounterIncrements -> 
          "Exercise", MenuSortingValue -> 10020, MenuCommandKey -> "2", 
          FontFamily -> "Source Sans Pro", FontSize -> 16, FontWeight -> 
          "Plain", FontSlant -> "Plain", FontColor -> GrayLevel[0.25]], 
         Cell[
          StyleData["Exercise", "Printout"], ShowGroupOpener -> False, 
          CellMargins -> {{110, Inherited}, {4, 8}}]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["ExerciseNumber"], FontFamily -> "Source Sans Pro", 
          FontSize -> 16, FontWeight -> "Bold", FontColor -> GrayLevel[0.25]], 
         Cell[
          StyleData["ExerciseNumber", "Printout"]]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["ExerciseInput", StyleDefinitions -> StyleData["Input"]], 
          CellMargins -> {{70, 30}, {4, 7}}, ShowCellLabel -> False, 
          CellFrameLabels -> {{None, None}, {None, None}}, SpanMaxSize -> 1, 
          FontSize -> 
          14, $CellContext`GeneratedCellStyles -> {
           "Output" -> "ExerciseOutput"}], 
         Cell[
          StyleData["ExerciseInput", "Printout"], 
          CellMargins -> {{88, 10}, {4, 7}}]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData[
          "ExerciseOutput", StyleDefinitions -> StyleData["Output"]], 
          CellMargins -> {{90, 40}, {0, 6}}, CellGroupingRules -> 
          "OutputGrouping", ShowCellLabel -> False, FontSize -> 14], 
         Cell[
          StyleData["ExerciseOutput", "Printout"], 
          CellMargins -> {{88, 10}, {10, 4}}]}, Closed]], 
      Cell[
       StyleData["ExerciseExpectedResult"], ShowCellBracket -> False, 
       ShowGroupOpener -> False, CellMargins -> {{90, 40}, {3, 9}}, 
       CellGroupingRules -> "InputGrouping", CounterIncrements -> "Exercise", 
       MenuSortingValue -> 10000, FontFamily -> "Source Sans Pro", FontSize -> 
       12, FontWeight -> "Plain", FontSlant -> "Plain"], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["Picture"], CellMargins -> {{66, 10}, {10, 10}}, 
          CellGroupingRules -> "GraphicsGrouping", StyleMenuListing -> None], 
         
         Cell[
          StyleData["Picture", "Printout"], 
          CellMargins -> {{66, 10}, {8, 8}}]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["Tentative"], 
          CellBracketOptions -> {
           "Color" -> RGBColor[
             0.30000000000000016`, 0.6000000000000003, 0.7000000000000003], 
            "Thickness" -> 5}, Evaluatable -> False, CellFrameMargins -> 4, 
          StyleMenuListing -> None, Background -> 
          RGBColor[0.8500000000000003, 0.9500000000000003, 1]], 
         Cell[
          StyleData["Tentative", "Printout"], 
          CellElementSpacings -> {"CellMinHeight" -> 0.1}, CellOpen -> False, 
          CellFrameMargins -> 0, FontSize -> 0.1, Magnification -> 0.01]}, 
        Closed]], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["WebOnly"], 
          CellBracketOptions -> {
           "Color" -> RGBColor[0.91, 0.92, 0.9], "Thickness" -> 5}, 
          CellFrameMargins -> 4, StyleMenuListing -> None, Background -> 
          RGBColor[0.91, 0.92, 0.86]], 
         Cell[
          StyleData["WebOnly", "Printout"], 
          CellElementSpacings -> {"CellMinHeight" -> 0.1}, CellOpen -> False, 
          CellFrameMargins -> 0, FontSize -> 0.1, Magnification -> 0.01]}, 
        Closed]], 
      Cell[
       StyleData["Lockdown"], 
       CellBracketOptions -> {
        "Color" -> RGBColor[0.8, 0.5, 0.4], "Thickness" -> 3}, Evaluatable -> 
       False, StyleMenuListing -> None], 
      Cell[
       StyleData["InlineCode"], SpanMaxSize -> 0, FontColor -> GrayLevel[0]], 
      
      Cell[
       StyleData["ExpectedOutputNote"], Selectable -> False, FontFamily -> 
       "Source Sans Pro", FontColor -> GrayLevel[0.3]], 
      Cell[
       StyleData["EIWLTextLink"], LineBreakWithin -> False, 
       TemplateBoxOptions -> {DisplayFunction :> (TagBox[
           
           ButtonBox[#, Appearance -> None, ButtonData -> #2, 
            BaseStyle -> {
             "Hyperlink", FontWeight -> Bold, FontSize -> 16, FontFamily -> 
              "Source Sans Pro"}], 
           MouseAppearanceTag["LinkHand"]]& )}, 
       ButtonBoxOptions -> {Appearance -> None, BaseStyle -> "Link"}], 
      Cell[
       StyleData["CheckAnswerDividerCloud"], ShowCellBracket -> False, 
       CellMargins -> {{40, 40}, {3, 6}}, 
       CellBracketOptions -> {"OverlapContent" -> True}, 
       CellGroupingRules -> {"SectionGrouping", 40}, 
       CellFrameMargins -> {{20, 20}, {2, 2}}, TextAlignment -> Right], 
      Cell[
       StyleData["CodeSectionDividerCloud"], Editable -> False, Selectable -> 
       False, ShowCellBracket -> False, CellMargins -> {{0, 0}, {0, 35}}, 
       CellBracketOptions -> {"OverlapContent" -> True}, 
       CellElementSpacings -> {"CellMinHeight" -> 6}, 
       CellGroupingRules -> {"SectionGrouping", -5}, 
       CellFrameMargins -> {{20, 20}, {2, 2}}, DefaultNewCellStyle -> "Input",
        FontSize -> 6, Background -> GrayLevel[0.95]], 
      Cell[
       StyleData["InlineCode"], SpanMaxSize -> 0, FontColor -> GrayLevel[0]], 
      
      Cell[
       StyleData["InlineCodeText"], SpanMaxSize -> 0, FontFamily -> 
       "Source Sans Pro"], 
      Cell[
       StyleData["Input"], CellMargins -> {{92, 20}, {5, 8}}, 
       CellFrameLabels -> {{None, 
          DynamicModuleBox[{$CellContext`EIWLExerciseCheck = 
            Automatic, $CellContext`buttonLabel = " CHECK MY SOLUTION "}, 
           DynamicBox[
            ToBoxes[
             If[
              TrueQ[$CellContext`EIWLExerciseCheck == Automatic], 
              MouseAppearance[
               Tooltip[
                Button[
                 Framed[
                  Panel[
                   
                   Style[$CellContext`buttonLabel, FontFamily -> 
                    "Source Sans Pro", FontSize -> 10, FontColor -> 
                    RGBColor[0.953948, 0.305638, 0.0285344]], Appearance -> 
                   None, Background -> GrayLevel[1], 
                   FrameMargins -> {{2, 2}, {0, 0}}, ImageMargins -> 0], 
                  FrameStyle -> {
                    Thickness[Tiny], 
                    RGBColor[0.953948, 0.305638, 0.0285344]}, RoundingRadius -> 
                  3], 
                 
                 Block[{$CellContext`usersCell, $CellContext`solutionResult, \
$CellContext`exerciseNumber, $CellContext`exerciseSwitchResult}, \
$CellContext`exerciseNumber = StringJoin[
                    If[
                    TrueQ[CurrentValue[{"CounterValue", "WebOnly"}] == 1], 
                    "x", ""], 
                    ToString[
                    CurrentValue[{"CounterValue", "SectionNumber"}]], ".", 
                    ToString[
                    
                    CurrentValue[{
                    "CounterValue", 
                    "ExerciseNumber"}]]]; $CellContext`buttonLabel = 
                   Row[{" CHECKING ", 
                    ProgressIndicator[Appearance -> "Percolate"]}]; 
                  SelectionMove[
                    ButtonNotebook[], All, ButtonCell, AutoScroll -> 
                    False]; $CellContext`usersCell = NotebookRead[
                    InputNotebook[]]; If[
                    TrueQ[Length[
                    Flatten[{$CellContext`usersCell}]] == 
                    1], $CellContext`solutionResult = ToExpression[
                    URLFetch[
                    "https://www.wolframcloud.com/objects/user-9b23d046-b2a9-\
4a5c-8723-08465cce25ed/EIWLGradingAPI", "Method" -> "POST", 
                    "Parameters" -> {
                    "exNum" -> $CellContext`exerciseNumber, "answer" -> 
                    ToString[$CellContext`usersCell, InputForm, 
                    CharacterEncoding -> "ASCII"], "user" -> 
                    ToString[$WolframID], "referer" -> "eiwl-nb", "uuid" -> 
                    ToString[$WolframUUID]}]]; \
$CellContext`SolutionResponseText[$CellContext`exerciseNumber] = \
$CellContext`SolutionResponseDetails[
                    $CellContext`solutionResult["Text"], 
                    $CellContext`solutionResult[
                    "CorrectQ"]]; $CellContext`exerciseSwitchResult = Switch[
                    $CellContext`solutionResult["CorrectQ"], 
                    True, $CellContext`EIWLExerciseCheck = 
                    True; $CellContext`SetUserSolutionsCorrect[$CellContext`\
exerciseNumber]; \
$CellContext`SetUserSolutionsTried[$CellContext`exerciseNumber]; Null, 
                    
                    Blank[], $CellContext`EIWLExerciseCheck = 
                    False; $CellContext`SetUserSolutionsTried[$CellContext`\
exerciseNumber]], 
                    CloudSystem`CreateCloudDialog[
                    StyleBox[
                    "Select a cell to be checked.", Selectable -> False], 
                    WindowTitle -> " "]]], Appearance -> None, Evaluator -> 
                 Automatic, Method -> "Queued"], 
                "Click to check your solution.", TooltipDelay -> 0.15], 
               "LinkHand"], 
              If[
               TrueQ[$CellContext`EIWLExerciseCheck], 
               MouseAppearance[
                Button[
                 Framed[
                  Row[{
                    Panel[
                    Style[
                    ToExpression[
                    "\!\(\* GraphicsBox[ TagBox[RasterBox[CompressedData[\" \
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBLECOU2VJahIzkCECxFJADGKrbtYa \
RUMUpZzMcNnnQRWjMk5lf/vzDWggtYwCkgNiFDBAsPqCPFcBjcLURYkH0fRS \
HlZwE6gV7EATfvz98f3Pd6rEIBClncpMPZlJFaNGEd0QANRpOvM= \"], {{0, 20}, { 26, \
0}}, {0, 255}, ColorFunction->RGBColor], BoxForm`ImageTag[ \"Byte\", \
Interleaving -> True, Magnification -> 1], Selectable->False], \
BaseStyle->\"ImageGraphics\", ImageSize->Magnification[1], ImageSizeRaw->{26, \
20}, PlotRange->{{0, 26}, {0, 20}}]\)"], Selectable -> False], Background -> 
                    RGBColor[0.146944, 0.70164, 0.16466], 
                    FrameMargins -> {{5, 5}, {0, 0}}, ImageMargins -> 0, 
                    Appearance -> None], 
                    Panel[
                    Style[
                    " CORRECT ", FontSize -> 10, FontColor -> 
                    RGBColor[0.146944, 0.70164, 0.16466], FontFamily -> 
                    "Source Sans Pro"], Background -> White, 
                    FrameMargins -> {{5, 5}, {0, 0}}, Appearance -> None]}], 
                  FrameStyle -> {
                    Thickness[Tiny], 
                    RGBColor[0.146944, 0.70164, 0.16466]}, FrameMargins -> 0, 
                  RoundingRadius -> 3], $CellContext`buttonLabel = 
                  " CHECK MY SOLUTION "; $CellContext`EIWLExerciseCheck = 
                  Automatic, Appearance -> None], "LinkHand"], 
               MouseAppearance[
                Button[
                 Framed[
                  Row[{
                    Panel[
                    Style[
                    ToExpression[
                    "\!\(\* GraphicsBox[ TagBox[RasterBox[CompressedData[\" \
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBLECOU2VJahIzkCECxGJADGK/YtAZ \
RTRCb1W8PnhlYooDBYFSxJgAVPnvy7cPfrkogn65IEFsJmM3BKIeZggal1RD \
yNOOMOT7DyAiTzvlJlDoCwpDkvLYpDxFjSLyEAAHORZk \"], {{0, 20}, {22, 0}}, { 0, \
255}, ColorFunction->RGBColor], BoxForm`ImageTag[ \"Byte\", Interleaving -> \
True, Magnification -> 1], Selectable->False], BaseStyle->\"ImageGraphics\", \
ImageSize->Magnification[1], ImageSizeRaw->{22, 20}, PlotRange->{{0, 22}, {0, \
20}}]\)"], Selectable -> False], Background -> 
                    RGBColor[0.918257, 0, 0.172488], 
                    FrameMargins -> {{5, 5}, {0, 0}}, ImageMargins -> 0, 
                    Appearance -> None], 
                    Panel[
                    Style[
                    " TRY AGAIN ", FontSize -> 10, FontColor -> 
                    RGBColor[0.918257, 0, 0.172488], FontFamily -> 
                    "Source Sans Pro"], Background -> White, 
                    FrameMargins -> {{5, 5}, {0, 0}}, Appearance -> None]}], 
                  FrameStyle -> {
                    Thickness[Tiny], 
                    RGBColor[0.918257, 0, 0.172488]}, FrameMargins -> 0, 
                  RoundingRadius -> 3], $CellContext`buttonLabel = 
                  " CHECK MY SOLUTION "; $CellContext`EIWLExerciseCheck = 
                  Automatic, Appearance -> None], "LinkHand"]]], 
             StandardForm], ImageSizeCache -> {109., {9., 16.}}], 
           DynamicModuleValues :> {}]}, {None, None}}, 
       CellChangeTimes -> {{3.6688095471029243`*^9, 3.66880959932793*^9}}, 
       MenuSortingValue -> 10000, FontSize -> 15], 
      Cell[
       StyleData["Output"], Deletable -> True, ShowCellBracket -> True, 
       CellMargins -> {{92, 50}, {10, 5}}, 
       CellBracketOptions -> {"OverlapContent" -> True}, CellEditDuplicate -> 
       True, GeneratedCell -> True, CellAutoOverwrite -> True, 
       LinebreakAdjustments -> {1, 2., 12., 1.25, 1.}, MenuSortingValue -> 
       None, FontSize -> 15], 
      Cell[
       StyleData["Message"], 
       CellMargins -> {{92, Inherited}, {Inherited, Inherited}}], 
      Cell[
       StyleData["EmptyCell"], Editable -> False, Selectable -> False, 
       CellMargins -> {{0, 0}, {-2, 0}}, 
       CellElementSpacings -> {"CellMinHeight" -> 1}, MenuSortingValue -> 
       10000, FontSize -> 1], 
      Cell[
       StyleData["CellLabel"], MenuSortingValue -> 10000, FontColor -> 
       GrayLevel[0.6]], 
      Cell[
       StyleData["Link"], LineBreakWithin -> False, 
       TemplateBoxOptions -> {DisplayFunction :> (TagBox[
           
           ButtonBox[#, Appearance -> None, ButtonData -> #2, 
            BaseStyle -> {
             "Hyperlink", FontSize -> 15, FontFamily -> "Source Sans Pro"}], 
           MouseAppearanceTag["LinkHand"]]& )}, 
       ButtonBoxOptions -> {Appearance -> None, BaseStyle -> "Link"}], 
      Cell[
       StyleData["ExpectedOutputText"], FontFamily -> "Arial", FontSize -> 13,
        FontColor -> RGBColor[0.8579079880979629, 0.4263828488593881, 0.]], 
      Cell[
       StyleData["CodeSectionDividerCloud"], Selectable -> False, 
       ShowCellBracket -> False, CellMargins -> {{0, 0}, {0, 35}}, 
       CellBracketOptions -> {"OverlapContent" -> True}, 
       CellElementSpacings -> {"CellMinHeight" -> 6}, 
       CellGroupingRules -> {"SectionGrouping", -5}, 
       CellFrameMargins -> {{20, 20}, {2, 2}}, DefaultNewCellStyle -> 
       "EmptyCell", FontSize -> 6, Background -> GrayLevel[0.95]], 
      Cell[
       StyleData["DockedCellAuthorName"], MenuSortingValue -> 10000, 
       FontFamily -> "Source Sans Pro", FontSize -> 12, FontColor -> 
       RGBColor[1, 0.929411, 0.721568]], 
      Cell[
       StyleData["DockedCellSectionTitle"], MenuSortingValue -> 10000, 
       FontFamily -> "Source Sans Pro", FontSize -> 18, FontColor -> 
       GrayLevel[1]], 
      Cell[
       StyleData["DockedCellSecondCell"], CellFrame -> 1, 
       CellMargins -> {{0, 0}, {0, 0}}, 
       CellFrameMargins -> {{10, 10}, {10, 10}}, CellFrameColor -> 
       RGBColor[1, 0.956862, 0.878431], MenuSortingValue -> 10000, Background -> 
       RGBColor[1, 0.956862, 0.878431]], 
      Cell[
       StyleData["CompletedExerciseHeader"], MenuSortingValue -> 10000, 
       FontFamily -> "Source Sans Pro", FontSize -> 14, FontColor -> 
       GrayLevel[0.5]], 
      Cell[
       StyleData["DockedCellShareButton"], MenuSortingValue -> 10000, 
       FontFamily -> "Source Sans Pro", FontSize -> 13, FontColor -> 
       GrayLevel[1]], 
      Cell[
       StyleData["DockedCellLinksSections"], MenuSortingValue -> 10000, 
       FontFamily -> "Source Sans Pro", FontSize -> 14, FontWeight -> "Plain",
        FontSlant -> "Plain", FontColor -> RGBColor[0.97647, 0.482352, 0]], 
      Cell[
       StyleData["DockedCellLinksDivider"], MenuSortingValue -> 10000, 
       FontFamily -> "Courier", FontSize -> 18, FontWeight -> "Plain", 
       FontSlant -> "Plain", FontColor -> RGBColor[0.97647, 0.482352, 0]], 
      Cell[
       StyleData["DockedCellSectionTitleDivider"], MenuSortingValue -> 10000, 
       FontFamily -> "Courier", FontSize -> 24, FontWeight -> "Plain", 
       FontSlant -> "Plain", FontColor -> GrayLevel[1]], 
      Cell[
       StyleData["SolutionTrue"], MenuSortingValue -> 10000, FontFamily -> 
       "Source Sans Pro", FontSize -> 12, FontWeight -> "Plain", FontSlant -> 
       "Plain", FontColor -> RGBColor[0.12, 0.7, 0.22]], 
      Cell[
       StyleData["SolutionFalse"], MenuSortingValue -> 10000, FontFamily -> 
       "Source Sans Pro", FontSize -> 12, FontWeight -> "Plain", FontSlant -> 
       "Plain", FontColor -> RGBColor[0.94, 0.08, 0.2]], 
      Cell[
       StyleData["SolutionResponseText"], ShowStringCharacters -> False, 
       FontFamily -> "Source Sans Pro", FontSize -> 12, FontWeight -> "Plain",
        FontSlant -> "Plain", FontColor -> GrayLevel[1]], 
      Cell[
       StyleData["SolutionResponse"], ShowCellBracket -> False, 
       CellMargins -> {{24, 25}, {6, 0}}, 
       CellFrameMargins -> {{8, 0}, {0, 12}}, TextAlignment -> Right, 
       ShowStringCharacters -> False, FontFamily -> "Source Sans Pro", 
       FontSize -> 12, FontWeight -> "Plain", FontSlant -> "Plain", 
       Background -> GrayLevel[1]], 
      Cell[
       StyleData["DockedCellCompletedExerciseText"], MenuSortingValue -> 
       10000, FontFamily -> "Source Sans Pro", FontSize -> 12, FontWeight -> 
       "Plain", FontSlant -> "Plain", FontColor -> GrayLevel[0.4]], 
      Cell[
       StyleData["DockedCellSolutionDivider"], MenuSortingValue -> 10000, 
       FontFamily -> "Courier", FontSize -> 16, FontWeight -> "Plain", 
       FontSlant -> "Plain", FontColor -> GrayLevel[0.6]], 
      Cell[
       StyleData["DockedCellCorrectExerciseText"], MenuSortingValue -> 10000, 
       FontFamily -> "Source Sans Pro", FontSize -> 12, FontWeight -> "Plain",
        FontSlant -> "Plain", FontColor -> RGBColor[0.12, 0.7, 0.22]], 
      Cell[
       CellGroupData[{
         Cell[
         "EIWL Cloud Link styles", "Subsubsection", 
          CellChangeTimes -> {{3.663512229965006*^9, 3.66351224118613*^9}}], 
         Cell[
          StyleData["EIWLTextLink"], LineBreakWithin -> False, 
          TemplateBoxOptions -> {DisplayFunction :> (TagBox[
              
              ButtonBox[#, Appearance -> None, ButtonData -> #2, 
               BaseStyle -> {
                "Hyperlink", FontSize -> 16, FontFamily -> 
                 "Source Sans Pro"}], 
              MouseAppearanceTag["LinkHand"]]& )}, 
          ButtonBoxOptions -> {Appearance -> None, BaseStyle -> "Link"}], 
         Cell[
          StyleData["EIWLTextLinkAnswer"], LineBreakWithin -> False, 
          TemplateBoxOptions -> {DisplayFunction :> (TagBox[
              
              ButtonBox[#, Appearance -> None, ButtonData -> #2, 
               BaseStyle -> {
                "Hyperlink", FontSize -> 13, FontColor -> GrayLevel[0.25], 
                 FontFamily -> "Source Sans Pro"}], 
              MouseAppearanceTag["LinkHand"]]& )}, 
          ButtonBoxOptions -> {Appearance -> None, BaseStyle -> "Link"}], 
         Cell[
          StyleData["EIWLTextLinkCodeCaption"], LineBreakWithin -> False, 
          TemplateBoxOptions -> {DisplayFunction :> (TagBox[
              
              ButtonBox[#, Appearance -> None, ButtonData -> #2, 
               BaseStyle -> {
                "Hyperlink", FontSize -> 14, FontColor -> GrayLevel[0.6], 
                 FontFamily -> "Source Sans Pro"}], 
              MouseAppearanceTag["LinkHand"]]& )}, 
          ButtonBoxOptions -> {Appearance -> None, BaseStyle -> "Link"}], 
         Cell[
          StyleData["EIWLTextLinkExercise"], LineBreakWithin -> False, 
          TemplateBoxOptions -> {DisplayFunction :> (TagBox[
              
              ButtonBox[#, Appearance -> None, ButtonData -> #2, 
               BaseStyle -> {
                "Hyperlink", FontSize -> 13, FontColor -> GrayLevel[0.25], 
                 FontFamily -> "Source Sans Pro"}], 
              MouseAppearanceTag["LinkHand"]]& )}, 
          ButtonBoxOptions -> {Appearance -> None, BaseStyle -> "Link"}], 
         Cell[
          StyleData["EIWLTextLinkExerciseNote"], LineBreakWithin -> False, 
          TemplateBoxOptions -> {DisplayFunction :> (TagBox[
              
              ButtonBox[#, Appearance -> None, ButtonData -> #2, 
               BaseStyle -> {
                "Hyperlink", FontSize -> 13, FontColor -> GrayLevel[0.25], 
                 FontFamily -> "Source Sans Pro"}], 
              MouseAppearanceTag["LinkHand"]]& )}, 
          ButtonBoxOptions -> {Appearance -> None, BaseStyle -> "Link"}], 
         Cell[
          StyleData["EIWLTextLinkInlineCode"], LineBreakWithin -> False, 
          TemplateBoxOptions -> {DisplayFunction :> (TagBox[
              
              ButtonBox[#, Appearance -> None, ButtonData -> #2, 
               BaseStyle -> {
                "Hyperlink", FontSize -> 13, FontColor -> GrayLevel[0], 
                 FontFamily -> "Source Sans Pro"}], 
              MouseAppearanceTag["LinkHand"]]& )}, 
          ButtonBoxOptions -> {Appearance -> None, BaseStyle -> "Link"}], 
         Cell[
          StyleData["EIWLTextLinkMoreExplore"], LineBreakWithin -> False, 
          TemplateBoxOptions -> {DisplayFunction :> (TagBox[
              
              ButtonBox[#, Appearance -> None, ButtonData -> #2, 
               BaseStyle -> {
                "Hyperlink", FontSize -> 13, FontFamily -> 
                 "Source Sans Pro"}], 
              MouseAppearanceTag["LinkHand"]]& )}, 
          ButtonBoxOptions -> {Appearance -> None, BaseStyle -> "Link"}], 
         Cell[
          StyleData["EIWLTextLinkQuestion"], LineBreakWithin -> False, 
          TemplateBoxOptions -> {DisplayFunction :> (TagBox[
              
              ButtonBox[#, Appearance -> None, ButtonData -> #2, 
               BaseStyle -> {
                "Hyperlink", FontSize -> 13, FontWeight -> Bold, FontFamily -> 
                 "Source Sans Pro"}], 
              MouseAppearanceTag["LinkHand"]]& )}, 
          ButtonBoxOptions -> {Appearance -> None, BaseStyle -> "Link"}], 
         Cell[
          StyleData["EIWLTextLinkTechNote"], LineBreakWithin -> False, 
          TemplateBoxOptions -> {DisplayFunction :> (TagBox[
              
              ButtonBox[#, Appearance -> None, ButtonData -> #2, 
               BaseStyle -> {
                "Hyperlink", FontSize -> 13, FontColor -> GrayLevel[0.25], 
                 FontFamily -> "Source Sans Pro"}], 
              MouseAppearanceTag["LinkHand"]]& )}, 
          ButtonBoxOptions -> {Appearance -> None, BaseStyle -> "Link"}], 
         Cell[
          StyleData["EIWLTextLinkText"], LineBreakWithin -> False, 
          TemplateBoxOptions -> {DisplayFunction :> (TagBox[
              
              ButtonBox[#, Appearance -> None, ButtonData -> #2, 
               BaseStyle -> {
                "Hyperlink", FontSize -> 17, FontFamily -> 
                 "Source Sans Pro"}], 
              MouseAppearanceTag["LinkHand"]]& )}, 
          ButtonBoxOptions -> {Appearance -> None, BaseStyle -> "Link"}], 
         Cell[
          StyleData["EIWLTextLinkInlineCodeLink"], LineBreakWithin -> False, 
          TemplateBoxOptions -> {DisplayFunction :> (TagBox[
              
              ButtonBox[#, Appearance -> None, ButtonData -> #2, 
               BaseStyle -> {
                "Hyperlink", FontSize -> 17, FontFamily -> 
                 "Source Sans Pro"}], 
              MouseAppearanceTag["LinkHand"]]& )}, 
          ButtonBoxOptions -> {Appearance -> None, BaseStyle -> "Link"}], 
         Cell[
          StyleData["EIWLTextLinkVocabularyTable"], LineBreakWithin -> False, 
          TemplateBoxOptions -> {DisplayFunction :> (TagBox[
              
              ButtonBox[#, Appearance -> None, ButtonData -> #2, 
               BaseStyle -> {
                "Hyperlink", FontSize -> 13, FontFamily -> 
                 "Source Sans Pro"}], 
              MouseAppearanceTag["LinkHand"]]& )}, 
          ButtonBoxOptions -> {Appearance -> None, BaseStyle -> "Link"}]}, 
        Closed]], 
      Cell[
       CellGroupData[{
         Cell[
         "EIWL Cloud Link", "Subsubsection", 
          CellChangeTimes -> {{3.664234597774767*^9, 3.664234605661516*^9}}], 
         
         Cell[
          StyleData["CodeLinkAnswer"], LineBreakWithin -> False, 
          TemplateBoxOptions -> {DisplayFunction :> (TagBox[
              
              ButtonBox[#, Appearance -> None, ButtonData -> #2, 
               BaseStyle -> {
                "Hyperlink", FontSize -> 13, FontColor -> GrayLevel[0.25], 
                 FontFamily -> "Source Sans Pro"}], 
              MouseAppearanceTag["LinkHand"]]& )}, 
          ButtonBoxOptions -> {Appearance -> None, BaseStyle -> "Link"}], 
         Cell[
          StyleData["CodeLinkCodeCaption"], LineBreakWithin -> False, 
          TemplateBoxOptions -> {DisplayFunction :> (TagBox[
              
              ButtonBox[#, Appearance -> None, ButtonData -> #2, 
               BaseStyle -> {
                "Hyperlink", FontSize -> 14, FontColor -> GrayLevel[0.6], 
                 FontFamily -> "Source Sans Pro"}], 
              MouseAppearanceTag["LinkHand"]]& )}, 
          ButtonBoxOptions -> {Appearance -> None, BaseStyle -> "Link"}], 
         Cell[
          StyleData["CodeLinkExercise"], LineBreakWithin -> False, 
          TemplateBoxOptions -> {DisplayFunction :> (TagBox[
              
              ButtonBox[#, Appearance -> None, ButtonData -> #2, 
               BaseStyle -> {
                "Hyperlink", FontSize -> 13, FontColor -> GrayLevel[0.25], 
                 FontFamily -> "Source Sans Pro"}], 
              MouseAppearanceTag["LinkHand"]]& )}, 
          ButtonBoxOptions -> {Appearance -> None, BaseStyle -> "Link"}], 
         Cell[
          StyleData["CodeLinkQuestion"], LineBreakWithin -> False, 
          TemplateBoxOptions -> {DisplayFunction :> (TagBox[
              
              ButtonBox[#, Appearance -> None, ButtonData -> #2, 
               BaseStyle -> {
                "Hyperlink", FontSize -> 13, FontWeight -> Bold, FontFamily -> 
                 "Source Sans Pro"}], 
              MouseAppearanceTag["LinkHand"]]& )}, 
          ButtonBoxOptions -> {Appearance -> None, BaseStyle -> "Link"}], 
         Cell[
          StyleData["CodeLinkTechNote"], LineBreakWithin -> False, 
          TemplateBoxOptions -> {DisplayFunction :> (TagBox[
              
              ButtonBox[#, Appearance -> None, ButtonData -> #2, 
               BaseStyle -> {
                "Hyperlink", FontSize -> 14, FontColor -> GrayLevel[0.25], 
                 FontFamily -> "Source Sans Pro"}], 
              MouseAppearanceTag["LinkHand"]]& )}, 
          ButtonBoxOptions -> {Appearance -> None, BaseStyle -> "Link"}], 
         Cell[
          StyleData["CodeLinkText"], LineBreakWithin -> False, 
          TemplateBoxOptions -> {DisplayFunction :> (TagBox[
              
              ButtonBox[#, Appearance -> None, ButtonData -> #2, 
               BaseStyle -> {
                "Hyperlink", FontSize -> 17, FontFamily -> 
                 "Source Sans Pro"}], 
              MouseAppearanceTag["LinkHand"]]& )}, 
          ButtonBoxOptions -> {Appearance -> None, BaseStyle -> "Link"}], 
         Cell[
          StyleData["CodeLinkVocabularyTable"], LineBreakWithin -> False, 
          TemplateBoxOptions -> {DisplayFunction :> (TagBox[
              ButtonBox[#, Appearance -> None, ButtonData -> #2, 
               BaseStyle -> {
                "Hyperlink", FontSize -> 14, FontFamily -> 
                 "Source Sans Pro"}], 
              MouseAppearanceTag["LinkHand"]]& )}, 
          ButtonBoxOptions -> {Appearance -> None, BaseStyle -> "Link"}], 
         Cell[
          StyleData["CodeLinkVocabularyTable3Column"], LineBreakWithin -> 
          False, TemplateBoxOptions -> {DisplayFunction :> (TagBox[
              
              ButtonBox[#, Appearance -> None, ButtonData -> #2, 
               BaseStyle -> {
                "Hyperlink", FontSize -> 14, FontFamily -> 
                 "Source Sans Pro"}], 
              MouseAppearanceTag["LinkHand"]]& )}, 
          ButtonBoxOptions -> {Appearance -> None, BaseStyle -> "Link"}], 
         Cell[
          StyleData["LinkAnswer"], LineBreakWithin -> False, 
          TemplateBoxOptions -> {DisplayFunction :> (TagBox[
              
              ButtonBox[#, Appearance -> None, ButtonData -> #2, 
               BaseStyle -> {
                "Hyperlink", FontSize -> 13, FontColor -> GrayLevel[0.25], 
                 FontFamily -> "Source Sans Pro"}], 
              MouseAppearanceTag["LinkHand"]]& )}, 
          ButtonBoxOptions -> {Appearance -> None, BaseStyle -> "Link"}], 
         Cell[
          StyleData["LinkCodeCaption"], LineBreakWithin -> False, 
          TemplateBoxOptions -> {DisplayFunction :> (TagBox[
              
              ButtonBox[#, Appearance -> None, ButtonData -> #2, 
               BaseStyle -> {
                "Hyperlink", FontSize -> 14, FontColor -> GrayLevel[0.6], 
                 FontFamily -> "Source Sans Pro"}], 
              MouseAppearanceTag["LinkHand"]]& )}, 
          ButtonBoxOptions -> {Appearance -> None, BaseStyle -> "Link"}], 
         Cell[
          StyleData["LinkExercise"], LineBreakWithin -> False, 
          TemplateBoxOptions -> {DisplayFunction :> (TagBox[
              
              ButtonBox[#, Appearance -> None, ButtonData -> #2, 
               BaseStyle -> {
                "Hyperlink", FontSize -> 13, FontColor -> GrayLevel[0.25], 
                 FontFamily -> "Source Sans Pro"}], 
              MouseAppearanceTag["LinkHand"]]& )}, 
          ButtonBoxOptions -> {Appearance -> None, BaseStyle -> "Link"}], 
         Cell[
          StyleData["LinkExerciseNote"], LineBreakWithin -> False, 
          TemplateBoxOptions -> {DisplayFunction :> (TagBox[
              
              ButtonBox[#, Appearance -> None, ButtonData -> #2, 
               BaseStyle -> {
                "Hyperlink", FontSize -> 13, FontColor -> GrayLevel[0.25], 
                 FontFamily -> "Source Sans Pro"}], 
              MouseAppearanceTag["LinkHand"]]& )}, 
          ButtonBoxOptions -> {Appearance -> None, BaseStyle -> "Link"}], 
         Cell[
          StyleData["LinkIndex"], LineBreakWithin -> False, 
          TemplateBoxOptions -> {DisplayFunction :> (TagBox[
              
              ButtonBox[#, Appearance -> None, ButtonData -> #2, 
               BaseStyle -> {
                "Hyperlink", FontSize -> 13, FontColor -> GrayLevel[0.25], 
                 FontFamily -> "Source Sans Pro"}], 
              MouseAppearanceTag["LinkHand"]]& )}, 
          ButtonBoxOptions -> {Appearance -> None, BaseStyle -> "Link"}], 
         Cell[
          StyleData["LinkIndexSubentry"], LineBreakWithin -> False, 
          TemplateBoxOptions -> {DisplayFunction :> (TagBox[
              
              ButtonBox[#, Appearance -> None, ButtonData -> #2, 
               BaseStyle -> {
                "Hyperlink", FontSize -> 13, FontColor -> GrayLevel[0.25], 
                 FontFamily -> "Source Sans Pro"}], 
              MouseAppearanceTag["LinkHand"]]& )}, 
          ButtonBoxOptions -> {Appearance -> None, BaseStyle -> "Link"}], 
         Cell[
          StyleData["LinkMoreExplore"], LineBreakWithin -> False, 
          TemplateBoxOptions -> {DisplayFunction :> (TagBox[
              
              ButtonBox[#, Appearance -> None, ButtonData -> #2, 
               BaseStyle -> {
                "Hyperlink", FontSize -> 13, FontFamily -> 
                 "Source Sans Pro"}], 
              MouseAppearanceTag["LinkHand"]]& )}, 
          ButtonBoxOptions -> {Appearance -> None, BaseStyle -> "Link"}], 
         Cell[
          StyleData["LinkQuestion"], LineBreakWithin -> False, 
          TemplateBoxOptions -> {DisplayFunction :> (TagBox[
              
              ButtonBox[#, Appearance -> None, ButtonData -> #2, 
               BaseStyle -> {
                "Hyperlink", FontSize -> 14, FontWeight -> Bold, FontColor -> 
                 GrayLevel[0], FontFamily -> "Source Sans Pro"}], 
              MouseAppearanceTag["LinkHand"]]& )}, 
          ButtonBoxOptions -> {Appearance -> None, BaseStyle -> "Link"}], 
         Cell[
          StyleData["LinkTechNote"], LineBreakWithin -> False, 
          TemplateBoxOptions -> {DisplayFunction :> (TagBox[
              
              ButtonBox[#, Appearance -> None, ButtonData -> #2, 
               BaseStyle -> {
                "Hyperlink", FontSize -> 13, FontColor -> GrayLevel[0.25], 
                 FontFamily -> "Source Sans Pro"}], 
              MouseAppearanceTag["LinkHand"]]& )}, 
          ButtonBoxOptions -> {Appearance -> None, BaseStyle -> "Link"}], 
         Cell[
          StyleData["LinkText"], LineBreakWithin -> False, 
          TemplateBoxOptions -> {DisplayFunction :> (TagBox[
              
              ButtonBox[#, Appearance -> None, ButtonData -> #2, 
               BaseStyle -> {
                "Hyperlink", FontSize -> 16, FontFamily -> 
                 "Source Sans Pro"}], 
              MouseAppearanceTag["LinkHand"]]& )}, 
          ButtonBoxOptions -> {Appearance -> None, BaseStyle -> "Link"}], 
         Cell[
          StyleData["LinkVocabularyTable"], LineBreakWithin -> False, 
          TemplateBoxOptions -> {DisplayFunction :> (TagBox[
              
              ButtonBox[#, Appearance -> None, ButtonData -> #2, 
               BaseStyle -> {
                "Hyperlink", FontSize -> 13, FontFamily -> 
                 "Source Sans Pro"}], 
              MouseAppearanceTag["LinkHand"]]& )}, 
          ButtonBoxOptions -> {Appearance -> None, BaseStyle -> "Link"}]}, 
        Closed]]}, Open]]}, Visible -> False, FrontEndVersion -> 
  "11.3 for Mac OS X x86 (32-bit, 64-bit Kernel) (March 5, 2018)", 
  StyleDefinitions -> "Default.nb"]
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{
 "FirstInputCell"->{
  Cell[6469, 182, 755, 25, 70, "Input",ExpressionUUID->"f5df067a-f54b-4827-bad2-2b8a2506eb6b",
   CellTags->"FirstInputCell"],
  Cell[26540, 596, 755, 25, 70, "Input",ExpressionUUID->"71d725d9-e037-48b6-ab7e-3cd39f47d9b8",
   CellTags->"FirstInputCell"],
  Cell[100560, 1897, 755, 25, 70, "Input",ExpressionUUID->"e5fbbde4-e11c-44a0-a4d1-31371be7d92a",
   CellTags->"FirstInputCell"],
  Cell[129778, 2467, 755, 25, 70, "Input",ExpressionUUID->"6c6611e3-e878-45ff-a191-65bc38d85c0e",
   CellTags->"FirstInputCell"],
  Cell[146666, 2829, 755, 25, 70, "Input",ExpressionUUID->"6aa0818d-ade7-4691-ae35-bd854a50c9bb",
   CellTags->"FirstInputCell"],
  Cell[166431, 3239, 755, 25, 70, "Input",ExpressionUUID->"9ebabc4e-4841-4467-b59f-af0dc68eb612",
   CellTags->"FirstInputCell"],
  Cell[188834, 3694, 755, 25, 70, "Input",ExpressionUUID->"31559253-064e-49c9-81ef-7ed35d2d6301",
   CellTags->"FirstInputCell"],
  Cell[205823, 4073, 755, 25, 70, "Input",ExpressionUUID->"45c72bcd-9032-4990-9a9f-112354cce268",
   CellTags->"FirstInputCell"]}
 }
*)
(*CellTagsIndex
CellTagsIndex->{
 {"FirstInputCell", 265067, 5297}
 }
*)
(*NotebookFileOutline
Notebook[{
Cell[659, 22, 481, 15, 70, "Exercise",ExpressionUUID->"bf3abead-68d4-4661-92a6-4d0190c847b3",
 CounterAssignments->{{"SectionNumber", 42}, {"ExerciseNumber", 1}, {"WebOnly", 0}}],
Cell[CellGroupData[{
Cell[1165, 41, 578, 18, 70, "ExerciseExpectedResult",ExpressionUUID->"44e15551-86be-4417-92b7-c0937e273d97"],
Cell[1746, 61, 4174, 97, 70, "ExerciseOutput",ExpressionUUID->"979cf08f-0d82-4459-b3e3-e586f76c8982"]
}, Closed]],
Cell[CellGroupData[{
Cell[5957, 163, 509, 17, 70, "Subsection",ExpressionUUID->"83bfc2e0-8663-4c84-befd-286a0f3062de"],
Cell[6469, 182, 755, 25, 70, "Input",ExpressionUUID->"f5df067a-f54b-4827-bad2-2b8a2506eb6b",
 CellTags->"FirstInputCell"]
}, Open  ]],
Cell[CellGroupData[{
Cell[7261, 212, 224, 7, 70, "CodeSectionDividerCloud",ExpressionUUID->"5133f71e-9c1b-4e09-abe6-6ce6591bf091"],
Cell[7488, 221, 599, 14, 70, "Exercise",ExpressionUUID->"f116aacc-dbac-4271-91a2-4a156def5ab1",
 CounterAssignments->{{"SectionNumber", 42}, {"ExerciseNumber", 2}, {"WebOnly", 0}}],
Cell[CellGroupData[{
Cell[8112, 239, 598, 19, 70, "ExerciseExpectedResult",ExpressionUUID->"bc7a901a-e88d-48b1-a0c1-d407418bbed6"],
Cell[8713, 260, 17278, 312, 70, "ExerciseOutput",ExpressionUUID->"f837ae53-8326-49f3-bd00-6ce465344871"]
}, Closed]],
Cell[CellGroupData[{
Cell[26028, 577, 509, 17, 70, "Subsection",ExpressionUUID->"da5b9c10-7844-46f3-b3f3-2278422de710"],
Cell[26540, 596, 755, 25, 70, "Input",ExpressionUUID->"71d725d9-e037-48b6-ab7e-3cd39f47d9b8",
 CellTags->"FirstInputCell"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[27344, 627, 224, 7, 70, "CodeSectionDividerCloud",ExpressionUUID->"f1030fbe-139d-49ee-829d-a5bc3ebfa62a"],
Cell[27571, 636, 697, 17, 70, "Exercise",ExpressionUUID->"d66d760d-ebc4-4886-af5f-276495866544",
 CounterAssignments->{{"SectionNumber", 42}, {"ExerciseNumber", 3}, {"WebOnly", 0}}],
Cell[CellGroupData[{
Cell[28293, 657, 598, 19, 70, "ExerciseExpectedResult",ExpressionUUID->"8b4a0ef2-5947-40bf-8eda-a859fd521f1a"],
Cell[28894, 678, 71117, 1195, 70, "ExerciseOutput",ExpressionUUID->"5708e30c-5560-4b49-80cd-b6b1a7a97c6c"]
}, Closed]],
Cell[CellGroupData[{
Cell[100048, 1878, 509, 17, 70, "Subsection",ExpressionUUID->"24884866-fb6a-4893-bdcd-e38456edea83"],
Cell[100560, 1897, 755, 25, 70, "Input",ExpressionUUID->"e5fbbde4-e11c-44a0-a4d1-31371be7d92a",
 CellTags->"FirstInputCell"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[101364, 1928, 224, 7, 70, "CodeSectionDividerCloud",ExpressionUUID->"91bebd79-018f-4f2c-b0c1-714df8a5d844"],
Cell[101591, 1937, 665, 21, 70, "Exercise",ExpressionUUID->"b0194275-3fe6-4d11-a2ed-579518663872",
 CounterAssignments->{{"SectionNumber", 42}, {"ExerciseNumber", 4}, {"WebOnly", 0}}],
Cell[CellGroupData[{
Cell[102281, 1962, 578, 18, 70, "ExerciseExpectedResult",ExpressionUUID->"42c1b895-8033-40a7-9e1f-71ec8edd6b59"],
Cell[102862, 1982, 26367, 461, 70, "ExerciseOutput",ExpressionUUID->"90c9d330-d74f-4550-8ff9-cc3321fa66e3"]
}, Closed]],
Cell[CellGroupData[{
Cell[129266, 2448, 509, 17, 70, "Subsection",ExpressionUUID->"466356c3-fcd6-4dc9-bf36-225d02c87a02"],
Cell[129778, 2467, 755, 25, 70, "Input",ExpressionUUID->"6c6611e3-e878-45ff-a191-65bc38d85c0e",
 CellTags->"FirstInputCell"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[130582, 2498, 224, 7, 70, "CodeSectionDividerCloud",ExpressionUUID->"6279dd9a-2d5c-4f63-842c-57b92cffdbeb"],
Cell[130809, 2507, 571, 14, 70, "Exercise",ExpressionUUID->"12174bec-e1f3-420b-ba8a-02d6d2a82291",
 CounterAssignments->{{"SectionNumber", 42}, {"ExerciseNumber", 5}, {"WebOnly", 0}}],
Cell[CellGroupData[{
Cell[131405, 2525, 578, 18, 70, "ExerciseExpectedResult",ExpressionUUID->"add7ccb7-ffb7-4347-8fa6-ee0fdf19dcfc"],
Cell[131986, 2545, 14131, 260, 70, "ExerciseOutput",ExpressionUUID->"7d0e94a5-3a99-4ddb-8f4f-c6f4522b9b38"]
}, Closed]],
Cell[CellGroupData[{
Cell[146154, 2810, 509, 17, 70, "Subsection",ExpressionUUID->"d4152626-3b23-41d5-b1db-f38819a45327"],
Cell[146666, 2829, 755, 25, 70, "Input",ExpressionUUID->"6aa0818d-ade7-4691-ae35-bd854a50c9bb",
 CellTags->"FirstInputCell"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[147470, 2860, 224, 7, 70, "CodeSectionDividerCloud",ExpressionUUID->"de9abefe-1d4b-4724-9b2b-d692e339dcfa"],
Cell[147697, 2869, 585, 14, 70, "Exercise",ExpressionUUID->"45350770-7e7b-4e1f-9368-272ab1e67229",
 CounterAssignments->{{"SectionNumber", 42}, {"ExerciseNumber", 6}, {"WebOnly", 0}}],
Cell[CellGroupData[{
Cell[148307, 2887, 598, 19, 70, "ExerciseExpectedResult",ExpressionUUID->"1f266223-d554-46db-92e2-8c9be0acb9b4"],
Cell[148908, 2908, 16974, 307, 70, "ExerciseOutput",ExpressionUUID->"c67f8d9e-6629-4637-b52c-c3afc84e428b"]
}, Closed]],
Cell[CellGroupData[{
Cell[165919, 3220, 509, 17, 70, "Subsection",ExpressionUUID->"f9e01d93-e067-4661-b7d9-2507ba656527"],
Cell[166431, 3239, 755, 25, 70, "Input",ExpressionUUID->"9ebabc4e-4841-4467-b59f-af0dc68eb612",
 CellTags->"FirstInputCell"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[167235, 3270, 224, 7, 70, "CodeSectionDividerCloud",ExpressionUUID->"2c3fdac4-ac0c-495d-876c-644403228a06"],
Cell[167462, 3279, 609, 16, 70, "Exercise",ExpressionUUID->"8abd1da0-74d7-48ff-96d0-a694331c4516",
 CounterAssignments->{{"SectionNumber", 42}, {"ExerciseNumber", 7}, {"WebOnly", 0}}],
Cell[CellGroupData[{
Cell[168096, 3299, 598, 19, 70, "ExerciseExpectedResult",ExpressionUUID->"e6d160b2-b404-49c1-b81c-b6c2fa4f2b9f"],
Cell[168697, 3320, 19588, 350, 70, "ExerciseOutput",ExpressionUUID->"acd9c670-0055-4733-ad20-3d7ae1d4c48e"]
}, Closed]],
Cell[CellGroupData[{
Cell[188322, 3675, 509, 17, 70, "Subsection",ExpressionUUID->"1b606fb7-0c3c-48ee-bd5d-1fd221ae09fa"],
Cell[188834, 3694, 755, 25, 70, "Input",ExpressionUUID->"31559253-064e-49c9-81ef-7ed35d2d6301",
 CellTags->"FirstInputCell"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[189638, 3725, 224, 7, 70, "CodeSectionDividerCloud",ExpressionUUID->"d3acca3b-8ad2-4726-b189-ac081991de82"],
Cell[189865, 3734, 1261, 40, 70, "Exercise",ExpressionUUID->"ca93c09e-8b91-4e3f-af32-e22204a7c368",
 CounterAssignments->{{"SectionNumber", 42}, {"ExerciseNumber", 8}, {"WebOnly", 0}}],
Cell[CellGroupData[{
Cell[191151, 3778, 578, 18, 70, "ExerciseExpectedResult",ExpressionUUID->"d8e227c2-ba38-4c39-abd0-358e8a60714e"],
Cell[191732, 3798, 13542, 251, 70, "ExerciseOutput",ExpressionUUID->"0474d89b-8692-448f-ac47-10eae7a26f11"]
}, Closed]],
Cell[CellGroupData[{
Cell[205311, 4054, 509, 17, 70, "Subsection",ExpressionUUID->"7d5f3741-2aef-426d-b5da-79f2208656c1"],
Cell[205823, 4073, 755, 25, 70, "Input",ExpressionUUID->"45c72bcd-9032-4990-9a9f-112354cce268",
 CellTags->"FirstInputCell"]
}, Open  ]]
}, Open  ]],
Cell[206605, 4102, 224, 7, 70, "CodeSectionDividerCloud",ExpressionUUID->"b3c5f0c5-6e1f-4256-9de4-754afcd4483a"]
}
]
*)

(* End of internal cache information *)
(* NotebookSignature ETWwNVpog74DqkYGLGjjox6t *)
